const nt="ENTRIES",V="KEYS",T="VALUES",F="";class D{set;_type;_path;constructor(t,s){const n=t._tree,o=Array.from(n.keys());this.set=t,this._type=s,this._path=o.length>0?[{node:n,keys:o}]:[]}next(){const t=this.dive();return this.backtrack(),t}dive(){if(this._path.length===0)return{done:!0,value:void 0};const{node:t,keys:s}=E(this._path);if(E(s)===F)return{done:!1,value:this.result()};const n=t.get(E(s));return this._path.push({node:n,keys:Array.from(n.keys())}),this.dive()}backtrack(){if(this._path.length===0)return;const t=E(this._path).keys;t.pop(),!(t.length>0)&&(this._path.pop(),this.backtrack())}key(){return this.set._prefix+this._path.map(({keys:t})=>E(t)).filter(t=>t!==F).join("")}value(){return E(this._path).node.get(F)}result(){switch(this._type){case T:return this.value();case V:return this.key();default:return[this.key(),this.value()]}}[Symbol.iterator](){return this}}const E=e=>e[e.length-1],ot=(e,t,s)=>{const n=new Map;if(t===void 0)return n;const o=t.length+1,u=o+s,i=new Uint8Array(u*o).fill(s+1);for(let r=0;r<o;++r)i[r]=r;for(let r=1;r<u;++r)i[r*o]=r;return W(e,t,s,n,i,1,o,""),n},W=(e,t,s,n,o,u,i,r)=>{const d=u*i;t:for(const l of e.keys())if(l===F){const a=o[d-1];a<=s&&n.set(r,[e.get(l),a])}else{let a=u;for(let h=0;h<l.length;++h,++a){const m=l[h],p=i*a,f=p-i;let c=o[p];const g=Math.max(0,a-s-1),_=Math.min(i-1,a+s);for(let y=g;y<_;++y){const b=m!==t[y],z=o[f+y]+ +b,A=o[f+y+1]+1,w=o[p+y]+1,L=o[p+y+1]=Math.min(z,A,w);L<c&&(c=L)}if(c>s)continue t}W(e.get(l),t,s,n,o,a,i,r+l)}};class C{_tree;_prefix;_size=void 0;constructor(t=new Map,s=""){this._tree=t,this._prefix=s}atPrefix(t){if(!t.startsWith(this._prefix))throw new Error("Mismatched prefix");const[s,n]=x(this._tree,t.slice(this._prefix.length));if(s===void 0){const[o,u]=O(n);for(const i of o.keys())if(i!==F&&i.startsWith(u)){const r=new Map;return r.set(i.slice(u.length),o.get(i)),new C(r,t)}}return new C(s,t)}clear(){this._size=void 0,this._tree.clear()}delete(t){return this._size=void 0,ut(this._tree,t)}entries(){return new D(this,nt)}forEach(t){for(const[s,n]of this)t(s,n,this)}fuzzyGet(t,s){return ot(this._tree,t,s)}get(t){const s=I(this._tree,t);return s!==void 0?s.get(F):void 0}has(t){const s=I(this._tree,t);return s!==void 0&&s.has(F)}keys(){return new D(this,V)}set(t,s){if(typeof t!="string")throw new Error("key must be a string");return this._size=void 0,M(this._tree,t).set(F,s),this}get size(){if(this._size)return this._size;this._size=0;const t=this.entries();for(;!t.next().done;)this._size+=1;return this._size}update(t,s){if(typeof t!="string")throw new Error("key must be a string");this._size=void 0;const n=M(this._tree,t);return n.set(F,s(n.get(F))),this}fetch(t,s){if(typeof t!="string")throw new Error("key must be a string");this._size=void 0;const n=M(this._tree,t);let o=n.get(F);return o===void 0&&n.set(F,o=s()),o}values(){return new D(this,T)}[Symbol.iterator](){return this.entries()}static from(t){const s=new C;for(const[n,o]of t)s.set(n,o);return s}static fromObject(t){return C.from(Object.entries(t))}}const x=(e,t,s=[])=>{if(t.length===0||e==null)return[e,s];for(const n of e.keys())if(n!==F&&t.startsWith(n))return s.push([e,n]),x(e.get(n),t.slice(n.length),s);return s.push([e,t]),x(void 0,"",s)},I=(e,t)=>{if(t.length===0||e==null)return e;for(const s of e.keys())if(s!==F&&t.startsWith(s))return I(e.get(s),t.slice(s.length))},M=(e,t)=>{const s=t.length;t:for(let n=0;e&&n<s;){for(const u of e.keys())if(u!==F&&t[n]===u[0]){const i=Math.min(s-n,u.length);let r=1;for(;r<i&&t[n+r]===u[r];)++r;const d=e.get(u);if(r===u.length)e=d;else{const l=new Map;l.set(u.slice(r),d),e.set(t.slice(n,n+r),l),e.delete(u),e=l}n+=r;continue t}const o=new Map;return e.set(t.slice(n),o),o}return e},ut=(e,t)=>{const[s,n]=x(e,t);if(s!==void 0){if(s.delete(F),s.size===0)R(n);else if(s.size===1){const[o,u]=s.entries().next().value;$(n,o,u)}}},R=e=>{if(e.length===0)return;const[t,s]=O(e);if(t.delete(s),t.size===0)R(e.slice(0,-1));else if(t.size===1){const[n,o]=t.entries().next().value;n!==F&&$(e.slice(0,-1),n,o)}},$=(e,t,s)=>{if(e.length===0)return;const[n,o]=O(e);n.set(o+t,s),n.delete(o)},O=e=>e[e.length-1],it=(e,t)=>{const s=e._idToShortId.get(t);if(s!=null)return e._storedFields.get(s)},rt=/[\n\r -#%-*,-/:;?@[-\]_{}\u00A0\u00A1\u00A7\u00AB\u00B6\u00B7\u00BB\u00BF\u037E\u0387\u055A-\u055F\u0589\u058A\u05BE\u05C0\u05C3\u05C6\u05F3\u05F4\u0609\u060A\u060C\u060D\u061B\u061E\u061F\u066A-\u066D\u06D4\u0700-\u070D\u07F7-\u07F9\u0830-\u083E\u085E\u0964\u0965\u0970\u09FD\u0A76\u0AF0\u0C77\u0C84\u0DF4\u0E4F\u0E5A\u0E5B\u0F04-\u0F12\u0F14\u0F3A-\u0F3D\u0F85\u0FD0-\u0FD4\u0FD9\u0FDA\u104A-\u104F\u10FB\u1360-\u1368\u1400\u166E\u1680\u169B\u169C\u16EB-\u16ED\u1735\u1736\u17D4-\u17D6\u17D8-\u17DA\u1800-\u180A\u1944\u1945\u1A1E\u1A1F\u1AA0-\u1AA6\u1AA8-\u1AAD\u1B5A-\u1B60\u1BFC-\u1BFF\u1C3B-\u1C3F\u1C7E\u1C7F\u1CC0-\u1CC7\u1CD3\u2000-\u200A\u2010-\u2029\u202F-\u2043\u2045-\u2051\u2053-\u205F\u207D\u207E\u208D\u208E\u2308-\u230B\u2329\u232A\u2768-\u2775\u27C5\u27C6\u27E6-\u27EF\u2983-\u2998\u29D8-\u29DB\u29FC\u29FD\u2CF9-\u2CFC\u2CFE\u2CFF\u2D70\u2E00-\u2E2E\u2E30-\u2E4F\u3000-\u3003\u3008-\u3011\u3014-\u301F\u3030\u303D\u30A0\u30FB\uA4FE\uA4FF\uA60D-\uA60F\uA673\uA67E\uA6F2-\uA6F7\uA874-\uA877\uA8CE\uA8CF\uA8F8-\uA8FA\uA8FC\uA92E\uA92F\uA95F\uA9C1-\uA9CD\uA9DE\uA9DF\uAA5C-\uAA5F\uAADE\uAADF\uAAF0\uAAF1\uABEB\uFD3E\uFD3F\uFE10-\uFE19\uFE30-\uFE52\uFE54-\uFE61\uFE63\uFE68\uFE6A\uFE6B\uFF01-\uFF03\uFF05-\uFF0A\uFF0C-\uFF0F\uFF1A\uFF1B\uFF1F\uFF20\uFF3B-\uFF3D\uFF3F\uFF5B\uFF5D\uFF5F-\uFF65]+/u,S="or",q="and",ct="and_not",lt=(e,t)=>{e.includes(t)||e.push(t)},P=(e,t)=>{for(const s of t)e.includes(s)||e.push(s)},G=({score:e},{score:t})=>t-e,ht=()=>new Map,k=e=>{const t=new Map;for(const s of Object.keys(e))t.set(parseInt(s,10),e[s]);return t},N=(e,t)=>Object.prototype.hasOwnProperty.call(e,t)?e[t]:void 0,dt={[S]:(e,t)=>{for(const s of t.keys()){const n=e.get(s);if(n==null)e.set(s,t.get(s));else{const{score:o,terms:u,match:i}=t.get(s);n.score=n.score+o,n.match=Object.assign(n.match,i),P(n.terms,u)}}return e},[q]:(e,t)=>{const s=new Map;for(const n of t.keys()){const o=e.get(n);if(o==null)continue;const{score:u,terms:i,match:r}=t.get(n);P(o.terms,i),s.set(n,{score:o.score+u,terms:o.terms,match:Object.assign(o.match,r)})}return s},[ct]:(e,t)=>{for(const s of t.keys())e.delete(s);return e}},at=(e,t,s,n,o,u)=>{const{k:i,b:r,d}=u;return Math.log(1+(s-t+.5)/(t+.5))*(d+e*(i+1)/(e+i*(1-r+r*n/o)))},ft=e=>(t,s,n)=>{const o=typeof e.fuzzy=="function"?e.fuzzy(t,s,n):e.fuzzy||!1,u=typeof e.prefix=="function"?e.prefix(t,s,n):e.prefix===!0;return{term:t,fuzzy:o,prefix:u}},H=(e,t,s,n)=>{for(const o of Object.keys(e._fieldIds))if(e._fieldIds[o]===s){e._options.logger("warn",`SlimSearch: document with ID ${e._documentIds.get(t)} has changed before removal: term "${n}" was not present in field "${o}". Removing a document after it has changed can corrupt the index!`,"version_conflict");return}},gt=(e,t,s,n)=>{if(!e._index.has(n)){H(e,s,t,n);return}const o=e._index.fetch(n,ht),u=o.get(t);u==null||u.get(s)==null?H(e,s,t,n):u.get(s)<=1?u.size<=1?o.delete(t):u.delete(s):u.set(s,u.get(s)-1),e._index.get(n).size===0&&e._index.delete(n)},mt={k:1.2,b:.7,d:.5},pt={idField:"id",extractField:(e,t)=>e[t],tokenize:e=>e.split(rt),processTerm:e=>e.toLowerCase(),fields:void 0,searchOptions:void 0,storeFields:[],logger:(e,t)=>{typeof(console==null?void 0:console[e])=="function"&&console[e](t)},autoVacuum:!0},J={combineWith:S,prefix:!1,fuzzy:!1,maxFuzzy:6,boost:{},weights:{fuzzy:.45,prefix:.375},bm25:mt},Ft={combineWith:q,prefix:(e,t,s)=>t===s.length-1},_t={batchSize:1e3,batchWait:10},U={minDirtFactor:.1,minDirtCount:20},yt={..._t,...U},Y=(e,t=S)=>{if(e.length===0)return new Map;const s=t.toLowerCase();return e.reduce(dt[s])||new Map},B=(e,t,s,n,o,u,i,r,d=new Map)=>{if(o==null)return d;for(const l of Object.keys(u)){const a=u[l],h=e._fieldIds[l],m=o.get(h);if(m==null)continue;let p=m.size;const f=e._avgFieldLength[h];for(const c of m.keys()){if(!e._documentIds.has(c)){gt(e,h,c,s),p-=1;continue}const g=i?i(e._documentIds.get(c),s,e._storedFields.get(c)):1;if(!g)continue;const _=m.get(c),y=e._fieldLength.get(c)[h],b=at(_,p,e._documentCount,y,f,r),z=n*a*g*b,A=d.get(c);if(A){A.score+=z,lt(A.terms,t);const w=N(A.match,s);w?w.push(l):A.match[s]=[l]}else d.set(c,{score:z,terms:[t],match:{[s]:[l]}})}}return d},At=(e,t,s)=>{const n={...e._options.searchOptions,...s},o=(n.fields||e._options.fields).reduce((c,g)=>({...c,[g]:N(n.boost,g)||1}),{}),{boostDocument:u,weights:i,maxFuzzy:r,bm25:d}=n,{fuzzy:l,prefix:a}={...J.weights,...i},h=e._index.get(t.term),m=B(e,t.term,t.term,1,h,o,u,d);let p,f;if(t.prefix&&(p=e._index.atPrefix(t.term)),t.fuzzy){const c=t.fuzzy===!0?.2:t.fuzzy,g=c<1?Math.min(r,Math.round(t.term.length*c)):c;g&&(f=e._index.fuzzyGet(t.term,g))}if(p)for(const[c,g]of p){const _=c.length-t.term.length;if(!_)continue;f==null||f.delete(c);const y=a*c.length/(c.length+.3*_);B(e,t.term,c,y,g,o,u,d,m)}if(f)for(const c of f.keys()){const[g,_]=f.get(c);if(!_)continue;const y=l*c.length/(c.length+_);B(e,t.term,c,y,g,o,u,d,m)}return m},X=(e,t,s={})=>{if(typeof t!="string"){const a={...s,...t,queries:void 0},h=t.queries.map(m=>X(e,m,a));return Y(h,a.combineWith)}const{tokenize:n,processTerm:o,searchOptions:u}=e._options,i={tokenize:n,processTerm:o,...u,...s},{tokenize:r,processTerm:d}=i,l=r(t).flatMap(a=>d(a)).filter(a=>!!a).map(ft(i)).map(a=>At(e,a,i));return Y(l,i.combineWith)},K=(e,t,s={})=>{const n=X(e,t,s),o=[];for(const[u,{score:i,terms:r,match:d}]of n){const l=r.length,a={id:e._documentIds.get(u),score:i*l,terms:Object.keys(d),match:d};Object.assign(a,e._storedFields.get(u)),(s.filter==null||s.filter(a))&&o.push(a)}return o.sort(G),o},Ct=(e,t,s={})=>{s={...e._options.autoSuggestOptions,...s};const n=new Map;for(const{score:u,terms:i}of K(e,t,s)){const r=i.join(" "),d=n.get(r);d!=null?(d.score+=u,d.count+=1):n.set(r,{score:u,terms:i,count:1})}const o=[];for(const[u,{score:i,terms:r,count:d}]of n)o.push({suggestion:u,terms:r,score:i/d});return o.sort(G),o};class Et{_options;_index;_documentCount;_documentIds;_idToShortId;_fieldIds;_fieldLength;_avgFieldLength;_nextId;_storedFields;_dirtCount;_currentVacuum;_enqueuedVacuum;_enqueuedVacuumConditions;constructor(t){if((t==null?void 0:t.fields)==null)throw new Error('SlimSearch: option "fields" must be provided');const s=t.autoVacuum==null||t.autoVacuum===!0?yt:t.autoVacuum;this._options={...pt,...t,autoVacuum:s,searchOptions:{...J,...t.searchOptions||{}},autoSuggestOptions:{...Ft,...t.autoSuggestOptions||{}}},this._index=new C,this._documentCount=0,this._documentIds=new Map,this._idToShortId=new Map,this._fieldIds={},this._fieldLength=new Map,this._avgFieldLength=[],this._nextId=0,this._storedFields=new Map,this._dirtCount=0,this._currentVacuum=null,this._enqueuedVacuum=null,this._enqueuedVacuumConditions=U,this.addFields(this._options.fields)}get isVacuuming(){return this._currentVacuum!=null}get dirtCount(){return this._dirtCount}get dirtFactor(){return this._dirtCount/(1+this._documentCount+this._dirtCount)}get documentCount(){return this._documentCount}get termCount(){return this._index.size}toJSON(){const t=[];for(const[s,n]of this._index){const o={};for(const[u,i]of n)o[u]=Object.fromEntries(i);t.push([s,o])}return{documentCount:this._documentCount,nextId:this._nextId,documentIds:Object.fromEntries(this._documentIds),fieldIds:this._fieldIds,fieldLength:Object.fromEntries(this._fieldLength),averageFieldLength:this._avgFieldLength,storedFields:Object.fromEntries(this._storedFields),dirtCount:this._dirtCount,index:t,serializationVersion:2}}addFields(t){for(let s=0;s<t.length;s++)this._fieldIds[t[s]]=s}}const zt=({index:e,documentCount:t,nextId:s,documentIds:n,fieldIds:o,fieldLength:u,averageFieldLength:i,storedFields:r,dirtCount:d,serializationVersion:l},a)=>{if(l!==1&&l!==2)throw new Error("SlimSearch: cannot deserialize an index created with an incompatible version");const h=new Et(a);h._documentCount=t,h._nextId=s,h._documentIds=k(n),h._idToShortId=new Map,h._fieldIds=o,h._fieldLength=k(u),h._avgFieldLength=i,h._storedFields=k(r),h._dirtCount=d||0,h._index=new C;for(const[m,p]of h._documentIds)h._idToShortId.set(p,m);for(const[m,p]of e){const f=new Map;for(const c of Object.keys(p)){let g=p[c];l===1&&(g=g.ds),f.set(parseInt(c,10),k(g))}h._index.set(m,f)}return h},Q=Object.entries,wt=Object.fromEntries,j=(e,t)=>{const s=e.toLowerCase(),n=t.toLowerCase(),o=[];let u=0,i=0;const r=(l,a=!1)=>{let h="";i===0?h=l.length>20?`… ${l.slice(-20)}`:l:a?h=l.length+i>100?`${l.slice(0,100-i)}… `:l:h=l.length>20?`${l.slice(0,20)} … ${l.slice(-20)}`:l,h&&o.push(h),i+=h.length,a||(o.push(["mark",t]),i+=t.length,i>=100&&o.push(" …"))};let d=s.indexOf(n,u);if(d===-1)return null;for(;d>=0;){const l=d+n.length;if(r(e.slice(u,d)),u=l,i>100)break;d=s.indexOf(n,u)}return i<100&&r(e.slice(u),!0),o},Z=/[\u4e00-\u9fa5]/g,tt=(e={})=>({fuzzy:.2,prefix:!0,processTerm:t=>{const s=t.match(Z)||[],n=t.replace(Z,"").toLowerCase();return n?[n,...s]:[...s]},...e}),xt=(e,t)=>t.contents.reduce((s,[,n])=>s+n,0)-e.contents.reduce((s,[,n])=>s+n,0),kt=(e,t)=>Math.max(...t.contents.map(([,s])=>s))-Math.max(...e.contents.map(([,s])=>s)),et=(e,t,s={})=>{const n={};return K(t,e,tt({boost:{h:2,t:1,c:4},...s})).forEach(o=>{const{id:u,terms:i,score:r}=o,d=u.includes("@"),l=u.includes("#"),[a,h]=u.split(/[#@]/),m=i.sort((f,c)=>f.length-c.length).filter((f,c)=>i.slice(c+1).every(g=>!g.includes(f))),{contents:p}=n[a]??={title:"",contents:[]};if(d)p.push([{type:"customField",key:a,index:h,display:m.map(f=>o.c.map(c=>j(c,f))).flat().filter(f=>f!==null)},r]);else{const f=m.map(c=>j(o.h,c)).filter(c=>c!==null);if(f.length&&p.push([{type:l?"heading":"title",key:a,...l&&{anchor:h},display:f},r]),"t"in o)for(const c of o.t){const g=m.map(_=>j(c,_)).filter(_=>_!==null);g.length&&p.push([{type:"text",key:a,...l&&{anchor:h},display:g},r])}}}),Q(n).sort(([,o],[,u])=>"max"==="total"?xt(o,u):kt(o,u)).map(([o,{title:u,contents:i}])=>{if(!u){const r=it(t,o);r&&(u=r.h)}return{title:u,contents:i.map(([r])=>r)}})},st=(e,t,s={})=>Ct(t,e,tt(s)).map(({suggestion:n})=>n),v=wt(Q(JSON.parse("{\"/\":{\"documentCount\":988,\"nextId\":988,\"documentIds\":{\"0\":\"v-c7f5781a\",\"1\":\"v-513bdf66\",\"2\":\"v-513bdf66#关于我\",\"3\":\"v-74bc627b\",\"4\":\"v-7368761c\",\"5\":\"v-7368761c#_1-ps常用快捷键\",\"6\":\"v-7368761c#_2-快速去除人物雀斑\",\"7\":\"v-7368761c@0\",\"8\":\"v-7368761c@1\",\"9\":\"v-14e6315a\",\"10\":\"v-6faaadba\",\"11\":\"v-6faaadba#一-、审美体系构建\",\"12\":\"v-6faaadba#_1-评判照片好坏的标准\",\"13\":\"v-6faaadba#_2-照片好看的标准\",\"14\":\"v-6faaadba#_3-审美的重要性和特点\",\"15\":\"v-6faaadba#_4-个人风格的建立\",\"16\":\"v-6faaadba#_5-如何培养自己的审美\",\"17\":\"v-6faaadba#_1-培养自己的观察力-放大自己的感受力\",\"18\":\"v-6faaadba#_2-看电影\",\"19\":\"v-6faaadba#_3-大量阅片\",\"20\":\"v-6faaadba#_4-建立审美图库-照片分类\",\"21\":\"v-6faaadba#_5-收集同一风格不同作者的作品\",\"22\":\"v-6faaadba#_6-记录自己的灵感和情绪\",\"23\":\"v-6faaadba#_7-一切艺术和生活都可以是灵感来源\",\"24\":\"v-6faaadba#_6-如何建立自己的摄影风格\",\"25\":\"v-6faaadba#_1-收集1000张自己喜欢的照片\",\"26\":\"v-6faaadba#_2-尝试各种风格\",\"27\":\"v-6faaadba#_3-大量拍摄自己喜欢风格的创作\",\"28\":\"v-6faaadba#_4-基于视觉的统一\",\"29\":\"v-6faaadba#_5-对文化的理解和再创作\",\"30\":\"v-6faaadba#_6-内在情感的统一\",\"31\":\"v-6faaadba#二、构图美学\",\"32\":\"v-6faaadba#_1、摄影角度-机位\",\"33\":\"v-6faaadba#_1-视点\",\"34\":\"v-6faaadba#_2-角度、机位\",\"35\":\"v-6faaadba#_3-总结\",\"36\":\"v-6faaadba#_2、景别-景别和焦段无关\",\"37\":\"v-6faaadba#_2-1-全景系列\",\"38\":\"v-6faaadba#_2-2-近景系列\",\"39\":\"v-6faaadba#_1-中景\",\"40\":\"v-6faaadba#_2-中近景\",\"41\":\"v-6faaadba#_3-近景\",\"42\":\"v-6faaadba#_4-特写\",\"43\":\"v-6faaadba#_5-大特写\",\"44\":\"v-6faaadba#_6-景别的完整序列\",\"45\":\"v-6faaadba#_7-总结\",\"46\":\"v-6faaadba#_8-采用什么样角度、焦段和景别\",\"47\":\"v-6faaadba#_3、基本构图法\",\"48\":\"v-6faaadba#_1-画幅比例\",\"49\":\"v-6faaadba#_2-影像成分\",\"50\":\"v-6faaadba#_3-什么是构图\",\"51\":\"v-6faaadba#_4-构图的基本原则\",\"52\":\"v-6faaadba#_5-构图方法\",\"53\":\"v-6faaadba#_1-居中构图\",\"54\":\"v-6faaadba#_2-三分构图\",\"55\":\"v-6faaadba#_3-前景构图\",\"56\":\"v-6faaadba#_4-框架构图\",\"57\":\"v-6faaadba#_5-对称构图\",\"58\":\"v-6faaadba#_6-引导线构图\",\"59\":\"v-6faaadba#_7-对角线构图\",\"60\":\"v-6faaadba#_8-倒置构图\",\"61\":\"v-6faaadba#_9-留白构图\",\"62\":\"v-6faaadba#_10-曲线构图\",\"63\":\"v-6faaadba#_4、高级构图法\",\"64\":\"v-6faaadba#_1-视线的力量-视线的平衡\",\"65\":\"v-6faaadba#_2-视线的力量-打破平衡\",\"66\":\"v-6faaadba#_3-画面失衡构图法\",\"67\":\"v-6faaadba#_4-利用镜子构图\",\"68\":\"v-6faaadba#_5-利用光影构图\",\"69\":\"v-6faaadba#_6-人虚景实\",\"70\":\"v-6faaadba#_7-运动模糊-快门控制\",\"71\":\"v-6faaadba#_8-主体与陪体构图法\",\"72\":\"v-6faaadba#_9-双重曝光\",\"73\":\"v-6faaadba#_10-遮挡构图法\",\"74\":\"v-6faaadba#_5-总结\",\"75\":\"v-6faaadba#三、光线\",\"76\":\"v-6faaadba#_1-光的方向\",\"77\":\"v-6faaadba#_2-光的质感\",\"78\":\"v-6faaadba#_1-硬光\",\"79\":\"v-6faaadba#_2-柔光-软光\",\"80\":\"v-6faaadba#_3-认识自然光\",\"81\":\"v-6faaadba#_1-晴天光线的利用\",\"82\":\"v-6faaadba#_2-丁达尔光\",\"83\":\"v-6faaadba#_3-阴雨天\",\"84\":\"v-6faaadba#_4-十大影调\",\"85\":\"v-6faaadba#_5-常用补光工具\",\"86\":\"v-6faaadba#四、色彩\",\"87\":\"v-6faaadba#_1-定义\",\"88\":\"v-6faaadba#_2-光的三原色\",\"89\":\"v-6faaadba#_3-色彩的三种属性\",\"90\":\"v-6faaadba#_1-色相\",\"91\":\"v-6faaadba#_2-明度-色值-亮度\",\"92\":\"v-6faaadba#_3-饱和度\",\"93\":\"v-6faaadba#_4-色彩的情绪性\",\"94\":\"v-6faaadba#_5-色彩秩序构建\",\"95\":\"v-6faaadba#_1-画面要有主色调\",\"96\":\"v-6faaadba#_2-在画面中构建色彩的和谐\",\"97\":\"v-6faaadba#_3-在画面中构建色彩的对比\",\"98\":\"v-6faaadba#_4-主色-无色搭配\",\"99\":\"v-6faaadba#_5-在画面构建色彩明暗关系\",\"100\":\"v-6faaadba#_6-局部色彩对比-点缀\",\"101\":\"v-6faaadba#_7-色彩的主观还原和控制\",\"102\":\"v-6faaadba#_6-常用色彩搭配\",\"103\":\"v-6faaadba#_1-单色-白色\",\"104\":\"v-6faaadba#_2-单色-黑色\",\"105\":\"v-6faaadba#_3-红色-蓝色\",\"106\":\"v-6faaadba#_4-红-绿\",\"107\":\"v-6faaadba#_5-低饱和配色-常用\",\"108\":\"v-6faaadba#_6-同色系配色\",\"109\":\"v-6faaadba#_7-服装的属性\",\"110\":\"v-6faaadba#五、有效拍摄策划\",\"111\":\"v-6faaadba#_1-为什么要做拍摄策划\",\"112\":\"v-6faaadba#_2-拍摄灵感从哪来\",\"113\":\"v-6faaadba#_3-如何确定创作流程\",\"114\":\"v-6faaadba#_1-主题-风格\",\"115\":\"v-6faaadba#_2-模特\",\"116\":\"v-6faaadba#_3-场地\",\"117\":\"v-6faaadba#_4-样片\",\"118\":\"v-6faaadba#_5-服装\",\"119\":\"v-6faaadba#_6-道具\",\"120\":\"v-6faaadba#_4-拍摄策划\",\"121\":\"v-6faaadba#_5-如何确定拍摄场地\",\"122\":\"v-6faaadba#_6-模特选择-找模特\",\"123\":\"v-6faaadba#_7-模特选择-定模特\",\"124\":\"v-6faaadba#_8-化妆及造型\",\"125\":\"v-6faaadba#_9-服装的质感\",\"126\":\"v-6faaadba#_10-道具选用\",\"127\":\"v-6faaadba#_11-拍摄策划\",\"128\":\"v-6faaadba#_12-如何和模特快速建立信任进入拍摄状态\",\"129\":\"v-6faaadba#_13-如何引导模特\",\"130\":\"v-6faaadba#六、人像美姿\",\"131\":\"v-6faaadba#_1-问题\",\"132\":\"v-6faaadba#_2-美资的基本原则\",\"133\":\"v-6faaadba#_1-舒展性\",\"134\":\"v-6faaadba#_2-符合故事情境\",\"135\":\"v-6faaadba#_3-自然\",\"136\":\"v-6faaadba#_4-扬长避短\",\"137\":\"v-6faaadba#_5-融入环境\",\"138\":\"v-6faaadba#_3-基础人像摆姿\",\"139\":\"v-6faaadba#_1-确定美姿的基本方法\",\"140\":\"v-6faaadba#_1-1-确定风格及人物情绪\",\"141\":\"v-6faaadba#_1-1-1-常见风格\",\"142\":\"v-6faaadba#_1-日系少女\",\"143\":\"v-6faaadba#_2-法式氛围感私房\",\"144\":\"v-6faaadba#_3-汉服-旗袍\",\"145\":\"v-6faaadba#_4-安静的情绪流淌\",\"146\":\"v-6faaadba#_5-强烈的情绪表达\",\"147\":\"v-6faaadba#_6-观念摄影\",\"148\":\"v-6faaadba#_1-2-确定构图和视点\",\"149\":\"v-6faaadba#_1-3-摆拍or抓拍\",\"150\":\"v-6faaadba#_1-4-确定美姿\",\"151\":\"v-6faaadba#_1-5-拍摄角度\",\"152\":\"v-6faaadba#_1-6-调动情绪\",\"153\":\"v-6faaadba#_1-7-眼神的方向\",\"154\":\"v-6faaadba#_1-8-总结\",\"155\":\"v-6faaadba#_2-站姿\",\"156\":\"v-6faaadba#_2-1-站姿-人物正面-正侧面\",\"157\":\"v-6faaadba#_2-2-站姿-侧面\",\"158\":\"v-6faaadba#_3-坐姿\",\"159\":\"v-6faaadba#_3-躺姿\",\"160\":\"v-6faaadba#_4-靠姿-用得多\",\"161\":\"v-6faaadba#_5-趴姿\",\"162\":\"v-6faaadba#_6-走-跑\",\"163\":\"v-6faaadba#_7-旋转\",\"164\":\"v-6faaadba#_4-不同五官人群拍摄技巧\",\"165\":\"v-6faaadba#_1-三庭五眼\",\"166\":\"v-6faaadba#_2-人脸的凹凸面\",\"167\":\"v-6faaadba#_3-不同五官人群前期化妆-拍摄技巧\",\"168\":\"v-6faaadba#_1-三庭比例\",\"169\":\"v-6faaadba#_2-轮廓\",\"170\":\"v-6faaadba#_3-发丝修饰脸型\",\"171\":\"v-6faaadba#_4-额头和眼睛\",\"172\":\"v-6faaadba#_5-鼻子\",\"173\":\"v-6faaadba#_6-嘴巴\",\"174\":\"v-6faaadba#_4-胖\",\"175\":\"v-6faaadba#_5-瘦\",\"176\":\"v-6faaadba#_5-丰富美姿-弱化摆拍感技巧\",\"177\":\"v-6faaadba#_1-拍摄景别-角度的多样性\",\"178\":\"v-6faaadba#_2-拍摄机位的多样性\",\"179\":\"v-6faaadba#_3-变化姿势-眼神方向\",\"180\":\"v-6faaadba#_4-与画外空间互动\",\"181\":\"v-6faaadba#_5-动作的组合叠加\",\"182\":\"v-6faaadba#_6-同一道具的多样性使用\",\"183\":\"v-6faaadba#七、电影氛围感构建\",\"184\":\"v-6faaadba#_1-什么是情绪风\",\"185\":\"v-6faaadba#_2-情绪的表达\",\"186\":\"v-6faaadba#_3-电影氛围感的构建\",\"187\":\"v-6faaadba#_1-什么是电影感\",\"188\":\"v-6faaadba#_2-一部电影的记忆点\",\"189\":\"v-6faaadba#_3-如何策划一场特定情绪拍摄\",\"190\":\"v-6faaadba#_4-如何讲故事\",\"191\":\"v-6faaadba#_5-电影感风格拍摄tips\",\"192\":\"v-6faaadba#_4-氛围感构建\",\"193\":\"v-6faaadba#_1-宏大场景构建\",\"194\":\"v-6faaadba#_2-光影丰富空间层次\",\"195\":\"v-6faaadba#_3-剪影\",\"196\":\"v-6faaadba#_4-风的自由感\",\"197\":\"v-6faaadba#_5-发丝塑造的自由感\",\"198\":\"v-6faaadba#_6-细枝末节的情绪感受\",\"199\":\"v-6faaadba#_7-空间介质的利用\",\"200\":\"v-6faaadba#_8-留出想象空间\",\"201\":\"v-6faaadba#_9-道具的隐喻与象征\",\"202\":\"v-6faaadba#_10-让画面动起来\",\"203\":\"v-6faaadba#_11-总结\",\"204\":\"v-6faaadba#_5-画面张力构建\",\"205\":\"v-6faaadba#_1-焦段和视点\",\"206\":\"v-6faaadba#_1-平拍视角\",\"207\":\"v-6faaadba#_2-俯拍视角\",\"208\":\"v-6faaadba#_3-仰拍视角\",\"209\":\"v-6faaadba#_2-肢体语言的力量\",\"210\":\"v-6faaadba#_1-手部动作-感染力的释放\",\"211\":\"v-6faaadba#_3-面部情绪\",\"212\":\"v-6faaadba#_4-在照片中制造冲突\",\"213\":\"v-6faaadba#_5-物哀美学\",\"214\":\"v-6faaadba#拍摄\",\"215\":\"v-6faaadba#_1-构图方法\",\"216\":\"v-6faaadba#_1-1-中心构图法\",\"217\":\"v-6faaadba#_1-2-水平线构图法\",\"218\":\"v-6faaadba#_1-3-垂直线构图法\",\"219\":\"v-6faaadba#_1-4-三分构图法\",\"220\":\"v-6faaadba#_1-5-对称构图法\",\"221\":\"v-6faaadba#_1-6-对角线构图法\",\"222\":\"v-6faaadba#_1-7-引导线构图法\",\"223\":\"v-6faaadba#_1-8-框架式构图法\",\"224\":\"v-6faaadba#_2-如何进行高效的美姿和引导\",\"225\":\"v-6faaadba#_3-我们到底该拍什么\",\"226\":\"v-6faaadba#_4-场景实操\",\"227\":\"v-6faaadba#_4-1-旅游打卡宽窄巷子一\",\"228\":\"v-6faaadba#_4-2-旅游打卡宽窄巷子二\",\"229\":\"v-6faaadba#_4-3-红绳许愿墙\",\"230\":\"v-6faaadba#_4-4-小拱桥\",\"231\":\"v-6faaadba#_4-5-红墙拍摄\",\"232\":\"v-6faaadba#_4-6-金合欢花\",\"233\":\"v-6faaadba#_4-7-阴天拍梅花\",\"234\":\"v-6faaadba#_4-8-一株小杏花\",\"235\":\"v-6faaadba#_4-9-逆光芦苇的拍摄\",\"236\":\"v-6faaadba#_4-10-海边拍摄-洱海逆光\",\"237\":\"v-6faaadba#_4-11-海边夕阳拍摄\",\"238\":\"v-6faaadba#_4-12-海边顺光拍摄\",\"239\":\"v-6faaadba#_4-12-油菜花拍摄\",\"240\":\"v-6faaadba#_4-14-廊桥拍摄\",\"241\":\"v-6faaadba#_4-15-大树拍摄\",\"242\":\"v-6faaadba#_4-16-欧式大桥拍摄\",\"243\":\"v-6faaadba#_4-17-阴天拍樱花\",\"244\":\"v-6faaadba#_4-18-如何正确驾驭广角\",\"245\":\"v-6faaadba#后期lr\",\"246\":\"v-6faaadba#后期ps\",\"247\":\"v-6faaadba#_1-修图前准备\",\"248\":\"v-6faaadba#_2-快捷键\",\"249\":\"v-6faaadba#_2-1-图层\",\"250\":\"v-6faaadba#_2-2-裁剪工具\",\"251\":\"v-6faaadba#_2-3-液化\",\"252\":\"v-6faaadba#_3-修图步骤\",\"253\":\"v-6faaadba#_3-1-观察照片\",\"254\":\"v-6faaadba#_3-2-修图步骤\",\"255\":\"v-6faaadba#_4-中性灰修图\",\"256\":\"v-6faaadba#_5-高低频修图\",\"257\":\"v-6faaadba#_6-双曲线修图\",\"258\":\"v-6faaadba#_7-调色\",\"259\":\"v-6faaadba#_7-1-前期定调\",\"260\":\"v-6faaadba#_7-2-调色步骤\",\"261\":\"v-6faaadba#_8-修图小技巧\",\"262\":\"v-6faaadba#_8-1-均衡肤色\",\"263\":\"v-6faaadba#四-学习方法\",\"264\":\"v-6faaadba#_1-审美提高\",\"265\":\"v-6faaadba#_2-多拍摄实战\",\"266\":\"v-6faaadba#_3-复盘拍摄\",\"267\":\"v-6faaadba#_4-思考\",\"268\":\"v-6faaadba@0\",\"269\":\"v-6faaadba@1\",\"270\":\"v-261d8cf8\",\"271\":\"v-261d8cf8#摄影基础知识\",\"272\":\"v-261d8cf8#曝光三要素\",\"273\":\"v-261d8cf8#快门\",\"274\":\"v-261d8cf8#光圈\",\"275\":\"v-261d8cf8#iso\",\"276\":\"v-261d8cf8#机位\",\"277\":\"v-261d8cf8#相机挡位\",\"278\":\"v-261d8cf8#二次构图\",\"279\":\"v-261d8cf8#构图\",\"280\":\"v-261d8cf8#尼康z30\",\"281\":\"v-261d8cf8#色彩原理\",\"282\":\"v-261d8cf8#组合色\",\"283\":\"v-261d8cf8#互补色\",\"284\":\"v-261d8cf8#grb12色相环\",\"285\":\"v-261d8cf8#色相60度理论\",\"286\":\"v-261d8cf8#lightroom\",\"287\":\"v-261d8cf8#导入\",\"288\":\"v-261d8cf8#基本面板\",\"289\":\"v-261d8cf8#曲线\",\"290\":\"v-261d8cf8#hsl\",\"291\":\"v-261d8cf8#分离色调\",\"292\":\"v-261d8cf8#细节\",\"293\":\"v-261d8cf8#光学\",\"294\":\"v-261d8cf8#效果\",\"295\":\"v-261d8cf8#校准\",\"296\":\"v-261d8cf8@0\",\"297\":\"v-261d8cf8@1\",\"298\":\"v-6fd91632\",\"299\":\"v-6fd91632#角色认知和思维升级\",\"300\":\"v-6fd91632#目标计划与绩效管理\",\"301\":\"v-6fd91632#有效沟通和协作管理\",\"302\":\"v-6fd91632#有效决策\",\"303\":\"v-6fd91632#有效授权\",\"304\":\"v-6fd91632#人才选育用留\",\"305\":\"v-6fd91632#有效激励\",\"306\":\"v-6fd91632#自我修炼\",\"307\":\"v-43fc5fca\",\"308\":\"v-62789624\",\"309\":\"v-c9bbfba2\",\"310\":\"v-13bcc40a\",\"311\":\"v-7d043999\",\"312\":\"v-7a9b4382\",\"313\":\"v-30613474\",\"314\":\"v-30613474#_1-目录操作\",\"315\":\"v-30613474#_1-1-ls\",\"316\":\"v-30613474#_1-2-ll\",\"317\":\"v-30613474#_1-3-mkdir\",\"318\":\"v-30613474#_1-4-find\",\"319\":\"v-30613474#_1-5-cp\",\"320\":\"v-30613474#_1-6-mv\",\"321\":\"v-30613474#_2-文件操作\",\"322\":\"v-30613474#_2-1-touch\",\"323\":\"v-30613474#_2-2-cat\",\"324\":\"v-30613474#_2-3-vim\",\"325\":\"v-30613474#_3-文件压缩\",\"326\":\"v-30613474#_3-1-tar\",\"327\":\"v-30613474#_4-系统状态\",\"328\":\"v-30613474#_4-1-top\",\"329\":\"v-30613474#_4-2-uptime\",\"330\":\"v-30613474#_4-3-free\",\"331\":\"v-30613474#_4-4-df\",\"332\":\"v-30613474#_4-5-du\",\"333\":\"v-30613474#_4-6-ps\",\"334\":\"v-30613474#_5-java相关\",\"335\":\"v-30613474#_5-1-jps\",\"336\":\"v-30613474#_5-2-jstack\",\"337\":\"v-30613474#_5-3-jinfo\",\"338\":\"v-30613474@0\",\"339\":\"v-30613474@1\",\"340\":\"v-190e7a62\",\"341\":\"v-1e1d47aa\",\"342\":\"v-1e1d47aa#spark学习\",\"343\":\"v-1e1d47aa@0\",\"344\":\"v-1e1d47aa@1\",\"345\":\"v-71c8bd6e\",\"346\":\"v-71c8bd6e#seo\",\"347\":\"v-71c8bd6e#css样式优先级\",\"348\":\"v-71c8bd6e#css-选择器\",\"349\":\"v-71c8bd6e#css-常见属性\",\"350\":\"v-71c8bd6e#额外知识补充\",\"351\":\"v-71c8bd6e#link元素\",\"352\":\"v-71c8bd6e#chrome浏览器开发者工具\",\"353\":\"v-71c8bd6e#浏览器渲染流程\",\"354\":\"v-71c8bd6e#css文本属性\",\"355\":\"v-71c8bd6e#text-decoration-常用\",\"356\":\"v-71c8bd6e#text-transform-了解\",\"357\":\"v-71c8bd6e#text-indent-了解\",\"358\":\"v-71c8bd6e#text-align-重要\",\"359\":\"v-71c8bd6e#word-spacing-letter-spacing-了解\",\"360\":\"v-71c8bd6e#css字体属性\",\"361\":\"v-71c8bd6e#font-size-重要\",\"362\":\"v-71c8bd6e#font-family-重要-不过一般仅设置一次\",\"363\":\"v-71c8bd6e#font-weight-重要\",\"364\":\"v-71c8bd6e#font-style-一般\",\"365\":\"v-71c8bd6e#line-height-常用\",\"366\":\"v-71c8bd6e#font\",\"367\":\"v-71c8bd6e#css常见选择器\",\"368\":\"v-71c8bd6e#简单选择器-重要\",\"369\":\"v-71c8bd6e#属性选择器-了解\",\"370\":\"v-71c8bd6e#后代选择器-重要\",\"371\":\"v-71c8bd6e#兄弟选择器-理解\",\"372\":\"v-71c8bd6e#选择器组-重要\",\"373\":\"v-71c8bd6e#伪类选择器\",\"374\":\"v-71c8bd6e#伪元素-了解\",\"375\":\"v-71c8bd6e#css属性的特性\",\"376\":\"v-71c8bd6e#css属性的继承\",\"377\":\"v-71c8bd6e#css属性的层叠\",\"378\":\"v-71c8bd6e#css属性的类型\",\"379\":\"v-71c8bd6e#display属性-非常重要\",\"380\":\"v-71c8bd6e#元素的隐藏\",\"381\":\"v-71c8bd6e#overflow属性\",\"382\":\"v-71c8bd6e#css的盒子模型\",\"383\":\"v-71c8bd6e#认识盒子模型\",\"384\":\"v-71c8bd6e#内容width-height\",\"385\":\"v-71c8bd6e#内边距padding\",\"386\":\"v-71c8bd6e#边框-圆角border\",\"387\":\"v-71c8bd6e#外边距margin\",\"388\":\"v-71c8bd6e#outline\",\"389\":\"v-71c8bd6e#盒子和文字阴影\",\"390\":\"v-71c8bd6e#盒子阴影-box-shadow\",\"391\":\"v-71c8bd6e#文字阴影-text-shadow\",\"392\":\"v-71c8bd6e#行内非替换元素的注意事项\",\"393\":\"v-71c8bd6e#box-sizing\",\"394\":\"v-71c8bd6e#网站常用背景色\",\"395\":\"v-71c8bd6e#单行文字显示省略号\",\"396\":\"v-71c8bd6e#多行文字显示省略号\",\"397\":\"v-71c8bd6e#css的背景设置\",\"398\":\"v-71c8bd6e#background-image\",\"399\":\"v-71c8bd6e#background-repeat\",\"400\":\"v-71c8bd6e#background-size\",\"401\":\"v-71c8bd6e#background-position\",\"402\":\"v-71c8bd6e#background-attachment\",\"403\":\"v-71c8bd6e#background\",\"404\":\"v-71c8bd6e#开发案例思路\",\"405\":\"v-71c8bd6e#高级元素的使用\",\"406\":\"v-71c8bd6e#_1-列表元素\",\"407\":\"v-71c8bd6e#_2-常见列表\",\"408\":\"v-71c8bd6e#_3-表格元素\",\"409\":\"v-71c8bd6e#_4-表格合并\",\"410\":\"v-71c8bd6e#表单元素\",\"411\":\"v-71c8bd6e#表单常见属性\",\"412\":\"v-71c8bd6e#常见emmet语法\",\"413\":\"v-71c8bd6e#_1-认识emmet\",\"414\":\"v-71c8bd6e#_2-常见emment语法\",\"415\":\"v-71c8bd6e#额外知识补充-1\",\"416\":\"v-71c8bd6e#border图形\",\"417\":\"v-71c8bd6e#web网络字体\",\"418\":\"v-71c8bd6e#web字体图标\",\"419\":\"v-71c8bd6e#css精灵图\",\"420\":\"v-71c8bd6e#cursor属性\",\"421\":\"v-71c8bd6e#css元素定位\",\"422\":\"v-71c8bd6e#标准流布局\",\"423\":\"v-71c8bd6e#相对定位\",\"424\":\"v-71c8bd6e#固定定位\",\"425\":\"v-71c8bd6e#绝对定位\",\"426\":\"v-71c8bd6e#粘性定位\",\"427\":\"v-71c8bd6e#z-index\",\"428\":\"v-71c8bd6e#css的浮动\",\"429\":\"v-71c8bd6e#认识浮动\",\"430\":\"v-71c8bd6e#浮动的规则\",\"431\":\"v-71c8bd6e#浮动的案例\",\"432\":\"v-71c8bd6e#浮动的问题\",\"433\":\"v-71c8bd6e#清除浮动\",\"434\":\"v-71c8bd6e#flex布局\",\"435\":\"v-71c8bd6e#认识flex布局\",\"436\":\"v-71c8bd6e#flex布局的理解\",\"437\":\"v-71c8bd6e#flex-container属性\",\"438\":\"v-71c8bd6e#flex-item属性\",\"439\":\"v-71c8bd6e#flex布局的模型\",\"440\":\"v-71c8bd6e#flex相关的属性\",\"441\":\"v-71c8bd6e#flex-direction\",\"442\":\"v-71c8bd6e#flex-wrap\",\"443\":\"v-71c8bd6e#flex-flow\",\"444\":\"v-71c8bd6e#justify-content\",\"445\":\"v-71c8bd6e#align-items\",\"446\":\"v-71c8bd6e#align-content\",\"447\":\"v-71c8bd6e#order-item属性-了解\",\"448\":\"v-71c8bd6e#align-self-item属性-了解\",\"449\":\"v-71c8bd6e#flex-grow-item属性-掌握\",\"450\":\"v-71c8bd6e#flex-shrink-item属性-掌握\",\"451\":\"v-71c8bd6e#flex-basis-item属性-了解\",\"452\":\"v-71c8bd6e#flex-item属性-缩小属性-掌握\",\"453\":\"v-71c8bd6e#flex布局对齐问题\",\"454\":\"v-71c8bd6e#transform\",\"455\":\"v-71c8bd6e#垂直居中总结-重要\",\"456\":\"v-71c8bd6e#transition-动画\",\"457\":\"v-71c8bd6e#animation动画\",\"458\":\"v-71c8bd6e#vertical-align\",\"459\":\"v-71c8bd6e#html5\",\"460\":\"v-71c8bd6e#video、audio元素\",\"461\":\"v-71c8bd6e#input、全局属性data\",\"462\":\"v-71c8bd6e#white-space-text-overflow\",\"463\":\"v-71c8bd6e#css常见的函数扩展\",\"464\":\"v-71c8bd6e#理解浏览器前缀\",\"465\":\"v-71c8bd6e#深入理解bfc\",\"466\":\"v-71c8bd6e#媒体查询\",\"467\":\"v-71c8bd6e#css常见单位详解\",\"468\":\"v-71c8bd6e#深入理解pixel、dpr、ppi\",\"469\":\"v-71c8bd6e#css预处理器less、scss\",\"470\":\"v-71c8bd6e#浏览器视口viewport\",\"471\":\"v-71c8bd6e#移动端适配方案\",\"472\":\"v-71c8bd6e#适配方案-rem-动态html的font-size\",\"473\":\"v-71c8bd6e#移动端适配vm方案-推荐使用\",\"474\":\"v-71c8bd6e@0\",\"475\":\"v-71c8bd6e@1\",\"476\":\"v-2ce35b93\",\"477\":\"v-0c31b5e6\",\"478\":\"v-0c31b5e6#第一章-算法简介\",\"479\":\"v-0c31b5e6#_1-1-算法的基本概念\",\"480\":\"v-0c31b5e6#_1-1-1-什么是算法\",\"481\":\"v-0c31b5e6#_1-1-2-为什么学习算法\",\"482\":\"v-0c31b5e6#_1-2-算法的特征\",\"483\":\"v-0c31b5e6#_1-3-算法复杂度\",\"484\":\"v-0c31b5e6#_1-3-1-时间复杂度\",\"485\":\"v-0c31b5e6#_1-3-2-空间复杂度\",\"486\":\"v-0c31b5e6#_1-3-3-时间复杂度的计算\",\"487\":\"v-0c31b5e6#第二章-数组问题讲解\",\"488\":\"v-0c31b5e6#_2-1-两数之和\",\"489\":\"v-0c31b5e6#_2-1-1-题目\",\"490\":\"v-0c31b5e6#_2-1-2-方法一-暴力法\",\"491\":\"v-0c31b5e6#_2-1-3-方法二-哈希表\",\"492\":\"v-0c31b5e6#_2-2-三数之和\",\"493\":\"v-0c31b5e6#_2-2-1-题目说明\",\"494\":\"v-0c31b5e6#_2-2-2-解题-推荐双指针法\",\"495\":\"v-0c31b5e6#_2-3-下一个排列\",\"496\":\"v-0c31b5e6#_2-3-1-题目说明\",\"497\":\"v-0c31b5e6#_2-3-2-解题-一遍扫描\",\"498\":\"v-0c31b5e6#第三章-二分查找\",\"499\":\"v-0c31b5e6#第四章-字符串问题\",\"500\":\"v-0c31b5e6#第五章-滑动窗口问题\",\"501\":\"v-0c31b5e6#第六章-链表\",\"502\":\"v-0c31b5e6#_6-1-为什么链表很重要\",\"503\":\"v-0c31b5e6#_6-2-认识链表\",\"504\":\"v-0c31b5e6#_6-3-链表的增删改查\",\"505\":\"v-0c31b5e6#_6-4-用链表实现栈\",\"506\":\"v-0c31b5e6#_6-5-用链表实现队列\",\"507\":\"v-0c31b5e6#_6-6-力扣题目-删除链表中的元素\",\"508\":\"v-0c31b5e6#_6-7-递归实现链表\",\"509\":\"v-0c31b5e6#_6-8-反转链表\",\"510\":\"v-0c31b5e6#第七章-哈希表\",\"511\":\"v-0c31b5e6#第八章-栈和队列\",\"512\":\"v-0c31b5e6#_8-1-栈的介绍\",\"513\":\"v-0c31b5e6#_8-2-栈的实现\",\"514\":\"v-0c31b5e6#_8-3-栈的应用\",\"515\":\"v-0c31b5e6#_8-4-队列介绍\",\"516\":\"v-0c31b5e6#_8-5-队列的实现\",\"517\":\"v-0c31b5e6#_8-6-循环队列\",\"518\":\"v-0c31b5e6#_8-7-循环队列另一种实现方式-不浪费空间\",\"519\":\"v-0c31b5e6#_8-8-循环队列另外一种实现方式二-浪费一个空间-但不使用size实现队列\",\"520\":\"v-0c31b5e6#_8-9-双端队列的实现\",\"521\":\"v-0c31b5e6#_8-10-java的stack有什么问题\",\"522\":\"v-0c31b5e6#_8-11-用队列实现栈\",\"523\":\"v-0c31b5e6#_8-11-用栈实现队列\",\"524\":\"v-0c31b5e6#第九章-排序算法\",\"525\":\"v-0c31b5e6#_9-1-选择排序法\",\"526\":\"v-0c31b5e6#_9-1-1-算法思路\",\"527\":\"v-0c31b5e6#_9-1-2-标准版-int类型\",\"528\":\"v-0c31b5e6#_9-1-3-泛型版-兼容所有数据类型\",\"529\":\"v-0c31b5e6#_9-2-插入排序法\",\"530\":\"v-0c31b5e6#_9-2-1-算法思路\",\"531\":\"v-0c31b5e6#_9-2-2-方式一\",\"532\":\"v-0c31b5e6#_9-2-3-方式二\",\"533\":\"v-0c31b5e6#第十章-二叉树及递归\",\"534\":\"v-0c31b5e6#第十一章-贪心算法\",\"535\":\"v-0c31b5e6#第十二章-动态规划\",\"536\":\"v-0c31b5e6#第十三章-回溯算法\",\"537\":\"v-0c31b5e6#第十四章-深度优先搜索和广度优先搜索\",\"538\":\"v-0c31b5e6#第十五章-数据结构基础\",\"539\":\"v-0c31b5e6#_15-1-数据结构基础\",\"540\":\"v-0c31b5e6@0\",\"541\":\"v-0c31b5e6@1\",\"542\":\"v-bd1ea4ac\",\"543\":\"v-bd1ea4ac#一、网络\",\"544\":\"v-bd1ea4ac#_1-osi-七层模型是什么\",\"545\":\"v-bd1ea4ac#_2-tcp-ip-四层模型是什么\",\"546\":\"v-bd1ea4ac#_3-传输层常见的协议\",\"547\":\"v-bd1ea4ac#_4-http-从输入-url-到页面展示到底发生了什么\",\"548\":\"v-bd1ea4ac#_5-http状态码\",\"549\":\"v-bd1ea4ac#_6-http和https有什么区别\",\"550\":\"v-bd1ea4ac#_7-tcp和udp的区别\",\"551\":\"v-bd1ea4ac#_8-http是基于tcp还是udp的\",\"552\":\"v-bd1ea4ac#_9-tcp的三次握手和四次挥手-非常重要\",\"553\":\"v-bd1ea4ac@0\",\"554\":\"v-bd1ea4ac@1\",\"555\":\"v-15f69b08\",\"556\":\"v-15f69b08#一、es常见操作\",\"557\":\"v-15f69b08#_1-建表\",\"558\":\"v-15f69b08#_2-复杂查询\",\"559\":\"v-15f69b08#_3-查询字段不为空的数据-类型不能是text\",\"560\":\"v-15f69b08#二、-es面试题\",\"561\":\"v-15f69b08#_1-详细描述一下elasticsearch索引文档的过程\",\"562\":\"v-15f69b08#_2-详细描述一下elasticsearch搜索的过程\",\"563\":\"v-15f69b08#_3-elasticsearch的倒排索引是什么\",\"564\":\"v-15f69b08#_4-elasticsearch是如何实现master选举的\",\"565\":\"v-15f69b08#_5-在并发情况下-es如何保证读写一致呢\",\"566\":\"v-15f69b08#_6-es索引数据多了怎么办呢-如何调优-部署\",\"567\":\"v-15f69b08#_7-es对于大数据量-上亿量级-的聚合如何实现\",\"568\":\"v-15f69b08@0\",\"569\":\"v-15f69b08@1\",\"570\":\"v-e2b6d65c\",\"571\":\"v-e2b6d65c#异常\",\"572\":\"v-e2b6d65c#_1-finally-里面的代码一定会执行吗\",\"573\":\"v-e2b6d65c#_2-try-with-resource\",\"574\":\"v-e2b6d65c#_3-枚举\",\"575\":\"v-e2b6d65c#_3-1-枚举作为数据存储标准写法\",\"576\":\"v-e2b6d65c#_4-泛型\",\"577\":\"v-e2b6d65c#_4-1-泛型本质是为了将类型参数化\",\"578\":\"v-e2b6d65c#_4-2-作用\",\"579\":\"v-e2b6d65c#_4-3-使用场景\",\"580\":\"v-e2b6d65c#_4-4-泛型字母解释\",\"581\":\"v-e2b6d65c#_4-5-泛型通配符\",\"582\":\"v-e2b6d65c#_4-6-需求-给定一个数组和目录值要求返回对应下标-兼容所有类型\",\"583\":\"v-e2b6d65c#_5-java反射\",\"584\":\"v-e2b6d65c#_5-1-序列化和反序列化\",\"585\":\"v-e2b6d65c#_5-2-反射优缺点\",\"586\":\"v-e2b6d65c#_5-3获取class的四种方式\",\"587\":\"v-e2b6d65c#_6-java-值传递\",\"588\":\"v-e2b6d65c#_7-jdk代理\",\"589\":\"v-e2b6d65c#总结\",\"590\":\"v-e2b6d65c#_8-unsafe类\",\"591\":\"v-e2b6d65c@0\",\"592\":\"v-e2b6d65c@1\",\"593\":\"v-1f471dfa\",\"594\":\"v-1f471dfa#_1、jdk、jvm、jre、jit\",\"595\":\"v-1f471dfa#_2、i-i\",\"596\":\"v-1f471dfa#_3、位移运算符\",\"597\":\"v-1f471dfa#_4、continue、break区别\",\"598\":\"v-1f471dfa#_5、java-8种数据类型\",\"599\":\"v-1f471dfa#_6、基本类型和包装类型的区别\",\"600\":\"v-1f471dfa#_7-成员变量和局部变量\",\"601\":\"v-1f471dfa#_8、方法重载和重写\",\"602\":\"v-1f471dfa#_9、如果一个类没有声明构造方法-该程序能正确执行吗\",\"603\":\"v-1f471dfa#_10、构造方法有哪些特点-是否可以被重写\",\"604\":\"v-1f471dfa#_11、面向对象三大特征\",\"605\":\"v-1f471dfa#_12、接口和抽象类的区别\",\"606\":\"v-1f471dfa#_13、-和equals的区别\",\"607\":\"v-1f471dfa#_14、为什么重写equals-时必须重写hashcode-方法\",\"608\":\"v-1f471dfa#_15、string-stringbuffer-stringbuilder的区别\",\"609\":\"v-1f471dfa#_16、字符串常量池\",\"610\":\"v-1f471dfa#_17、string-s1-new-string-abc-创建了几个字符串对象\",\"611\":\"v-1f471dfa#_18-string-intern-方法\",\"612\":\"v-1f471dfa@0\",\"613\":\"v-1f471dfa@1\",\"614\":\"v-32056898\",\"615\":\"v-32056898#list\",\"616\":\"v-32056898#_1-分类\",\"617\":\"v-32056898#_2-list、set、queue、map的区别\",\"618\":\"v-32056898#_3-集合底层框架结构\",\"619\":\"v-32056898#list-1\",\"620\":\"v-32056898#set\",\"621\":\"v-32056898#map\",\"622\":\"v-32056898#_4-arraylist和linkedlist的区别\",\"623\":\"v-32056898#_5-arraylist的扩容机制\",\"624\":\"v-32056898#set-1\",\"625\":\"v-32056898#_1-comparable-和-comparator的区别\",\"626\":\"v-32056898#_2-hashset、linkedhashset、treeset-三者的异同\",\"627\":\"v-32056898#map-1\",\"628\":\"v-32056898#_1-hashmap-和-hashtable的区别\",\"629\":\"v-32056898#_2、hashset和hashmap区别\",\"630\":\"v-32056898#_3、hashmap和treemap-区别\",\"631\":\"v-32056898#_4、hashmap底层实现\",\"632\":\"v-32056898#_5、hashmap的长度为什么是2的幂次方\",\"633\":\"v-32056898#_6、hashmap遍历方式\",\"634\":\"v-32056898#_7、concurrenthashmap-和-hashtable的区别\",\"635\":\"v-32056898#待更新\",\"636\":\"v-32056898#hashmap源码分析\",\"637\":\"v-32056898#_1-数组和链表的优缺点\",\"638\":\"v-32056898#_2-有没有一种方式整合上面两种数据结构的优势\",\"639\":\"v-32056898#_3-hashmap-底层数据结构\",\"640\":\"v-32056898#_4-put数据原理分析\",\"641\":\"v-32056898#_5-什么是哈希碰撞\",\"642\":\"v-32056898#_6-为啥引入红黑树\",\"643\":\"v-32056898#_7-hashmap-扩容原理\",\"644\":\"v-32056898#_8-hashmap源码之-类的属性\",\"645\":\"v-32056898#_9-hashmap源码之-类的构造方法\",\"646\":\"v-32056898@0\",\"647\":\"v-32056898@1\",\"648\":\"v-714948e4\",\"649\":\"v-714948e4#_1-进程和线程的区别\",\"650\":\"v-714948e4#_2-并发与并行的区别\",\"651\":\"v-714948e4#_3-java线程的生命周期和状态\",\"652\":\"v-714948e4#_4-死锁\",\"653\":\"v-714948e4#_5-sleep-和wait-对比\",\"654\":\"v-714948e4#_6-为什么wait-方法不定义在thread中\",\"655\":\"v-714948e4#_7-为什么sleep-方法定义在thread中\",\"656\":\"v-714948e4#_8-可以直接调用thread类中的run方法吗\",\"657\":\"v-714948e4#_9-jmm内存模型\",\"658\":\"v-714948e4#_10-volatile\",\"659\":\"v-714948e4#_10-1-内存屏障\",\"660\":\"v-714948e4#_11-java锁\",\"661\":\"v-714948e4#_12-synchronized\",\"662\":\"v-714948e4#_13-synchronized-和-reentrantlock-的区别\",\"663\":\"v-714948e4#_14-threadlocal\",\"664\":\"v-714948e4#_15-线程池\",\"665\":\"v-714948e4#_16-aqs\",\"666\":\"v-714948e4#_17-semaphore\",\"667\":\"v-714948e4#_18-countdownlatch\",\"668\":\"v-714948e4#_19-cyclicbarrier\",\"669\":\"v-714948e4#_20-锁\",\"670\":\"v-714948e4#_21-completablefuture\",\"671\":\"v-714948e4#_22-locksupport-与线程中断\",\"672\":\"v-714948e4#_23-synchronized-与锁升级\",\"673\":\"v-714948e4@0\",\"674\":\"v-714948e4@1\",\"675\":\"v-91800b4a\",\"676\":\"v-91800b4a#jvm知识梳理\",\"677\":\"v-91800b4a#_1-整体图\",\"678\":\"v-91800b4a#_2-解释说明\",\"679\":\"v-91800b4a#_2-1-类加载器\",\"680\":\"v-91800b4a#_2-2-程序计数器-program-counter-register\",\"681\":\"v-91800b4a#_2-3-方法区-method-area\",\"682\":\"v-91800b4a#_2-4-栈-stack\",\"683\":\"v-91800b4a#_2-5-堆-heap\",\"684\":\"v-91800b4a#_2-6-什么情况下对象会进入老年代\",\"685\":\"v-91800b4a#_3-垃圾判别阶段算法\",\"686\":\"v-91800b4a#_3-1-引用计数法\",\"687\":\"v-91800b4a#_3-2-可达性分析算法\",\"688\":\"v-91800b4a#_4-垃圾清除阶段算法\",\"689\":\"v-91800b4a#_4-1-标记清除-mark-sweep\",\"690\":\"v-91800b4a#_4-2-复制算法\",\"691\":\"v-91800b4a#_4-3-标记压缩\",\"692\":\"v-91800b4a#_4-4-分代收集算法\",\"693\":\"v-91800b4a#_4-5-增量收集算法\",\"694\":\"v-91800b4a#_4-6-分区算法\",\"695\":\"v-91800b4a#_5-垃圾回收器分类\",\"696\":\"v-91800b4a#_5-1-串行垃圾回收器\",\"697\":\"v-91800b4a#_5-2-并行垃圾回收器\",\"698\":\"v-91800b4a#_5-3-并发垃圾收集器\",\"699\":\"v-91800b4a#_5-4-收集器和垃圾分代之间的关系\",\"700\":\"v-91800b4a#_5-5-如何查看默认垃圾收集器\",\"701\":\"v-91800b4a#_6-垃圾收集器落地实现\",\"702\":\"v-91800b4a#_6-1-serial-收集器\",\"703\":\"v-91800b4a#_6-2-parnew-收集器\",\"704\":\"v-91800b4a#_6-3-parallel-scavenge-收集器\",\"705\":\"v-91800b4a#_6-4-serial-old-收集器\",\"706\":\"v-91800b4a#_6-5-parallel-old-收集器\",\"707\":\"v-91800b4a#_6-6-cms-收集器\",\"708\":\"v-91800b4a#_6-7-g1-收集器\",\"709\":\"v-91800b4a#_6-8-zgc-收集器\",\"710\":\"v-91800b4a#_7-stw\",\"711\":\"v-91800b4a#_8-类加载过程\",\"712\":\"v-91800b4a#_8-1-类的生命周期\",\"713\":\"v-91800b4a#_8-2-类加载过程\",\"714\":\"v-91800b4a#_8-3-类加载器\",\"715\":\"v-91800b4a#_8-4-双亲委派机制\",\"716\":\"v-91800b4a#_8-5-tomcat-为啥要破坏双亲委派机制\",\"717\":\"v-91800b4a#-1\",\"718\":\"v-91800b4a#_9-jvm常见参数总结\",\"719\":\"v-91800b4a#_9-1-打印设置的xx选项及值\",\"720\":\"v-91800b4a#_9-2-栈\",\"721\":\"v-91800b4a#_9-3-堆\",\"722\":\"v-91800b4a#_9-4-方法区\",\"723\":\"v-91800b4a#_9-5-垃圾回收器相关\",\"724\":\"v-91800b4a#_9-6-gc相关的内容\",\"725\":\"v-91800b4a#_10-jdk监控和故障工具总结\",\"726\":\"v-91800b4a#_10-1-jps\",\"727\":\"v-91800b4a#_10-2-jstat\",\"728\":\"v-91800b4a#_10-3-jinfo\",\"729\":\"v-91800b4a#_10-4-jmap\",\"730\":\"v-91800b4a#_10-5-jhat\",\"731\":\"v-91800b4a#_10-6-jstack\",\"732\":\"v-91800b4a#_10-7-jconsole\",\"733\":\"v-91800b4a#_10-8-visual-vm\",\"734\":\"v-91800b4a#_11-性能调优\",\"735\":\"v-91800b4a#_11-1-排查问题\",\"736\":\"v-91800b4a#_11-2-解决问题\",\"737\":\"v-91800b4a#_11-3-案例分析\",\"738\":\"v-91800b4a#_11-4-性能调优案例\",\"739\":\"v-91800b4a@0\",\"740\":\"v-91800b4a@1\",\"741\":\"v-69584b8c\",\"742\":\"v-69584b8c#一-基础知识\",\"743\":\"v-69584b8c#_1-1-e-r图\",\"744\":\"v-69584b8c#_1-2-数据库三大范式\",\"745\":\"v-69584b8c#_1-3-drop、delete、truncate的区别\",\"746\":\"v-69584b8c#_1-4-having-和-where的区别\",\"747\":\"v-69584b8c#_1-5-on-和-where的区别\",\"748\":\"v-69584b8c#_1-6-left-right-join\",\"749\":\"v-69584b8c#二、mysql\",\"750\":\"v-69584b8c#_2-1-常见脚本创建\",\"751\":\"v-69584b8c#_2-1-1-创建表\",\"752\":\"v-69584b8c#_2-1-2-更新表\",\"753\":\"v-69584b8c#_2-1-3-修改表字段-可以重复执行-线上环境推荐\",\"754\":\"v-69584b8c#_2-1-4-添加列\",\"755\":\"v-69584b8c#_2-1-5-修改列\",\"756\":\"v-69584b8c#_2-1-5-删除列\",\"757\":\"v-69584b8c#_2-1-6-创建索引\",\"758\":\"v-69584b8c#_2-1-7-添加索引\",\"759\":\"v-69584b8c#_2-1-8-创建唯一索引\",\"760\":\"v-69584b8c#_2-1-9-删除索引\",\"761\":\"v-69584b8c#_2-2-mysql字符集\",\"762\":\"v-69584b8c#_2-2-1-字符集\",\"763\":\"v-69584b8c#_2-3-mysql基础\",\"764\":\"v-69584b8c#_1-null-和-的区别是什么\",\"765\":\"v-69584b8c#_2-myisam-和innodb有什么区别\",\"766\":\"v-69584b8c#_2-4-mysql事务-重要\",\"767\":\"v-69584b8c#_1-事务的特性\",\"768\":\"v-69584b8c#_2-并发事务带来的问题\",\"769\":\"v-69584b8c#_1-脏读\",\"770\":\"v-69584b8c#_2-丢失修改\",\"771\":\"v-69584b8c#_3-不可重复读\",\"772\":\"v-69584b8c#_4-幻读\",\"773\":\"v-69584b8c#_5-不可重复读和幻读的区别\",\"774\":\"v-69584b8c#_3-如何解决并发事务带来的问题\",\"775\":\"v-69584b8c#_1-加锁\",\"776\":\"v-69584b8c#_2-mvcc\",\"777\":\"v-69584b8c#_4-sql标准定义了哪些事务隔离级别\",\"778\":\"v-69584b8c#_1-读未提交\",\"779\":\"v-69584b8c#_2-读已提交\",\"780\":\"v-69584b8c#_3-可重复读-rr\",\"781\":\"v-69584b8c#_4-可串行化\",\"782\":\"v-69584b8c#_5-mysql默认隔离级别\",\"783\":\"v-69584b8c#_2-5-mysql锁\",\"784\":\"v-69584b8c#_1-表级锁\",\"785\":\"v-69584b8c#_2-行级锁\",\"786\":\"v-69584b8c#_3-共享锁\",\"787\":\"v-69584b8c#_4-排他锁\",\"788\":\"v-69584b8c#_5-当前读和快照读的区别\",\"789\":\"v-69584b8c#_6-哪些操作会加表级锁-哪些操作会加行级锁\",\"790\":\"v-69584b8c#_2-6-mysql索引\",\"791\":\"v-69584b8c#_1-索引介绍\",\"792\":\"v-69584b8c#_2-索引的优缺点\",\"793\":\"v-69584b8c#_3-索引类型总结\",\"794\":\"v-69584b8c#_4-最左前缀匹配原则\",\"795\":\"v-69584b8c#_5-为啥不对表中所有的列创建索引\",\"796\":\"v-69584b8c#_2-7-explain\",\"797\":\"v-69584b8c#_2-8-mvcc\",\"798\":\"v-69584b8c#_2-9-什么是回表\",\"799\":\"v-69584b8c#_2-10-mysql三大日志\",\"800\":\"v-69584b8c#_2-11-mysql主从复制原理\",\"801\":\"v-69584b8c#基本原理\",\"802\":\"v-69584b8c#_2-12-mysql是如何实现事物的\",\"803\":\"v-69584b8c#_2-13-一条sql的执行过程\",\"804\":\"v-69584b8c#_2-14-sql调优优化\",\"805\":\"v-69584b8c#三、oracle\",\"806\":\"v-69584b8c#_3-1-常见脚本创建\",\"807\":\"v-69584b8c#_3-1-1-创建表\",\"808\":\"v-69584b8c#_1-2-更新表\",\"809\":\"v-69584b8c@0\",\"810\":\"v-69584b8c@1\",\"811\":\"v-6eb1cc83\",\"812\":\"v-49f8d501\",\"813\":\"v-49f8d501#redis知识梳理\",\"814\":\"v-49f8d501#_1-redis-为什么这么快\",\"815\":\"v-49f8d501#_2-redis的应用\",\"816\":\"v-49f8d501#_3-redis的数据类型\",\"817\":\"v-49f8d501#_1-string-字符串\",\"818\":\"v-49f8d501#_2-list-列表\",\"819\":\"v-49f8d501#_3-set-集合\",\"820\":\"v-49f8d501#_4-hash-散列\",\"821\":\"v-49f8d501#_5-zset-有序集合\",\"822\":\"v-49f8d501#_6-hyperloglog-基数统计\",\"823\":\"v-49f8d501#_7-bitmap-位图\",\"824\":\"v-49f8d501#_8-geospatial-地理位置\",\"825\":\"v-49f8d501#_4-redis-如何判断数据是否过期\",\"826\":\"v-49f8d501#_1-立刻删除\",\"827\":\"v-49f8d501#_2-惰性删除\",\"828\":\"v-49f8d501#_3-定期删除\",\"829\":\"v-49f8d501#_4-总结\",\"830\":\"v-49f8d501#_5-redis-内存淘汰机制了解么\",\"831\":\"v-49f8d501#_1-redis默认内存多少-在哪查看-如何设置修改\",\"832\":\"v-49f8d501#_2-redis-缓存淘汰策略\",\"833\":\"v-49f8d501#_6-布隆过滤器\",\"834\":\"v-49f8d501#_7-缓存雪崩-缓存击穿-缓存穿透\",\"835\":\"v-49f8d501#_1-缓存雪崩\",\"836\":\"v-49f8d501#_2-缓存穿透\",\"837\":\"v-49f8d501#_3-缓存击穿\",\"838\":\"v-49f8d501#_8-redis分布锁\",\"839\":\"v-49f8d501#_1-一个靠谱的分布锁锁需要具备的条件和刚需\",\"840\":\"v-49f8d501#_2-为啥要上分布锁\",\"841\":\"v-49f8d501#_3-redisson使用场景\",\"842\":\"v-49f8d501#_4-redisson的看门狗缓存续命了解么\",\"843\":\"v-49f8d501#_9-数据双写一致性问题\",\"844\":\"v-49f8d501#_1-缓存双写一致性-谈谈你的理解\",\"845\":\"v-49f8d501#_2-缓存操作分类\",\"846\":\"v-49f8d501#_3-缓存一致性几种更新策略\",\"847\":\"v-49f8d501#_1-先更新数据库-在更新缓存\",\"848\":\"v-49f8d501#_2-先删除缓存-再更新数据库\",\"849\":\"v-49f8d501#_3-先更新数据库-再删除缓存-推荐\",\"850\":\"v-49f8d501#_10-redis经典五种数据类型底层实现\",\"851\":\"v-49f8d501#_1-查看类型和编码命令\",\"852\":\"v-49f8d501#_2-string底层结构\",\"853\":\"v-49f8d501#_3-hash底层结构\",\"854\":\"v-49f8d501#_4-list底层结构\",\"855\":\"v-49f8d501#_5-set底层结构\",\"856\":\"v-49f8d501#_6-zset底层结构\",\"857\":\"v-49f8d501#_7-跳表\",\"858\":\"v-49f8d501#_11-redis-持久化\",\"859\":\"v-49f8d501#_1-持久化方式\",\"860\":\"v-49f8d501#_2-rdb创建快照时会阻塞主线程吗\",\"861\":\"v-49f8d501#_3-aof持久化\",\"862\":\"v-49f8d501#_4-如何选择rdb-和aof\",\"863\":\"v-49f8d501#_12-redis的i-o多路复用模型\",\"864\":\"v-49f8d501#_1-是什么\",\"865\":\"v-49f8d501#_2-概念\",\"866\":\"v-49f8d501#_3-i-o多路复用\",\"867\":\"v-49f8d501#_4-select\",\"868\":\"v-49f8d501#_5-poll\",\"869\":\"v-49f8d501#_6-epoll\",\"870\":\"v-49f8d501#_13-redis集群\",\"871\":\"v-49f8d501#_1-redis-哨兵\",\"872\":\"v-49f8d501#_2-redis集群\",\"873\":\"v-49f8d501#_14-redis的大key\",\"874\":\"v-49f8d501#_1-排查大key\",\"875\":\"v-49f8d501#_2-处理方法\",\"876\":\"v-49f8d501#_15-redis事物\",\"877\":\"v-49f8d501#_1-redis事物支持原子性吗\",\"878\":\"v-49f8d501#_2-redis事物有什么缺陷\",\"879\":\"v-49f8d501#_3-解决方案\",\"880\":\"v-49f8d501@0\",\"881\":\"v-49f8d501@1\",\"882\":\"v-7a7ad289\",\"883\":\"v-7a7ad289#_1-sping-ioc\",\"884\":\"v-7a7ad289#_1-谈谈你对spring-ioc的理解\",\"885\":\"v-7a7ad289#_2-spring-bean\",\"886\":\"v-7a7ad289#_3-将一个类声明bean的注解有哪些\",\"887\":\"v-7a7ad289#_4-注入bean的注解有哪些\",\"888\":\"v-7a7ad289#_5-autowired和-resource的区别是什么\",\"889\":\"v-7a7ad289#_5-bean的作用域有哪些\",\"890\":\"v-7a7ad289#_6-bean的生命周期了解么\",\"891\":\"v-7a7ad289#_2-spring-aop\",\"892\":\"v-7a7ad289#_1-谈谈你对aop的理解\",\"893\":\"v-7a7ad289#_3-spring-mvc\",\"894\":\"v-7a7ad289#_1-spring-mvc的核心组件\",\"895\":\"v-7a7ad289#_2-spring-mvc的原理\",\"896\":\"v-7a7ad289#_3-统一异常处理怎么做\",\"897\":\"v-7a7ad289#_4-spring-事务\",\"898\":\"v-7a7ad289#_1-spring事务的传播行为\",\"899\":\"v-7a7ad289#_2-spring的事务隔离级别\",\"900\":\"v-7a7ad289#_5-spring-框架中用到的设计模式\",\"901\":\"v-7a7ad289#_6-spring-springboot常用注解\",\"902\":\"v-7a7ad289#_1-springbootapplication\",\"903\":\"v-7a7ad289#_2-spring-bean相关\",\"904\":\"v-7a7ad289#_2-1-autowired\",\"905\":\"v-7a7ad289#_2-2-component-repository-service-controller\",\"906\":\"v-7a7ad289#_2-3-restcontroller\",\"907\":\"v-7a7ad289#_2-4-scope\",\"908\":\"v-7a7ad289#_2-5-configuration\",\"909\":\"v-7a7ad289#_3-http相关\",\"910\":\"v-7a7ad289#_3-1-getmapping\",\"911\":\"v-7a7ad289#_3-2-postmapping\",\"912\":\"v-7a7ad289#_3-3-putmapping\",\"913\":\"v-7a7ad289#_3-4-deletemapping\",\"914\":\"v-7a7ad289#_4-前后端传值\",\"915\":\"v-7a7ad289#_4-1-pathvariable-和-requestparam\",\"916\":\"v-7a7ad289#_4-2-requestbody\",\"917\":\"v-7a7ad289#_5-读取配置文件\",\"918\":\"v-7a7ad289#_5-1-value-常用\",\"919\":\"v-7a7ad289#_5-2-configurationproperties-常用\",\"920\":\"v-7a7ad289#_5-3-propertysource\",\"921\":\"v-7a7ad289#_7-springboot-自动装配原理\",\"922\":\"v-7a7ad289#_1-什么是自动装配\",\"923\":\"v-7a7ad289#_2-springboot-是如何实现自动装配的\",\"924\":\"v-7a7ad289#_8-spring-循环依赖\",\"925\":\"v-7a7ad289#_9-spring-三级缓存\",\"926\":\"v-7a7ad289#_10-springboot的启动流程\",\"927\":\"v-7a7ad289#_11-spring-beanfactory和factorybean的区别\",\"928\":\"v-7a7ad289@0\",\"929\":\"v-7a7ad289@1\",\"930\":\"v-83360fd8\",\"931\":\"v-83360fd8#_1-springcloud-对应的组件\",\"932\":\"v-83360fd8#_2-cap-base理论\",\"933\":\"v-83360fd8#_1-cap\",\"934\":\"v-83360fd8#_2-base理论\",\"935\":\"v-83360fd8#_3-springcloud-gateway\",\"936\":\"v-83360fd8#_1-spring-cloud-gateway-支持限流吗\",\"937\":\"v-83360fd8#_4-分布式id\",\"938\":\"v-83360fd8#_1-雪花算法\",\"939\":\"v-83360fd8#_2-美团叶子算法\",\"940\":\"v-83360fd8#_5-分布式锁\",\"941\":\"v-83360fd8#_6-分布式事务\",\"942\":\"v-83360fd8#_1-2pc-3pc-tcc了解么\",\"943\":\"v-83360fd8#_7-负载均衡\",\"944\":\"v-83360fd8#_1-负载均衡算法\",\"945\":\"v-83360fd8#_8-服务限流\",\"946\":\"v-83360fd8#_1-固定窗口计数器算法\",\"947\":\"v-83360fd8#_2-滑动窗口计数器算法\",\"948\":\"v-83360fd8#_3-漏桶算法\",\"949\":\"v-83360fd8#_4-令牌桶算法\",\"950\":\"v-83360fd8#_9-openfeigin\",\"951\":\"v-83360fd8#_1-使用\",\"952\":\"v-83360fd8#_2-超时时间\",\"953\":\"v-83360fd8#_3-feign调用的底层原理\",\"954\":\"v-83360fd8#_4-feign-优化\",\"955\":\"v-83360fd8#_10-hystrix\",\"956\":\"v-83360fd8#_1-服务降级\",\"957\":\"v-83360fd8#_2-服务熔断\",\"958\":\"v-83360fd8#_3-服务限流\",\"959\":\"v-83360fd8#_4-注解\",\"960\":\"v-83360fd8#_1-hystrixcommand\",\"961\":\"v-83360fd8#_2-defaultproperties-defaultfallback\",\"962\":\"v-83360fd8#_11-sentinel\",\"963\":\"v-83360fd8#_1-sentinelresource\",\"964\":\"v-83360fd8#_2-限流规则\",\"965\":\"v-83360fd8#_12-seata\",\"966\":\"v-83360fd8#_1-使用-1\",\"967\":\"v-83360fd8#_2-三大组件\",\"968\":\"v-83360fd8#_3-底层原理\",\"969\":\"v-83360fd8#_13-nacos\",\"970\":\"v-83360fd8#_1-nacos的心跳机制\",\"971\":\"v-83360fd8#_2-nacos服务注册发现的原理\",\"972\":\"v-83360fd8#_3-nacos动态刷新底层实现\",\"973\":\"v-83360fd8#_14-xxl-job\",\"974\":\"v-83360fd8#_1-xxl-job-和elastic-job的区别\",\"975\":\"v-83360fd8#_2-xxl-job是如何保证分布式下只有一个任务执行的-原理是什么\",\"976\":\"v-83360fd8#_15-skywalking-底层是如何实现分布式链路追踪的\",\"977\":\"v-83360fd8#_1-skywalking-底层是如何实现分布式链路追踪的\",\"978\":\"v-83360fd8@0\",\"979\":\"v-83360fd8@1\",\"980\":\"v-f5a79d2c\",\"981\":\"v-f5a79d2c#_1-kafka消息堆积了如何处理\",\"982\":\"v-f5a79d2c#_2-kafka-如何保证消息不丢失\",\"983\":\"v-f5a79d2c#_3-kafka-如何保证消息顺序消费\",\"984\":\"v-f5a79d2c#_4-kafka-如何保证消息不重复消费\",\"985\":\"v-f5a79d2c#_5-kafka重试机制\",\"986\":\"v-f5a79d2c@0\",\"987\":\"v-f5a79d2c@1\"},\"fieldIds\":{\"h\":0,\"t\":1,\"c\":2},\"fieldLength\":{\"0\":[1,6],\"1\":[1],\"2\":[1,6],\"3\":[1,3],\"4\":[1],\"5\":[2],\"6\":[2,23],\"7\":[null,null,1],\"8\":[null,null,1],\"9\":[1,3],\"10\":[1],\"11\":[2],\"12\":[3,12],\"13\":[2,7],\"14\":[2,36],\"15\":[2,4],\"16\":[3],\"17\":[3,17],\"18\":[2,11],\"19\":[2,32],\"20\":[3,6],\"21\":[2],\"22\":[2,4],\"23\":[2,9],\"24\":[2],\"25\":[2,1],\"26\":[2,1],\"27\":[2,3],\"28\":[2,7],\"29\":[2,8],\"30\":[2,3],\"31\":[2],\"32\":[3],\"33\":[2,35],\"34\":[3,81],\"35\":[2,17],\"36\":[4],\"37\":[3,22],\"38\":[2],\"39\":[2,9],\"40\":[2,21],\"41\":[2,3],\"42\":[2,2],\"43\":[2,20],\"44\":[2,9],\"45\":[2,18],\"46\":[4,10],\"47\":[2],\"48\":[2,12],\"49\":[2,13],\"50\":[2,9],\"51\":[2,49],\"52\":[2],\"53\":[2,10],\"54\":[2,8],\"55\":[2,6],\"56\":[2,7],\"57\":[2,8],\"58\":[2,2],\"59\":[2,2],\"60\":[2,8],\"61\":[2,6],\"62\":[2,4],\"63\":[2],\"64\":[3,9],\"65\":[3,6],\"66\":[2,10],\"67\":[2,3],\"68\":[2,9],\"69\":[2,7],\"70\":[3,13],\"71\":[2,4],\"72\":[2,2],\"73\":[2,3],\"74\":[2,7],\"75\":[2,4],\"76\":[2,88],\"77\":[2],\"78\":[2,33],\"79\":[3,31],\"80\":[2],\"81\":[2,93],\"82\":[2,12],\"83\":[2,21],\"84\":[2,59],\"85\":[2,35],\"86\":[2],\"87\":[2,21],\"88\":[2,17],\"89\":[2],\"90\":[2,6],\"91\":[5,9],\"92\":[2,53],\"93\":[2,91],\"94\":[2],\"95\":[2,22],\"96\":[2,34],\"97\":[2,34],\"98\":[4,5],\"99\":[2,5],\"100\":[3,3],\"101\":[2,3],\"102\":[2],\"103\":[3,2],\"104\":[4,2],\"105\":[2,2],\"106\":[4,2],\"107\":[4,2],\"108\":[2,2],\"109\":[2,6],\"110\":[2],\"111\":[3,3],\"112\":[3,15],\"113\":[2],\"114\":[3,22],\"115\":[2],\"116\":[2],\"117\":[2],\"118\":[2],\"119\":[2],\"120\":[2,42],\"121\":[2,47],\"122\":[3,93],\"123\":[3,40],\"124\":[2,34],\"125\":[2,43],\"126\":[2,48],\"127\":[2,114],\"128\":[2,11],\"129\":[2,13],\"130\":[2],\"131\":[3,9],\"132\":[2],\"133\":[2,21],\"134\":[2,8],\"135\":[2,9],\"136\":[2,9],\"137\":[2,2],\"138\":[2],\"139\":[2],\"140\":[2,5],\"141\":[2],\"142\":[2,18],\"143\":[2,16],\"144\":[3,11],\"145\":[2,14],\"146\":[2,7],\"147\":[2,16],\"148\":[3,11],\"149\":[3,28],\"150\":[3,20],\"151\":[3,13],\"152\":[3,10],\"153\":[3,13],\"154\":[3,12],\"155\":[2],\"156\":[5,31],\"157\":[3,11],\"158\":[2,32],\"159\":[2,37],\"160\":[4,28],\"161\":[2,18],\"162\":[3,21],\"163\":[2,12],\"164\":[2],\"165\":[2,17],\"166\":[2,18],\"167\":[3],\"168\":[2,22],\"169\":[2,23],\"170\":[2,19],\"171\":[2,39],\"172\":[2,14],\"173\":[2,27],\"174\":[2,18],\"175\":[2,9],\"176\":[3],\"177\":[3,5],\"178\":[2,5],\"179\":[3,11],\"180\":[2],\"181\":[2,7],\"182\":[2,16],\"183\":[2],\"184\":[2,16],\"185\":[2,11],\"186\":[2],\"187\":[2,17],\"188\":[2,9],\"189\":[2,21],\"190\":[2,12],\"191\":[2,81],\"192\":[2],\"193\":[2,2],\"194\":[2,2],\"195\":[2,2],\"196\":[2,2],\"197\":[2,2],\"198\":[2,2],\"199\":[2,11],\"200\":[2,2],\"201\":[2,3],\"202\":[2,2],\"203\":[2,1],\"204\":[2],\"205\":[2,11],\"206\":[2,8],\"207\":[2,10],\"208\":[2,15],\"209\":[2,11],\"210\":[3,2],\"211\":[2,6],\"212\":[2,9],\"213\":[2,5],\"214\":[1],\"215\":[2],\"216\":[2,6],\"217\":[3,8],\"218\":[3,7],\"219\":[3,6],\"220\":[3,4],\"221\":[3,7],\"222\":[3,9],\"223\":[3,6],\"224\":[2,34],\"225\":[2,15],\"226\":[2],\"227\":[3,22],\"228\":[3,6],\"229\":[3,13],\"230\":[2,12],\"231\":[3,34],\"232\":[3,21],\"233\":[3,44],\"234\":[3,31],\"235\":[3,23],\"236\":[4,34],\"237\":[3,14],\"238\":[3,13],\"239\":[3,8],\"240\":[3,10],\"241\":[3,7],\"242\":[3,21],\"243\":[3,8],\"244\":[3,16],\"245\":[1],\"246\":[1],\"247\":[2,9],\"248\":[2],\"249\":[3,5],\"250\":[2,2],\"251\":[3,7],\"252\":[2],\"253\":[3,6],\"254\":[3,63],\"255\":[2,24],\"256\":[2,47],\"257\":[2,28],\"258\":[2],\"259\":[3,23],\"260\":[3,12],\"261\":[2],\"262\":[3,18],\"263\":[2],\"264\":[2,9],\"265\":[2,11],\"266\":[2,3],\"267\":[2,2],\"268\":[null,null,1],\"269\":[null,null,1],\"270\":[1],\"271\":[1],\"272\":[1],\"273\":[1,68],\"274\":[1,37],\"275\":[1,50],\"276\":[1,45],\"277\":[1,30],\"278\":[1,54],\"279\":[1,125],\"280\":[1,3],\"281\":[1,6],\"282\":[1,15],\"283\":[1,5],\"284\":[1,7],\"285\":[1,1],\"286\":[1],\"287\":[1,3],\"288\":[1,67],\"289\":[1,12],\"290\":[1,12],\"291\":[1,5],\"292\":[1,10],\"293\":[1,5],\"294\":[1,4],\"295\":[1,6],\"296\":[null,null,1],\"297\":[null,null,1],\"298\":[1],\"299\":[1,45],\"300\":[1,2],\"301\":[1],\"302\":[1],\"303\":[1],\"304\":[1],\"305\":[1],\"306\":[1],\"307\":[1,1],\"308\":[1,16],\"309\":[1,3],\"310\":[1,4],\"311\":[1,2],\"312\":[1],\"313\":[1],\"314\":[2],\"315\":[2],\"316\":[3],\"317\":[3],\"318\":[3,7],\"319\":[3,6],\"320\":[3,6],\"321\":[2],\"322\":[3],\"323\":[2],\"324\":[3],\"325\":[2],\"326\":[3,30],\"327\":[2],\"328\":[3,17],\"329\":[3,18],\"330\":[3,13],\"331\":[2,9],\"332\":[3,15],\"333\":[3,4],\"334\":[2],\"335\":[3],\"336\":[3],\"337\":[3],\"338\":[null,null,1],\"339\":[null,null,1],\"340\":[1,3],\"341\":[1],\"342\":[1,1],\"343\":[null,null,1],\"344\":[null,null,1],\"345\":[1],\"346\":[1,5],\"347\":[1,12],\"348\":[2,13],\"349\":[2,21],\"350\":[1],\"351\":[1,26],\"352\":[1,10],\"353\":[1,12],\"354\":[1],\"355\":[4,13],\"356\":[4,9],\"357\":[4,12],\"358\":[4,78],\"359\":[5,6],\"360\":[1],\"361\":[4,15],\"362\":[5,17],\"363\":[4,17],\"364\":[4,13],\"365\":[4,17],\"366\":[1,27],\"367\":[1,2],\"368\":[3,7],\"369\":[3,19],\"370\":[3,15],\"371\":[3,23],\"372\":[3,29],\"373\":[1,114],\"374\":[3,46],\"375\":[1],\"376\":[1,19],\"377\":[1,47],\"378\":[1,22],\"379\":[3,27],\"380\":[1,28],\"381\":[1],\"382\":[1],\"383\":[1,23],\"384\":[2,16],\"385\":[1,34],\"386\":[2,28],\"387\":[1,127],\"388\":[1,10],\"389\":[1],\"390\":[3,27],\"391\":[3,11],\"392\":[1,14],\"393\":[2,13],\"394\":[1,2],\"395\":[1,9],\"396\":[1,12],\"397\":[1,2],\"398\":[2,18],\"399\":[2,10],\"400\":[2,24],\"401\":[2,19],\"402\":[2,15],\"403\":[1,28],\"404\":[1,17],\"405\":[1],\"406\":[2,84],\"407\":[2],\"408\":[2,15],\"409\":[2,22],\"410\":[1,82],\"411\":[1],\"412\":[1],\"413\":[2,11],\"414\":[2,29],\"415\":[1],\"416\":[1,53],\"417\":[1,12],\"418\":[1,13],\"419\":[1,33],\"420\":[1,10],\"421\":[1],\"422\":[1,38],\"423\":[1,60],\"424\":[1,17],\"425\":[1,120],\"426\":[1,18],\"427\":[2,18],\"428\":[1],\"429\":[1,17],\"430\":[1,39],\"431\":[1,124],\"432\":[1,12],\"433\":[1,51],\"434\":[1],\"435\":[1,26],\"436\":[1,66],\"437\":[2],\"438\":[2],\"439\":[1,2],\"440\":[1,16],\"441\":[2,69],\"442\":[2,76],\"443\":[2,12],\"444\":[2,38],\"445\":[2,29],\"446\":[2,33],\"447\":[3,11],\"448\":[4,18],\"449\":[4,13],\"450\":[4,15],\"451\":[4,12],\"452\":[4,35],\"453\":[1,88],\"454\":[1,84],\"455\":[3,47],\"456\":[2,60],\"457\":[1,89],\"458\":[2,69],\"459\":[1,14],\"460\":[2,43],\"461\":[3,56],\"462\":[4,30],\"463\":[1,98],\"464\":[1,24],\"465\":[1,61],\"466\":[1,59],\"467\":[1,31],\"468\":[3,48],\"469\":[2,133],\"470\":[1,58],\"471\":[1,9],\"472\":[4,58],\"473\":[3,30],\"474\":[null,null,1],\"475\":[null,null,1],\"476\":[1,2],\"477\":[1],\"478\":[2],\"479\":[2],\"480\":[2,5],\"481\":[3,3],\"482\":[3,11],\"483\":[3],\"484\":[3,20],\"485\":[4,4],\"486\":[3],\"487\":[2,3],\"488\":[3],\"489\":[3,23],\"490\":[4,29],\"491\":[5,34],\"492\":[2],\"493\":[3,23],\"494\":[4,100],\"495\":[3],\"496\":[4,15],\"497\":[4,68],\"498\":[2],\"499\":[2],\"500\":[2],\"501\":[2],\"502\":[3,6],\"503\":[3,21],\"504\":[3,106],\"505\":[3,100],\"506\":[3,89],\"507\":[3,76],\"508\":[3,1],\"509\":[3,23],\"510\":[2],\"511\":[2],\"512\":[3,29],\"513\":[3,152],\"514\":[3,85],\"515\":[3,16],\"516\":[3,158],\"517\":[3,108],\"518\":[5,80],\"519\":[5,88],\"520\":[3,114],\"521\":[4,112],\"522\":[3,168],\"523\":[3,87],\"524\":[2],\"525\":[3],\"526\":[3,18],\"527\":[6,28],\"528\":[6,51],\"529\":[3],\"530\":[4,23],\"531\":[3,27],\"532\":[4,26],\"533\":[2],\"534\":[2],\"535\":[2],\"536\":[2],\"537\":[2],\"538\":[2],\"539\":[3,142],\"540\":[null,null,1],\"541\":[null,null,1],\"542\":[1],\"543\":[2],\"544\":[4,26],\"545\":[5,5],\"546\":[2,18],\"547\":[6,7],\"548\":[2,2],\"549\":[3,14],\"550\":[2,47],\"551\":[3,17],\"552\":[4,105],\"553\":[null,null,1],\"554\":[null,null,1],\"555\":[1],\"556\":[2],\"557\":[2,92],\"558\":[2,42],\"559\":[4,14],\"560\":[2],\"561\":[2,95],\"562\":[2,80],\"563\":[3,43],\"564\":[3,73],\"565\":[4,81],\"566\":[4,116],\"567\":[5,93],\"568\":[null,null,1],\"569\":[null,null,2],\"570\":[1,2],\"571\":[2,15],\"572\":[3,6],\"573\":[4,25],\"574\":[2],\"575\":[3,23],\"576\":[2],\"577\":[3],\"578\":[4,8],\"579\":[4,53],\"580\":[2,18],\"581\":[3,11],\"582\":[5,38],\"583\":[2],\"584\":[3,6],\"585\":[3,4],\"586\":[2,21],\"587\":[3,37],\"588\":[2,81],\"589\":[1,9],\"590\":[2,12],\"591\":[null,null,1],\"592\":[null,null,1],\"593\":[1,2],\"594\":[5,12],\"595\":[3,13],\"596\":[2,14],\"597\":[3,23],\"598\":[3,12],\"599\":[3,50],\"600\":[2,14],\"601\":[2,6],\"602\":[3,4],\"603\":[4,20],\"604\":[2,27],\"605\":[2,8],\"606\":[2,33],\"607\":[5,10],\"608\":[4,5],\"609\":[2,16],\"610\":[8,41],\"611\":[5,70],\"612\":[null,null,1],\"613\":[null,null,1],\"614\":[1,2],\"615\":[1],\"616\":[2,6],\"617\":[6,13],\"618\":[2],\"619\":[1,6],\"620\":[1,9],\"621\":[1,9],\"622\":[2,30],\"623\":[2,40],\"624\":[1],\"625\":[4,27],\"626\":[5,13],\"627\":[1],\"628\":[4,22],\"629\":[2,5],\"630\":[3,11],\"631\":[2,10],\"632\":[2,28],\"633\":[2,37],\"634\":[4,16],\"635\":[1,2],\"636\":[1],\"637\":[2,25],\"638\":[3,18],\"639\":[4,2],\"640\":[3,14],\"641\":[3,4],\"642\":[2,1],\"643\":[4,5],\"644\":[3,72],\"645\":[3,62],\"646\":[null,null,1],\"647\":[null,null,1],\"648\":[1],\"649\":[2,2],\"650\":[2,9],\"651\":[2,20],\"652\":[2,19],\"653\":[4,24],\"654\":[4,7],\"655\":[4,5],\"656\":[3,8],\"657\":[2,38],\"658\":[2,43],\"659\":[3,44],\"660\":[2,28],\"661\":[2,67],\"662\":[5,58],\"663\":[2,153],\"664\":[2,145],\"665\":[2,18],\"666\":[2,55],\"667\":[2,92],\"668\":[2,56],\"669\":[2,88],\"670\":[2,236],\"671\":[3,180],\"672\":[3,66],\"673\":[null,null,1],\"674\":[null,null,1],\"675\":[1],\"676\":[1],\"677\":[2,2],\"678\":[2],\"679\":[3,33],\"680\":[6,24],\"681\":[6,19],\"682\":[5,39],\"683\":[5,58],\"684\":[3,11],\"685\":[2],\"686\":[3,4],\"687\":[3,26],\"688\":[2],\"689\":[6,18],\"690\":[3,22],\"691\":[3,57],\"692\":[2,6],\"693\":[3,36],\"694\":[3,19],\"695\":[2],\"696\":[3,7],\"697\":[3,10],\"698\":[3,9],\"699\":[3,2],\"700\":[2,9],\"701\":[2,4],\"702\":[4,3],\"703\":[4,7],\"704\":[5,11],\"705\":[5],\"706\":[5],\"707\":[3,33],\"708\":[4,76],\"709\":[4,15],\"710\":[2,25],\"711\":[2],\"712\":[3,39],\"713\":[3,6],\"714\":[3,52],\"715\":[3,48],\"716\":[4,28],\"717\":[1],\"718\":[2],\"719\":[3,17],\"720\":[3,12],\"721\":[3,30],\"722\":[3,4],\"723\":[3,12],\"724\":[3,10],\"725\":[2],\"726\":[3,23],\"727\":[3,68],\"728\":[3,36],\"729\":[3,28],\"730\":[3,7],\"731\":[3,20],\"732\":[3,12],\"733\":[4,1],\"734\":[2],\"735\":[3,16],\"736\":[3,10],\"737\":[3,80],\"738\":[3,177],\"739\":[null,null,1],\"740\":[null,null,1],\"741\":[1],\"742\":[2],\"743\":[3,19],\"744\":[3,38],\"745\":[5,12],\"746\":[5,29],\"747\":[5,10],\"748\":[5,8],\"749\":[2,1],\"750\":[3],\"751\":[3,63],\"752\":[3],\"753\":[7,47],\"754\":[4,8],\"755\":[4,8],\"756\":[4,7],\"757\":[4,6],\"758\":[4,7],\"759\":[4,7],\"760\":[4,6],\"761\":[2],\"762\":[3,1],\"763\":[3],\"764\":[5,14],\"765\":[4,7],\"766\":[5],\"767\":[2,13],\"768\":[2],\"769\":[2,1],\"770\":[2,4],\"771\":[2,6],\"772\":[2,5],\"773\":[3,2],\"774\":[2],\"775\":[2,15],\"776\":[2,13],\"777\":[2],\"778\":[2,7],\"779\":[2,5],\"780\":[4,6],\"781\":[2,7],\"782\":[2,10],\"783\":[3],\"784\":[2,1],\"785\":[2,28],\"786\":[2,2],\"787\":[2,3],\"788\":[3,22],\"789\":[3,17],\"790\":[3],\"791\":[2,2],\"792\":[2,13],\"793\":[2,115],\"794\":[2,39],\"795\":[3,4],\"796\":[3,164],\"797\":[3,87],\"798\":[4,32],\"799\":[3,11],\"800\":[3,12],\"801\":[1,45],\"802\":[3,84],\"803\":[4,13],\"804\":[3,36],\"805\":[2],\"806\":[3],\"807\":[3,59],\"808\":[3,35],\"809\":[null,null,1],\"810\":[null,null,1],\"811\":[1,14],\"812\":[1],\"813\":[1],\"814\":[3,8],\"815\":[2,12],\"816\":[2],\"817\":[4,50],\"818\":[4,41],\"819\":[4,72],\"820\":[4,39],\"821\":[4,37],\"822\":[4,142],\"823\":[4,72],\"824\":[4,125],\"825\":[4],\"826\":[2,2],\"827\":[2,1],\"828\":[2,1],\"829\":[2,6],\"830\":[4],\"831\":[5,21],\"832\":[3,22],\"833\":[2,93],\"834\":[2],\"835\":[2,10],\"836\":[2,9],\"837\":[2,19],\"838\":[2],\"839\":[2,15],\"840\":[3,38],\"841\":[2,1],\"842\":[3,59],\"843\":[2],\"844\":[4,4],\"845\":[2,8],\"846\":[2,4],\"847\":[3,4],\"848\":[3,31],\"849\":[5,21],\"850\":[2],\"851\":[2,10],\"852\":[2,36],\"853\":[2,48],\"854\":[2,27],\"855\":[2,11],\"856\":[2,15],\"857\":[2,20],\"858\":[3],\"859\":[2,33],\"860\":[3,9],\"861\":[2,20],\"862\":[4,5],\"863\":[3],\"864\":[3,16],\"865\":[2,30],\"866\":[3,25],\"867\":[2,11],\"868\":[2,25],\"869\":[2,23],\"870\":[2],\"871\":[3,48],\"872\":[2,40],\"873\":[2],\"874\":[2,2],\"875\":[2,5],\"876\":[2],\"877\":[2,7],\"878\":[2,18],\"879\":[3,10],\"880\":[null,null,1],\"881\":[null,null,1],\"882\":[1],\"883\":[3],\"884\":[4,93],\"885\":[3,2],\"886\":[3,5],\"887\":[3,4],\"888\":[4,24],\"889\":[3,39],\"890\":[3,40],\"891\":[3],\"892\":[3,44],\"893\":[3],\"894\":[3,18],\"895\":[4,59],\"896\":[3,21],\"897\":[3],\"898\":[2,21],\"899\":[2,25],\"900\":[3,15],\"901\":[3],\"902\":[2,20],\"903\":[3],\"904\":[3],\"905\":[5,4],\"906\":[3,6],\"907\":[3,12],\"908\":[3,14],\"909\":[2],\"910\":[3,10],\"911\":[3],\"912\":[2],\"913\":[3],\"914\":[2],\"915\":[5,25],\"916\":[3,22],\"917\":[2],\"918\":[5,8],\"919\":[5,60],\"920\":[3,16],\"921\":[4],\"922\":[3,3],\"923\":[3,44],\"924\":[4,26],\"925\":[3,50],\"926\":[2,109],\"927\":[3,9],\"928\":[null,null,1],\"929\":[null,null,1],\"930\":[1],\"931\":[4,31],\"932\":[3],\"933\":[2,33],\"934\":[2,25],\"935\":[3],\"936\":[5,51],\"937\":[2],\"938\":[2,46],\"939\":[2,2],\"940\":[2,1],\"941\":[2],\"942\":[4,67],\"943\":[2],\"944\":[2,6],\"945\":[2],\"946\":[2,4],\"947\":[2,5],\"948\":[2,13],\"949\":[2,37],\"950\":[2],\"951\":[2,22],\"952\":[2,17],\"953\":[2,56],\"954\":[3,4],\"955\":[2],\"956\":[2,20],\"957\":[2,8],\"958\":[2,6],\"959\":[2],\"960\":[2,22],\"961\":[5,13],\"962\":[2],\"963\":[2,34],\"964\":[2,9],\"965\":[2],\"966\":[2,2],\"967\":[2,34],\"968\":[2,86],\"969\":[2],\"970\":[3,100],\"971\":[2,65],\"972\":[2,73],\"973\":[3],\"974\":[5,55],\"975\":[5,45],\"976\":[3],\"977\":[3,78],\"978\":[null,null,1],\"979\":[null,null,1],\"980\":[1],\"981\":[3,23],\"982\":[4,53],\"983\":[4,11],\"984\":[4,27],\"985\":[2,12],\"986\":[null,null,1],\"987\":[null,null,1]},\"averageFieldLength\":[2.4403721604561226,25.324655123433352,0.27453747132551404],\"storedFields\":{\"0\":{\"h\":\"留言板\",\"t\":[\"™\",\"有什么想说的？\",\"有什么想问的？\",\"有什么想吐槽的？\",\"可以在下面留言...\"]},\"1\":{\"h\":\"我\"},\"2\":{\"h\":\"关于我\",\"t\":[\"小菜鸟一枚，几年摸爬滚打，觉得学的知识还是要记录一下，于是决定创建自己的知识博客库！未完待续......\"]},\"3\":{\"h\":\"关于\",\"t\":[\"关于本站\",\"关于我\",\"留言板\"]},\"4\":{\"h\":\"PS\"},\"5\":{\"h\":\"1. ps常用快捷键\"},\"6\":{\"h\":\"2. 快速去除人物雀斑\",\"t\":[\"前后对比\",\"image-20240216152544297\",\"操作步骤 \",\"ctrl +j 复制图层\",\"ctrl +i 反向，将图层模式改为亮光\",\"滤镜--其他--高反差保留--将半径数值改为9左右\",\"再次点开滤镜--模糊--高斯模糊---数值调到1.5左右\",\"按照alt键添加蒙版\",\"选用白色画笔，降低不透明度，涂抹皮肤有雀斑的地方\"]},\"7\":{\"c\":[\"PS\"]},\"8\":{\"c\":[\"PS\"]},\"9\":{\"h\":\"生活\",\"t\":[\"记录生活\",\"相机\",\"人像摄影\"]},\"10\":{\"h\":\"人像摄影\"},\"11\":{\"h\":\"一 、审美体系构建\"},\"12\":{\"h\":\"1 评判照片好坏的标准？\",\"t\":[\"好的标准：标准范式？曝光准备？清晰？磨皮精美？模特好看？\",\"不好的标准：过曝？晃动？虚焦？粗颗粒？\"]},\"13\":{\"h\":\"2 照片好看的标准\",\"t\":[\"以上都不是，正确的应该是 \",\"情感的相通：平静、心灵震撼一击\",\"好看的照片不等于好照片\",\"好的作品是技术+审美的综合呈现\"]},\"14\":{\"h\":\"3 审美的重要性和特点\",\"t\":[\"审美具有主观性\",\"审美不是简单的固定结果，而是多方面因素的共同作用\",\"它包含了一个人的学识、经历、阅历、心态、积累、生活习惯等\",\"一个人的审美是会随着时间、年龄、阅历、心态、积累、生活习惯的变化而变化的\",\"想要学习一种风格，要先了解摄影师传递的情绪或个人观点\",\"一切表现手法都是服务于想传递的情绪及状态\",\"表现：自由、热情、慵懒、安静、孤独...\",\"表现手法：影调、服装、妆容、情绪状态、色彩、道具、场景设定、人物动作...\",\"艺术就是把美好的东西毁灭给人看\",\"情绪内核决定了画面构成元素\",\"避免繁琐的外在，强化人的情感\",\"并非将所有看到的事物都拍下来\",\"而是有意识的进行画面组织\"]},\"15\":{\"h\":\"4. 个人风格的建立\",\"t\":[\"情绪内核+表现形式\",\"审美必须要有挑剔和包容的目光 \",\"挑剔自我，包容他人\"]},\"16\":{\"h\":\"5. 如何培养自己的审美？\"},\"17\":{\"h\":\"1. 培养自己的观察力，放大自己的感受力\",\"t\":[\"对生活、对外界，对人内心变化的观察力，对美的感知力\",\"好的摄影师一定是极度敏感的人\",\"注意力和观察力可以放在 \",\"光、音乐、生命、美好\",\"四季更迭、凋零\",\"孤独、死亡\",\"文化、自由\",\"物哀\"]},\"18\":{\"h\":\"2. 看电影\",\"t\":[\"故事结构\",\"整体基调\",\"色彩\",\"用光、机位、构图\",\"情绪表达、拍摄手法\",\"电影清单\",\"image-20240201232810539\"]},\"19\":{\"h\":\"3. 大量阅片\",\"t\":[\"审美网站推荐 \",\"Filmgrab\",\"豆瓣\",\"CNU视觉联盟\",\"pinterest\",\"Instagram\",\"如何正确的学习一组/z张照片 \",\"一张照片最直接的感受 \",\"情绪传递\",\"一组好照片的配方 \",\"主题/情绪表达/事件/影调/风格/服装\",\"妆造/动作/肢体语言/构图/光线/隐喻/细节\",\"机位/配色/景深/焦段/虚实/景别/人物关系/人物环境关系\"]},\"20\":{\"h\":\"4. 建立审美图库--照片分类\",\"t\":[\"风格分类\",\"构图分类\",\"色彩分类\",\"道具使用\",\"图片管理器 \",\"Billfish\"]},\"21\":{\"h\":\"5. 收集同一风格不同作者的作品\"},\"22\":{\"h\":\"6. 记录自己的灵感和情绪\",\"t\":[\"当下的情绪\",\"自我表达的欲望\",\"阶段性的状态\",\"瞬间的灵感\"]},\"23\":{\"h\":\"7. 一切艺术和生活都可以是灵感来源\",\"t\":[\"生活\",\"广告\",\"文学\",\"杂志\",\"建筑\",\"设计\",\"经历\",\"故事\",\"音乐\"]},\"24\":{\"h\":\"6 如何建立自己的摄影风格\"},\"25\":{\"h\":\"1. 收集1000张自己喜欢的照片\",\"t\":[\"出现最多的就是你现阶段喜欢的风格\"]},\"26\":{\"h\":\"2. 尝试各种风格\",\"t\":[\"在进步和变化中确定自己的喜好\"]},\"27\":{\"h\":\"3. 大量拍摄自己喜欢风格的创作\",\"t\":[\"尝试融入自我表达\",\"重复的刻意练习，才会逐渐取得进步\"]},\"28\":{\"h\":\"4. 基于视觉的统一\",\"t\":[\"视觉的统一即形式的统一 \",\"影调-色彩-服装-场景-拍摄手法-道具\"]},\"29\":{\"h\":\"5. 对文化的理解和再创作\",\"t\":[\"国内 \",\"传统文学、服装文化\",\"节日文化、传统文化\",\"国外 \",\"希腊神话\",\"动漫\"]},\"30\":{\"h\":\"6. 内在情感的统一\",\"t\":[\"照片传达处同样的情感内核\",\"高级感建立的第一步不是模仿风格，而是自我内心情感的探索\"]},\"31\":{\"h\":\"二、构图美学\"},\"32\":{\"h\":\"1、摄影角度/机位\"},\"33\":{\"h\":\"1 视点\",\"t\":[\"视点\",\"摄影师所处的位置，该点称之为视点\",\"画面可以同时包含仰俯关系，距离关系\",\"改变视点可以改变照片的视觉效果 \",\"改变距离(景别)，俯仰高度，角度\",\"俯仰关系\",\"90度角度拍摄\",\"上帝视角，局外人的视角\",\"压迫感，脆弱，无力\",\"image-20240202222811608\",\"30度角度拍摄\",\"恋人，朋友，亲人的视角\",\"平和，宁静，美好\",\"image-20240202222824252\",\"距离关系\",\"门框的遮挡，偷窥，远距\",\"image-20240202223132078\",\"走进，朋友，亲人视角\",\"image-20240202223145818\",\"上面两种图片展现了情绪的递进\"]},\"34\":{\"h\":\"2. 角度、机位\",\"t\":[\"水平方向的角度\",\"正面\",\"与镜头交流感强，直视镜头时，对眼神，表情的要求更高\",\"正面镜头并非要直视镜头，模特眼神不到位时视线可以看向其他方向，也可以使用道具\",\"image-20240202223635298\",\"正侧面(斜侧面)\",\"被摄主体与镜头的交流感减弱，但可以记录人的面部表情，相对正面镜头人在画面中的立体感更强\",\"拍摄斜侧面镜头注意模特两边面部比例不要过大。高颧骨模特尽量少拍正侧脸\",\"image-20240202224137163\",\"侧面（正侧面/背侧面）\",\"更容易体现人物轮廓，情感更含蓄，画面更自然，人物与环境的交流感加强，与观众的交流感减弱\",\"更是恶化拍摄面部轮廓相对立体的模特\",\"image-20240202224605422\",\"背面\",\"人的面部容貌及表情被忽视，融入环境，留下更多情绪想象空间\",\"image-20240202224900197\",\"垂直高度的角度\",\"平角\",\"机位高度始终与被摄主体高度相同，更为真实。平和，常用镜头\",\"image-20240202225103381\",\"仰角（仰拍镜头）\",\"构图的简洁化及不同寻常的视角\",\"交代被摄主体与环境的空间，位置关系\",\"情感表达\",\"仰拍镜头同样具有强烈的主观色彩，被拍摄主体显得高大，或坚定，观众弱小等心里感受\",\"仰拍的机位越低，塑造的情绪越浓，更多的时候使用高度较高的仰拍镜头来获得不同寻常的构图\",\"同样，超低机位的仰拍镜头要结合具体拍摄风格，情绪，人物性格等表达使用\",\"拍侧脸为主\",\"image-20240202230941968\",\"俯角（俯拍镜头）\",\"构图的简洁化及不同寻常的视角\",\"交代被摄主体与环境的空间，位置关系\",\"情感表达\",\"不同于平角镜头，俯拍镜头具有强烈的主观色彩，抽离故事之外观看被摄主体，交代整体环境，情绪上俯视，轻蔑，人物的渺小\",\"俯拍的角度越大，高度越高，氛围越浓\",\"小角度的俯拍镜头更多的是简化构图及获得不同寻常的视角（常用）\",\"上帝视角的镜头要结合具体拍摄风格及情绪表达使用（谨慎使用）\",\"image-20240202225255385\",\"效果图\",\"image-20240202230157749\",\"image-20240202230339586\",\"image-20240202230511394\",\"image-20240202230638767\"]},\"35\":{\"h\":\"3. 总结\",\"t\":[\"角度于景别无关\",\"同个角度可拍摄不同景别\",\"学会分析照片的视点，角度，俯仰高度\",\"学会使用俯仰拍镜头，可以保证即使你所在的城市很少有好看的景，依旧可以出片\",\"同一场景内：不同景别+不同角度+不同动作\",\"不要频繁切换场地\",\"一组作品中，要保证拍摄角度的多样性\",\"image-20240202232043005\",\"​ \"]},\"36\":{\"h\":\"2、景别(景别和焦段无关)\"},\"37\":{\"h\":\"2.1 全景系列\",\"t\":[\"分类\",\"远景\",\"大全景\",\"全景\",\"小全景（人物全景）\",\"以景为主，交代故事发生的环境，以景来烘托情绪，表达宏观视野上的，意境上的审美，人只是很小的信息，表情相对不重要，注意形体\",\"image-20240202233008242\",\"人物全景\",\"主要决定了人在场景中位置，人与空间的关系，明确的表现人物的形体动作是全景画面的重要作用，需要注意人在空间中的动态，人的情绪状态\",\"image-20240202233545081\"]},\"38\":{\"h\":\"2.2 近景系列\"},\"39\":{\"h\":\"1. 中景\",\"t\":[\"取到膝盖以上的景别\",\"注意力不仅在人物身上，也集中在人和环境的关系上\",\"中景更为平稳和客观，但缺少情绪渲染和视觉冲击力，不似远景开阔宏大，也不似近景特写镜头有强烈的情感色彩\",\"image-20240202233832610\"]},\"40\":{\"h\":\"2. 中近景\",\"t\":[\"腰以上\",\"中景可以刻画人物面部神态和情绪，表达内心情感，心理，性格，与观众有很强的交流感\",\"人的动作，表情，眉毛。眼神方向，嘴角抽动，都会影响画面的整体效果\",\"长焦镜头下，竖构图的中景中，周围的环境相对不重要。着重刻画人物\",\"广角镜头则在刻画人物的同时，兼顾一部分环境，与环境交流感更强\",\"同样的景别，横构图交代的环境信息比竖构图相对更多\"]},\"41\":{\"h\":\"3.近景\",\"t\":[\"胸以上的景别\",\"image-20240202234439918\"]},\"42\":{\"h\":\"4.特写\",\"t\":[\"image-20240202235027477\"]},\"43\":{\"h\":\"5. 大特写\",\"t\":[\"人物面部几乎占满画面，或人物肢体局部占据整个画面，表现人物的神态特征，情绪和内心状态，或用来拍摄重要的物件细节\",\"特写镜头具有极强的视觉冲击力，放大细微的情感\",\"面部五官特写\",\"眼睛、嘴巴、耳朵、下巴\",\"肢体特写\",\"手部、脚、锁骨、腰、背部线条\",\"image-20240202235041938\"]},\"44\":{\"h\":\"6. 景别的完整序列\",\"t\":[\"远景--大全景--全景--人物全景--中景--中近景--近景--特写--大特写\"]},\"45\":{\"h\":\"7. 总结\",\"t\":[\"一组不同景别镜头的组合相当于对这个人物或场景仔细，完整描述的修辞手法\",\"景别和景深决定了让观众看到什么，角度则引导观众如何让观众看待画面中的人物和事物\",\"image-20240203000437864\",\"多景别，多角度，组合拍摄 \",\"全景10% 中景60% 近景10% 特写10% 大特写 空景 细节 10%\"]},\"46\":{\"h\":\"8. 采用什么样角度、焦段和景别？\",\"t\":[\"观察环境，环境简洁程度，开阔或狭小，是否需要俯仰机位来规避杂乱的环境\",\"观察模特，观察人物的五官适合正脸或侧脸，人物情绪表达是否适合俯仰镜头\",\"拍摄策划中分镜头脚本的描写\",\"多个景别，多拍几张观察区别\"]},\"47\":{\"h\":\"3、基本构图法\"},\"48\":{\"h\":\"1. 画幅比例\",\"t\":[\"常见比例 \",\"4:3\",\"3:2\",\"16:9\",\"电影荧幕的宽高比通常为 \",\"1.85:1\",\"2.35:1\",\"竖构图除发布抖音等自媒体外避免使用9:16的构图\"]},\"49\":{\"h\":\"2. 影像成分\",\"t\":[\"主体、陪体、背景 \",\"人、物、光影、线条、几何关系、色彩、抽象化的氛围、情绪\",\"情绪人像：情感的表达是主体\"]},\"50\":{\"h\":\"3. 什么是构图\",\"t\":[\"定义 \",\"一副作品中，光影、明暗、线条、色彩、主体与陪体在画面中的结构和组成关系\",\"有意识的突出主体，引导观看顺序\"]},\"51\":{\"h\":\"4. 构图的基本原则\",\"t\":[\"简洁明确\",\"排除，做减法\",\"主体明确，主次鲜明\",\"构图元素少一些\",\"背景纯粹，干净\",\"排除不好看的，留下好看的\",\"排除与主题无关的事物\",\"排除没有相似性物体\",\"排除杂乱无章的环境\",\"排除到只剩下主体和干净的背景\",\"控制方法\",\"景别控制\",\"焦段控制\",\"改变俯仰角度\",\"前景遮挡\",\"道具遮挡\",\"改变物体空间排布（室内）\",\"二次构图\",\"总结\",\"当照片中出现杂乱需要避免的物体时，要么用排除法给出的上面7个方法解决，要么换景\",\"均衡上下，左右呈现的元素在视觉重量上势均力敌\",\"视觉重量\",\"画积大小。色彩，明暗，虚实，方向等\",\"视觉均衡\",\"上轻下重，上小下大，上浅下深\",\"错误案例\",\"下重上轻\",\"image-20240204234601698\",\"视线的力量\",\"模特的位置，服装色彩搭配/材质，光影，空间排布影响照片的平衡\"]},\"52\":{\"h\":\"5 . 构图方法\"},\"53\":{\"h\":\"1. 居中构图\",\"t\":[\"常见构图，主体突出明确，但构图不易出彩\",\"氛围感的构建方法：道具/肢体/色彩/层次感\",\"image-20240204234830585\"]},\"54\":{\"h\":\"2. 三分构图\",\"t\":[\"人物处在上下或左右的三分线处，视线相对具有明确的方向性\",\"image-20240204235115358\",\"黄金分割点，视觉中心（常用于拍特写）\",\"image-20240204235223283\"]},\"55\":{\"h\":\"3. 前景构图\",\"t\":[\"在纵向空间上构建前中后景的关系，更多的交代环境\",\"环境中植物矮小时，可利用仰拍用植物做前景构图丰富画面层次\",\"image-20240204235337999\"]},\"56\":{\"h\":\"4. 框架构图\",\"t\":[\"框中框，利用环境中的建筑、门框、门缝、亭廊等建筑进行构图\",\"image-20240204235751265\"]},\"57\":{\"h\":\"5. 对称构图\",\"t\":[\"双人，或者利用镜子拍摄\",\"平衡、和谐、稳定、对话\",\"image-20240204235844410\"]},\"58\":{\"h\":\"6. 引导线构图\",\"t\":[\"image-20240204235947813\"]},\"59\":{\"h\":\"7. 对角线构图\",\"t\":[\"image-20240205000035410\"]},\"60\":{\"h\":\"8. 倒置构图\",\"t\":[\"俯拍人物，使模特头部置于画面底部，非常规构图，极易出彩\",\"使用该种构图方式应注意风格及情绪表达，上帝视角的主观镜头\",\"image-20240205000601447\"]},\"61\":{\"h\":\"9. 留白构图\",\"t\":[\"留白并非指空白，一种宏观意向的简化和省略，更有想象空间，突出主体\",\"image-20240205000750201\"]},\"62\":{\"h\":\"10. 曲线构图\",\"t\":[\"利用人的形体制造曲线，或利用环境当中的曲线线条\",\"image-20240205000903074\"]},\"63\":{\"h\":\"4、高级构图法\"},\"64\":{\"h\":\"1. 视线的力量-视线的平衡\",\"t\":[\"人的视线具有方向性引导性，力量性，可以平衡画面，同样可以使画面失衡\",\"该种构图方式人物看向画外，人物与环境更具有互动性，容易塑造故事感\",\"image-20240205001001228\"]},\"65\":{\"h\":\"2. 视线的力量-打破平衡\",\"t\":[\"人物处在照片的三分之一或边缘处，同时面部朝向画面更窄的一边，视线的力量引起失衡，人物情绪被失衡感放大\",\"image-20240205001259131\"]},\"66\":{\"h\":\"3. 画面失衡构图法\",\"t\":[\"在电影、恐怖片较多\",\"画面呈现一定的倾斜，不安，不稳定，躁动，人内心的迷茫（荷兰角）\",\"image-20240205001618707\"]},\"67\":{\"h\":\"4. 利用镜子构图\",\"t\":[\"image-20240205001658495\",\"image-20240205001754356\"]},\"68\":{\"h\":\"5. 利用光影构图\",\"t\":[\"寻找/人为制造可以投射影子的平面、树影，人影.....\",\"当拍摄背景为墙面时，利用光影增加照片中的层次感，否则离墙太近不透气\",\"image-20240205002031243\"]},\"69\":{\"h\":\"6. 人虚景实\",\"t\":[\"观众注意力集中在景上，人物五官被弱化，环境氛围感加强\",\"注意实的背景要具有一定的观赏性，小光圈拍摄\",\"image-20240205002519807\"]},\"70\":{\"h\":\"7. 运动模糊--快门控制\",\"t\":[\"A: 动静对比\",\"人或者背景或陪体，其中的一个处在静止状态，另一个在运动状态\",\"静态的二维照片由于快门的控制具有了时间的流动感\",\"image-20240205002838636\",\"B:低速快门+高速运动\",\"人和背景都处在运动之中，画面具有不同寻常的张力\",\"image-20240205002950869\"]},\"71\":{\"h\":\"8. 主体与陪体构图法\",\"t\":[\"陪体本身要具有一定的观赏性或象征意味\",\"保证人物及陪体清晰\",\"image-20240205003132235\"]},\"72\":{\"h\":\"9. 双重曝光\",\"t\":[\"image-20240205003158170\"]},\"73\":{\"h\":\"10 遮挡构图法\",\"t\":[\"遮挡构图让画面更具有想象空间和故事感\",\"image-20240205003244703\"]},\"74\":{\"h\":\"5. 总结\",\"t\":[\"构图是在有意识地通过镜头组织画面中出现的要素，而非将看到的一切都拍下来\",\"构图是有意识地突出主体，规避繁杂，无关，或影响主体的要素\",\"构图是表达情绪的一种手段\"]},\"75\":{\"h\":\"三、光线\",\"t\":[\"光影的分布一定程度上影响画面影调\",\"光影响画面整体质感\",\"不同的光塑造不同的情绪\",\"光影响人物皮肤质感\"]},\"76\":{\"h\":\"1. 光的方向\",\"t\":[\"7种常见的光位\",\"水平方向\",\"顺光（正面光）--初学者常用\",\"光线特点\",\"光线投射方向与拍摄方向一致，灯光高度与相机高度相近，阴影在物体的背后\",\"优点\",\"顺光拍摄脸部明亮受光均匀，可修饰面部瑕疵\",\"缺点\",\"面部立体感不强，空间纵深感减弱\",\"拍摄tips\",\"利用色彩对比拉开背景层次\",\"利用前景制造画面纵深感\",\"利用光影制造氛围感\",\"利用光影制造空间感\",\"image-20240206225536129\",\"全侧光\",\"光线特点\",\"脸部明暗对比明显，光比较强，人物面部立体感强；当光比非常强时，会形成阴阳脸，易于塑造深不可测的性格，冲突感，戏剧感\",\"优点\",\"明暗分明，光影感强，容易塑造具有层次感的画面\",\"缺点\",\"当光比过大时，容易暴露人脸上的瑕疵\",\"拍摄Tips\",\"选择柔光时间段或打柔光\",\"对背光面进行补光减少光比\",\"image-20240206230228677\",\"前侧光\",\"光线特点\",\"光源位于被摄主体的左侧或右侧，光源与人形成的夹角为锐角\",\"使用最多的光线，日出后1-2小时，日落前2-3小时\",\"特点：形成明显的受光面，背光面和投影\",\"优点\",\"光比适中，立体感强\",\"image-20240206232244109\",\"侧逆光\",\"光线特点\",\"光源位置在被摄物体的左后方或右后方，与相机形成钝角夹角\",\"人物受光面小，背光面大，极易塑造立体感氛围感\",\"拍摄Tips\",\"选择光线相对柔和时进行拍摄，日出后半小时/日落前半小时左右\",\"必要时需要对人物背光面部进行补光\",\"image-20240206232521857\",\"伦脖郎光\",\"光源处在人物一侧的45度位置，距离光源远的面部形成倒三角的亮部\",\"image-20240206233317901\",\"逆光\",\"光线特点\",\"相机的拍摄方向与光源方向相反，与被摄主体处于同一直线上，可以作为被摄物体的轮廓光比，形成明显的明暗对比\",\"勾勒轮廓和身体线条\",\"拍摄Tips\",\"多拍侧脸轮廓\",\"如果要拍摄正面时注意人物面部补光\",\"拍摄逆光时注意背景是否过曝，可以通过改变高低机位控制\",\"image-20240206231757506\",\"垂直方向\",\"顶光（人像摄影少用）\",\"底光\",\"总结\",\"改变光位实际是在改变照片的明暗配比\",\"改变照片的影调\",\"光位不是决定影调的唯一要素\"]},\"77\":{\"h\":\"2. 光的质感\"},\"78\":{\"h\":\"1. 硬光\",\"t\":[\"分类 \",\"直射光：直射的太阳光；人工直射光\",\"大晴天：正午的光线\",\"特点 \",\"物体线条分明，强硬，强调亮部和暗部的光比，明暗间缺少过渡；毛边感\",\"拍摄Tips \",\"自然光 \",\"一般在正午时分，11：00-15：00 脸部尽量朝上，避免人脸形成过于明显的难看阴影\",\"在阴影下拍摄，对人脸进行单独补光\",\"使用柔光镜或欧根纱拍摄\",\"使用窗帘，纱等透光材质对光线进行柔和处理--遮挡\",\"透光的帽子等进行遮挡\",\"人造光 \",\"使用漫反射\",\"柔光伞\",\"控制灯光与拍摄主体的距离\",\"反光伞+柔光屏\",\"透光材质遮挡柔光\"]},\"79\":{\"h\":\"2. 柔光/软光\",\"t\":[\"散射光；阴天光线 / 加了柔光设备的灯光\",\"特点\",\"室外拍摄时，没有明显的明暗交接，阴影轮廓模糊，光线柔和，物体显得柔软，细腻\",\"室内拍摄不补光，靠近光源位置，逆光或侧逆光拍摄的情况下，照片依旧有明显的明暗对比\",\"要注意人物和光线的位置\",\"拍摄Tips\",\"外景拍摄 \",\"直接使用自然光拍摄，拍摄时尽量脸朝上让人物面光\",\"使用反光板对人脸进行补光\",\"使用补光灯对人脸进行补光\",\"曝光控制\",\"室内拍摄 \",\"直接自然光拍摄\",\"人物尽量靠近光源位置（窗户/门口），通过控制距离关系控制光比\",\"使用补光设备\",\"image-20240207000032557\"]},\"80\":{\"h\":\"3. 认识自然光\"},\"81\":{\"h\":\"1.晴天光线的利用\",\"t\":[\"不同时间内，太阳光的高度，角度，光色，强弱都会发生变化\",\"不同时间段内，室内外的光线所呈现的氛围感也不相同\",\"日出之前\",\"蓝调时刻\",\"太阳升起之前的20-30分钟、\",\"天空呈现蓝紫色，此时和日落之后的二十分钟称为“蓝调时刻”，气氛静谧，极易塑造氛围感\",\"拍摄tips\",\"注意日出时间\",\"选择开阔的场地拍摄\",\"逆光拍摄时注意面部补光\",\"image-20240207202241012\",\"日出前后\",\"黄金时刻\",\"日出前的15分钟左右至日出1小时左右，此时光色偏橙黄色，光线朦胧柔和，太阳角度低\",\"拍摄tips\",\"注意补光\",\"控制光比\",\"image-20240207202416363\",\"早晨\",\"太阳升起之后的2-3小时，光线清透，光色偏暖，太阳高度较低\",\"拍摄tips\",\"此时光线相对较硬，需注意背景的选择及光比，光圈控制，光位选择\",\"image-20240207202640451\",\"中午（11:00-15:00左右）\",\"正午时刻，光线为顶光，强硬光，光线穿透力强，光色偏白\",\"此时的光线直射会形成明显的影子，但影子长度短\",\"image-20240207211513449\",\"太阳下山前1-2小时\",\"此时光线较为柔和，人射角度低，光色较暖，柔和，适合大多数风格的照片拍摄\",\"阴影相对柔和，使用前侧光，侧逆光拍摄时面部光影相对柔和\",\"控制好角度和光线可以拍到伦勃朗光\",\"image-20240207211957356\",\"日落前30分钟\",\"日落时的光线较日出更为柔和，光色偏暖，相对来说光比较小\",\"此时拍摄侧逆光及逆光，极易塑造氛围感和故事感\",\"image-20240207212352826\",\"日落后半小时\",\"太阳落山之后，残余大气折射的光线，此时呈现静谧温柔的蓝色，东方的天空变成浅紫色，浅蓝色，此时光线较暗，可额外对画面进行补光，或提高iso\",\"image-20240207212752981\",\"夜晚\",\"灯光，车灯，路灯都是常见的光源，适合拍摄都市故事感，电影感的照片\",\"拍摄tips\",\"夜晚光源较为复杂，需注意周边光源的色彩和方向，同时注意选景，注意人物面部补光\",\"image-20240207213046495\"]},\"82\":{\"h\":\"2. 丁达尔光\",\"t\":[\"必备条件\",\"相对较强的强光环境，直射光线\",\"空间介质（烟雾、水滴、灰尘）\",\"逆光拍摄 \",\"道具：烟饼\",\"image-20240207213523094\"]},\"83\":{\"h\":\"3.阴雨天\",\"t\":[\"阴天光线均匀，各个时刻光线变化不大，除天黑拍摄不受时间影响\",\"立体感消弱，光比小，没有明显的高光和阴影，空间纵深感减弱\",\"拍摄tips\",\"尽量避免大面积的白色天空，利用前景制造画面纵深感\",\"利用道具制造氛围感，纵向增加空间感\",\"不补光的情况下人脸尽量面向天空，面部受光均匀\",\"着重色彩搭配，融入环境或冲破平淡\",\"带补光设备\",\"人物面部补光，冷暖对比制造氛围感\",\"image-20240207214150713\"]},\"84\":{\"h\":\"4. 十大影调\",\"t\":[\"影调指画面的明暗基调和层次，影调的建立与光线布置，场景中的色彩密切相关\",\"调子：画面的影调直接影响到情绪的表达\",\"影调\",\"黑白影调 \",\"画面中黑白灰的组成层次\",\"彩色影调 \",\"色调：冷调；暖调；蓝调；绿调；红调\",\"光比\",\"被摄物体亮面与暗面的受光比例\",\"黑白灰在画面中的占比\",\"黑白灰相对均衡分布 \",\"全调\",\"黑色主导 \",\"低调\",\"白色主导 \",\"高调\",\"灰色主导 \",\"软调（低反差）\",\"黑白主导挤压灰色 \",\"硬调（高反差）\",\"image-20240207215315452\",\"image-20240207215826374\",\"长调 \",\"明暗相差5个层级以上\",\"中调 \",\"明暗相差3-5个层继以上\",\"短调 \",\"明暗相差3个或3个层级以内\",\"高调\",\"画面中受光面大于阴影面，适合表达欢乐，明亮，梦幻，美好的氛围。\",\"青春片常用的影调效果\",\"image-20240207220433925\",\"中间调\",\"处于高调和低调之间，反差比较小，层次丰富\",\"平和，平淡，舒适，安静\",\"低调\",\"浅灰色至黑色，亮度等级偏低的色彩为主构成画面影调\",\"硬调（高反差）\",\"画面有明显区分的着光区和背光区，最亮和最暗部分对比大\"]},\"85\":{\"h\":\"5. 常用补光工具\",\"t\":[\"反光板：推荐80cm \",\"银色-- 小清新，日系，汉服，情绪等清透，皮肤透亮的风格\",\"金色--复古，欧美等人物肤色厚重的风格\",\"黑色--吸色，塑造立体感\",\"白色--比起银色反光板更为柔和\",\"柔光版--柔和光线\",\"推荐购买二合一反光板（金色+银色）\",\"打光从上面和平视打光更为合适\",\"rgb变焦手电筒 \",\"推荐黄光+白光\",\"店铺：暴龙户外照明\",\"led补光灯 \",\"永诺YN300AIR +F970 (18W)\",\"闪光灯\",\"其他补光工具 \",\"蜡烛、台灯、车灯、火源\"]},\"86\":{\"h\":\"四、色彩\"},\"87\":{\"h\":\"1. 定义\",\"t\":[\"色彩是由光线照射在物体上呈现出的颜色 \",\"阴天所看到的物体的色彩是固有色\",\"晴天不同时段下物体呈现出的色彩不同\",\"画面中的色彩组成 \",\"固有色/光源色/光源叠加固有色/技术控制\",\"控制色彩的因素 \",\"固有色/光线的明暗/曝光/白平衡/环境色/后期\",\"通过改变外在的因素来控制色彩的变化 \",\"场地选择/服装选择/天气/拍摄时段/道具.....\"]},\"88\":{\"h\":\"2. 光的三原色\",\"t\":[\"色彩三原色\",\"红黄蓝\",\"光的三原色\",\"红 绿 蓝\",\"三原色的叠加\",\"红 + 绿 + 蓝 = 白色\",\"互补色\",\"红色 互补色 是青色\",\"蓝色 互补色 是黄色\",\"绿色 互补色 是洋红色\"]},\"89\":{\"h\":\"3. 色彩的三种属性\"},\"90\":{\"h\":\"1. 色相\",\"t\":[\"色彩呈现出来的相貌\",\"眼睛所看到的物体的色相并非一成不变，受光线的影响\",\"色相是不同波长的光在物理上的视觉反映\",\"image-20240209171308502\"]},\"91\":{\"h\":\"2. 明度 （色值，亮度）\",\"t\":[\"色彩的明暗程度，也称为色彩的亮度\",\"明度是光线强度的表现，光线强度高，色彩的高度值高，反之亦然\",\"改变明度的同时，其实也是改变了色彩的饱和度，色相并未发生改变\"]},\"92\":{\"h\":\"3. 饱和度\",\"t\":[\"彩度，色彩呈现出来的鲜艳程度，色彩的浓度原色的饱和度最高，称为纯色\",\"饱和度取决于该色中含色成分和消色成分（灰色）的比例，含色成分越高，饱和度越高;消色成分越高，饱和度越低\",\"高饱和度\",\"体现：明快，热情，浓烈，更有活力或戏剧性\",\"image-20240209172205760\",\"中饱和度\",\"平静 冷静\",\"image-20240209175601688\",\"低饱和度\",\"颓废 萧瑟 隐退感 孤独\",\"image-20240209175645434\",\"无色彩，黑白\",\"色彩不再重要，画面的影调关系，情绪成为照片的重点\",\"总结\",\"不同饱和度的色彩，呈现出的视觉感受，心里感受不同\",\"情绪片为主基调的照片，通常具有饱和度相对较低，低明度的特点\",\"反之，青春片具有相对高饱和或高明度的特点\",\"影调+色调\",\"色彩的明度与饱和度，也是影响照片影调的因素之一\",\"色彩环境\",\"色彩环境很少单独存在，而是在一定的光照条件下，与其他色彩相比较的环境中\",\"阴天的色彩相较晴天的色彩更为灰暗，缺少光泽和明亮的调子\",\"色彩环境，很大程度上决定了画面的情绪\"]},\"93\":{\"h\":\"4. 色彩的情绪性\",\"t\":[\"色彩的冷暖\",\"暖色 \",\"波长长，红色，黄色，橙色\",\"冷色 \",\"波长短，蓝色，绿色，青色\",\"暖色调\",\"视觉冲击感强，画面有扩张感；热情，温暖，阳光，温柔，明快，热烈\",\"冷色调\",\"使视网膜收缩，感到压抑或安静；内敛，回避，孤独，退缩，封闭，距离感，疏离感\",\"色彩是塑造风格的手段之一，不能决定风格\",\"风格的内核是情绪统一\",\"情绪的统一： 人物状态，场景的构建，细节情绪，道具意向，眼神表情\",\"色彩的情感\",\"红色 \",\"爱情，暧昧，热情，奔放，视觉中心，喜庆，危险，血腥，恐怖，压抑，疯狂，暴力，死亡\",\"黄色 \",\"明快，轻松，活泼，幸福，权威\",\"绿色 \",\"生命力，平静，安静，健康 深沉，深不可测，沉默，冰冷，病态，腐烂\",\"蓝色 \",\"冷静，清爽，专业，忧郁，抗拒，寒冷，冷漠，坚定，深沉，后退，距离感\",\"白色 \",\"清新，纯净，洁白，素雅，干净，无暇，不可靠近\",\"黑色 \",\"压抑，深沉，暗黑，庄重，严肃，死亡\",\"灰色 \",\"沉着，冷静，平和，中立\"]},\"94\":{\"h\":\"5. 色彩秩序构建\"},\"95\":{\"h\":\"1. 画面要有主色调\",\"t\":[\"以某个颜色为主导，使画面呈现一定的色彩倾向，色调的建立是视觉材料组织的结果\",\"视觉材料：环境，天气，光源，服装，化妆，道具...这些元素的色彩属性，决定了画面整体色彩趋势\",\"主色调：一般表现为背景色，环境色/空间色，服装色(特殊)\",\"需要注意选景的重要性，道具的选择\",\"image-20240210084856221\"]},\"96\":{\"h\":\"2. 在画面中构建色彩的和谐\",\"t\":[\"A. 单色和谐关系\",\"同一色相的不同明度和饱和度的组合，如：浅绿色，绿色，深绿色；浅红色，红色，深红色，褐色...\",\"需要注意画面色彩层次感，避免明度饱和度过于相近导致的主体背景不分\",\"image-20240210085123486\",\"B. 相似色和谐关系\",\"相似色\",\"色环中相距90度的色彩称为相似色\",\"image-20240210085322409\",\"image-20240210085425013\",\"C.补色和谐关系\",\"互补色\",\"色环上位置相对的两个色相叫做互补色\",\"如：黄色，蓝色；红色，青色；绿色，品红；\",\"image-20240210085656036\",\"D. 三色和谐关系\",\"色环上位置等距的三种色彩组合构成三色和谐关系\",\"如：红绿蓝\"]},\"97\":{\"h\":\"3. 在画面中构建色彩的对比\",\"t\":[\"对比色\",\"色相环上相距甚远120度-180度之间的两种颜色\",\"对比色所产生的视觉冲击力往往很强烈\",\"对比色更容易吸引人的视线，视觉冲击力强\",\"色彩的对比可以突出主体，构建纵向上的空间关系\",\"红+绿（用得多）\",\"明度的相似性\",\"背景选择绿色的草地或树林，以红色为主色的服装进行配色，或用红色的道具作为点缀\",\"image-20240210090035931\",\"橙+蓝（用得多）\",\"极端的冷暖对比\",\"image-20240210090404696\",\"image-20240210090426213\",\"橙 + 绿（用的多）\",\"冷暖对比\",\"image-20240210090602996\",\"黄 + 紫\",\"极端的明度对比\",\"色彩的对比存在于\",\"环境色和服装色的对比\",\"环境色和道具的对比\",\"服装色和道具色的对比\",\"背景色和肤色的对比\"]},\"98\":{\"h\":\"4. 主色 + 无色搭配\",\"t\":[\"主色+白色/黑色/灰色\",\"image-20240210091115372\"]},\"99\":{\"h\":\"5. 在画面构建色彩明暗关系\",\"t\":[\"色彩关系--明暗关系 \",\"色彩的明暗构建空间关系\",\"光线构建不同的光区，不同的光区构建不同的空间色彩和情感\"]},\"100\":{\"h\":\"6. 局部色彩对比/点缀\",\"t\":[\"画面整体色彩统一，局部道具/配饰等鲜明色彩点缀\"]},\"101\":{\"h\":\"7. 色彩的主观还原和控制\",\"t\":[\"前期参数调整+后期调色 \",\"白平衡偏移\",\"调整相机K值\"]},\"102\":{\"h\":\"6. 常用色彩搭配\"},\"103\":{\"h\":\"1. 单色 +白色\",\"t\":[\"image-20240210092146415\"]},\"104\":{\"h\":\"2. 单色 + 黑色\",\"t\":[\"image-20240210092229900\"]},\"105\":{\"h\":\"3. 红色+蓝色\",\"t\":[\"image-20240210092255370\"]},\"106\":{\"h\":\"4. 红 + 绿\",\"t\":[\"image-20240210092332268\"]},\"107\":{\"h\":\"5. 低饱和配色（常用）\",\"t\":[\"image-20240210092402708\"]},\"108\":{\"h\":\"6. 同色系配色\",\"t\":[\"image-20240210092459958\"]},\"109\":{\"h\":\"7. 服装的属性\",\"t\":[\"身份和情绪\",\"服装本身具有身份属性及年龄属性，根据风格确定服装,以及确定该服装身份下合适的美姿和状态\",\"image-20240210093614864\"]},\"110\":{\"h\":\"五、有效拍摄策划\"},\"111\":{\"h\":\"1. 为什么要做拍摄策划？\",\"t\":[\"策划是决定我们创作行为的指导方针\",\"掌控拍摄、保证出片\"]},\"112\":{\"h\":\"2. 拍摄灵感从哪来？\",\"t\":[\"审美积累，优秀摄影作品，绘画\",\"电影\",\"音乐，旋律，歌词，文字\",\"文化\",\"时事热点\",\"场地\",\"情绪状态，生活阶段，个人经历\",\"季节\"]},\"113\":{\"h\":\"3. 如何确定创作流程\"},\"114\":{\"h\":\"1. 主题/风格\",\"t\":[\"风格 \",\"日系/小清新\",\"复古 \",\"港风复古、昭和复古、怀旧复古\",\"情绪 \",\"安静的、具有张力、暗黑...\",\"电影感 \",\"日系电影感，港风电影感、文艺电影感\",\"私房 \",\"少女私房、情绪私房、法式私房\",\"时尚\",\"确定了创作主题及风格，相当于确定了整组照片的基调\"]},\"115\":{\"h\":\"2. 模特\"},\"116\":{\"h\":\"3. 场地\"},\"117\":{\"h\":\"4. 样片\"},\"118\":{\"h\":\"5. 服装\"},\"119\":{\"h\":\"6. 道具\"},\"120\":{\"h\":\"4. 拍摄策划\",\"t\":[\"拍摄策划要包含 \",\"主题/风格\",\"拍摄时间 \",\"阴/晴？不同时间光的高度不同，光质不同，色彩不同，光影效果不同\",\"场地 \",\"提前踩点，确定拍摄机位及构图，排除法，基础构图法，高级构图法\",\"模特 \",\"身高体重，五官特点，适合风格\",\"道具 \",\"是否与服装匹配，怎么和人物产生互动\",\"服装/配饰参考 \",\"场景参考，动作参考，构图参考，色彩参考，光线参考\",\"妆容参考\",\"样片\",\"拍摄脚本（最重要） \",\"根据实际拍摄场地及主题风格确定拍摄脚本\",\"构图/角度，氛围，道具使用，肢体语言，情绪表达式手法...\"]},\"121\":{\"h\":\"5. 如何确定拍摄场地\",\"t\":[\"社交平台关键词搜素 \",\"小红书/抖音 \",\"xx约拍/xx拍照/xxx网红拍照打卡\",\"xx周末游/xx近郊游\",\"xx天台拍照/xx公园拍照/xxx铁轨拍照\",\"xx摄影工作室/xxx摄影场地/xx民宿\",\"多观察 \",\"外出游玩或坐车多观察\",\"地图app,公园/河流等\",\"提前踩点 \",\"环境中可利用的元素\",\"环境中要规避的元素\",\"光线方向\",\"光照时间\",\"光影\",\"拍摄机位/构图\",\"开园/闭园时间\",\"是否开放\",\"选景原则 \",\"1.符合拍摄主题及风格\",\"2.本身具有一定情感色彩 \",\"轻松的，明媚的，向上的..... 宏大，寂寥，孤独的....\",\"光线充足/符合拍摄需求\",\"城市化元素少，原生\",\"不同的拍摄场地具有不同的情绪和调性，选景决定了照片的基调和呈现效果\"]},\"122\":{\"h\":\"6. 模特选择-找模特\",\"t\":[\"新手如何约到合适的模特？\",\"线上约模特 \",\"微博-- 超级话题：xx约拍\",\"小红书：xx约拍，xx拍照，xx模特，发互勉贴\",\"抖音：xx约拍，xx拍照，xx模特，发互勉贴\",\"线下约模特 \",\"线下活动：cos/汉服 ....\",\"大学城：音乐学院/美院/师范/医学院\",\"路遇直接加微信或者征求意见拍照加微信\",\"不要害羞，大胆一点\",\"素人模特互勉约拍规则模板\",\"1.互勉约拍建立在双方互相认可，对共同拍摄风格认可的前提下 （备注：提前告知模特你想拍的风格，多备选2-3个选择） 2. 拍摄创作筹备不易，请互相尊重，如有事推迟请至少提前1天告知 （备注：拍摄前一天，当前早晨确认时间） 3.请勿迟到，迟到没有下次合作 4.模特对拍摄内容有想法可随时构图，以摄影师想法为主导 （备注：这点很重要，摄影师要学会控场，在确定主题和风格的前提下，模特可以有想法沟通，适合拍摄风格的可以尝试，不适合以摄影师想法主导） 5.摄影师提供拍摄/修图，模特自备妆造，因拍摄场地/服装/交通/道具及其他费用AA (备注：提前说明交通等费用，有一个承担还是AA) 6.摄影师会对本次拍摄精修返图给模特，返图6张以上，无上限，视拍摄成败而定，请勿催片，底片不送 7.拍摄作品版权归摄影师所有，摄影师有权对拍摄作品进行印刷，展出和发表 8.模特收到返图后，不允许进行二次更改，发布朋友圈/微博/小红书等，需要注明摄影师 （备注：关于修片，可以和模特商量共同修改（液化），但不可以自行修图） 9.模特可对照片进行社交平台宣传，个人印刷等，如进行衍生，售卖等商业行为需征得摄影师同意 （备注：早期可以不用写） 10. 拍摄的照片会作为摄影师作品在社交平台进行宣传 （备注：避免有人白嫖照片，不允许摄影师删除） 11. 有眼缘能合得来的模特会长期合作 \",\"模特协同摄影师完成以摄影师为主导的创作，摄影师必须控场\"]},\"123\":{\"h\":\"7. 模特选择-定模特\",\"t\":[\"模特适合哪种风格？ \",\"日系/小清新/甜美/高冷/优雅/气质\",\"身高/体重/脸型/五官/肤色/适合的发型\",\"妆容/眉毛/肤色/纯色/发型/瞳色\",\"都会改变模特的性格和风格\",\"不确定模特适合什么风格时，多要几张日常的照片，根据拍摄状态及发型等判断人物性格\",\"初次合作的模特根据长相判断适合的风格，合作久了多尝试换风格拍摄\",\"大量收集样片 \",\"参考场地、妆造、服装、动作、表情、机位、构图、光线、道具、影调\",\"结合自己的拍摄---创新，模仿不是一成不变的抄袭\",\"融入自己的主题/场地情感表达\"]},\"124\":{\"h\":\"8. 化妆及造型\",\"t\":[\"合作化妆师/摄影师兼职化妆师\",\"学校/小红书/微博/抖音寻找化妆师\",\"根据不同的风格确定不同的妆造\",\"日常妆要求 \",\"裸妆，野生眉，遮瑕，轻薄粉底或素颜，不要粗浓黑眼线和一片式假睫毛\",\"口红颜色: 避免玫红，紫红，暗红，避免嘴唇边缘太锋利\",\"发型：根据风格的不同可选择直发/卷发/盘发，可以根据需求购买假发片/假刘海/发包等，基本要求：头发不油，蓬松，垫发根\",\"美瞳：浅咖/咖色/棕色，直径避免过大\"]},\"125\":{\"h\":\"9 .服装的质感\",\"t\":[\"服装的质感\",\"硬\",\"绝大多数衬衫/西装/冬天的外套/卫衣/牛仔裤....\",\"体现冷峻，距离感，酷，高级\",\"软\",\"软糯的连衣裙/针织衫/田园碎花裙/绸质感吊带裙/大裙摆设计感裙子.....\",\"温柔，舒适，慵懒，可以靠近的....\",\"服装的质感一定程度上可以反映人的性格，或与观众的距离.\",\"服装搭配原则\",\"选择适合该风格该主题的服装\",\"避免过于日常的服装\",\"利于模特做肢体动作\",\"服装质感和色彩相近或统一\",\"具有一定设计感或舒适，避免包裹性较强或过于宽松\",\"服装问题\",\"购买 \",\"店铺 \",\"Lidia 莉蒂亚度假裙\",\"pdd 神北jk\",\"租借 \",\"不推荐\",\"商家/品牌合作 \",\"有一定量优质作品及粉丝量，私信小红书或者淘宝店铺借拍\"]},\"126\":{\"h\":\"10 道具选用\",\"t\":[\"道具本身具有情绪色彩，具有渲染气氛的功能，根据拍摄主题和风格确定道具\",\"道具具有一定的信息指向性，使用需符合拍摄主题\",\"避免道具过多过砸，导致照片色彩复杂\",\"多种道具结合使用时需场景匹配，或具有共同的叙事能力\",\"拍摄较为日常场景，道具使用符合行为习惯，避免摆拍痕迹太重\",\"就地取材，融入自然\",\"道具并非只是让模特有事可做，更多时候辅助构图，光影表现和情绪传达\",\"常用道具\",\"鲜花\",\"不要用假花\",\"就地取材（花，树叶，芦苇）\",\"店铺\",\"pdd: 花同送官方旗舰店\",\"淘宝：若拉花馆\",\"烟饼\",\"烟\",\"镜子\",\"书/琴谱\",\"封面色彩单色，低饱和\",\"名字不能过于明显，内容不要彩页或图案\",\"image-20240212175246128\",\"折叠椅子，水果，雨伞，透明水杯，气球，拉闸，马灯....\",\"充分利用场地与环境互动\",\"即时场景也同样可以抽取道具\"]},\"127\":{\"h\":\"11. 拍摄策划\",\"t\":[\"案例一：主题导向型\",\"场景/道具/人物肢体语言等为主题表达服务\",\"概念\",\"挣扎，束缚，自我隔绝\",\"每个人都是一座孤岛\",\"沉默，窒息\",\"怀疑，不安，恐惧，脆弱像残花\",\"逃脱，寻找\",\"抓住光之花\",\"盛放的欲念之花\",\"场地及元素解读\",\"场地选择河边，水给人以冰冷，孤岛，隔绝感，辽阔感。环境的大而空与人物的小和实形成对比，烘托整体氛围和定调。河岸上的石头同样给人以坚硬，冷酷的疏离感\",\"元素解读：绳子即束缚，痛苦，窒息，负面的黑色情绪；花代表平和，爱与希望，是人物想与外界产生对话的重要媒介\",\"主题阐释与拍摄手法\",\"重点表现外界对个体的束缚，个体的自我束缚和隔绝，个体想要与外界对话\",\"外在的束缚 \",\"绳子捆着，躺在地上\",\"绑住手，伸手想要去碰触花\",\"内在束缚-自我封闭与隔绝 \",\"一个人，躺在一座孤岛，四周是水面，隔绝感\",\"躺在水边，面朝水面，孤独的自我背离\",\"挣脱 \",\"助理用绳子勒住模特脖子，想要挣脱\",\"捂住嘴巴，流泪\",\"与外界的对话-花作为媒介 \",\"自我隔绝，束缚，但依旧留有希望，与外界对话的欲望，抓住光之花，欲念之花 \",\"趴在地上，盛开的鲜花放在手边\",\"背对镜头，将花放在衣服里\",\"局部特写\",\"地点\",\"河边\",\"风格\",\"情绪\",\"整体基调\",\"冷调，孤独感与束缚感\",\"道具\",\"绳子和花\",\"装造要求\",\"干净，清爽\",\"样片展示\",\"部分成片\",\"image-20240212181532114\",\"案例二：风格导向型（用得多）\",\"拍摄手法+道具使用+情绪状态\",\"服装：开衫长毛衣 + 白衬衫 + 深色裙子\",\"场地： 桥\",\"道具：蜡烛/笔记本/笔\",\"拍摄脚本\",\"蜡烛点烟拍半身拍特写（侧面正面）\",\"蜡烛在前作前景拍摄\",\"火焰在人的前方做前景拍摄\",\"拿着蜡烛借助微弱的光看书（或者写信）\",\"使用慢门拍摄人物奔跑（大景）\",\"坐在椅子上抽烟看远方拍半身\",\"躺在地上，人物看向天空，慢门拍摄\",\"坐在凳子上正面拍摄，头向后仰用书盖住脑袋\",\"成片展示\",\"image-20240212182702915\"]},\"128\":{\"h\":\"12. 如何和模特快速建立信任进入拍摄状态\",\"t\":[\"写好拍摄策划，可以给模特看\",\"聊对方感兴趣的话题\",\"适当真诚的夸赞\",\"放点适合拍摄风格的音乐\",\"自己放松一点，不要紧张\",\"正向反馈，拍好看的照片给对方看，建立信心\",\"遇到难度大或者相对危险的动作自己先示范\"]},\"129\":{\"h\":\"13 .如何引导模特\",\"t\":[\"做好拍摄策划准备，提前准备样片参考动作\",\"在设定的剧情内，做合适的动作和事情\",\"设定小剧场模特和道具场景互动抓拍\",\"让模特面部放松，紧张时尽量不看镜头\",\"取景器里让模特抬头/低头/左右转，取好看的角度\",\"经验不足可以将样片存储在sd卡内\",\"生活状态+情绪状态\"]},\"130\":{\"h\":\"六、人像美姿\"},\"131\":{\"h\":\"1. 问题？\",\"t\":[\"不知道是什么样的情绪状态？\",\"眼神不知道看向哪里？\",\"不知道怎么让自己的美姿看起来更加多样化？\",\"不知道怎么做什么样的动作合适或者好看？\",\"不知道怎样让自己的照片看起来自然？\",\"只会拍模特不会拍客人？\",\"遇到不同五官的模特/客人不知道该怎么拍？\"]},\"132\":{\"h\":\"2. 美资的基本原则\"},\"133\":{\"h\":\"1. 舒展性\",\"t\":[\"服装搭配 \",\"避免臃肿或过于修身，避免过于宽松和长的服装遮住手腕及脚腕；服装面料柔软，自由感舒适感\",\"人体结构 \",\"遵循人体结构，遵循正常生活行为方式（拿道具的方向，手势，会做的动作等等）\",\"线条感 \",\"除需要表现局促/压抑等情感时，尽快保证模特的形体修长，舒展，脖子/胳膊/手腕/腿/脚腕\"]},\"134\":{\"h\":\"2. 符合故事情境\",\"t\":[\"不同主题和风格的照片情绪不同，人物的面部表情，心理状态，行动状态也会不同\",\"摄影师给该组作品中的人物赋予人设，模特按照人设来“演剧本”，所有的行为都需要符合人物性格\"]},\"135\":{\"h\":\"3. 自然\",\"t\":[\"几乎所有的动作都是经过精心设计的，但拍摄弱化摆拍感，强调抓拍感\",\"避免过于明显的摆拍感，设定场景进行演绎，摄影师抓拍\",\"在情绪统一的环境下，做符合当下情境的事情，演绎某种生活状态\"]},\"136\":{\"h\":\"4. 扬长避短\",\"t\":[\"规避人的五官或身材缺点，放大优点\",\"角度/服装搭配/道具、前景、发丝、等遮挡-----不同五官人群拍摄技巧\"]},\"137\":{\"h\":\"5. 融入环境\",\"t\":[\"充分利用身边的道具和环境，让人与环境互动\"]},\"138\":{\"h\":\"3. 基础人像摆姿\"},\"139\":{\"h\":\"1. 确定美姿的基本方法\"},\"140\":{\"h\":\"1.1 确定风格及人物情绪\",\"t\":[\"不同风格不同主题的拍摄，人物的摆姿和情绪不同\",\"选择的着装，妆造不同\",\"服装尤其影响到人物摆姿\"]},\"141\":{\"h\":\"1.1.1 常见风格\"},\"142\":{\"h\":\"1. 日系少女\",\"t\":[\"表现：清新自然，可爱活力\",\"面部：眉毛扬起，微笑，眼神温柔，治愈\",\"肢体动作：张扬，自由，活泼，青春，俏皮，可爱，大幅度动作\",\"image-20240213161530453\"]},\"143\":{\"h\":\"2. 法式氛围感私房\",\"t\":[\"表现：慵懒、放松\",\"面部：眼神慵懒、半睁眼，从容，心事\",\"肢体动作：惬意的，慵懒的，颓废，动作幅度相对前者较小，安静\",\"image-20240213161911412\"]},\"144\":{\"h\":\"3. 汉服/旗袍\",\"t\":[\"表现：安静，清冷，温柔，武侠....\",\"肢体动作：动作幅度相对较小，仪态相对讲究；武侠类除外\",\"image-20240213162208101\"]},\"145\":{\"h\":\"4. 安静的情绪流淌\",\"t\":[\"表现：平静，安静，冷静\",\"面部：放松，眼睛微抬起，不经易感/坚定... 疏离感，很少与镜头产生互动（拍摄可以尝试多使用）\",\"image-20240213162806756\"]},\"146\":{\"h\":\"5. 强烈的情绪表达\",\"t\":[\"表现：动作，幅度较大的肢体动作\",\"利用肢体语言表达较为强烈的人物情绪状态或某种氛围；照片具有运动感或夸张的肢体表达\",\"image-20240213163536169\"]},\"147\":{\"h\":\"6. 观念摄影\",\"t\":[\"表现：人的面部表情不再重要，重要的是人与环境，人与道具的互动所传递的情绪及心理感受\",\"人的摆姿服务表达主题，通过肢体语言表达作者的意图\",\"image-20240213164414467\",\"总结\",\"不同风格不同主题的拍摄，人物的摆姿不同，表达情感不同，眼神，面部肌肉调动不同\",\"服装本身具有情绪和身份属性，某种意义上决定了美资\"]},\"148\":{\"h\":\"1.2 确定构图和视点\",\"t\":[\"确定构图及视点后，人物在框定的画面中行动\",\"元素的组织和整体视觉呈现 \",\"做减法 \",\"初期阶段，做到背景的绝对干净\",\"道具使用1-2个即可，道具之间具有相关性而非堆砌\",\"减少色彩：场景中出现的元素色彩的和谐\"]},\"149\":{\"h\":\"1.3 摆拍or抓拍\",\"t\":[\"模特并不刻意迎合摄影师，而是处在设计好的情境当中表演\",\"摄影师以旁观者的视角，恋人视角，偷窥视角....记录\",\"摆拍：大多数静态的照片，看起来非常自然的抓拍，也都是精心设计过的\",\"摆拍Tips: 人物放松，避免刻意看镜头，人物处在整个环境和设定的情绪中，与周围环境或道具互动，或有运动趋势\",\"image-20240213165759203\",\"抓拍：旋转，奔跑等瞬间性动作需要抓拍\",\"抓拍tips: 构图找好机位，模特在固定范围内重复同一活动，不要超出画框外，注意控制面部表情，服装等\",\"image-20240213172852972\"]},\"150\":{\"h\":\"1.4 确定美姿\",\"t\":[\"基本形体动作 \",\"站、坐、躺、趴、侧卧、走、靠、跳、转圈、跑.....\",\"面部表情 \",\"大笑，微笑，不笑，悲伤，无表情....\",\"肢体的摆放 \",\"手，脚\"]},\"151\":{\"h\":\"1.5 拍摄角度\",\"t\":[\"确定动作的同时，构思好拍摄角度，并采用多机位方式，表达同一场景和动作\",\"正面、侧面，正侧面，背面，平拍，俯拍，仰拍\",\"来回走到，观察取景器里的成像\"]},\"152\":{\"h\":\"1.6 调动情绪\",\"t\":[\"人物做好以上准备后，摄影师根据拍摄风格，机位角度等，调动模特的面部情绪或肢体情绪\",\"面部情绪多由眼睛/眉毛/嘴唇来表达\",\"眉毛：前期化妆，眉形可以改变人物性格\",\"人物的妆容影响到整体情绪状态\"]},\"153\":{\"h\":\"1.7 眼神的方向\",\"t\":[\"眼睛是人像摄影中非常关键的部分，眼神饱含的情绪和眼神的方向，都向观众传递了某种信息\",\"电影感，情绪的塑造中，减少模特与镜头的交流感，强化与环境，道具的交流，弱化镜头存在\",\"image-20240214164711162\",\"​ \"]},\"154\":{\"h\":\"1.8 总结\",\"t\":[\"人物的面部，肢体避免在照片中以直线或直面形式出现\",\"利用道具/场景/形体动作制造三角\",\"服装设计/道具选用/发丝/形体等制造曲线\",\"美姿不仅是人物形体的引导，不能拆分其他内容，单独看美姿\"]},\"155\":{\"h\":\"2. 站姿\"},\"156\":{\"h\":\"2.1 站姿--人物正面/正侧面\",\"t\":[\"面部方向 \",\"丰富化，可以正面看镜头，上下左右，低头...抬头时角度不能过大\",\"脸的比例 \",\"拍正侧脸时注意两边脸比例，远离镜头一侧的脸不能占比太小，拍正脸，3/4脸\",\"脑袋方向 \",\"垂直面直视镜头或偏向一侧，偏向一侧时更为自然\",\"眼神方向 \",\"直视镜头时对眼神表达要求高\",\"肢体 \",\"注意四肢的协调和道具配合使用，尽量避免双手垂直站立，放松，肩下沉，避免含胸驼背。\",\"脸面/胸面/腿面避免同时正对镜头，美姿的自然保证不在同一个平面上\",\"大臂与小臂之间呈一定角度而非直线\",\"image-20240214153702708\",\"image-20240214153846189\"]},\"157\":{\"h\":\"2.2 站姿--侧面\",\"t\":[\"侧面镜头增大人物与环境的交流感，平视，低头，抬头，此时应注意眼睛看向物体的角度和方向\",\"眼神寻找焦点，或与环境/道具互动\",\"image-20240214154315309\",\"image-20240214154342651\"]},\"158\":{\"h\":\"3. 坐姿\",\"t\":[\"一切可以坐的地方，地面，台阶，椅子，窗边，石头，树干.....\",\"拍摄Tips\",\"拍摄正面时，尽量避免关节位置正对镜头，侧向一边，注意腿的延伸感\",\"拍摄侧面时，膝盖高度平齐或增加层次感，一高一低，一前一后，脚尖不能歪曲，肢体形成三角形\",\"拍背影脚的摆放，正面向前或向侧面摆放\",\"脸的方向：低头，正面向前，脑袋微侧看一边\",\"手的摆放：放在腿上；手掌/手肘撑地；抬起和环境道具互动....\",\"image-20240214155231445\",\"image-20240214155538678\"]},\"159\":{\"h\":\"3. 躺姿\",\"t\":[\"一切可以躺的地方，地面，石头，台阶，床...\",\"一般为平躺，侧躺\",\"拍摄tips\",\"脑袋不能陷下去会突出脸大，窒息感\",\"除倒置构图外，其余角度构图避免拍摄模特正脸，多拍侧脸（重力作用面部塌陷）\",\"轮廓不清晰的模特，圆脸，双下巴...避免躺姿，或者使用道具遮挡下巴或面部\",\"手部姿势\",\"张开平放或打三角，放在腰部，根据具体拍摄选择\",\"腿部姿势\",\"侧躺时，一高一低，一条腿压在另外一条腿上，折三角制造曲线，注意藏小腿肉；或打直或弯曲形成三角形\",\"拍躺姿时，可适当使用对角线构图\",\"高机位俯拍，平拍\",\"image-20240214160533381\",\"image-20240214160923783\"]},\"160\":{\"h\":\"4. 靠姿(用得多)\",\"t\":[\"一切可以靠的地方：树，窗边，门框，墙，柱子，石头....\",\"拍摄tips\",\"身体支点 \",\"头靠，肘靠，肩靠，背靠，腰靠，屁股靠，坐靠，站靠.....\",\"肩靠：身体与墙面形成锐角，微微挺胸挺腹，靠太紧形体相对拘谨\",\"胳膊肘靠：单手靠墙靠桌等\",\"肢体放松，配合道具使用\",\"image-20240214161903894\",\"​ \"]},\"161\":{\"h\":\"5. 趴姿\",\"t\":[\"草地，窗台，窗户，床，桌子\",\"拍摄tips\",\"趴姿从侧面可以突出人体背部的曲线，正面拍会露，尽量避免，道具遮挡\",\"上半身不能太贴近地面（特殊题材除外）\",\"脚部动作，拍摄全身时，可以双脚离地翘起，也可以身体微侧一只脚在上另一只在下制造线条层次感\",\"image-20240214162526807\"]},\"162\":{\"h\":\"6. 走/跑\",\"t\":[\"运动镜头本身具有律动感，情绪张力\",\"拍摄tips \",\"走姿可摆拍，但要揣摩运动趋势调整形体\",\"拍摄背面及侧面，剪影更容易出效果，正面需要模特控制面部表情和眼神方向等难度高\",\"小范围内重复动作，观察调整模特形体，表情，轮廓，服装等，重复拍摄获取最佳画面\",\"连拍模式\",\"结合慢门拍摄\",\"跑姿基本都是抓拍，人物表情及面部不是重点，但拍摄到面部依旧要注意面部表情\",\"image-20240214163046176\"]},\"163\":{\"h\":\"7. 旋转\",\"t\":[\"运动镜头本身具有律动感，情绪张力\",\"拍摄tips\",\"可平拍，尝试低机位或高机位拍摄，视觉张力较强\",\"保证形体的舒展，胳膊一高一低有层次感，避免手伸的过直或过高\",\"找好动作及角度可摆拍\",\"image-20240214163555229\"]},\"164\":{\"h\":\"4. 不同五官人群拍摄技巧\"},\"165\":{\"h\":\"1. 三庭五眼\",\"t\":[\"脸长与脸宽的一般标准比例\",\"三庭\",\"将头部上下分为三等分\",\"从前额发际线至眉骨，从眉骨至鼻底，鼻底至下颌，各占脸长的1/3\",\"五眼\",\"脸的宽度比例\",\"以眼睛长度为单位，把脸的宽度分为五等分，从左侧发际线到右侧发际线为无知眼睛，各占脸宽的1/5\",\"image-20240214165907526\"]},\"166\":{\"h\":\"2. 人脸的凹凸面\",\"t\":[\"人脸的凸面 \",\"额头，眉骨，鼻梁，颧骨\",\"人脸的凹面 \",\"眼窝、眼球与鼻梁之间的凹面、鼻梁两侧、面中、人中沟、颏唇沟\",\"了解三庭五眼和人脸的骨骼结构，可以帮助我们在前期化妆和修图的时候对人物的面部进行调整，使人的脸更加立体，但要尊重个体的差异化\",\"image-20240214170801672\"]},\"167\":{\"h\":\"3. 不同五官人群前期化妆&拍摄技巧\"},\"168\":{\"h\":\"1. 三庭比例\",\"t\":[\"上庭过长 \",\"加刘海，发丝\",\"上庭过短 \",\"不能露发际线，刘海不能太长，蓬松头顶视觉上拉长上庭\",\"中庭过长 \",\"中庭过长时刘海不能太长，眉峰不能挑太高，可以加卧蚕弱化人物中庭的比例\",\"下庭过长 \",\"拍摄时可让被摄者低头，避免仰拍视角\",\"下庭过短 \",\"人中短，可以化咬唇妆，嘴巴不要化太满；下巴短，遮下唇，高光提亮下庭，延伸下巴长度\"]},\"169\":{\"h\":\"2. 轮廓\",\"t\":[\"轮廓鲜明\",\"拍摄时可使用柔光将五官柔化，利用发丝修饰脸型\",\"脸宽/圆\",\"用头发挡脸，视觉上让人脸看起来更小更瘦\",\"仰拍时下颌线看起来是方形，尽量避免\",\"低头容易出双下巴，微微颔首或15-45度抬头（下颌线拉伸）\",\"轮廓圆润\",\"微笑/露齿笑可以提升面部让下颌线明显，少拍仰拍镜头下巴圆润\",\"月牙型脸\",\"少拍侧脸或道具遮挡\",\"面部扁平\",\"多拍正脸正侧脸，借助光线塑造面部立体感；使用道具\"]},\"170\":{\"h\":\"3. 发丝修饰脸型\",\"t\":[\"拍摄tips \",\"发根蓬松（假发片/玉米夹/卷棒）\",\"头发不能贴头皮，头发多视觉上显脸小\",\"刘海或鬓角的碎发用来修饰脸型，避免头发丝过长，不能长过下巴；修饰脸型的发丝需要有层次感\",\"修饰脸型的头发之间，不能过于结块，两缕头发之间不能有大面积留白\",\"发丝让照片更有风吹过的感觉，照片更灵动\",\"image-20240214175644048\",\"image-20240214180417790\"]},\"171\":{\"h\":\"4. 额头和眼睛\",\"t\":[\"额头过于饱满 \",\"刘海遮挡，颅顶蓬松，没有刘海避免拍太多正脸, 可仰拍弱化额头存在感\",\"额头扁平 \",\"刘海遮挡，没有刘海避免拍摄太多侧面后期液化\",\"眼睛外凸 \",\"哑光眼影视觉收缩，画卧蚕提亮卧蚕，画眼线拉长眼睛视觉上看起来不鼓\",\"大小眼 \",\"前期化妆/双眼皮贴，眼睛小的一边可以靠近镜头\",\"眼睛太小 \",\"尽量避免过多看下方的镜头，平视或往上看15度左右\",\"眼睛太大 \",\"尽量避免过多看上方的镜头，眼睛不能睁太大，往下看15-30度左右\",\"肿眼泡 \",\"不用粉色系眼影，大地色消肿\",\"眼距过宽 \",\"眼头用哑光高光点一下，视觉上缩短眼距，后期\",\"眼距过短 \",\"着重加重眼尾，视觉上拉长眼距，后期\",\"美瞳 \",\"瞳色自然，褐色/咖色/浅棕，直径不能过大\"]},\"172\":{\"h\":\"5. 鼻子\",\"t\":[\"鼻基底塌陷 \",\"前期提亮鼻基底\",\"鼻梁塌陷 \",\"前期化妆使鼻子更立体，可以使用前侧光侧光光位拍摄让面部更立体\",\"鼻梁不正 \",\"鼻子歪很严重的时候尽量避免拍正脸，多拍正侧脸侧脸\",\"鼻孔大/朝天 \",\"少拍正面或微低下巴，弱化缺陷\",\"image-20240214185601016\"]},\"173\":{\"h\":\"6. 嘴巴\",\"t\":[\"嘴凸下巴短 \",\"少拍正侧面或微低下巴，弱化缺陷，多拍正面，少拍侧面正侧面，拍时可以使用道具遮挡\",\"下巴刻意前倾，上下牙齿对齐，嘴巴放松，可以微笑拍侧脸，露齿笑拍侧脸，嘴巴后缩下巴往前伸露齿笑加仰头，下颌线更加清晰\",\"嘴唇很丰满 \",\"遮瑕遮上下唇,口红不能涂满，咬嘴唇\",\"牙套/牙齿不整齐 \",\"戴牙套也会嘴凸，牙齿不整齐少露牙齿，闭嘴巴\",\"适合大多数模特的tips \",\"嘴呼吸，嘴巴张一道缝，舌头抵上颚，抿嘴时嘴角的纹路加深\"]},\"174\":{\"h\":\"4. 胖\",\"t\":[\"不能穿过于宽松的衣服，不能显胸太大，服装选择要相对收腰\",\"拍摄时注意四肢形体的舒展，肢体不能挤在一起，否则后期液化难度高\",\"拍摄时要给后期留够空间，构图不能太紧\",\"拍半身或特写时可以使用前景构图或道具遮挡，尽量少拍大特写\",\"利用光线，光影制造氛围感\",\"选择尺码合适的衣服，太紧会放大缺点后期困难\",\"斜方肌太厚\",\"可穿挂脖裙，挂脖吊带，宽肩带遮挡\"]},\"175\":{\"h\":\"5. 瘦\",\"t\":[\"过于瘦的人，大多数会溜肩，前期准备垫肩神器\",\"穿吊带拍摄时可以肩部外旋，使肩部变高\",\"太瘦的人尽量少俯拍，否则会显得头过大\",\"可以多拍背和锁骨，凹出背后脊柱骨感\"]},\"176\":{\"h\":\"5. 丰富美姿，弱化摆拍感技巧\"},\"177\":{\"h\":\"1. 拍摄景别/角度的多样性\",\"t\":[\"多景别拍摄 \",\"远全中近特\",\"同一场景同一动作的不同角度拍摄 \",\"结合横竖构图\",\"同一角度不同动作\"]},\"178\":{\"h\":\"2. 拍摄机位的多样性\",\"t\":[\"平拍/仰拍/俯拍\",\"俯仰角度的变化\",\"大角度小角度\"]},\"179\":{\"h\":\"3. 变化姿势/眼神方向\",\"t\":[\"站+坐+靠+躺+趴+走+跑+转圈+跳舞....\",\"让人物充分与环境互动而非一直站着或坐着\",\"手的位置和姿势变换\",\"同一动作眼神方向不同（结合构图）\",\"抬头，低头，侧视，闭眼，正视镜头.....\"]},\"180\":{\"h\":\"4. 与画外空间互动\"},\"181\":{\"h\":\"5. 动作的组合叠加\",\"t\":[\"人的五官四肢形体配合完成一件事情或一个动作\",\"书\",\"看书\",\"看书+走路\",\"看书+走路+抽烟\",\"看书+走路+抬头看远处+陪体\",\".......\"]},\"182\":{\"h\":\"6. 同一道具的多样性使用\",\"t\":[\"花 \",\"手拿花\",\"嘴巴咬着花\",\"头发里编花\",\"手捧着花瓣\",\"花瓣洒在空中\",\"放在锁骨上/背上\",\"作为陪体放在环境中\",\"作为前景\",\"总结\",\"摆姿绝不是为了单纯的好看，为了取悦于人，它更是摄影者与被拍摄者的艺术素质、文化层次的最客观、最直接的反映\"]},\"183\":{\"h\":\"七、电影氛围感构建\"},\"184\":{\"h\":\"1. 什么是情绪风\",\"t\":[\"任何一种照片都包含了情绪表达\",\"默认的情绪风，弱化了人的五官在画面中的重要程度，要注重人与环境的关系，人的情绪状态\",\"即：构图，光影，道具的使用及画面呈现出来的整体氛围及观众心理距离\",\"拍摄者的观点，态度传递\",\"人是主体，也不是主体\",\"主体是人与环境的关系/情绪/甚至光影\"]},\"185\":{\"h\":\"2. 情绪的表达\",\"t\":[\"统一的情绪表达 \",\"某种情绪贯穿照片始终\",\"多样的情绪表达 \",\"由一种情绪转向另一种情绪（环境，光线，道具，动作，表情道具....的变化）\"]},\"186\":{\"h\":\"3. 电影氛围感的构建\"},\"187\":{\"h\":\"1. 什么是电影感\",\"t\":[\"电影感并非一种风格，而是一种感觉。故事感，整体基调，或者说叙事手段，日系，法式，港风，文艺，科幻，悬疑....\",\"电影网站：flimgrab\",\"image-20240217075114574\",\"image-20240217075150065\",\"image-20240217075220642\"]},\"188\":{\"h\":\"2. 一部电影的记忆点\",\"t\":[\"一个完整的故事，一个小故事，某个瞬间，单个镜头的呈现\",\"整体基调（色调，影调，情绪）\"]},\"189\":{\"h\":\"3. 如何策划一场特定情绪拍摄\",\"t\":[\"明确情绪状态 \",\"孤独，自由，疏离，慵懒....\",\"服装，场景，影调\",\"如何表达 \",\"联想法 \",\"设定故事情境---讲故事\",\"如何通过人与环境/道具的结合表达\",\"人在这种状态下会做什么事情，什么动作 \",\"分镜，动作拆解\",\"保证基本人好看的前提下，每一个镜头的出现都是为情绪主题服务\",\"不要为了拍而拍\"]},\"190\":{\"h\":\"4. 如何讲故事\",\"t\":[\"叙事六要素 \",\"时间---拍摄时间\",\"地点---拍摄场地\",\"人物----模特\",\"起因\",\"经过\",\"结果 ----- 讲故事，代入情境\"]},\"191\":{\"h\":\"5. 电影感风格拍摄tips\",\"t\":[\"分镜头梳理\",\"人物镜头\",\"空镜头 \",\"交代环境\",\"丰富内容\",\"烘托情绪--- 不同空镜头交代人物所处的环境，代表不同的情绪和心理变化\",\"人物动作分镜拆解\",\"动作拆解 \",\"连贯动作拆解\",\"同一动作，多机位，多景别拍摄\",\"脸部 \",\"眼睛，嘴巴，耳朵...特写\",\"身体特写 \",\"手，锁骨，脚，背......\",\"衣着特写 \",\"衣口，袖口，领口，裙摆，配饰\",\"道具特写 \",\"传达信息，暗示人物命运，心理活动，隐喻\",\"景别\",\"多景别拍摄 \",\"想要强调情绪，强化观众心理感受的重要手段之一：增加镜头数量\",\"画面涵盖全景，中景，近景，特写，空镜头\",\"案例\",\"同一动作不同角度构图拆解\",\"image-20240217081143880\",\"连贯动作拆解\",\"image-20240217081440052\",\"同一/连贯动作多机位/景别拆解\",\"image-20240217081655295\",\"image-20240217081801737\",\"肢体动作拆解\",\"全景+中近景+肢体特写\",\"image-20240217082101191\",\"image-20240217082256628\",\"焦段的选择对表达主体的影响\",\"广角镜头可以代入环境，交代更多的元素，长焦镜头在横向空间上取景元素少，更利于表达人物主体\",\"同一组拍摄中使用不同焦段镜头来强化视觉/心理感受\",\"影调\",\"大多数的电影影调为低调和中调，强调明暗对比，画面的层次感\",\"画幅\",\"以横屏拍摄为主\",\"横屏包含的画面信息更多，强化空间，便于整体氛围构造\",\"画幅也包含了情绪\",\"人物和观众之间的距离，疏离感\",\"1.85：1（推荐）\",\"主流电影画幅，接近16：9\"]},\"192\":{\"h\":\"4. 氛围感构建\"},\"193\":{\"h\":\"1. 宏大场景构建\",\"t\":[\"image-20240217092130591\"]},\"194\":{\"h\":\"2. 光影丰富空间层次\",\"t\":[\"image-20240217092246444\"]},\"195\":{\"h\":\"3. 剪影\",\"t\":[\"image-20240217092545771\"]},\"196\":{\"h\":\"4. 风的自由感\",\"t\":[\"image-20240217092712812\"]},\"197\":{\"h\":\"5. 发丝塑造的自由感\",\"t\":[\"image-20240217092833658\"]},\"198\":{\"h\":\"6. 细枝末节的情绪感受\",\"t\":[\"image-20240217093659902\"]},\"199\":{\"h\":\"7. 空间介质的利用\",\"t\":[\"烟、雾、雨丝、水滴、雪、灰尘、飞鸟、树叶、花瓣....\",\"image-20240217094024669\"]},\"200\":{\"h\":\"8. 留出想象空间\",\"t\":[\"image-20240217094219030\"]},\"201\":{\"h\":\"9. 道具的隐喻与象征\",\"t\":[\"image-20240217094540046\",\"image-20240217094845167\"]},\"202\":{\"h\":\"10. 让画面动起来\",\"t\":[\"image-20240217095117796\"]},\"203\":{\"h\":\"11.总结\",\"t\":[\"氛围感构建手法可多种叠加使用\"]},\"204\":{\"h\":\"5. 画面张力构建\"},\"205\":{\"h\":\"1. 焦段和视点\",\"t\":[\"焦段 \",\"短焦更容易形成畸变塑造画面张力----视觉冲击力强\",\"长焦镜头----平静水面下的暗涌\",\"视点 \",\"俯仰关系/距离关系\",\"俯角和仰角的角度越大，高低越高或越低，越具有画面张力\"]},\"206\":{\"h\":\"1. 平拍视角\",\"t\":[\"中焦/长焦镜头平拍时，构图上相对平稳，难以单纯使用焦段突出画面张力\",\"需要道具，肢体或环境的配合构建画面张力\",\"image-20240217095627321\"]},\"207\":{\"h\":\"2. 俯拍视角\",\"t\":[\"俯拍视角区别于平拍视角，且本身具有主观色彩\",\"高机位俯拍人物时，一般使用短焦段镜头或中焦镜头\",\"使用短焦镜头时，需注意人脑袋的比例和形体的比例，避免失调\",\"注意注重人脸的角度和肢体的摆放\",\"image-20240217095849891\"]},\"208\":{\"h\":\"3. 仰拍视角\",\"t\":[\"仰拍视角区别于平拍视角，且本身具有主观色彩\",\"仰拍人物角度过低时，避免拍摄正面脸或低头，注意人物轮廓及光线，尽量拍摄侧脸\",\"适合下颌线比较明显的对象拍摄，下颌线轮廓不够突出时，可以使用道具遮挡的方式进行拍摄\",\"镜头的选择：标准镜头/小广角/广角\",\"image-20240217100310032\"]},\"209\":{\"h\":\"2. 肢体语言的力量\",\"t\":[\"肢体所展现的是精神的外化，我们可以通过人的肢体动作，感知到人的情绪状态及性格\",\"信息传递：人物状态及性格（自由，孤独，挣扎，欲望，孤离）\",\"人与自然的关系\"]},\"210\":{\"h\":\"1. 手部动作---感染力的释放\",\"t\":[\"image-20240217100839775\"]},\"211\":{\"h\":\"3. 面部情绪\",\"t\":[\"面部情绪不仅只是单纯的笑或不笑，眉毛，眼神，嘴巴都可以用来表达复杂的情绪\",\"image-20240217101135969\"]},\"212\":{\"h\":\"4. 在照片中制造冲突\",\"t\":[\"场景情绪与人物情绪的冲突/环境状态与人物状态的冲突\",\"环境的美好/破败--人的颓败/新生\",\"不符合人物性格/身份或场景的道具\",\"反季拍摄\"]},\"213\":{\"h\":\"5. 物哀美学\",\"t\":[\"人类本身对死亡，美好事物，凋零，破碎，带有悲悯之心\"]},\"214\":{\"h\":\"拍摄\"},\"215\":{\"h\":\"1.构图方法\"},\"216\":{\"h\":\"1.1 中心构图法\",\"t\":[\"主体放在画面中心\",\"优点 \",\"主图突出\",\"画面左右平衡\",\"image-20240121120507375\"]},\"217\":{\"h\":\"1.2 水平线构图法\",\"t\":[\"已地平线和水平线构图为基准\",\"通常应用在地平线、水面、建筑等场景拍摄\",\"优点 \",\"能够表现出宽阔稳定\",\"image-20240121120901733\"]},\"218\":{\"h\":\"1.3 垂直线构图法\",\"t\":[\"画面中以垂直的线条为主\",\"被拍摄物体自身就符合垂直线特征\",\"例如树、柱头\",\"能够体现景物的高大和深度\",\"image-20240121120952622\"]},\"219\":{\"h\":\"1.4 三分构图法\",\"t\":[\"将被摄人物放在三分线四个交汇点中的任意一个\",\"image-20240121121338246\",\"横排、竖排都是一种三分构图法\",\"image-20240121121230950\"]},\"220\":{\"h\":\"1.5 对称构图法\",\"t\":[\"按照一定的对称轴或对称中心，使画面中的景物形成轴对称或者中心对称\",\"image-20240121121444850\"]},\"221\":{\"h\":\"1.6 对角线构图法\",\"t\":[\"主体沿画面对角线的方向排列\",\"体现出动态不稳定性或生命力的感觉\",\"会让画面有一种舒展感，同时让画面饱满，视觉体验更加强烈\",\"image-20240121121917289\"]},\"222\":{\"h\":\"1.7 引导线构图法\",\"t\":[\"利用线条引导观者的目光，使之汇聚到画面的焦点\",\"引导线不一定是具体的线，但凡是有方向连续性的东西，都可以称作引导线\",\"现实中道路河流颜色阴影，甚至人的目光都可以当作引导线使用\",\"image-20240121122139772\"]},\"223\":{\"h\":\"1.8 框架式构图法\",\"t\":[\"将画面重点利用框架，框起来的构图方式\",\"会引导观者注意框内的景象，产生跨过门槛进入画面的感受\",\"也能够让画面更加的干净，更加的有层次感\"]},\"224\":{\"h\":\"2. 如何进行高效的美姿和引导\",\"t\":[\"在拍摄的时候多变化模特的状态 \",\"比如在场景拍摄过程中，可以让模特做抬头、低头、睁眼、闭眼、看镜头\",\"看远方、撩头发、左右看、脚步动起来、走起来等等状态的改变\",\"自己的拍摄机位也需要不断的做改变 \",\"同一个场景可以近距离、远距离、高机位、低机位\",\"可以拍特写、也可以拍全身\",\"在进行美姿的时候，要根据现场光线情况和环境情况，进行对应的呼应\",\"拍摄时需要有很好的节奏，以及对拍摄者的鼓励 \",\"在拍摄过程中不断的对模特进行鼓励，和夸奖\",\"总结\",\"我们在拍摄全身的时候无论是站姿还是坐姿我们都要将脚向画面的边缘延伸一点才能拍出大长腿\",\"在美姿引导过程我们不要生拉硬套更大的是发现没，发现适合这人美的一面边拍边去做调整\",\"室内拍摄我们也要遵循人物迎合光线，在拍摄的过程中多注意细节的调节\",\"image-20240122231000521\"]},\"225\":{\"h\":\"3. 我们到底该拍什么\",\"t\":[\"一张好照片应该具有的元素 \",\"光影 \",\"摄影的底层逻辑就是光影的艺术\",\"随时发现阳光照射到各种环境后产生的美妙的光影的变化\",\"情绪 \",\"避免呆板的人物摆拍\",\"多引导人物和环境进行自然的互动\",\"抓拍人物的动感和情绪，拍出自然流露的照片\",\"人景结合\",\"成组性思维 \",\"兼顾不同的光线，不同的内容\",\"拍构图 \",\"掌握常见的构图技巧\"]},\"226\":{\"h\":\"4. 场景实操\"},\"227\":{\"h\":\"4.1 旅游打卡宽窄巷子一\",\"t\":[\"背景：人太多\",\"思路： 长焦+低角度+同一元素的背景\",\"长焦：可以有效的减少到背景拍到的内容，使得画面更加干净\",\"低角度：可以有效的避开人群和杂乱\",\"让模特找到高位置地方站立\",\"构图上：采用竖构图的三分构图法，头部放在画面的三分之一处，做到很平竖直\",\"总结\",\"在特色景区拍照我们最重要就是要做到规避杂乱\",\"在选景这块我们更多的是找干净的门店做背景\",\"采用长焦+低角度+统一元素的背景\",\"构图做到横平竖直\",\"image-20240121172121362\",\"image-20240121172219306\"]},\"228\":{\"h\":\"4.2 旅游打卡宽窄巷子二\",\"t\":[\"总结 \",\"我们在一些特色建筑内部拍摄的时候，在选景上我们一定要选择暗部背景\",\"或者选择有纵深感的通道作为背景\",\"人物的面部一定要去迎合光源方向\",\"在构图上不要带到一些高亮的区域\"]},\"229\":{\"h\":\"4.3 红绳许愿墙\",\"t\":[\"拍摄思想 \",\"进入到红绳里面，拍摄人景合一的感觉\",\"第一种：红绳都是挂在高出的，构图采用横构图+低角度拍摄\",\"第二种：侧面+前景+长焦镜头拍摄，拍出虚化和纵深感\",\"image-20240121173408511\",\"​ \"]},\"230\":{\"h\":\"4.4 小拱桥\",\"t\":[\"拍摄思路\",\"错误示范：如果随手一拍，画面非常杂乱，游客太多背景不统一\",\"正确思路\",\"人物站在拱桥的最高点\",\"机位来到拱桥的最低处，形成低角度仰拍\",\"利用长焦+横构图\",\"image-20240121174120928\"]},\"231\":{\"h\":\"4.5 红墙拍摄\",\"t\":[\"拍摄思路1\",\"需要让人物靠近背景，尽量来到一个平面再进行拍摄（近大远小）\",\"利用长焦拍摄\",\"适当做一些前景\",\"image-20240121174544118\",\"拍摄思路2\",\"寻找红墙旁边有大树或者竹林的位置，阳光通过大树就能产生斑波的光影感\",\"统一的红墙有了光影感后，就会显得非常有层次，有氛围，有视觉重心\",\"让人物面部受到光的照射，适当做一些低头抬头、撩头发\",\"构图上可以只拍到红墙加光影半身构图\",\"也可以拍到一些顶部的屋檐做前景\",\"地面最好不要拍摄到\",\"image-20240121180940274\",\"拍摄思路3\",\"寻找距离墙比较近，比较矮的前景树枝或花枝做前景\",\"构图上可以把上半部分留空多一些\",\"image-20240121181343510\",\"总结\",\"遇到统一且干净的背景，这个时候直接拍摄的画面会很普通\",\"我们可以观察现场环境看看有没有阳光通过树林，竹林洒下斑驳的光影\",\"让人物的面部去迎合光线\",\"如果没有阳光就寻找前景\"]},\"232\":{\"h\":\"4.6 金合欢花\",\"t\":[\"背景\",\"image-20240121175546578\",\"拍摄思路\",\"长在高出的花的时候，基本都是要考虑局部取景\",\"只拍摄人物的半身和特写\",\"构图上背景只带到树木的上半截\",\"利用中长焦\",\"人物站在高处，低机位仰拍\",\"也可以利用顺光+侧顺光拍摄\",\"拍摄特写时，找花比较低的位置，让人物站在花丛中，形成前景的虚化感\",\"也可以从侧面拍摄\",\"也可以利用花丛做前景\",\"image-20240121175801385\",\"​ \",\"​ \",\"​ \"]},\"233\":{\"h\":\"4.7 阴天拍梅花\",\"t\":[\"背景\",\"人非常多\",\"image-20240121182152017\",\"思路\",\"利用长焦，进行背景压缩\",\"构图上，只能拍摄人物的半身和特写\",\"拍摄场景\",\"场景一：楼梯+旁边有一处花束\",\"让人物站在楼梯下\",\"横构图或者竖构图的半身拍摄\",\"image-20240121182411838\",\"image-20240121182454991\",\"场景二：和人物在同一个地平线+低机位仰拍拍摄\",\"image-20240121182704109\",\"场景三：前景、背景都比较远\",\"人物站在中间的位置\",\"image-20240121182806965\",\"场景四：靠近湖边的低矮梅花\",\"利用水面做背景\",\"人物坐在花下进行拍摄\",\"image-20240121182939176\",\"场景五：花在上层\",\"相机站在地处，形成落差\",\"image-20240121183138589\",\"image-20240121183207875\",\"总结\",\"阴天拍摄多选景，选景思路上尽量寻找从高到低的落差\",\"或者从低到高的仰拍\",\"保证背景元素的少和统一\",\"阴天的光线比较平淡，拍照的照片色彩光感都会比较普通\",\"但是优点我们不需要考虑人物和光线的方向，构图取景上更加灵活\"]},\"234\":{\"h\":\"4.8 一株小杏花\",\"t\":[\"背景\",\"image-20240121183624479\",\"拍摄思路\",\"特写和局部来表现意境\",\"不能想着拍大拍全\",\"正面拍摄或者高机位拍摄都会带到杂乱的背景\",\"image-20240121183823672\",\"需要让人物进入到花枝中，形成人景结合感\",\"然后从侧面+低机位拍摄，让树枝的背后呈现蓝天白云的元素\",\"image-20240121184038932\",\"拍正脸的时候，想要不拍到地面的杂乱，焦段用的长一些，让人物的头部充满画面，挡住后面的杂乱，利用前景的杏花形成虚化和氛围感，高机位拍摄，三分构图法\",\"、\",\"总结\",\"小景致，采用局部思维，考虑好背景的呈现内容，规避杂乱\",\"多采用相机的长焦，人物站位靠近花束\",\"构图上多采用竖构图，把人物的眼睛放在画面上部1/3的位置\"]},\"235\":{\"h\":\"4.9 逆光芦苇的拍摄\",\"t\":[\"拍摄目的\",\"拍出温暖柔和的逆光芦苇氛围感\",\"拍摄背景\",\"正午的阳光\",\"拍摄思路\",\"光线的选择 \",\"逆光面拍摄角度\",\"色温的控制 \",\"调整相机白平衡k值为6000k\",\"成片欣赏\",\"image-20240121213951581\",\"总结\",\"在正午的时刻是不太适合拍摄的，如果这个适合我们不得不拍摄，可以多选择拍摄大场景\",\"拍摄特写的时候我们多选择暗部背景，并逆光拍摄，并通过调整相机白平衡色温，来做一些颜色上的偏色\",\"正午时刻光线太强对比比较大，顺光侧顺光都不适合拍摄，多利用逆光和侧逆光拍摄\"]},\"236\":{\"h\":\"4.10 海边拍摄-洱海逆光\",\"t\":[\"拍摄背景1\",\"树林\",\"拍摄思路\",\"密集不透光的树林，不会拍到背后的高亮区域\",\"保证背景是暗部，人物才能凸显亮\",\"寻找有通道感有纵深的位置\",\"远距离+长焦拍摄人物的全身\",\"让人物站在有光线照亮的地方\",\"引导人物在通道内进行左右交叉步的运动\",\"走动的过程中人物可以抬头、低头、撩头发，拍出自然感\",\"​ \",\"拍摄背景2\",\"海边\",\"拍摄思路\",\"侧光位置拍摄，人物迎合光线\",\"低机位仰拍\",\"如果光线太强，可以利用衣袖进行遮挡\",\"image-20240121220111819\",\"总结\",\"海边拍摄要注意水平线的横平竖直\",\"广角拍摄将机位降到腰部，同时靠近模特拍出大长腿\",\"利用身边的道具让强光光线柔和，拍摄特写\",\"强光找阴影，暗部做背景，人物迎合光线，多拍侧面\"]},\"237\":{\"h\":\"4.11 海边夕阳拍摄\",\"t\":[\"拍摄思路\",\"让人物走到夕阳照射海面的高光区域\",\"多拍摄侧面和半身的照片\",\"image-20240121221317502\",\"总结\",\"夕阳多拍逆光，和侧逆光，让人物呈现剪影和半剪影\",\"改变相机的色温和白平衡偏移让画面更加温暖\",\"拍摄剪影时，将任务放在高亮区域挡住太阳，也可以让光线漏出一点拍摄星芒效果，增加氛围\"]},\"238\":{\"h\":\"4.12 海边顺光拍摄\",\"t\":[\"拍摄思路\",\"顺光拍摄由远到近，长焦远距离拍摄大景，中长焦拍摄特写\",\"利用环境拍摄大长腿，也可以降低机位，多拍水面\",\"注意水平线的对齐，人物和树干不要重叠\",\"多拍大景，多改变构图\",\"image-20240122211448873\"]},\"239\":{\"h\":\"4.12 油菜花拍摄\",\"t\":[\"拍摄思路\",\"人物需要进入花丛中央\",\"侧面低机位拍摄\",\"人物面部迎合光线\",\"也可以利用近处的花朵作为前景，利用道具制造光影\",\"image-20240122212239608\"]},\"240\":{\"h\":\"4.14 廊桥拍摄\",\"t\":[\"拍摄思路\",\"选择背景干净好看，没有杂乱，没有遮挡的桥洞进行画框构图拍摄\",\"调低色温的k值，让画面呈现冷调的感觉\",\"人物坐到桥洞的最里面\",\"利用中长焦进行画框构图\",\"image-20240122220113810\"]},\"241\":{\"h\":\"4.15 大树拍摄\",\"t\":[\"拍摄思路 \",\"多变化构图和视角\",\"顺光、逆光不同光线的尝试\",\"可以拍剪影\",\"​ \"]},\"242\":{\"h\":\"4.16 欧式大桥拍摄\",\"t\":[\"拍摄思路 \",\"由远到近，拍摄不同焦段不同构图不同的空间感\",\"人物尽量不要和桥重叠\",\"注意水平面的对齐\",\"​ \",\"image-20240122222340253\",\"image-20240122222550086\",\"总结 \",\"以后遇到这种特色建筑时候，整体拍摄思路是由远到近拍摄不同焦段不同构图，不同的空间感\",\"每个地方都要拍摄全身，半身，特写，构图上规避杂乱，同时保持水平线的横平竖直，有前景就带前景\",\"在拍摄中遇到有阳光的时候人物都要去迎合光线的方向，拍摄特写的时候我们记得找身后是暗部的桥洞\"]},\"243\":{\"h\":\"4.17 阴天拍樱花\",\"t\":[\"错误示范\",\"image-20240122223217022\",\"拍摄思路\",\"低机位仰拍\",\"半身拍摄\",\"image-20240122223304435\",\"image-20240122223725529\"]},\"244\":{\"h\":\"4.18 如何正确驾驭广角\",\"t\":[\"拍摄思路\",\"拍全身，机位需要低机位\",\"腿放到镜头边缘位置。也可以从侧面延伸\",\"让头距离拍摄顶部留出一些空间\",\"手要有弧度，另外一只手做变化\",\"广角拍摄，减少横构图\",\"拍摄半身的时候要随时改变拍摄角度，人物多做一些夸张的姿势，让画面更有冲击力\",\"拍摄特写的时候人物的手势多和镜头互动\",\"image-20240123222312676\"]},\"245\":{\"h\":\"后期lr\"},\"246\":{\"h\":\"后期ps\"},\"247\":{\"h\":\"1. 修图前准备\",\"t\":[\"减少色彩损失操作\",\"图片ps打开\",\"图像->模式->先调整为lab\",\"然后图像->模式->将lab调整为rgb\",\"修补工具 \",\"修复瑕疵\"]},\"248\":{\"h\":\"2. 快捷键\"},\"249\":{\"h\":\"2.1 图层\",\"t\":[\"创建图层组 \",\"Ctrl +g\",\"盖印图层 \",\"Ctrl+shift+alt+e\"]},\"250\":{\"h\":\"2.2 裁剪工具\",\"t\":[\"快捷键 \",\"C\"]},\"251\":{\"h\":\"2.3 液化\",\"t\":[\"调整画笔大小快捷键 \",\"按住shift+[放大\",\"按住shift+]缩小\",\"或者按照alt +鼠标右键+鼠标左右滑动\",\"刚开始练习压力调到15或者12左右\"]},\"252\":{\"h\":\"3. 修图步骤\"},\"253\":{\"h\":\"3.1 观察照片\",\"t\":[\"观察照片，分析画面内容\",\"修饰瑕疵\",\"背景穿帮\",\"做减法\",\"分析人物五官形体\"]},\"254\":{\"h\":\"3.2 修图步骤\",\"t\":[\"瑕疵修复 \",\"修补环境中的瑕疵、穿帮等\",\"保留人物面部比较有特色的痣\",\"修瑕\",\"均衡光影 \",\"面部光影重塑\",\"亮部、高光、暗部、阴影\",\"基础参数调整，控制整体影调\",\"中性灰/双曲线/高低频---人物面部光影修饰\",\"根据不同的风格进行面部修饰，注意前期用光\",\"注意：遵循人的骨骼结构，光线方向，光影\",\"磨皮 \",\"全部磨皮\",\"局部磨皮\",\"方法：高低频/画笔/插件\",\"原则：不需要整张脸磨皮，只磨瑕疵明显的部位\",\"保证五官边缘清晰\",\"保证皮肤质感\",\"除面部外、其余露出皮肤需要磨皮的地方也应该磨皮\",\"分区调色 \",\"环境色局部调色\",\"统一肤色\",\"观察照片主要颜色/人物肤色\",\"基础定调，调整曝光对比度等，大方向的色调调整\",\"分区调色：肤色/口红色/背景色/服装色/道具色\",\"液化 \",\"五官\",\"形体\",\"服装\",\"观察人物面部特点\",\"三庭五眼，弱化缺点\",\"尽可能按照人物本身的面部特点进行液化，不要进行太大幅度的改动\",\"二次构图 \",\"拉长画布\",\"做减法\",\"横竖构图变化\",\"裁剪特写\"]},\"255\":{\"h\":\"4. 中性灰修图\",\"t\":[\"整体思路 \",\"提亮该提亮的地方\",\"压暗该压暗的地方\",\"图层新建黑白蒙版\",\"图层新建曲线蒙版，把暗部往下压，亮部往上提，便于观察面部黑白灰的关系\",\"ctrl+g 将新建的创建新组\",\"按住alt然后点击图层+号，选择模式为柔光，勾选填充柔光中性灰色\",\"image-20240126231538052\",\"切换到画笔工具，快捷键b, 然后将不透明度和流量调整到10%左右\",\"image-20240126232308921\",\"比如要对人物的眼圈进行提亮，将前景色改为白色，快捷键X,然后用画笔工具在黑眼圈上涂抹\"]},\"256\":{\"h\":\"5. 高低频修图\",\"t\":[\"解释 \",\"高频：人物的瑕疵、痘痘\",\"低频: 人物的光影、色彩过渡\",\"复制两个图层，分别命名高频、低频\",\"先将高频关闭，选择低频，点击滤镜-->模糊-->高斯模糊-->将半径调整到看不到皮肤纹理为止，一般都是3的倍数\",\"打开高频图层，选中高频图层，点击图像-->应用图像\",\"图层选择：低频(之前命名的图层)\",\"混合：减去\",\"缩放：2\",\"补偿值：128\",\"image-20240126235633614\",\"在图层上方将正常改为线性光\",\"image-20240126235805808\",\"将高频和低频加入一个分组，命名高低频组，快捷键ctrl+g\",\"修复瑕疵，在高频图层进行\",\"选择低频，选择混合器画笔工具，在工具顶部选择\",\"正方形点击清理画笔\",\"image-20240127000736954\",\"将右侧参数：潮湿、载入、混合、流量先调到20%左右\",\"image-20240127000907200\"]},\"257\":{\"h\":\"6 .双曲线修图\",\"t\":[\"思路\",\"借助dr5插件的d/b处理\",\"image-20240127002202316\",\"点击D/B处理，勾选1、3选项\",\"image-20240127002330637\",\"点击完成后会生成四个图层\",\"一个黑白观察层\",\"一个加深，一个减淡图层\",\"image-20240127002555633\",\"点击减淡图层（减淡图层最右边的那个），选择画笔，选择柔边缘，适当调整不透明度和流量，流量一般调到15%，画笔尽量调小一点\",\"​ \",\"​ 5. 如果涂的太亮，想擦擦一点，选择橡皮擦工具，快捷键E\"]},\"258\":{\"h\":\"7. 调色\"},\"259\":{\"h\":\"7.1 前期定调\",\"t\":[\"风格及情绪表达 \",\"色彩的情绪性，风格某种意义上决定了照片的基调\",\"主要有：亮调、暗调、冷调、暖调\",\"前期影调的建立 \",\"拍摄时间：日出之前及太阳下山后前后更容易拍出暗调的片子\",\"自然光条件下，同一时刻内，内景较外景更容易拍出暗调的片子\",\"光位的选择\",\"深色的背景相较亮色的背景更容易拍出暗调的片子\",\"前期色调的建立 \",\"色调：场景选择、服装色彩、色彩环境、光色、道具色\"]},\"260\":{\"h\":\"7.2 调色步骤\",\"t\":[\"lr基础定调 \",\"整体色调偏好（冷暖明暗）\",\"基础曝光调整，主色调\",\"ps精细调色 \",\"背景色/道具色/肤色/口红色/服装色\",\"分区调色\"]},\"261\":{\"h\":\"8 .修图小技巧\"},\"262\":{\"h\":\"8.1 均衡肤色\",\"t\":[\"背景 \",\"人物脸部亮，肩膀暗，肤色不统一\",\"思路 \",\"使用曲线，将肩膀暗部提亮\",\"操作步骤 \",\"新建曲线，调亮\",\"选择新建图层，ctrl + i 反选\",\"然后用画笔工具将暗处涂亮，不透明度和流量开到100%\"]},\"263\":{\"h\":\"四 学习方法\"},\"264\":{\"h\":\"1 审美提高\",\"t\":[\"每天至少10分钟审美提升 \",\"技术决定下限、审美决定上限\",\"分类总结 \",\"不同道具的使用\",\"光影\",\"色彩搭配\",\"构图\",\"建立阅片思维\"]},\"265\":{\"h\":\"2 多拍摄实战\",\"t\":[\"拍摄策划，不要盲目凭感觉拍摄 \",\"有目的的进行拍摄\",\"服装+场地\",\"样片\",\"分镜头\",\"更看重质量而非量，在保证质量的前提下，提高数量\",\"保证每周至少1-2组\"]},\"266\":{\"h\":\"3 复盘拍摄\",\"t\":[\"翻车的照片需要进行总结\",\"分析自己做的不好和好的地方\",\"分析别人的作品和自己的相比到底好在哪里\"]},\"267\":{\"h\":\"4 思考\",\"t\":[\"当下最需要解决的问题是什么\",\"自己的学习和成长节奏是否需要调整\"]},\"268\":{\"c\":[\"人像摄影\"]},\"269\":{\"c\":[\"人像摄影\"]},\"270\":{\"h\":\"相机\"},\"271\":{\"h\":\"摄影基础知识\"},\"272\":{\"h\":\"曝光三要素\"},\"273\":{\"h\":\"快门\",\"t\":[\"1/20(慢) 1/50 1/100 1/1000(快)\",\"快门速度快，数值小\",\"快门速度慢 数值大\",\"快门快，它吃进去的光少，画面就暗 快门慢，它吃进去的光多，画面就亮\",\"总结：快门快，画面暗；快门慢，画面亮\",\"快门快，吃的是一瞬间的关，画面不拖 快门慢，吃的是一段时间的光，画面拖 总结二： 快门快，画面清晰；快门慢，画面拖影\",\"常规题材\",\"人文题材 新闻报道 快门速度1/125\",\"行人 跑动的小孩 快门速度 1/500\",\"记录飞机，子弹撞击等高速抓拍，需要超高速快门 快门速度 1/2000左右 环境光线好的地方拍\",\"体育运动，奔跑的动物，水花，飞鸟 需要快门速度 1/1000 左右\",\"拍摄雨丝，画面更有动感 1/15 - 1/60 需要三脚架固定\",\"拍摄追焦效果，主体清晰，背景虚化模糊 1/15 - 1/60\",\"瀑布水流拉丝效果 小溪河拍出水面雾化效果 快门5秒-10秒 需要三脚架 光圈F/22左右\",\"车轨 烟花 需要快门速度 5秒-10秒 光圈 F/16\"]},\"274\":{\"h\":\"光圈\",\"t\":[\"数值小 光圈大\",\"光圈调大，画面亮 光圈调小，画面暗 什么道理？ 光圈大，光吃得多，画面就亮 光圈小，光吃得少，画面就暗了\",\"总结：光圈大，画面亮；光圈小,画面暗\",\"光圈还有一个作用：景深 光圈调大，背景虚化 光圈调小，整体清晰 总结2：光圈大，背景虚化；光圈小，整体清晰\",\"人像 静物需要突出主体，背景虚化 F/2.8\",\"人文纪实 交代环境 突出主体保留一定背景层次 F/5.6\",\"风光 产品 商业人像 全局清晰 F/11\",\"画质-最佳画质光圈-一般在最大光圈缩小2-3个挡位\"]},\"275\":{\"h\":\"ISO\",\"t\":[\"感光度调高，画面亮, 图片画质越差，有噪点 感光度调低，画面暗 iso高，噪点多；iso低，噪点少\",\"最重要判断 80% 按这三个数值参考\",\"环境亮度足够 太阳天 室内光线充裕 ISO: 100\",\"环境亮度一般 阴天 树萌 室内环境一般 ISO: 200 -320\",\"环境亮度较弱 清晨 傍晚 夜景 室内 ISO: 800\",\"偶尔遇到 太暗 拍到比拍好重要，可以调大iso\",\"经常遇到 太暗 拍好比拍到重要 需要打光 补光\",\"综合练习\",\"如果在一个阳光灿烂的中午拍摄出有虚化的小花\",\"光圈：F2.8 快门：1/500 感光度：最低\",\"如果拍一个在夜晚跑步的人\",\"光圈：F2.8 快门：1/250 感光度：800\"]},\"276\":{\"h\":\"机位\",\"t\":[\"简而言之：相机的位置，主要有\",\"高度: 平视机位 高机位 低机位置\",\"角度：正面 侧面 反面\",\"距离：取景范围（远(远景拍摄) 全(全景) 中 近 特）\",\"平视机位：相机与相机取景框中的中心对焦点\",\"优势：\",\"真实感 证件照 肖像照 人文纪实\",\"突出人物情绪-- 近景 特写\",\"劣势：\",\"平平无奇\",\"不拍：远全 全景 中景\",\"进一步拔高平视机位拍摄水平\",\"平视机位--高15度 ，低15度\",\"强化 1.拍摄风格--甜美-高 2. 人物情绪-开怀大笑\"]},\"277\":{\"h\":\"相机挡位\",\"t\":[\"AV/A 挡： 光圈优先挡位，满足日常人像、静物拍摄；感光度、光圈可调，快门速度自动，曝光补偿有效\",\"TV/S 档： 快门优先挡位，满足日常风光，运动；感光度、快门速度可调，光圈自动，曝光补偿有效\",\"P档： 程序自动，感光度可以调，光圈和快门速度自动，曝光补偿有效果\",\"auto档： 全自动，都不可以调\",\"M档：手动曝光，全部可调，曝光补偿无效\"]},\"278\":{\"h\":\"二次构图\",\"t\":[\"找问题\",\"主体\",\"衬体\",\"背景\",\"解决依据- 构图-画面安排-光影比例-色彩比例 构图法则\",\"横构图：强调画面环境感的\",\"竖构图：人物-形象 建筑-高 宏伟\",\"修图软件 ps\",\"裁切（c）\",\"矩形选取工具 (m)\",\"自由变换工具 (ctrl +t)\",\"高级技法\",\"扩充构图法-裁切扩展-矩形选区工具-自由变换工具\",\"常见构图方法\",\"三分法\",\"对称法\",\"十字法\",\"画框法\",\"引导线法\",\"平衡/非平衡法\",\"风格定位\",\"影调\",\"光影： 高调 低调 中调 柔调 硬调\",\"色彩：冷调 暖调 对比调 调和调 纯调 灰调\"]},\"279\":{\"h\":\"构图\",\"t\":[\"高机位\",\"低机位（低视角拍摄）：拍儿童，拍动物，也可以仰拍\",\"减法原则1\",\"照片应讲清楚：什么人，在哪，干什么\",\"裁切（舍去多余物体，只留下主体）\",\"1701524706709\",\"选择背景（黑，白，纯色背景）\",\"剪影\",\"小景深: 最大的光圈，最大的焦距，让背景和前景都模糊，只留下主体清晰\",\"前景遮挡\",\"1701526010300\",\"1701526027055\",\"对称\",\"平面化\",\"垂直于平面拍摄\",\"利用超长焦\",\"线的构成\",\"直线\",\"竖线：挺拔、稳定、刻板、诚实\",\"直线:\",\"斜线:\",\"对角线\",\"曲线（柔软）\",\"弧线：优雅、力量、规律\",\"螺旋线（旋转楼梯 ）：神秘。神圣、引力\",\"折线：紧张，混乱、强大、力量、冲突\",\"放射线\",\"中央构图法\",\"主体对称可以使用\",\"用得好：稳定 霸气 有规律\",\"神奇的黄金分割线\",\"1：2\",\"照片长款比不同，黄金分割线位置也不同\",\"基本的运用方法：\",\"把主体放在线上\",\"1701964679900\",\"1701964737981\",\"多条黄金分割线运用\",\"1701964798537\",\"1701964825336\",\"​ \",\"1701964889197\",\"具体选择哪条\",\"根据元素选择\",\"选择更精彩的画面\",\"视线前方空间多，舒适开阔\",\"水：水位线高，有力量、压迫、紧张、危险\",\"水：水位线低，稳定、舒缓、安全\",\"黄金螺旋线\",\"1701965702752\",\"1701965745913\",\"最佳兴趣点\",\"对比\",\"反衬\",\"光明-黑暗\",\"安静-喧嚣\",\"大-小 对比\",\"虚实对比\",\"质感对比\",\"心里对比\",\"层次感\",\"灰阶的平滑程度\",\"颜色的丰富程度\",\"距离空间感（前景 中景 背景）\",\"1702046861572\",\"重复与节奏\",\"1702047666610\",\"突变\",\"1702048228755\",\"韵律感\",\"1702048529822\",\"横构图与竖构图\",\"如何选择：\",\"取与舍 要为了简洁 要为了漂亮\",\"线的角度与运动的方向\"]},\"280\":{\"h\":\"尼康z30\",\"t\":[\"购买：广州艺联相机行 7649\"]},\"281\":{\"h\":\"色彩原理\",\"t\":[\"R: 红色\",\"G: 绿色\",\"B: 蓝色\"]},\"282\":{\"h\":\"组合色\",\"t\":[\"红+绿 = 黄\",\"蓝+绿 = 青\",\"红+蓝 = 品红色(洋红色)\",\"红+绿+蓝=白色\",\"以上组成：红、绿、蓝、青、品、黄\",\"1704641894108\"]},\"283\":{\"h\":\"互补色\",\"t\":[\"红色和青色为互补色\",\"黄色和蓝色为互补色\",\"绿色和洋红色为互补色\",\"1704643255194\",\"1704642022639\"]},\"284\":{\"h\":\"GRB12色相环\",\"t\":[\"红色和黄色混合就是橙色\",\"黄色与绿色混合就是黄绿色\",\"绿色和青色混合就是青绿色\",\"青色和蓝色混合就是青蓝色\",\"蓝色和洋红色混合就是蓝紫色\",\"洋红色和红色混合就是紫红色\",\"1704642490857\"]},\"285\":{\"h\":\"色相60度理论\",\"t\":[\"1704642405525\"]},\"286\":{\"h\":\"LightRoom\"},\"287\":{\"h\":\"导入\",\"t\":[\"需要注意将右侧文件处理--构建预览选择为标准\",\"1704725537386\"]},\"288\":{\"h\":\"基本面板\",\"t\":[\"色彩调整区域\",\"色温：由蓝色和红色控制\",\"色调：有绿色和洋红控制\",\"色彩原理关系\",\"增加红色等同于减少青色\",\"增加绿色等同于减少洋红色\",\"增加黄色等同于减少蓝色\",\"明暗调整区域\",\"曝光度：提高曝光，整体变亮；降低曝光，整体变暗；值越高越亮，同时色彩饱和变高\",\"对比度：是已中性灰为界限，提高对比度，让亮部更亮，暗部更暗；降低对比度，让暗部变亮，亮部变暗， 值高代表比较透，值低代表比较柔和\",\"高光：对应亮部，如果选择降低画面亮部，用来保留细节的时候，高光比白色色阶范围更大(把过曝的细节拉回来，也就是降低亮部，选高光比较合适) 降高光提高白色\",\"白色色阶：对应最亮部，移动滑块最亮部改变最多，如果需要提高画面亮部，白色色阶比高光范围更大\",\"阴影：对应暗部，如果想要提亮一张照片的暗部，阴影比黑色的范围更广泛 提高阴影降低黑色\",\"黑色色阶：对应最暗部，移动滑块最暗部改变最多，如果想压暗一张照片的暗部，黑色比阴影的范围更大\",\"纹理：每个像素格加强了质感，值调大会变得粗糙,调大细节会变得清晰\",\"清晰度：都是加强质感，但是会暗一点，改变范畴更大，明暗对比反差更强了\",\"去朦胧：去灰\",\"鲜艳度：增加饱和是从饱和偏低的开始增加\",\"饱和度：是全部都增加，程度更重降低饱和度增加鲜艳度\"]},\"289\":{\"h\":\"曲线\",\"t\":[\"可以调整颜色，也可以调整明暗\",\"从左到右分为：暗-->亮\",\"色彩分为红，绿，蓝\",\"所有色彩都是建立在光影之上\",\"如果降低某个地方的颜色，记得把高处的曲线给还原，即拉高曲线\"]},\"290\":{\"h\":\"HSL\",\"t\":[\"固有色的调整，可以控制某一种颜色的变化\",\"色相：色彩的相貌\",\"饱和度：色彩的鲜艳程度\",\"明亮度：色彩的明亮程度\",\"通常使用小抓手，选取某个点，鼠标往上或往下滑\",\"1704730368109\"]},\"291\":{\"h\":\"分离色调\",\"t\":[\"复位高光\",\"色相\",\"饱和度\",\"复位阴影\",\"色相\",\"包含度\"]},\"292\":{\"h\":\"细节\",\"t\":[\"锐化：对图片增加锐度质感功能\",\"数值\",\"半径：影响范围\",\"细节\",\"蒙版\",\"减少杂色：去噪点\",\"杂色深度减低\"]},\"293\":{\"h\":\"光学\",\"t\":[\"配置文件\",\"删除色差\",\"使用配置文件校正\",\"手动\",\"扭曲度\"]},\"294\":{\"h\":\"效果\",\"t\":[\"颗粒：比较怀旧的片子\",\"阴影：想去通过暗角突出某个物体时\"]},\"295\":{\"h\":\"校准\",\"t\":[\"改变是针对整个照片\",\"要知道色彩关系理念\",\"阴影\",\"红原色\",\"绿原色\",\"蓝原色\"]},\"296\":{\"c\":[\"相机\"]},\"297\":{\"c\":[\"相机\"]},\"298\":{\"h\":\"管理者的八项修炼\"},\"299\":{\"h\":\"角色认知和思维升级\",\"t\":[\"洞察市场发现计划和改善的五看方法\",\"一看行业趋势\",\"二看客户需求\",\"三看竞争\",\"四看自己\",\"五看增长计划\",\"不断优化以客户为中心的商业模式 不断优化流程，提高效率 明确管理任务和目标：官人理事官目标\",\"管理者的五项任务\",\"设定目标\",\"组织：工作分类，组织资源\",\"激励与沟通：团队建设，激发激励\",\"衡量绩效：衡量绩效，沟通结果\",\"培养人才：培养下属，培养自己\",\"管理者的工作地图 业务\",\"P: 目标/计划\",\"D: 执行/辅导\",\"A: 改善/提升\",\"C: 检查/解决\",\"团队\",\"知人善任\",\"工作分配\",\"激励沟通\",\"绩效评估\",\"教练辅导\",\"管理把事情做对\"]},\"300\":{\"h\":\"目标计划与绩效管理\",\"t\":[\"为什么总说计划赶不上变化？？？\",\"管理者的职责之一就是通过计划去锁定确定性\"]},\"301\":{\"h\":\"有效沟通和协作管理\"},\"302\":{\"h\":\"有效决策\"},\"303\":{\"h\":\"有效授权\"},\"304\":{\"h\":\"人才选育用留\"},\"305\":{\"h\":\"有效激励\"},\"306\":{\"h\":\"自我修炼\"},\"307\":{\"h\":\"项目管理\",\"t\":[\"管理者的八项修炼\",\"管理者的八项修炼\"]},\"308\":{\"h\":\"自我介绍\",\"t\":[\"面试官，您好，首先非常荣幸能够参加贵公司面试，我叫陈鑫，18年毕业于湘南学院，目前有者6年左右开发经验，平时喜欢写博客，摄影和游泳，上面简历网址就是个人搭建的博客网站。最近一家公司主要从事公安系统的研发，参与了手机数据分析系统和星原平台的开发工作。在任职2年多的期间内，本人拿过一次全年优秀和一次季度优秀，通过济南项目的历练，也成功通过公司晋升答辩升级到了高级开发工程师，在远一点上一家的化主要从事叉车平台开发\"]},\"309\":{\"h\":\"项目\",\"t\":[\"有些记忆，弥足珍贵\",\"音乐\"]},\"310\":{\"h\":\"技术\",\"t\":[\"技术类知识汇总沉淀\",\"JAVA\",\"前端\",\"大数据\"]},\"311\":{\"h\":\"音乐\",\"t\":[\"单曲循环一整天\",\"网易云歌单\"]},\"312\":{\"h\":\"网易云歌单\"},\"313\":{\"h\":\"linux\"},\"314\":{\"h\":\"1.目录操作\"},\"315\":{\"h\":\"1.1 ls\"},\"316\":{\"h\":\"1.2 ll\"},\"317\":{\"h\":\"1.3 mkdir\"},\"318\":{\"h\":\"1.4 find\",\"t\":[\"find\",\"find [路径] [表达式]\",\"find /home -name \\\"*.txt\\\"\"]},\"319\":{\"h\":\"1.5 cp\",\"t\":[\"cp\",\"cp 源文件 目标文件\",\"cp file.txt /home/file.txt\"]},\"320\":{\"h\":\"1.6 mv\",\"t\":[\"mv\",\"mv 源文件 目标文件\",\"mv file.txt /home/file.txt\"]},\"321\":{\"h\":\"2 .文件操作\"},\"322\":{\"h\":\"2.1 touch\"},\"323\":{\"h\":\"2.2 cat\"},\"324\":{\"h\":\"2.3 vim\"},\"325\":{\"h\":\"3. 文件压缩\"},\"326\":{\"h\":\"3.1 tar\",\"t\":[\"解压文件\",\"z：表示使用gzip进行压缩或解压\",\"x: 表示提前(解压)文件\",\"v: 表示显示详细的操作过程，即输出解压/压缩的文件列表\",\"f: 表示指定归档文件的名称\",\"c: 表示创建新的.tar文件\",\"常规解压\",\" tar -zxvf test.tar.gz \",\"解压到指定目录\",\" tar -zxvf test.tar.gz -C /home/test \",\"压缩文件(压缩名称在前，后面是具体要压缩文件)\",\" tar -zcvf test.tar.gz test.txt \"]},\"327\":{\"h\":\"4. 系统状态\"},\"328\":{\"h\":\"4.1 top\",\"t\":[\"用于实时查看系统的 CPU 使用率、内存使用率、进程信息等\",\"常用命令 \",\"top：显示系统整体运行状况，包括CPU、内存、进程等信息\",\"top -n 10：显示前10个CPU占用率最高的进程\",\"top -hp 11111：按进程的优先级对进程进行排序并显示\"]},\"329\":{\"h\":\"4.2 uptime\",\"t\":[\"用于查看系统总共运行了多长时间、系统的平均负载等信息\",\"常用命令\",\"uptime\",\"image-20240124114431504\",\"包含以下信息\",\"当前时间：11:43:41\",\"系统已经运行的时间: 37天3小时32分\",\"当前登录用户数：1个\",\"系统平均负载情况，分别表示过去1分钟、5分钟和15分钟的平均负载\"]},\"330\":{\"h\":\"4.3 free\",\"t\":[\"用于查看系统的内存使用情况，包括已用内存、可用内存、缓冲区和缓存等\",\"常用命令 \",\"free -m: 显示内存使用情况（以MB为单位）\",\"free -h: 以人类可读的方式显示内存使用情况(推荐)\"]},\"331\":{\"h\":\"4.4 df\",\"t\":[\"用于查看系统的磁盘空间使用情况\",\"常用命令 \",\"df -h: 以人类可读的方式显示磁盘空间利用情况\",\"df -h /path/to/directory: 显示指定目录的磁盘空间利用情况\"]},\"332\":{\"h\":\"4.5 du\",\"t\":[\"用于查看指定目录或文件的磁盘空间使用情况\",\"常见命令 \",\"du -h \",\"显示当前目录及其子目录的磁盘使用情况\",\"du -sh \",\"仅显示当前目录的总大小（以人类可读的方式）\",\"du -h | sort -h \",\"显示当前目录及其子目录的磁盘使用情况，并按大小排序\",\"du -h /path/to/directory \",\"显示指定目录的磁盘使用情况\"]},\"333\":{\"h\":\"4.6 ps\",\"t\":[\"ps -ef | grep\"]},\"334\":{\"h\":\"5. java相关\"},\"335\":{\"h\":\"5.1 jps\"},\"336\":{\"h\":\"5.2 jstack\"},\"337\":{\"h\":\"5.3 jinfo\"},\"338\":{\"c\":[\"linux\"]},\"339\":{\"c\":[\"linux\"]},\"340\":{\"h\":\"大数据\",\"t\":[\"所学知识沉淀汇总\",\"linux\",\"spark\"]},\"341\":{\"h\":\"Spark\"},\"342\":{\"h\":\"spark学习\",\"t\":[\"spark学习知识\"]},\"343\":{\"c\":[\"bigdata\"]},\"344\":{\"c\":[\"大数据\"]},\"345\":{\"h\":\"css\"},\"346\":{\"h\":\"SEO\",\"t\":[\"SEO（search engine optimization）: 搜索引擎优化\"]},\"347\":{\"h\":\"css样式优先级\",\"t\":[\"优先级规则：行内样式 > 内部样式 = 外部样式 注意\",\"内部样式、外部样式这两者优先级相同，且后面的会覆盖前面的 （后来者居上）\",\"同一个样式表中，优先级也和编写顺序有关，且后面的会覆盖前面的\"]},\"348\":{\"h\":\"css 选择器\",\"t\":[\"标签选择器\",\" div{ color: red; font-size: 30px; background-color: orange; } .div-one{ color: green; font-size: 40px; } \"]},\"349\":{\"h\":\"css 常见属性\",\"t\":[\"font-size 文字大小\",\"color 前景色(文字颜色)\",\"background-color 背景色\",\"width 宽度\",\"height 高度\",\"不让div独占一行\",\"display: inline-block; \",\"div顶部对齐\",\"vertical-align: top; \"]},\"350\":{\"h\":\"额外知识补充\"},\"351\":{\"h\":\"Link元素\",\"t\":[\"link元素是外部资源链接元素，规范了文档于外部资源的关系（通常在head元素中）\",\"最常用的链接是样式表css,此外也可以被用来创建站点图标\",\"link元素常见属性 \",\"href: 此属性指定被链接资源的url, url可以是绝对的，也可以是相对的\",\"rel: 指定链接类型 icon: 站点图标 stylesheet: css样式\",\"<link rel=\\\"stylesheet\\\" href=\\\"./css/style.css\\\"> <link rel=\\\"icon\\\" href=\\\"../images/favicon.ico\\\"> \"]},\"352\":{\"h\":\"Chrome浏览器开发者工具\",\"t\":[\"打开\",\"F12打开\",\"右键->检查\",\"其他技巧\",\"快捷健：ctrl+ 可以调整页面或者调试工具的字体大小\",\"可以通过删除某些元素来查看网页结构\",\"可以通过增删css来调试网页样式\"]},\"353\":{\"h\":\"浏览器渲染流程\",\"t\":[\"Load Html -> Parse Html -> Create Dom tree -> dispaly parse Html -> load css -> parse css -> display\"]},\"354\":{\"h\":\"CSS文本属性\"},\"355\":{\"h\":\"text-decoration（常用）\",\"t\":[\"作用：设置文本的装饰线 有如下取值\",\"none: 无任何装饰线（也可以去掉a元素默认的下划线）\",\"underline: 下划线\",\"overline: 上划线\",\"line-through: 中划线\"]},\"356\":{\"h\":\"text-transform(了解)\",\"t\":[\"作用： 文本变形 有如下取值\",\"capitalize: 文本中的每个单词以大写字母开头\",\"uppeercase: 全部字母大写\",\"lowercase: 全部字母小写\"]},\"357\":{\"h\":\"text-indent(了解)\",\"t\":[\"作用： 文本缩进 eg: 将段落的第一行缩进2em\",\" div {text=indent:2em;} \",\"注意事项\",\"text-indent 只应用于块级元素\",\"text-indent 设置负值可以将文本向左移动\"]},\"358\":{\"h\":\"text-align(重要)\",\"t\":[\"直接翻译：文本对齐的方式（图片也可以居中） mdn: 定义行内内容，例如文字如何相对它的块父元素对齐 常见的值\",\"left: 左对齐\",\"right: 右对齐\",\"center: 正中间显示\",\"justify: 两端对齐（基本用不到）：文字放不上默认换行，设置此属性中间空格，两端对齐显示\",\"官方：text-align 只能让行内元素居中，块级元素无法居中，要想让块级元素居中，需要将块级元素转换为行内元素 display: inline-block 或者设置margin: 0 auto;\",\"注意是给父元素设置text-align，而不是给子元素设置\",\"<!DOCTYPE html> <html lang=\\\"en\\\"> <head> <meta charset=\\\"UTF-8\\\"> <meta name=\\\"viewport\\\" content=\\\"width=device-width, initial-scale=1.0\\\"> <title>Document</title> </head> <style> .main{ background-color: #ff0; height: 300px; text-align: center; } .body{ background-color: skyblue; width: 200px; height: 200px; /* 方式一：只有加上这个才能居中 */ /* display: inline-block; */ /* 方式二 */ margin: 0 auto; } </style> <body> <div class=\\\"main\\\"> <div class=\\\"body\\\"></div> </div> </body> </html> \"]},\"359\":{\"h\":\"word-spacing/letter-spacing(了解)\",\"t\":[\"作用：修改文字默认缝隙\",\"word-spacing: 30px; \"]},\"360\":{\"h\":\"CSS字体属性\"},\"361\":{\"h\":\"font-size(重要)\",\"t\":[\"作用：决定文字的大小 常用设置\",\"具体数值+单位\",\"比如100px\",\"使用em单位(不推荐)：1em代表100%，2em代表200%\",\"百分比 \",\"基于父元素的font-size计算，比如50%表示等于父元素font-size的一半\"]},\"362\":{\"h\":\"font-family(重要，不过一般仅设置一次)\",\"t\":[\"作用：设置文字的字体名称\",\"可以设置1个或者多个字体名称\",\"浏览器会选择列表中第一个该计算机上有安装的字体\",\"或者是通过@font-face 指定的可以直接下载的字体\",\"<style> body{ font-family: \\\"xxx\\\",xxx1,xxx2 } </style> \"]},\"363\":{\"h\":\"font-weight(重要)\",\"t\":[\"作用：设置文字的粗细 常见的取值\",\"100| 200 | 300 | 400 |500| 600|700 |800 |900 每一个数字表示一个重量\",\"normal: 等于400\",\"bold: 等于700\"]},\"364\":{\"h\":\"font-style(一般)\",\"t\":[\"作用: 用于设置文字的常规、斜体显示\",\"normal: 常规显示\",\"italic: 用文字的斜体显示（字体本身支持斜体时，显示的斜体）\",\"oblique: 文本倾斜显示（让文本倾斜）\"]},\"365\":{\"h\":\"line-height（常用）\",\"t\":[\"作用：用于设置文本的行高 行高可以先简单理解为一行文字所占据的高度 严格定义：两行文字基线之间的距离\",\"基线：与小写字母x最底部对齐的线\",\"应用场景：假设div中只有一行文字，如何让这行文字在div内部垂直居中？ 答案： 让line-height 等于height\",\"注意\",\"行高是可以继承的\",\"行高对行内非替换元素是无效的\"]},\"366\":{\"h\":\"font\",\"t\":[\"是一个缩写属性\",\"font: italic small-caps 700 30px/1.5 serif; \",\"默认顺序： font-style font-variant font-weight font-size/line-height font-family\",\"规则：\",\"font-style,font-variant,font-weight 可以随意调换顺序，也可以省略\",\"/line-height 可以省略，如果不省略，必须跟在font-size后面\",\"font-size, font-family 不可以调换顺序，不可以省略\"]},\"367\":{\"h\":\"CSS常见选择器\",\"t\":[\"按照一定的规则选出符合条件的元素，为之添加css样式\"]},\"368\":{\"h\":\"简单选择器(重要)\",\"t\":[\"元素选择器，使用元素的名称\",\"类选择器，使用.类名\",\"id选择器，使用 #id\"]},\"369\":{\"h\":\"属性选择器（了解）\",\"t\":[\"<div title=\\\"div\\\">我是div</div> <h2 title=\\\"h2\\\">我是h2元素</h2> <style> [title] { color: red; } [title=div] { background-color: blue; } </style> \"]},\"370\":{\"h\":\"后代选择器（重要）\",\"t\":[\"选择器一：所有的后代(直接/间接的后代) 选择器以空格分割\",\" .box span{ color: red; } \",\"选择器二：直接子代选择器（必须是直接子代） 选择器以>分割\",\".box > span{ color: red; } \"]},\"371\":{\"h\":\"兄弟选择器（理解）\",\"t\":[\"选择器一：相邻兄弟选择器 使用 + 连接\",\"<div class=\\\"one\\\">哈哈</div> <div>嘿嘿</div> <div>呵呵</div> <div>嘻嘻</div> <style> .one + div { color: red; } </style> \",\"选择器二：普通兄弟选择器 使用 ~ 连接\",\"<div class=\\\"one\\\">哈哈</div> <div>嘿嘿</div> <div>呵呵</div> <div>嘻嘻</div> <style> .one ~ div { color: red; } </style> \"]},\"372\":{\"h\":\"选择器组（重要）\",\"t\":[\"交集选择器-两个选择器紧密连接 需要同时符合两个选择器条件，在开发中通常为了精准选择某一个元素\",\"<div class=\\\"box\\\">我是div</div> <p class=\\\"box\\\">我是p</p> div.box{ color: red; font-size: 30px; } \",\"并集选择器：符合一个选择器条件即可，两个选择器以，号分割 在开发中通常为了给元素设置相同的样式\",\"body,p,h1{ margin: 0; } \"]},\"373\":{\"h\":\"伪类选择器\",\"t\":[\"是选择器的一种，它用于选择处于特定状态的元素 常见的伪类有\",\"动态伪类\",\":link :visited :hover :active :focus\",\"使用举例\",\"a:link 未访问的链接\",\"a:visited 已访问的链接\",\"a:hover 鼠标挪动到链接上(重要)\",\"a:active 激活的链接(鼠标在链接上长按住未松开)\",\"除了a元素，:hover :active也能用在其他元素上\",\"使用注意\",\":hover必须放在:link和:visited后面才能完全生效\",\":active必须放在:hover后面才能完全生效\",\"建议顺序 :link :visited :hover :active\",\"目标伪类(少用)\",\":target\",\"语言伪类（少用）\",\":lang()\",\"元素状态伪类\",\":enabled :disabled :checked\",\"结构伪类\",\":nth-child() :nth-of-type()\",\":nth-child(1): 是选择父元素中的第一个子元素\",\" <style> ul li:nth-child(1) { color: red; } </style> <ul> <li>列表元素1</li> <li>列表元素2</li> <li>列表元素3</li> </ul> \",\":nth-child(2n)\",\"n代表任意正整数和0\",\"是父元素中的第偶数个子元素(第2、4、6、8...个)\",\"跟:nth-child(even)同义\",\":nth-child(2n+1)\",\"n代表任意正整数和0\",\"是父元素中的第奇数个子元素(第2、4、6、8...个)\",\"跟:nth-child(odd)同义\",\":nth-child(-n + 2)\",\"代表前2个子元素\",\" <style> <!-- 设置偶数被选中 --> ul li:nth-child(2n) { color: green; } <!-- 设置奇数被选中 --> ul li:nth-child(2n+1) { color: blue; } <!-- 选中前三个 --> ul li:nth-child(-n + 3) { color: red; } </style> <ul> <li>列表元素1</li> <li>列表元素2</li> <li>列表元素3</li> <li>列表元素4</li> </ul> \",\":nth-of-type() 用法跟:nth-child()类似 不同点是：nth-of-type()计数时只计算同种类型的元素\",\" <!-- 需求：选择box中div的元素，并且是第三个子元素 --> .box > div:nth-of-type(3) { color: blue; } <div class=\\\"box\\\"> <div>我是列表一</div> <p>我是p元素</p> <div>我是div1</div> <div>我是div2</div> <div>我是div3</div> <span>我是span</span> <div>我是div4</div> <div>我是div5</div> <div>我是div6</div> </div> \",\"否定伪类\",\":not()\",\"格式是：not(x) x是一个简单选择器\",\" .box :not(.why){ color: blue; } <div class=\\\"box\\\"> <div class=\\\"item\\\">列表</div> <div class=\\\"why\\\">列表</div> <div class=\\\"item\\\">列表</div> <div>列表</div> </div> \"]},\"374\":{\"h\":\"伪元素(了解)\",\"t\":[\"选择特定的一个元素\",\"常见的伪元素\",\":before ::before 在元素前面插入内容\",\"<div class=\\\"box item\\\"></div> <div class=\\\"box1 item\\\"></div> <style> .item::before { content: \\\"123\\\", color: red; } .item::after { content: url(\\\"../images/icon.svg\\\"); position: relative; left: 105px; top: 2px; } .box2::after{ /* 使用伪元素的过程中，不要将content省略 */ content: \\\"\\\", display: inline-block; width: 8px; height: 8px; background-color: #f00; } </stylle> \",\":after ::after\",\":first-line ::first-line 选择某个元素的首行\",\":first-letter ::first-letter 可以争对首字母设置属性\",\"一般开发中用两个冒号\"]},\"375\":{\"h\":\"CSS属性的特性\"},\"376\":{\"h\":\"CSS属性的继承\",\"t\":[\"css的某些属性具有继承性\",\"如果一个属性具备继承性，那么在该元素上设置后，它的后代元素都可以继承这个属性\",\"当然，如果后代元素自己有设置该属性，那么优先使用后代元素自己的属性（不管继承过来的属性权重的多少）\",\"如何知道一个属性是否具有继承性\",\"常见的font-size/font-family/font-weight/line-height/color/text-align都具有继承性\"]},\"377\":{\"h\":\"CSS属性的层叠\",\"t\":[\"什么是层叠呢？\",\"对于一个元素来说，相同一个属性我们可以通过不同的选择器给它进行多次设置\",\"那么属性会被一层层覆盖上去\",\"但是最终只有一个会生效\",\"那么多个样式覆盖上去，哪一个生效呢？\",\"判断一：选择器的权重，权重大的生效，根据权重可以判断出优先级\",\"判断二：先后顺序，权重相同时，后面设置的生效\",\"<div class=\\\"box one first content\\\">我是box</div> <style> .box{ color:red; } .one{ color:green; } .first{ color:purple; } .content{ color: orange; } </style> \",\"那么如何知道权重呢？ 权重如下\",\"!important: 10000\",\".box{ color: red !important; } \",\"内联样式： 1000\",\"id选择器： 100\",\"类选择器、属性选择器、伪类： 10\",\"元素选择器： 1\",\"通配选择器： 0\"]},\"378\":{\"h\":\"CSS属性的类型\",\"t\":[\"什么是块级元素，什么是行内元素？\",\"html在设计时考虑一个问题：每个元素在页面当中到底占据多大的空间\",\"某些元素非常重要：独占一行-> 块级元素：h/p/div 某些元素属于内容的一部分，没必要独占一行，其他内容在同一行显示， 类型->行内级元素 span/a/img\",\"块级元素：独占父元素的一行 行内级元素：多个行内级元素可以在父元素的同一行中显示\"]},\"379\":{\"h\":\"display属性（非常重要）\",\"t\":[\"CSS中有个display属性，能修改元素的显示类型，有4个常用值\",\"display:block; 让元素显示为块级元素，可以设置宽度和高度\",\"display:inline; 让元素显示为行内级元素，不可以设置宽度和高度，由内容决定 为啥img可以设置宽高？ 答：img是行内元素同时也是行内替换元素\",\"行内替换元素\",\"和其他的行内级元素在同一行显示\",\"可以设置宽度和高度\",\"display: inline-block 让元素同时具备行内级、块级元素的特征在同一行显示，也可以设置宽度和高度\",\"display: none 隐藏元素\",\"编写html注意事项\",\"块级元素，可以包含其他任何元素，但是p元素不能包含其他块级元素\",\"行内级元素，一般只能包含行内级元素\"]},\"380\":{\"h\":\"元素的隐藏\",\"t\":[\"display:none 元素不显示出来，并且也不占据位置，和不存在一样\",\"visibility:hidden 设置hidden,虽然元素不可见，但是会占据空间\",\"rgba设置颜色，将a的值设置为0 rgba的a设置alpha值，可以设置透明度，不影响子元素\",\".box{ color: rgba(0,0,0,0) } /* 设置透明度，并且会携带所有的子元素都有一定的透明度 */ .box2{ opacity: 0 } \",\"opacity设置透明度，设置为0 设置整个元素的透明度，会影响所有的子元素\",\" /* 设置透明度，并且会携带所有的子元素都有一定的透明度 */ .box2{ opacity: 0 } \"]},\"381\":{\"h\":\"overflow属性\"},\"382\":{\"h\":\"CSS的盒子模型\"},\"383\":{\"h\":\"认识盒子模型\",\"t\":[\"html的每一个元素都可以看作一个盒子，主要包含\",\"内容(content)\",\"元素的内容width/height\",\"内边距（padding）\",\"元素和内容之间的间距\",\"边框(border)\",\"元素自己的边框\",\"外边距(margin)\",\"元素和其他元素之间的间距\",\"Alt text\",\"因为盒子有四边，所以margin/padding/border都包括top/right/bottom/left四个边\"]},\"384\":{\"h\":\"内容width/height\",\"t\":[\"宽度设置：width 高度设置：height\",\"未设置width,默认auto\",\"另外我们还可以设置如下属性\",\"min-width: 最小宽度，无论内容多少，宽度都大于或等于min-width\",\"max-width: 最大宽度，无论内容多少，宽度都小于或等于max-width\",\"移动端适配时，可以设置最大宽度和最小宽度\"]},\"385\":{\"h\":\"内边距padding\",\"t\":[\"padding属性用于设置盒子的内边距，通常用于设置边框和内容之间的间距\",\"padding包括四个方向，有如下取值\",\"padding-top : 上内边距\",\"padding-right : 右内边距\",\"padding-bottom: 下内边距\",\"padding-left: 左内边距\",\"padding单独编写是一个缩写属性从0点钟方向开始，沿着顺时针转动，也就是上右下左\",\"padding的其他值\",\"padding值的个数\",\"padding的例子\",\"代表的含义\",\"4\",\"padding: 10px;20px;30px;40px;\",\"top:10px;right: 20px;bottom:30px;left:40px;\",\"3\",\"padding: 10px 20px 30px;\",\"缺少left,left使用right的值\",\"2\",\"padding:10px 20px;\",\"缺少left,使用right的值，缺少bottom,使用top的值\",\"1\",\"padding:10px;\",\"top/right/bottom/left都使用10\"]},\"386\":{\"h\":\"边框/圆角border\",\"t\":[\"boder用于设置盒子的边框 边框相对与content/padding/margin来说特殊一点\",\"边框具备宽度width\",\"边框具备样式style\",\"边框具备颜色color\",\"边框宽度\",\"border-top-width、border-right-width、border-bottom-width、border-left-width\",\"border-width是上面4个属性的简写属性\",\"边框颜色\",\"border-top-color、border-right-color、border-bottom-color、border-left=color\",\"border-color是上面4个属性的简写属性\",\" border-right-color: transparent; \",\"边框样式\",\"border-top-style、border-right-style、border-bottom-style、border-left-style\",\"border-style是上面4个属性的简写属性\",\"可以简写border: 1px solid red;\"]},\"387\":{\"h\":\"外边距margin\",\"t\":[\"margin属性用于设置盒子的外边距，通常用于元素和元素之间的间距\",\"margin包括四个方向\",\"margin-top: 上内边距\",\"margin-right: 右边距\",\"margin-bottom： 下内边距\",\"margin-left: 左内边距\",\"缩写属性 margin: 10px 20px 30px;\",\"小练习：两个div盒子为父子关系，让子盒子向左移动10px\",\"方式一： 设置父盒子的paddding-left值10px,需要注意的是padding-left值过大时，会导致父盒子宽度变大，如何解决呢？ 可以设置父盒子的box-sizing: border-box\",\"<!DOCTYPE html> <html lang=\\\"en\\\"> <head> <meta charset=\\\"UTF-8\\\"> <meta name=\\\"viewport\\\" content=\\\"width=device-width, initial-scale=1.0\\\"> <title>Document</title> </head> <style> .box{ width: 300px; height: 300px; background-color: #ff0; padding-left: 100px; box-sizing: border-box; } .main{ width: 100px; height: 100px; background-color: skyblue; } </style> <body> <div class=\\\"box\\\"> <div class=\\\"main\\\"> </div> </body> </html> \",\"方式二：设置子盒子的margin-left为10px, 不过需要注意的是，margin-top过大时，父盒子会跟着向下移动，怎么解决呢？ 可以设置父盒子的overflow:auto\",\"<!DOCTYPE html> <html lang=\\\"en\\\"> <head> <meta charset=\\\"UTF-8\\\"> <meta name=\\\"viewport\\\" content=\\\"width=device-width, initial-scale=1.0\\\"> <title>Document</title> </head> <style> .box{ width: 300px; height: 300px; background-color: #ff0; overflow: auto; } .main{ width: 100px; height: 100px; background-color: skyblue; margin-left: 20px; margin-top: 100px; } </style> <body> <div class=\\\"box\\\"> <div class=\\\"main\\\"> </div> </body> </html> \",\"总结：对于父子元素来说，设置父元素的padding-left让子盒子向左移动是比较推荐的方式\",\"margin的传递\",\"margin-top传递 如果块级元素的顶部线和父元素的顶部线重叠，那么这个块级元素的margin-top值会传递给父元素\",\"margin-bottom传递 如果块级元素的底部线和父元素的底部线重写，并且父元素的高度是auto,那么这个块级元素的margin-bottom的 值会传递给父元素\",\"那么如何防止出现传递问题？\",\"给父元素设置padding-top\\\\padding-bottom\",\"给父元素设置border\",\"触发bfc: 设置父元素overflow为auto\",\"建议：\",\"margin一般是用来设置兄弟元素之间的间距\",\"padding一般是用来设置父子元素之间的间距\",\"上下margin的折叠\",\"垂直方向上相邻的2个margin(margin-top、margin-bottom)有可能会合并为1个margin,这种现象叫做 collapse（折叠）\",\"水平方向上的margin(margin-left,margin-right)永远不会collapse\",\"折叠后最终值得计算规则？ 两个值进行比较，取较大得值\",\"如何防止margin collapse? 答：只设置其中一个元素得margin\",\"案例演示：\",\"<!DOCTYPE html> <html lang=\\\"en\\\"> <head> <meta charset=\\\"UTF-8\\\"> <meta name=\\\"viewport\\\" content=\\\"width=device-width, initial-scale=1.0\\\"> <title>Document</title> </head> <style> .box{ width: 300px; height: 300px; background-color: #ff0; margin-bottom: 20px; } .main{ width: 100px; height: 100px; background-color: skyblue; margin-top: 50px; } </style> <body> <div class=\\\"box\\\"> </div> <div class=\\\"main\\\"></div> </body> </html> \",\"元素水平居中方案（重要）\",\"行内级元素\",\"水平居中：在父元素中设置text-align: center\",\"块级元素\",\"水平居中： margin: 0 auto;\"]},\"388\":{\"h\":\"outline\",\"t\":[\"外轮廓\",\"不占用空间\",\"默认显示在border的外面\",\" .box{ outline: 10px solid #0f0; outline: none } \"]},\"389\":{\"h\":\"盒子和文字阴影\"},\"390\":{\"h\":\"盒子阴影- box-shadow\",\"t\":[\"设置盒子阴影，有四个值\",\"第一个值，offset-x,水平方向的偏移，正数往右偏移\",\"第二个值，offset-y,垂直方向的偏移，正数往下偏移\",\"第三个值，blur-radius, 模糊半径\",\"第四个值，spread-radius，延伸半径\",\"color: 阴影的颜色\",\".box{ box-shadow: 5px 5px 10px orange, 10px 10px 10px green; } \"]},\"391\":{\"h\":\"文字阴影 text-shadow\",\"t\":[\"设置文字阴影\",\".box{ text-shadow: 5px 5px 5px orange, 10px 10px 5px blue, 15px 15px 5px green; } \"]},\"392\":{\"h\":\"行内非替换元素的注意事项\",\"t\":[\"span/a/strong/i\",\"内容： width/height(压根不生效)\",\"内边距：上下会被撑起来，但是不占据空间\",\"边框： 上下会被撑起来，但是不占据空间\",\"外边距：上下的margin是不生效的\"]},\"393\":{\"h\":\"box-sizing\",\"t\":[\"用来设置盒子模型中宽高的行为\",\"content-box\",\"padding、border都布置在width、height外边 元素实际占用宽度 = border + padding + width\",\"border-box(经常用)\",\"padding、border都布置在width、height里边\"]},\"394\":{\"h\":\"网站常用背景色\",\"t\":[\"#f5f5f5\"]},\"395\":{\"h\":\"单行文字显示省略号\",\"t\":[\" .item{ white-space: nowrap; overflow: hidden; text-overflow: ellipsis; } \"]},\"396\":{\"h\":\"多行文字显示省略号\",\"t\":[\".box{ text-overflow: ellipsis; display: -webkit-box; -webkit-line-clamp: 2; -webkit-box-orient: vertical; } \"]},\"397\":{\"h\":\"CSS的背景设置\",\"t\":[\"作用：为了让网页更加美观\"]},\"398\":{\"h\":\"background-image\",\"t\":[\"作用：用于设置元素的背景图片\",\"会盖在background-color上面\",\"也可以设置多张,第一张显示在最前面\",\".box{ background-image: url(../images/1.jpg),url(../images/2.png); background-repeat: no-repeat; } \"]},\"399\":{\"h\":\"background-repeat\",\"t\":[\"用于设置背景图片是否要平铺 有如下几个值：\",\"repeat: 平铺\",\"no-repeat: 不平铺\",\"repeat-x: 只在水平方向平铺\",\"repeat-y: 只在垂直方向平铺\"]},\"400\":{\"h\":\"background-size\",\"t\":[\"用来设置背景图片的大小 有如下几个值：\",\"auto: 默认值，以背景图本身大小显示\",\"cover: 缩放背景图，以完全覆盖铺满元素，可能背景图片部分看不见\",\"contain: 缩放背景图，宽度或者高度铺满元素，但是图片保持宽高比\",\"percentage: 百分比，相对于背景区\",\"length: 具体的大小，比如100px\",\" .box{ background-size: 100% 100%; background-size: 100px 100px; background-size: 100px auto; } \"]},\"401\":{\"h\":\"background-position\",\"t\":[\"用来设置背景图片在水平、垂直方向上的具体位置\",\"可以设置具体的数值，比如20px, 30px\",\"水平方向还可以设值：left,center,right\",\"垂直方向还可以设值：top,center,bottom\",\"如果只设置了1个方向，另一个方向默认center\",\" .box{ background-position: 100px 100px; background-position: right bottom; background-position: center; } \"]},\"402\":{\"h\":\"background-attachment\",\"t\":[\"作用：决定背景图像的位置是在视口内固定，或者随着包含它的区块滚动 可以设置3个值\",\"scroll: 此关键属性值表示背景相对于元素本身固定，而不是随着它的内容滚动\",\"local: 此关键属性值表示背景相对于元素的内容固定。如果一个元素拥有滚动机制，背景将会随着元素的内容滚动\",\"fixed: 此关键属性值表示背景相对于视口固定。即使一个元素拥有滚动机制，背景也不会随着元素的内容滚动\"]},\"403\":{\"h\":\"background\",\"t\":[\"一系列背景相关属性的缩写属性 语法： [color] [image] [repeat] [attachment] [position] / [size] [origin] [clip];\",\".box{ background: url('image.jpg'); background: url('image.jpg') repeat-x; background: #f1f1f1; } \",\"background-image和img对比 \",\"img，作为网页内容的重要组成部分，比如广告图片，logo图片，文章配图，产品图片\",\"background-image,可有可无。有，能让网页更加美观。无，也不影响用户获取完整的网页内容信息\"]},\"404\":{\"h\":\"开发案例思路\",\"t\":[\"先完成结构\",\"重置样式(body/a/ul)\",\"先整体，后局部 \",\"顺序： 按照从外往里，从上往下\",\"去除重复代码 \",\"将重复的逻辑放到一个单独的class中(.icon)\",\"不同的代码抽到不同的class(.new .hot)\"]},\"405\":{\"h\":\"高级元素的使用\"},\"406\":{\"h\":\"1.列表元素\",\"t\":[\"在开发一个网站过程中，很多都涉及列表 事实上现在很多的列表功能采用了不同的方案来实现\",\"方案一：使用div元素来实现（汽车之家，知乎）\",\"方案二：使用列表元素，使用元素语义化的方式实现\",\"事实上现在很多的网站对于列表元素没用很强烈的偏好，更加不拘一格，按照自己的风格来布局 主要原因有\",\"列表元素的默认的css样式，让它用起来不是非常方便\",\"列表元素往往有很多的限制，ul/ol中只能放li,li再存放其他元素，默认样式等\",\"虽然我们可以通过重置来解决，但是我们更喜欢自由的div\",\"html提供了3组常见的用来展示列表的元素\",\"有序列表：ol(ordered list)、li 有序列表直接子元素只能是li\",\"<!-- 清除默认样式 --> ol,li { padding: 0; margin: 0; list-style: none } <h2>电影排名</h2> <ol> <li>星际穿越</li> <li>盗梦空间</li> <li>兰闺喜事</li> <li>大话西游</li> </ol> \",\"无序列表：ul(unordered list)、li\",\" ul,li { padding: 0; margin: 0; list-style: none } <h2>常见编程语言</h2> <ul> <li>java</li> <li>js</li> <li>python</li> <li>C++</li> </ul> \",\"定义列表：dl(definition list)、dt、dd 定义列表dl，直接子元素只能是dt、dd\",\"dt(definition term) term是项的意思，列表中每一项的项目名\",\"dd(definition description) 列表中每一项的具体描述，是对dt的描述，解释、补充 一个dt后面一般紧跟1个或者多个dd\",\" <h1>前端开发</h1> <dl> <dt>阶段1</dt> <dd>html</dd> <dd>css</dd> </dl> <dl> <dt>阶段2</dt> <dd>框架实战</dd> <dd>css</dd> </dl> \"]},\"407\":{\"h\":\"2.常见列表\"},\"408\":{\"h\":\"3.表格元素\",\"t\":[\"table 表格\",\"tr 表格中的行\",\"td\",\"thead 表格的表头\",\"tbody 表格的主体\",\"tfoot 表格的页脚\",\"caption 表格的标题\",\"th 表格的表头单元格\"]},\"409\":{\"h\":\"4.表格合并\",\"t\":[\"跨列合并： 使用colspan 在最左边的单元格写上colspan属性，并且省略掉合并的td;\",\"跨行合并：使用rowspan 在最上面的单元格协商rowspan属性，并且省略掉后面tr中的td\",\"<table> <tr> <td colspan=\\\"2\\\">1-1</td> </tr> <tr> <td>2-1</td> <td>2-2</td> </tr> </table> \"]},\"410\":{\"h\":\"表单元素\",\"t\":[\"form 表单\",\"form通常作为表单元素的父元素\",\"常见属性\",\"action ： 用于提交表单数据的请求url\",\"method: 请求方法(get和post)，默认get\",\" <form action=\\\"http://www.baidu.com/s\\\"> <input type=\\\"text\\\" name=\\\"wd\\\"> <button type=\\\"submit\\\">百度一下</button> </form> \",\"input 单号文本输入框\",\"type有很多值：text,password,radio,checkbox,button,reset,submit,file\",\"常见的布尔属性有disabled、checked、readonly、multiple、autofocus、selected\",\"<form action=\\\"\\\"> <input type=\\\"button\\\" value=\\\"普通按钮\\\"/> <input type=\\\"reset\\\" value=\\\"重置按钮\\\"/> <input type=\\\"submit\\\" value=\\\"提交按钮\\\"/> </form> \",\"input和label的关系\",\"label元素一般跟input配合使用，用来表示input的标题\",\"label可以跟某个input绑定，点击label就可以激活对应的input变为选中\",\"<div> <label for=\\\"username\\\"> 用户： <input id=\\\"username\\\" type=\\\"text\\\"> </label> </div> \",\"textarea 多行文本框\",\"select, option 下拉选择框\",\"<select name=\\\"fruits\\\" id=\\\"\\\" multiple size=\\\"2\\\"> <option value=\\\"apple\\\" selected>苹果</option> <option value=\\\"banana\\\">香蕉</option> <option value=\\\"orange\\\">橘子</option> </select> \",\"button 按钮\",\"label 表单元素的标题\"]},\"411\":{\"h\":\"表单常见属性\"},\"412\":{\"h\":\"常见Emmet语法\"},\"413\":{\"h\":\"1.认识Emmet\",\"t\":[\"Emment 是一个能大幅度提高前端开发效率的一个工具\",\"在前端开发过程中，一大部门的工作是写html,css代码，如果手动来编写效果会非常低\",\"vscode内置了Emmet语法，在后缀为.html/.css中输入缩写后按tab/enter键即可自动生成相应的代码\"]},\"414\":{\"h\":\"2.常见Emment语法\",\"t\":[\"(子代) 和 + （兄弟） div>h1+p div+p+ul>li\",\"(多个) 和^(上一级) ul>li5 div+div>p>span^h1 div+div>p>span^^^^h1\",\"() 分组\",\"属性(id属性，class属性，普通属性){}(内容) div#header+div#main>.container>a[href]\",\"$ 数字 ul>li{列表内容$}*10\"]},\"415\":{\"h\":\"额外知识补充\"},\"416\":{\"h\":\"border图形\",\"t\":[\"border也可以做图形\",\"<!DOCTYPE html> <html lang=\\\"en\\\"> <head> <meta charset=\\\"UTF-8\\\"> <meta name=\\\"viewport\\\" content=\\\"width=device-width, initial-scale=1.0\\\"> <title>Document</title> </head> <style> .box{ width: 100px; height: 100px; border: 50px solid orange; border-right-color: transparent; border-bottom: transparent; border-left-color: transparent; box-sizing: border-box; /* 旋转 */ transform-origin: center 25%; transform: rotate(180deg); } </style> <body> <div class=\\\"box\\\"> </div> </body> </html> \",\"Alt text\"]},\"417\":{\"h\":\"web网络字体\",\"t\":[\" @font-face { font-family: \\\"hyfont01\\\"; src: url(./fonts/AaJianHaoTi-2.ttf) } body{ font-family: \\\"hyfont01\\\"; } \"]},\"418\":{\"h\":\"web字体图标\",\"t\":[\"字体图标的好处\",\"放大不会失真\",\"可以任意切换颜色\",\"用到很多个图标时，文件相对图片较小\",\"字体图标的使用\",\"登录阿里icons(https://www.iconfont.cn/)\",\"下载代码，拷贝到项目中\"]},\"419\":{\"h\":\"css精灵图\",\"t\":[\"将各种小图片合并放在一张图片上，然后利用css的背景定位来显示对应的图片部分\",\"如何获取精灵图的位置http://www.spritecow.com\",\" i.hot-icon{ background-image: url(../images/topbar_sprite.png); background-repeat: no-repeat; display: inline-block; width: 26px; height: 13px; background-position: -192px 0; } <i class=\\\"hot-icon\\\"></i> \"]},\"420\":{\"h\":\"cursor属性\",\"t\":[\"设置鼠标指针在元素上面时显示样式\",\"auto：浏览器根据上下文决定指针的显示样式，比如根据文本和非文本切换指针样式\",\"pointer：一只小手\",\"text: 一条竖线\",\"none: 没有任何指针显示在元素上面\"]},\"421\":{\"h\":\"css元素定位\"},\"422\":{\"h\":\"标准流布局\",\"t\":[\"默认情况下，元素是按照标准流进行排布 从左到右、从上到下按顺序摆放好 默认情况下，互相之间不存在层叠现象\",\"在标准流中，可以使用margin、padding对元素进行定位 但是明显的缺点是 设置一个元素的margin或者padding,通常会影响到标准流中其他元素的定位效果 不便于实现元素层叠的效果\",\"如果我们希望一个元素可以跳出标准流，单独对某个元素进行定位呢？ 可以通过position属性来进行设置\",\"认识元素的定位\",\"定位允许从正常的文档流布局中取出元素，并使它们具有不同的行为\",\"例如放在另一个元素的上面\",\"或者始终保持在浏览器视窗内的同一位置\",\"认识position属性 常见值\",\"static: 默认值，静态定位 元素按照标准版布局 left,right,top,bottom没有任何作用\",\"relative: 相对定位\",\"absolute: 绝对定位\",\"fixed: 固定定位\",\"sticky: 粘性定位\"]},\"423\":{\"h\":\"相对定位\",\"t\":[\"元素依然按照标准流布局，不脱标\",\"可以通过left,right,top,bottom进行定位\",\"定位参照对象是元素自己原来的位置\",\"left,right,top,bottom用来设置元素的具体位置，对元素的作用如下图\",\"相对定位应用场景在不影响其他元素位置的前提下，当当前元素位置进行微调\",\" .box{ position: relative; left: 50px; top: 50px; } \",\"<!DOCTYPE html> <html lang=\\\"en\\\"> <head> <meta charset=\\\"UTF-8\\\"> <meta name=\\\"viewport\\\" content=\\\"width=device-width, initial-scale=1.0\\\"> <title>Document</title> </head> <style> div{ font-size: 20px; } span{ font-size: 12px; position: relative; bottom: 8px; } </style> <body> <div> 3<span>2</span> + 2<span>3</span> = 17 </div> </body> </html> \"]},\"424\":{\"h\":\"固定定位\",\"t\":[\"元素脱离标准流(脱标) 可以通过left,right,top,bottom进行定位 定位参照对象是视口（viewport:文档的可视区域） 当画布滚动时，固定不动\",\" .box{ position: fixed; right: 30px; bottom: 30px; } \"]},\"425\":{\"h\":\"绝对定位\",\"t\":[\"元素脱离标准流，脱标\",\"可以通过left,right,top,bottom进行定位\",\"定位参考对象是最邻近的定位祖先元素\",\"如果找不到这样的祖先元素，参考对象是视口\",\"什么是定位元素？\",\"position值不为static的元素\",\"也就是position值为relative,absolute,fixed的元素\",\" <!DOCTYPE html> <html lang=\\\"en\\\"> <head> <meta charset=\\\"UTF-8\\\"> <meta name=\\\"viewport\\\" content=\\\"width=device-width, initial-scale=1.0\\\"> <title>Document</title> </head> <style> .container{ width: 800px; height: 800px; background-color: #f00; position: relative; } .box{ width: 500px; height: 500px; background-color: #0f0; position: absolute; right: 0; bottom: 0; } image{ width: 100px; } strong{ position: absolute; left: 0; bottom: 0; } </style> <body> <div class=\\\"container\\\"> <div class=\\\"box\\\"> <span>我是span元素</span> <strong>我是strong元素</strong> <img src=\\\"./1.webp\\\" alt=\\\"\\\"> <div>我是div元素</div> </div> </div> </body> </html> \",\"子绝父相 绝大多数情况下，子元素的绝对定位都是相对于父元素进行定位\",\"如果希望子元素相对－元素进行定位，又不希望父元素脱标，常用的解决方案\",\"父元素设置position: relative (让父元素成为定位元素，而且父元素不脱离标准流)\",\"子元素设置positive: absolute\",\"简称子绝父相\",\"绝对定位元素的特点（absolute/fixed）\",\"可以随意设置宽高\",\"宽高默认由内容决定\",\"不再受标准流的约束\",\"不再严格按照从上到下，从左到右排布\",\"不再严格区分块级，行内级，行内块级的很多特性都会消失\",\"不再给父元素汇报宽高数据(父元素如果没有内容，也没设置宽高，子元素设置absolute，父元素会消失)\",\"脱标元素内部默认还是按照标准流布局\",\"对于绝对定位元素来说\",\"定位参照对象的宽度= left+right+ margin-left +margin-right + 绝对定位元素的实际占用宽度\",\"定位参照对象的高度 = top + bottom + margin-top + margin-bottom + 绝对定位元素的实际占用高度\",\"如果希望绝对定位元素的宽高和定位参照对象一样，可以给绝对定位元素设置以下属性\",\"left:0 right:0 top:0 bottom:0 margin:0\",\"如果希望绝对定位元素在定位参照对象中居中显示，可以给绝对定位元素设置以下属性\",\"left:0, right:0, top:0, bottom:0 ,margin: auto\",\"另外，还得设置具体的宽高值（宽高小于定位参照对象的宽高）\",\"练习： 让子元素在父元素里面水平和垂直都居中显示\",\" <!DOCTYPE html> <html lang=\\\"en\\\"> <head> <meta charset=\\\"UTF-8\\\"> <meta name=\\\"viewport\\\" content=\\\"width=device-width, initial-scale=1.0\\\"> <title>Document</title> </head> <style> .container { width: 800px; height: 800px; background-color: #f0f; position: relative; } .box{ width: 400px; height: 400px; background-color: #f00; position: absolute; right: 0; bottom: 0; left: 0; top:0; margin: auto; } </style> <body> <div class=\\\"container\\\"> <div class=\\\"box\\\"> </div> </div> </body> </html> \"]},\"426\":{\"h\":\"粘性定位\",\"t\":[\"比起其他定位值要新一些position: sticky 可以看作是相对定位和固定(绝对)定位的结合体 它允许被定位的元素表现得像相对定位一样，直到它滚动到某个阈值点 当达到这个阈值点时，就会变成固定(绝对)定位\",\"sticky是相对于最近的滚动祖先包含视口的\",\" .box{ position: sticky; top: 0; } \",\"position值对比\",\"Alt text\"]},\"427\":{\"h\":\"z-index\",\"t\":[\"作用：用来设置定位元素的层叠顺序，仅对定位元素有效\",\"取值可以是正整数，负整数，0\",\"比较原则：\",\"如果是兄弟关系\",\"z-index越大，层叠在越上面\",\"z-index相等，写在后面的那个元素层叠在上面\",\"如果不是兄弟关系\",\"各自从元素自己以及祖先元素中，找出最邻近的2个定位元素进行比较\",\"而且这2个定位元素必须有设置z-index的具体数值\"]},\"428\":{\"h\":\"CSS的浮动\"},\"429\":{\"h\":\"认识浮动\",\"t\":[\"float属性可以指定一个元素应沿着其容器的左侧或右侧放置，允许文本和内联元素环绕它\",\"float属性最初只用于在一段文本内浮动图像，实现文字环绕的效果\",\"早期css标准并没有提供好的左右布局方案，因此在一段时间里面它成为网页多列布局的最常用工具\",\"绝对定位，浮动都会让元素脱离标准流，以达到灵活布局的效果\",\"常见取值\",\"none: 不浮动，默认值\",\"left: 向左浮动\",\"right: 向右浮动\"]},\"430\":{\"h\":\"浮动的规则\",\"t\":[\"= 元素一旦浮动后，脱离标准流\",\"朝着向左或者向右方向移动，直到自己的边界紧贴着包含块（一般是父元素）或者其他浮动元素的边界为止\",\"定位元素会层叠在浮动元素上面\",\"如果元素是向左或者向右浮动，浮动元素的左或者右边界不能超出包含块的左或者右边界\",\"浮动元素之间不能层叠 \",\"左浮找左浮，右浮找右浮\",\"如果水平方向剩余空间不够显示浮动元素，浮动元素将向下移动，直到有充足的空间为止\",\"浮动元素不能与行内级内容层叠，行内级内容将会被浮动元素推出 \",\"比如行内级元素，inline-block元素，块级元素的文字内容\",\"行内级元素、inline-block元素浮动后，其顶部将与所在行的顶部对齐\",\"将多个行内级元素中间的空格(间隙)去除的方法\",\"删除换行符（不推荐）\",\"将父级元素的font-size设置为0，但是需要子元素设置回来\",\"通过子元素(span)统一向一个方向浮动即可\",\"flex布局（还没学习）\"]},\"431\":{\"h\":\"浮动的案例\",\"t\":[\"百度页面展示练习\",\"Alt text\",\" <!DOCTYPE html> <html lang=\\\"en\\\"> <head> <meta charset=\\\"UTF-8\\\"> <meta name=\\\"viewport\\\" content=\\\"width=device-width, initial-scale=1.0\\\"> <title>Document</title> </head> <style> ul,li{ list-style: none; margin: 0; padding: 0; } a{ text-decoration: none; color: #333; } body{ background-color: #f2f2f2; } ul > li { float: left; background-color: #fff; margin-left: 12px; } ul > li >a { display: inline-block; width: 36px; height: 36px; text-align: center; line-height: 36px; border-radius: 6px; background-color: #fff; color: #3951b3; font-size: 14px; } ul > li >a:hover{ background-color: blue; color: #fff; } ul > li.active >a{ background-color: blue; color: #fff; } ul > li.next > a{ width: 80px; } </style> <body> <ul> <li class=\\\"item active\\\"><a href=\\\"#\\\">1</a></li> <li class=\\\"item\\\"><a href=\\\"#\\\">2</a></li> <li class=\\\"item\\\"><a href=\\\"#\\\">3</a></li> <li class=\\\"item\\\"><a href=\\\"#\\\">4</a></li> <li class=\\\"item\\\"><a href=\\\"#\\\">5</a></li> <li class=\\\"item\\\"><a href=\\\"#\\\">6</a></li> <li class=\\\"item\\\"><a href=\\\"#\\\">7</a></li> <li class=\\\"item\\\"><a href=\\\"#\\\">8</a></li> <li class=\\\"item\\\"><a href=\\\"#\\\">9</a></li> <li class=\\\"item\\\"><a href=\\\"#\\\">10</a></li> <li class=\\\"item next\\\"><a href=\\\"#\\\">下一页 &gt;</a></li> </ul> </body> </html> \",\"模仿京东布局\",\" <!DOCTYPE html> <html lang=\\\"en\\\"> <head> <meta charset=\\\"UTF-8\\\"> <meta name=\\\"viewport\\\" content=\\\"width=device-width, initial-scale=1.0\\\"> <title>Document</title> </head> <style> /* 公共的class */ .content { width: 1190px; margin: 0 auto; background-color: orange; height: 800px; } .box{ margin-right: -10px;; } /* 布局样式 */ .item{ width: 230px; height: 322px; background-color: purple; float: left; color: #fff; margin-right: 10px; } /* 存在兼容性 */ /* .item:nth-child(5n){ margin-right: 0; } */ </style> <body> <div class=\\\"content\\\"> <div class=\\\"box\\\"> <div class=\\\"item item1\\\">1</div> <div class=\\\"item item2\\\">2</div> <div class=\\\"item item3\\\">3</div> <div class=\\\"item item4\\\">4</div> <div class=\\\"item item5\\\">5</div> </div> </div> </body> </html> \",\"模仿京东布局\",\" <!DOCTYPE html> <html lang=\\\"en\\\"> <head> <meta charset=\\\"UTF-8\\\"> <meta name=\\\"viewport\\\" content=\\\"width=device-width, initial-scale=1.0\\\"> <title>Document</title> </head> <style> /* 公共的class */ body{ background-color: #f5f5f5; } .content { width: 1190px; margin: 0 auto; background-color: #f5f5f5; height: 1000px; } .wrapper{ margin-right: -10px; } .item { width: 290px; background: #fff; margin-bottom: 10px;; float: left; margin-right: 10px; } .item.left { height: 370px; } .item.right{ height: 180px; } </style> <body> <div class=\\\"content\\\"> <div class=\\\"wrapper\\\"> <div class=\\\"item left\\\"></div> <div class=\\\"item left\\\"></div> <div class=\\\"item right\\\"></div> <div class=\\\"item right\\\"></div> <div class=\\\"item right\\\"></div> <div class=\\\"item right\\\"></div> <div class=\\\"item right\\\"></div> <div class=\\\"item right\\\"></div> <div class=\\\"item right\\\"></div> <div class=\\\"item right\\\"></div> <div class=\\\"item right\\\"></div> <div class=\\\"item right\\\"></div> <div class=\\\"item right\\\"></div> <div class=\\\"item right\\\"></div> </div> </div> </body> </html> \"]},\"432\":{\"h\":\"浮动的问题\",\"t\":[\"高度塌陷\",\"由于浮动元素脱离了标准流，变成了脱标元素，所以不再向父元素汇报高度 \",\"父元素计算总高度时，就不会计算浮动子元素的高度，导致了高度坍塌的问题\",\"那么如何解决父元素高度坍塌问题呢，一般叫做清除浮动\",\"清除浮动的目的是 让父元素计算总高度的时候，把浮动子元素的高度算进去\"]},\"433\":{\"h\":\"清除浮动\",\"t\":[\"如何清除浮动呢？ 答：使用clear属性\",\"clear属性是做什么的呢？\",\"clear属性可以指定一个元素是否必须移动（清除浮动后）到在它之前的浮动元素下面\",\"clear常见取值\",\"left: 要求元素的顶部低于之前生成的所有左浮动元素的底部\",\"right: 要求元素的顶部低于之前生成的所有右浮动元素的底部\",\"both: 要求元素的顶部低于之前生成的所有浮动元素的底部\",\"none: 默认值，无特殊要求\",\"清除浮动的方法\",\"方法一：给父元素设置固定高度，扩展性不好，不推荐\",\"方法二：在父元素最后增加一个空的块级子元素，并且让它设置clear:both 会增加很多无意义的空标签，维护麻烦，不推荐\",\"方案三： 给父元素增加::after伪元素，纯css样式解决，结构与样式分离，推荐\",\" .clear_fix:after{ content: \\\"\\\"; clear: both; display: block; <!-- 浏览器兼容性 --> visibility: hidden; height: 0; } .clear-fix{ <!-- ie6/7兼容性 --> *zoom:1; } \"]},\"434\":{\"h\":\"Flex布局\"},\"435\":{\"h\":\"认识flex布局\",\"t\":[\"认识flexbox\",\"Flexbox翻译为弹性盒子\",\"弹性盒子是一种用于按行或按列布局元素的一维布局方法\",\"元素可以膨胀以填充额外的空间，收缩以适应更小的空间\",\"通常我们使用flexbox来进行布局的方案称之为flex布局（flex layout）\",\"flex布局是目前web开发中使用最多的布局方案\",\"flex布局（flexible布局，弹性布局）\",\"目前特别在移动端可以说已经完全普及\",\"在pc端也几乎已经完全普及和使用，只有非常少数的网站依然在用浮动来布局\",\"为什么需要flex布局？\",\"长久以来，css布局中唯一可靠且跨浏览器兼容的布局工具只有floats和positioning\",\"但是这两种方法本身存在很大的局限性，并且他们用于布局实在是无奈之举\",\"原先的布局存在的痛点？\",\"在父内容里面垂直居中一个块内容\",\"比如使容器的所有子项等分可用宽度/高度，而不管有多少宽度/高度可用\"]},\"436\":{\"h\":\"flex布局的理解\",\"t\":[\"flex布局中重要概念\",\"两个重要概念\",\"开启了flex布局的元素叫 flex container\",\"flex container 里面的直接子元素叫做flex item\",\"当flex cntainer中的子元素变成了flex item时，具备以下特点\",\"flex item的布局将受flex container属性的设置来进行控制和布局\",\"flex item 不再严格区分块级元素和行内级元素\",\"flex item默认情况下是包裹内容的，但是可以设置宽度和高度\",\"设置display属性为flex或者inline-flex可以成为flex container\",\"flex: flex container 以block-level形式存在\",\"inline-flex: flex container 以 inline-level 形式存在\",\"代码初体验\",\"<!DOCTYPE html> <html lang=\\\"en\\\"> <head> <meta charset=\\\"UTF-8\\\"> <meta name=\\\"viewport\\\" content=\\\"width=device-width, initial-scale=1.0\\\"> <title>Document</title> </head> <style> .box{ background-color: #f00; display: flex; } </style> <body> 111 <div class=\\\"box\\\"> <div class=\\\"item\\\">box1</div> <div class=\\\"item\\\">box2</div> <div class=\\\"item\\\">box3</div> </div> 2222 </body> </html> \",\"效果图\"]},\"437\":{\"h\":\"flex-container属性\"},\"438\":{\"h\":\"flex-item属性\"},\"439\":{\"h\":\"Flex布局的模型\",\"t\":[\"image-20231023153313293\"]},\"440\":{\"h\":\"Flex相关的属性\",\"t\":[\"应用在flex container上的css属性 \",\"flex-flow\",\"flex-direction\",\"flex-wrap\",\"justify-content\",\"align-items\",\"align-content\",\"应用在flex items上的css属性 \",\"flex-grow\",\"flex-basis\",\"flex-shrink\",\"order\",\"align-self\",\"flex\"]},\"441\":{\"h\":\"flex-direction\",\"t\":[\"flex items 默认都是沿着main axis（主轴）从main start 开始往 main end 方向排布\",\"flex-direction 决定了main axis的方向，有4个取值\",\"row(默认值)、row-reverse、column、column-reverse\",\"方向对比\",\" <!DOCTYPE html> <html lang=\\\"en\\\"> <head> <meta charset=\\\"UTF-8\\\"> <meta name=\\\"viewport\\\" content=\\\"width=device-width, initial-scale=1.0\\\"> <title>Document</title> </head> <style> .box{ background-color: #f00; display: flex; flex-direction: row-reverse; } .item{ width: 200px; height: 200px; } .item1{ background-color: aquamarine; } .item2{ background-color: bisque; } .item3{ background-color: skyblue; } </style> <body> <div class=\\\"box\\\"> <div class=\\\"item item1\\\">box1</div> <div class=\\\"item item2\\\">box2</div> <div class=\\\"item item3\\\">box3</div> </div> </body> </html> \",\"image-20231023172442255\"]},\"442\":{\"h\":\"flex-wrap\",\"t\":[\"flex-wrap 决定了flex container 是单行还是多行\",\"有三个取值\",\"nowrap(默认)：单行\",\"wrap: 多行\",\"wrap-reverse: 多行（对比wrap, cross start 与 cross end 相反）\",\"<!DOCTYPE html> <html lang=\\\"en\\\"> <head> <meta charset=\\\"UTF-8\\\"> <meta name=\\\"viewport\\\" content=\\\"width=device-width, initial-scale=1.0\\\"> <title>Document</title> </head> <style> .box{ background-color: #f00; display: flex; flex-direction: row; flex-wrap: wrap; width: 600px; height: 800px; } .item{ width: 200px; height: 200px; } .item1{ background-color: aquamarine; } .item2{ background-color: bisque; } .item3{ background-color: skyblue; } .item4{ background-color: gainsboro; } .item5{ background-color: cornsilk; } </style> <body> <div class=\\\"box\\\"> <div class=\\\"item item1\\\">box1</div> <div class=\\\"item item2\\\">box2</div> <div class=\\\"item item3\\\">box3</div> <div class=\\\"item item4\\\">box4</div> <div class=\\\"item item5\\\">box5</div> </div> </body> </html> \",\"Alt text\"]},\"443\":{\"h\":\"flex-flow\",\"t\":[\"flex-flow是属性flex-direction 和 flex-wrap 的简写\",\"顺序任何，并且都可以省略\",\".item{ flex-flow: wrap; flex-flow: row wrap; } \"]},\"444\":{\"h\":\"justify-content\",\"t\":[\"justify-content 决定了flex items 在main axis上的对齐方式\",\"flex-start(默认值)：与main start 对齐\",\"Alt text\",\"flex-end: 与main end对齐\",\"Alt text\",\"center: 居中对齐\",\"Alt text\",\"space-between(两端个放一个元素，其他多余的元素一定要空间等分)\",\"flex items 之前的距离相等\",\"与main start 、main end 两端对齐\",\"Alt text\",\"space-around(两端也有间距，两端的间距是items之间的间距一半)\",\"flex items 之间的距离相等\",\"flex itmes 与main start、main end 之间的距离是flex items之间距离的一半\",\"Alt text\",\"space-evenly(两端也有空隙，并且所有的空间进行等分)\",\"flex items之间的距离相等\",\"flex items与 main start、main end之间的距离等于flex items 之间的距离\",\"Alt text\"]},\"445\":{\"h\":\"align-items\",\"t\":[\"align-items决定了flex items 在cross axis(交叉轴：竖线)上的对齐方式\",\"normal(了解): 在弹性布局中，效果和stretch一样\",\"stretch(了解): 当flex items 在cross axis方向的size 为auto时，会自动拉伸至填充flex container\",\"flex-start: 与cross start对齐\",\"flex-end: 与cross end对齐\",\"center(重要): 居中对齐\",\"baseline: 与基准线对齐\"]},\"446\":{\"h\":\"align-content\",\"t\":[\"align-content 决定了多行flex items在cross axis上的对齐方式，用法与justify-content类似\",\"stretch(默认值)：与align-items的stretch类似\",\"flex-start: 与cross start对齐\",\"flex-end: 与cross end对齐\",\"center: 居中对齐\",\"space-between\",\"flex items之间的距离相等\",\"与cross start、cross end两端对齐\",\"space-around\",\"flex items之间的距离相等\",\"flex items 与cross start、cross end之间的距离是flex items之间距离的一半\",\"space-evenly\",\"flex items 之间的距离相等\",\"flex items 与 cross start、cross end之间的距离等于flex items之间的距离\"]},\"447\":{\"h\":\"order(item属性)-了解\",\"t\":[\"order 决定了flex items的排布顺序\",\"可以设置任意整数，值越小就越排在前面\",\"默认值是0\",\".item1{ order:5; } item2{ order:3; } \"]},\"448\":{\"h\":\"align-self(item属性)-了解\",\"t\":[\"flex items可以通过align-self 覆盖flex container设置align-items\",\"auto: 默认值，遵从flex container的align-items设置\",\"stretch、flex-start、flex-end、center、baseline 效果和align-items一致\"]},\"449\":{\"h\":\"flex-grow(item属性)-掌握\",\"t\":[\"flex-grow 决定了flex items如何扩展（拉伸/成长）\",\"可以设置任意非负数字，默认值是0\",\"当flex container 在main axis方向上有剩余size时，flex-grow属性才会生效\"]},\"450\":{\"h\":\"flex-shrink(item属性)-掌握\",\"t\":[\"flex-shrink 决定了flex items 如何收缩（缩小）\",\"可以设置任意非负数字，默认值是1\",\"当flex items 在main axis 方向上超过了flex container 的size, flex-shrink属性才会有效\"]},\"451\":{\"h\":\"flex-basis(item属性)-了解\",\"t\":[\"flex-basis用来设置flex items 在main axis 方向上的base size\",\"auto （默认值）\",\"具体的宽度数值（100px）\"]},\"452\":{\"h\":\"flex(item属性)-缩小属性-掌握\",\"t\":[\"flex 是flex-grow||flex-shrink||flex-basis的简写，flex属性可以指定1个，2个或者3个值\",\"none | flex-grow |flex-shrink?|flex-basis\",\"单值语法：值必须为以下其中之一\",\"一个无单位数(number): 它会被当作flex-grow的值\",\"一个有效的宽度(width)值，它会被当作flex-basis的值\",\"关键字none,auto或initial\",\"双值语法：\",\"第一个值必须为一个无单位数，并且它会被当作flex-grow的值\",\"第二个值必须为以下之一 \",\"一个无单位数：flex-shrink的值\",\"一个有效的宽度值：flex-basis的值\",\"三值语法\",\"第一个flex-grow,第二个flex-shrink,第三个flex-basis\"]},\"453\":{\"h\":\"flex布局对齐问题\",\"t\":[\"思考：如下布局如何解决对齐问题\",\"image-20231024100100343\",\"答案： 推荐方式，不用计算\",\"给里面div盒子后面增加i元素，元素个数为一排总数-2，上图对应就是4-2=2\",\"<div class=\\\"box\\\"> <div class=\\\"item item1\\\">box1</div> <div class=\\\"item item2\\\">box2</div> <div class=\\\"item item3\\\">box3</div> <div class=\\\"item item4\\\">box4</div> <div class=\\\"item item5\\\">box5</div> <div class=\\\"item item6\\\">box6</div> <div class=\\\"item item7\\\">box7</div> <div class=\\\"item item8\\\">box8</div> <div class=\\\"item item8\\\">box8</div> <div class=\\\"item item6\\\">box6</div> <div class=\\\"item item8\\\">box8</div> <i></i> <i></i> </div> \",\"给i元素设置和item相同的width\",\".box i{ width: 80px; } \",\"完整示例代码\",\"<!DOCTYPE html> <html lang=\\\"en\\\"> <head> <meta charset=\\\"UTF-8\\\"> <meta name=\\\"viewport\\\" content=\\\"width=device-width, initial-scale=1.0\\\"> <title>Document</title> </head> <style> .box{ background-color: #f3f3f3; display: flex; flex-wrap: wrap; width: 350px; justify-content: space-between; } .item{ width: 80px; height: 60px; } .item1{ background-color: aquamarine; } .item2{ background-color: bisque; } .item3{ background-color: skyblue; } .item4{ background-color: gainsboro; } .item5{ background-color: cornsilk; } .item6{ background-color: blueviolet; } .item7{ background-color: lawngreen; } .item8{ background-color: gold; } .box i{ width: 80px; } </style> <body> <div class=\\\"box\\\"> <div class=\\\"item item1\\\">box1</div> <div class=\\\"item item2\\\">box2</div> <div class=\\\"item item3\\\">box3</div> <div class=\\\"item item4\\\">box4</div> <div class=\\\"item item5\\\">box5</div> <div class=\\\"item item6\\\">box6</div> <div class=\\\"item item7\\\">box7</div> <div class=\\\"item item8\\\">box8</div> <div class=\\\"item item8\\\">box8</div> <div class=\\\"item item6\\\">box6</div> <div class=\\\"item item8\\\">box8</div> <i></i> <i></i> </div> </body> </html> \"]},\"454\":{\"h\":\"transform\",\"t\":[\"css 属性- transform 属性允许对某一个元素进行某些形变，包括旋转，缩放，倾斜或平移等\",\"transform 是形变的意思\",\"并非所有的盒子都可以进行transform的转换（行内级元素不能进行形变）\",\"所以transform 对于行内级非替换元素是无效的（比如span, a元素等）\",\"transform属性的语法\",\"常见的函数有\",\"平移：translate(x,y)\",\"缩放：scale(x,y)\",\"旋转：rotate(deg)\",\"倾斜：skew(deg,deg)\",\"一. 位移- translate\",\"平移：translate(x,y)\",\"这个css函数用于移动元素在平面上的位置\",\"值个数\",\"一个值时，设置x轴上的距离\",\"两个值时，设置x和y轴的距离\",\".box{ transform: translate(100px); transform: translate(100px,100px); } \",\"值类型 \",\"数字：100px\",\"百分比：参照元素本身\",\"注意：translate的百分比是相对于自身的\",\"如果设置x位移：那么参考的是自身的宽度\",\"如果设置y位移：那么参考的是自身的高度\",\"translate的补充\",\"translate是translateX和translateY函数的简写\",\"translate的百分比可以完成一个元素的水平和垂直居中\",\"二. 缩放-sacle\",\"缩放：scale(x,y): 可改变元素的大小\",\"值个数\",\"一个值，设置x轴上的缩放\",\"两个值，设置x轴和y轴上的缩放\",\"值类型\",\"数字 \",\"1：保持不变\",\"2：放大一倍\",\"0.5：缩小一半\",\".box{ transform: scale(0.6,0.6); } \",\"三、旋转-rotate\",\"值个数\",\"一个值时，表示旋转的角度\",\"值类型：\",\"常用单位deg: 旋转的角度（degrees）\",\"正数为顺时针\",\"负数为逆时针\",\".box{ transform: rotate(90deg); } \",\"四、倾斜-skew（了解）\",\"倾斜：skew(x,y)\",\"定义了一个元素在二维平面上的倾斜转换\",\"值个数\",\"一个值：表示x轴上的倾斜\",\"两个值：表示x轴和y轴上的倾斜\",\"值类型\",\"deg: 旋转的角度\",\"正数为顺时针\",\"负数为逆时针\",\".box:hover { transform: skew(-10deg,0); } \",\"transform 可以设置多个值\",\"eg\",\".box:hover{ transform: translate(50px) scale(1.2) rotate(45deg); } \"]},\"455\":{\"h\":\"垂直居中总结（重要）\",\"t\":[\"一、回顾让元素水平居中，有如下几种\",\"行内级元素\",\"设置父元素的text-align: center\",\"块级元素\",\"设置当前块级元素的margin: 0 auto;(元素必须有宽度)\",\"绝对定位\",\"元素有宽度的情况下，left:0; right:0；margin: 0 auto;\",\"flex\",\"justify-content: center\",\"二、垂直居中\",\"绝对定位\",\"元素有高度情况下，top:0; bottom:0; margin: auto 0;\",\"弊端：必须使用定位(脱离标准流)；元素必须设置宽度\",\"flex布局\",\"父元素display: flex; align-items: center;\",\"弊端：当前flex局部中所有的元素都会被垂直居中，兼容性差一点点\",\"top+translate(推荐，但是不好理解)\",\"两件事情\",\"需要让元素向下位移父元素的50%\",\"需要让元素向上位移自身的50%\",\".box{ position: relative; top: 50%; transform: translate(0,-50%); } \"]},\"456\":{\"h\":\"transition 动画\",\"t\":[\"一、认识transition动画\",\"什么是transition动画\",\"css transition提供了一种在更改css属性时控制动画速度的方法\",\"css transitions 可以决定\",\"哪些属性发现动画效果\",\"何时开始\",\"持续多久\",\"如何动画\",\"二、哪些css属性可以做动画呢？\",\"查文档\",\"三、过渡动画-transition\",\"包含四个属性\",\"transition-property: 指定应用过渡属性的名称\",\"all: 所有属性都执行动画\",\"none: 所有属性都不执行动画\",\"css属性名称：要执行动画的css属性名称，比如width、left、transform等\",\"transition-duration: 指定过渡动画所需的时间\",\"单位可以是秒（s）或毫秒（ms）\",\"transition-timing-function: 指定动画的变化曲线\",\"transition-delay： 指定过渡动画执行之前的等待时间\",\".box{ positon: relative; left:0; width:200px; height:100px; background-color: orange; transition-property: transform,left; transition-duration: 1s; transition-timing-function: ease-in; transition-delay: 2s; /*简写属性 */ transition: all 1s ease-in 1s; } .box:hover{ left:100px; transform: translate(100px); } \"]},\"457\":{\"h\":\"animation动画\",\"t\":[\"认识css animation\",\"过渡动画有如下缺点\",\"transition 只能定义开始状态和结束状态\",\"transition不能重复执行\",\"transition需要在特定状态下触发才能执行\",\"css animation的使用分成两个步骤\",\"使用keyframes定义动画序列（每一帧动画如何执行）\",\"可以使用@keyframes来定义多个变化状态，并且使用animation-name来声明匹配：\",\"关键帧使用percentage来指定动画发生的时间点\",\"0%表示动画的第一时刻，100%表示动画的最终时刻\",\"因为这俩个时间点十分重要，所以还有特殊的别名：from和to\",\"配置动画执行的名称、持续时间、动画曲线、延迟、执行次数、方向等等\",\"animation-name：指定执行哪一个关键帧动画\",\"animation-duration: 指定动画的持续时间\",\"animation-timing-function: 指定动画的变化曲线\",\"animation-delay: 指定延迟的执行时间\",\"animation-iteration-count: 指定动画执行的次数，执行infinite表示无限动画\",\"animation-direction: 指定方向，常用值normal和reverse\",\"animation-fill-mode: 执行动画最后保留哪一个值 \",\"none: 回到没有执行动画的位置\",\"forwards：动画最后一帧的位置\",\"backwards: 动画第一帧的位置\",\"animation是animation-name、animation-duration、animation-timing-function、animation-delay、animation-iteration-count\",\"animation-direction、animation-fill-mode、animation-play-state 属性的一个简写属性形式\",\"animation: test 3s linear 1s 2 normal forwards \",\".box{ width: 300px; heigth: 300px; background-color: orange; animation-delay: 2s; animation-name: test; animation-duration: 3s; animation-timing-function: ease-in-out; /*动画执行的次数*/ animation-iteration-count: 2; animation-direction: reverse; /*元素停留在动画的哪一个位置*/ animation-fill-mode: forwards; } @keyframes test{ 0%{ transform: translate(0,0) sacle(0.5,0.5); } 33%{ transform: translate(0,200px) sacle(1.2,1.2); } 66%{ transform: translate(400px,200px); } 100%{ transform: translate(400px,0); } } \"]},\"458\":{\"h\":\"vertical-align\",\"t\":[\"line box: 行盒\",\"vertical-align: 官方解释：会影响行内块级元素在一个行盒中垂直方向的位置\",\"思考：一个div没有设置高度的时候，会不会有高度？\",\"没有内容，没有高度\",\"有内容，内容撑起来高度\",\"但是内容撑起高度的本质是什么呢？\",\"内容有行高，撑起来了div的高度\",\"那行高为什么可以撑起div的高度呢？\",\"这是因为line boxes的存在，并且line-boxes有一个特性，包裹每行的inline level\",\"而其中的文字是有行高的，必须将整个行高包裹进去，才算包裹这个line-level\",\"那么，进一步思考：\",\"如果这个div中有图片，文字，inline-block, 甚至他们设置了margin这些属性呢？\",\"结论：line-boxes一定会想办法包裹住当前行中所有的内容\",\"但是为啥对齐方式千奇百怪呢？\",\"答案就是baseline对齐\",\"vertical-align 默认值就是baseline\",\"baseline都是谁呢？\",\"文本的baseline是字母x的下方\",\"inline-blcok默认的baseline是margin-bottom的底部（没有，就是盒子的底部）\",\"inline-block有文本时，baseline是最后一行文本的x的下方\",\"vertical-align 取值\",\"baseline(默认值)：基线对齐\",\"top: 把行内级盒子的顶部跟line boxes顶部对齐\",\"middle：行内级盒子的中心点与父盒基线加上x-height一半的线对齐\",\"bottom: 把行内级盒子的底部跟line box底部对齐\",\"percentage: 把行内级盒子提升或者下降一段距离（距离相对于line-height计算\\\\元素高度），0%意味着同baseline一样\",\"length: 把行内级盒子提升或者下降一段距离，0cm意味着同baseline一样\"]},\"459\":{\"h\":\"HTML5\",\"t\":[\"###HTML5新增元素\",\"header: 头部元素\",\"nav: 导航元素\",\"section: 定义文档某个区域的元素\",\"article: 内容元素\",\"aside: 侧边栏元素\",\"footer: 尾部元素\"]},\"460\":{\"h\":\"Video、Audio元素\",\"t\":[\"video: 用于视频播放\",\"<video src=\\\"./video/test.mp4\\\" controls></video> \",\"常见属性\",\"值的方式\",\"属性作用\",\"src\",\"url地址\",\"视频播放的url地址\",\"width\",\"像素\",\"设置video宽度\",\"height\",\"像素\",\"设置video高度\",\"controls\",\"boolean类型\",\"是否显示控制栏，包括音量，跨帧，暂停/恢复播放\",\"autoplay\",\"boolean类型\",\"是否视频自动播放\",\"muted\",\"boolean类型\",\"是否静音播放\",\"preload\",\"nono/metadata/auto\",\"是否需要预加载视频，metadata表示预加载元数据（比如视频的时长）\",\"poster\",\"url地址\",\"一海报帧的url\",\"audio: 用于音频播放\",\"常见属性\",\"src: url地址\",\"controls: boolean类型，是否显示控制栏\",\"autoplay: boolean类型，是否自动播放\",\"muted: boolean类型，是否静音播放\",\"preload: none/metadata/auto 是否需要预加载视频\"]},\"461\":{\"h\":\"input、全局属性data-*\",\"t\":[\"html5新增属性\",\"placeholder: 输入框的占位文字\",\"multiple: 多个值\",\"autofocus：最多输入的内容\",\"<input type=\\\"text\\\" placeholder=\\\"占位文本\\\" autofocus> <select multiple> <option value=\\\"\\\">苹果</option> <option value=\\\"\\\">香蕉</option> <option value=\\\"\\\">橘子</option> </select> \",\"input 新增type属性\",\"date\",\"time\",\"number\",\"tel\",\"color\",\"email\",\"html5新增全局属性data-*\",\"用于自定义数据属性\",\"data设置的属性可以在js的dom操作中通过dataset轻松获取到\",\"通常用于html和js数据之间的传递\",\"<div class=\\\"box\\\" data-name=\\\"cx\\\" data-age=\\\"18\\\"></div> <script> const boxE1 = document.querySelector(\\\".box\\\") console.log(boxE1.dataset) </script> \"]},\"462\":{\"h\":\"White-space/text-overflow\",\"t\":[\"white-space: 用于设置空白处理 (空格 tab 换行符) 和换行规则\",\"常见值：\",\"normal： 合并所有连续的空白，允许单词超屏时自动换行\",\"nowrap: 合并所有连续的空白，不允许单词超屏时自动换行\",\"text-overflow: 用于设置文字溢出时的行为\",\"clip: 溢出的内容直接裁剪掉（文字可能会显示不完整）\",\"ellipsis: 溢出那行的结尾处用省略号显示\",\"text-overflow生效的前提是overflow不为visible\",\".box{ width: 150px; background-color: #f00; overflow: hidden; white-space: nowrap; text-overflow: ellipsis; } \"]},\"463\":{\"h\":\"CSS常见的函数扩展\",\"t\":[\"css函数通常可以帮助我们更加灵活的来编写样式的值\",\"几个非常好用的css函数\",\"var: 使用css定义的变量\",\"属性名需要以两个减号（--）开始；\",\"属性值则可以是任何有效的css值；\",\"推荐将自定义属性定义在html中，也可以使用:root 选择器；\",\"html{ /*定义了一个变量 只有后代元素可以使用*/ --main-color: #f3c258; } .box { color: var(--main-color); } .title { color: var(--main-color); } \",\"calc: 计算css值, 通常用于计算元素的大小或位置\",\"计算支持加减乘除的运算 \",\"对于+或-的运算符的两边必须要有空格\",\"通常用来设置一些元素的尺寸或者位置\",\"<div class=\\\"box\\\"> <div class=\\\"item item1\\\"> </div> <div class=\\\"item item2\\\"> </div> </div> <style> .box{ width: 300px; height: 100px; background-color: orange; } .item{ height: 50px; display: inline-block; } .item1{ /*width的百分比相对于包含块（父元素）*/ width: calc(100% - 100px); background-color: #f0f; } .item2{ width: 100px; background-color: #0f0; } </style> \",\"blur: 毛玻璃(高斯模糊)效果\",\"blur()函数通常将高斯模糊应用于输出图片或者元素\",\"blur(radius)\",\"radius，模糊的半径，用于定义高斯函数的偏差值，偏差值越大，图片越模糊\",\"通常会和两个属性一起使用\",\"filter: 将模糊或颜色偏移等图形效果应用于元素\",\"backdrop-filter: 为元素后面的区域添加模糊或者其他效果\",\"img{ filter: blur(5px); } .box{ background-color: rgba(0,0,0,.5); backdrop-filter: blur(10px); } \",\"gradient: 颜色渐变函数\",\"gradient是一种imagecss数据的子类型，用于表现两种或多种颜色的过渡转变\",\"css的image数据类型描述的是2d图形，如background-image, list-style-image\",\"image常见的方式是通过url引入一个图片资源，它也可以通过css的gradient函数来设置颜色的渐变\",\"gradient常见函数\",\"linear-gradient(): 创建一个表示两种或多种颜色线性渐变的图片\",\".box background-image: linear-gradient(red,blue); background-image: linear-gradient(to right,red,blue); background-image: linear-gradient(to right top,red,blue); background-image: linear-gradient(-45deg,red,blue); } \",\"radial-gradient(): 创建一个图像，该图像是由从原点发出的两种或者多种颜色之间的逐步过渡组成\",\"repeating-linear-gradient(): 创建一个由重复线性渐变组成的image\",\"repeating-radial-gradient(): 创建一个重复的原点触发渐变组成的image\"]},\"464\":{\"h\":\"理解浏览器前缀\",\"t\":[\"浏览器前缀：有时候我们会看到css属性前面带有：-o- 、-xv- 、-ms-、mso- 、-moz-、-webkit-\",\"官方文档术语叫做：供应商特点扩展\",\"为什么需要浏览器前缀了？\",\"css属性刚开始并没有成为标准，浏览器为了防止后续会修改名字给新的属性添加了浏览器前缀\",\"上述前缀也叫做浏览器私有前缀，只有对应的浏览器才能解析使用\",\"-o-、-xv-: opera等\",\"-ms- 、mso-: ie等\",\"-moz-: firefox 等\",\"-webkit-: safari、chrome等\",\"注意： 不需要手动添加，后面学习了模块化打包工具会自动添加浏览器前缀\"]},\"465\":{\"h\":\"深入理解BFC\",\"t\":[\"fc: formatting context (格式化上下文)，元素在标准流里面都是属于一个fc的\",\"BFC: 块级元素的布局属于Blcok Formatting Context(BFC)\",\"也就是block level box都是在bfc中布局的\",\"IFC: 行内级元素的布局属于Inline Formatting Context(IFC)\",\"而inline level box都是在IFC中布局的\",\"那么BFC在哪里？\",\"mdn 整理了哪些情况会有bfc\",\"根元素\",\"浮动元素\",\"绝对定位元素\",\"行内块元素\",\"表单单元格\",\"overflow不为visible的块元素\",\"弹性元素\",\"网格元素\",\"display值为flow-root的元素\",\"BFC有什么作用？\",\"在bfc中，box会在垂直方向上一个挨着一个排布\",\"垂直方向的间距由margin属性决定\",\"在同一个bfc中，相邻两个box之间的margin会折叠\",\"在bfc中，每个元素的左边缘是紧挨着包含块的左边缘的\",\"那么这个东西有什么用？\",\"解决margin的折叠问题\",\"解决浮动高度塌陷问题\",\"网上很多说法，bfc可以解决浮动高度塌陷，可以实现清除浮动的效果\",\"但是从来没有给出过bfc可以解决高度塌陷的原理或者权威的文档说明\",\"他们也压根没有解释，为什么可以解决浮动高度塌陷问题，但是不能解决定位元素高度塌陷问题？\",\"事实上，bfc解决高度塌陷需要满足两个条件\",\"浮动元素的父元素触发BFC, 形成独立的格式化上下文\",\"浮动元素的父元素的高度是auto的\",\"bfc的高度是auto的情况下，是如下方法计算高度的\",\"如果只有inline-level, 是行高的顶部和底部的距离\",\"如果有block-level,是由最底层的块上边缘和最底层块盒子的下边缘之间的距离\",\"如果有绝对定位元素，将被忽略\",\"如果有浮动元素，会增加高度以包括这些浮动元素的下边缘\"]},\"466\":{\"h\":\"媒体查询\",\"t\":[\"媒体查询是一种提供给开发者争对不同设备需求进行定制化开发的一个接口\",\"可以根据设备类型来修改页面\",\"使用方式：\",\"需求：屏幕小于800显示橙色\",\"方式1：通过@media和@import使用不同的css规则\",\"<style> @import url(./css/body_bgc.css) (max-width: 800px); </style> \",\"方式二：使用media属性为style、link、source和其他html元素指定特定的媒体类型\",\"<link rel=\\\"stylesheet\\\" media=\\\"(max-width: 800px)\\\" href=\\\"./css/body_bgc.css\\\"> \",\"方式三：\",\"<style> @media (max-width: 800px) and (min-width:500px){ body{ background-color: orange; } } </style> \",\"媒体类型：\",\"在使用媒体查询时，必须指定要使用的媒体类型\",\"媒体类型是可选的，并且会隐式地应用all类型\",\"常见媒体类型\",\"all： 适用于所有设备\",\"print：使用于打印模式\",\"screen：（掌握）主要用于屏幕\",\"speech：用于语音合成器\",\"媒体查询-逻辑运算符\",\"and（最常用）\",\"not\",\"only\",\"逗号\"]},\"467\":{\"h\":\"CSS常见单位详解\",\"t\":[\"整体可以分为两类\",\"绝对长度单位\",\"它们与其他任何东西都没有关系，通常被认为总是相同的大小\",\"唯一一个经常使用的值，px(像素)\",\"相对长度单位\",\"相对于其他一些东西\",\"比如父元素的字体大小，或者视图端口的大小\",\"使用相对单位的好处，经过一些仔细地规划，可以使文本或其他元素的大小与页面上的其他内容相对应\",\"常见相对单位\",\"em\",\"相对于自身的font-size\",\"rem\",\"相对于html的font-size\",\"vw/vh\",\"vw相对于视口的宽度,视口宽度的1% 1vw--->1000 10vw-->10px\",\"vh相对于视口的高度，视口高度的1%\"]},\"468\":{\"h\":\"深入理解pixel、dpr、ppi\",\"t\":[\"px是pixel的缩写\",\"那么像素到底是什么？\",\"像素是影响显示的基本单位，比如屏幕上看到的画面，一幅图片\",\"pix是picture的简写，加上element 单词，就得到pixel;\",\"像素表示画像元素之意，有时被称为pel(picture element)\",\"像素单位常见有三种像素名称\",\"设备像素（物理 像素）\",\"屏幕出厂以后就不会变化了\",\"设备分辨率就是设备像素大小\",\"比如iphone x 的分辨率1125*2436 指的就是设备像素\",\"设备独立像素 （逻辑像素）\",\"在设备像素之上，操作系统为开发者进行抽象，提供了逻辑像素的概念\",\"css像素\",\"经常使用单位是px, 它在默认情况下等同于设备独立像素（也就是逻辑像素）\",\"毕竟逻辑像素才是面向我们开发者\",\"DPR: 设备像素比\",\"Retina屏幕：视网膜显示屏，在Retina屏幕中，一个逻辑像素长度对应两个物理像素，这个比例称之为设备像素比\",\"可以通过window.devicePixelRatio获取当前屏幕的dpr值\",\"PPI: 每英寸像素\",\"通常用来表示一个打印图像或者显示器上像素的密度\",\"1英寸=2.54厘米=96px\"]},\"469\":{\"h\":\"CSS预处理器Less、Scss\",\"t\":[\"CSS编写的痛点\",\"大量重复代码\",\"无法定义变量\",\"没有专门的作用域和嵌套，需要定义大量的id/class来保证选择器的准确性\",\"CSS预处理器：通过预处理器自己独有的语法，来生成css的程序，代码最终会转换为css来运行\",\"常见的css预处理器\",\"Sass/Scss：最早也是最成熟的css预处理器，受less影响，已经全面兼容css的scss\",\"less\",\"stylus\",\"Less： 是一门css扩展语言，并且兼容css\",\"less增加了很多相对于css更好用的特性\",\"比如定义变量，混入，嵌套，计算\",\"less最终被编译css运行在浏览器中\",\"less代码编译\",\"方式1：下载node环境，通过npm包管理下载less工具，使用less工具对代码进行编译\",\"方式2：引入cdn的less编译代码，对less进行实时处理\",\"<link rel=\\\"stylesheet/less\\\" href=\\\"./test.less\\\"> <script src=\\\"https://cdn.jsdelivr.net/npm/less@4\\\"></script> \",\"方式3：将less的js代码下载到本地引入\",\"less 语法\",\"语法一：兼容css语法\",\"语法二：- 变量(variables)\",\"语法：@变量名：变量值\",\"@themeColor: #f3c258; @mainFontSize: 12px; .box{ color: @themeColor; font-size: @mainFontSize; } //支持选择器嵌套 .box{ .pel{ color: @themeColor; } } \",\"语法三：特殊符合： &表示当前选择器的父级\",\"p{ a.link{ color: @themeColor; } &:hover { color: #00f; } } \",\"语法四：运算（Operations）（了解）\",\"在less中，算术运算符可以对任何数字、颜色或变量进行运算\",\"语法五：混合（mixins）\",\"我们希望将一些公共的css代码独立抽取到一个新的地方，任何选择器都可以进行复用\",\"混入是一种将一组属性从一个规则集混入到另外一个规则集的方法\",\"混入也可以传递参数\",\".nowrap_ellipsis{ white-space: nowrap; text-overflow: ellipsis; overflow: hidden; } .box_border(@borderWidth: 5px,@borderColor:purple){ border: @borderWidth solid @borderColor; } .box1{ width: 100px; background-color: #f00; .nowrap_ellipsis(); .box_border(10px,orange); } .box2{ width: 150px; background-color: #0f0; .nowrap_ellipsis(); } \",\"语法六：继承\",\".bordered{ border-bottom: 10px solid #000; } .box{ &:extend(.bordered); } \",\"语法七：less内置函数\",\"Sass: 直接学习scss,完全兼容css的\",\"scss的语法包括变量、嵌套、混入、函数、操作符、作用域\",\"也包括更强大的控制语句，更灵活的函数，插值语法\"]},\"470\":{\"h\":\"浏览器视口viewport\",\"t\":[\"在一个浏览器中，我们可以看到的区域就是视口\",\"在pc端页面，我们是不需要对视口进行区分，因为我们的布局视口和视觉视口是同一个\",\"但是在移动端不一样，在移动端通常将视口划分三种\",\"布局视口\",\"默认情况下，一个在pc端的网页在移动端会如何显示呢？\",\"第一，它会按照宽度980px来布局一个页面的盒子和内容\",\"第二，为了显示可以完整的显示在页面中，对整个页面进行缩小\",\"我们相对于980px布局的这个视口，称之为布局视口，布局视口的默认宽度是980px\",\"视觉视口\",\"默认情况下，我们按照980px显示内容，那么右侧有一部分区域就会无法显示，所以手机端浏览器会默认对页面进行缩放以显示\",\"到用户的可见区域中\",\"那么显示在可见区域的这个视口，就是视觉视口\",\"理想视口\",\"默认情况下的layout viewport并不适合我们进行布局\",\"我们可以对layout viewport进行宽度和缩放的设置，以满足正常在一个移动端窗口的布局\",\"这个时候可以设置meta中的viewport\",\"值\",\"可能的附加值\",\"描述\",\"width\",\"一个正整数，或者字符串device-width\",\"定义viewport的宽度\",\"height\",\"一个正整数，或者字符串device-width\",\"定义高度，未被任何浏览器使用\",\"initial-scale\",\"一个0.0到10.0之间的正数\",\"定义设备宽度与viewport大小之间的缩放比例\",\"maximum-scale\",\"一个0.0到10.0之间的正数\",\"定义缩放的最大值\",\"minimum-scale\",\"一个0.0到10.0之间的正数\",\"定义缩放的最小值\",\"user-scalable\",\"yes或者no\",\"默认为yes,设置为no,将无法缩放当前页面\"]},\"471\":{\"h\":\"移动端适配方案\",\"t\":[\"方案一：百分比设置\",\"方案二：rem单位+动态html的font-size\",\"方案三： vw单位\",\"方案四： flex的弹性布局\"]},\"472\":{\"h\":\"适配方案 -rem +动态html的font-size\",\"t\":[\"rem单位是相对于html元素的font-size来设置的，那么如果我们需要在不同的屏幕下有不同的尺寸，可以动态的修改html的font-size尺寸\",\"比如下面的案例\",\"1.设置一个盒子的宽度是2rem\",\"2.设置不同的屏幕上html的font-size不同\",\"屏幕尺寸\",\"html的font-size\",\"盒子的设置宽度\",\"盒子的最终宽度\",\"375px\",\"37.5px\",\"1rem\",\"37.5px\",\"320px\",\"32px\",\"1rem\",\"32px\",\"414px\",\"41.4px\",\"1rem\",\"41.4px\",\"这样在开发中，我们只需要考虑两个问题\",\"问题一：针对不同的屏幕，设置html不同的font-size\",\"问题二：将原来要设置的尺寸，转化成rem单位\",\"rem的单位换算\",\"方案一：手动换算, 麻烦\",\"方案二：less/sacc函数\",\".pxToRem(@px){ result: 1rem *(@px /37.5) } .box{ width: .pxToRem(100)[result]; } p{ font-size: .pxToRem(14)[result]; } \",\"方案三： postcss-pxtorem\",\"方案四：vscode插件-->px to rem\"]},\"473\":{\"h\":\"移动端适配vm方案（推荐使用）\",\"t\":[\"vm 和rem对比\",\"rem事实上是作为一种过渡方案，它利用的也是vm的思想\",\"前面不管我们自己编写的js, 还是flexible的源码\",\"都是将1rem等同于设计稿的1/10, 在利用1rem计算相对于整个屏幕的尺寸大小\",\"那么我们来思考，1vw不是刚好等于屏幕的1/100吗？\",\"而且相对于rem还更加有优势\",\"vm相对于rem的优势\",\"不需要去计算html的font-size大小，也不需要给html设置这样一个font-size\",\"不会因为设置html的font-size大小，而必须给body再设置一个font-size，防止继承\",\"因为不依赖font-size的尺寸，所以不用担心某些原因html的font-size尺寸被篡改，页面尺寸混乱\",\"vw相对于rem更加语义化，1vw刚好是1/100的viewport的大小\",\"可以具备rem之前所有的优点\"]},\"474\":{\"c\":[\"css\"]},\"475\":{\"c\":[\"前端\"]},\"476\":{\"h\":\"前端\",\"t\":[\"所学知识沉淀汇总\",\"CSS\"]},\"477\":{\"h\":\"数据结构和算法\"},\"478\":{\"h\":\"第一章：算法简介\"},\"479\":{\"h\":\"1.1 算法的基本概念\"},\"480\":{\"h\":\"1.1.1 什么是算法\",\"t\":[\"​ 算法：故名思意，就是指计算方法，指解决一个问题具体的步骤和方法\"]},\"481\":{\"h\":\"1.1.2 为什么学习算法\",\"t\":[\"​ 提高自己的核心竞争力，提高自己解决问题的能力\"]},\"482\":{\"h\":\"1.2 算法的特征\",\"t\":[\"有穷性：算法必须在能在执行有限个步骤之后终止\",\"确切性：算法的每一步骤必须有确切的定义\",\"输入项：一个算法有0个或者多个输入\",\"输出项：一个算法有一个或多个输出，以反映对输入数据加工后的结果\",\"可行性：每个计算步骤都可以在有限时间内完成\"]},\"483\":{\"h\":\"1.3 算法复杂度\"},\"484\":{\"h\":\"1.3.1 时间复杂度\",\"t\":[\"​ 算法的时间复杂度，是指执行算法所需要的计算工作量。\",\"一般来说，计算机算法是问题规模n 的函数f(n)，算法的时间复杂度也因此记做：T(n)=Ο(f(n))。\",\"问题的规模n 越大，算法执行的时间的增长率与f(n) 的增长率正相关，称作渐进时间复杂度（Asymptotic Time Complexity）。\"]},\"485\":{\"h\":\"1.3.2 空间复杂度\",\"t\":[\"算法的空间复杂度，是指算法需要消耗的内存空间。其计算和表示方法与时间复杂度类似，一般都用复杂度的渐近性来表示\"]},\"486\":{\"h\":\"1.3.3 时间复杂度的计算\"},\"487\":{\"h\":\"第二章：数组问题讲解\",\"t\":[\"数组：会利用索引来记录每个元素在数组中的位置，索引是从0算起的\"]},\"488\":{\"h\":\"2.1 两数之和\"},\"489\":{\"h\":\"2.1.1 题目\",\"t\":[\"给定一个整数数组 nums 和一个目标值 target，请你在该数组中找出和为目标值的那两个整数，并返回他们的数组下标。\",\"你可以假设每种输入只会对应一个答案。但是，你不能重复利用这个数组中同样的元素\",\"示例\",\"给定 nums = [2, 7, 11, 15], target = 9\",\"因为 nums[0] + nums[1] = 2 + 7 = 9\",\"所以返回 [0, 1]\"]},\"490\":{\"h\":\"2.1.2 方法一：暴力法\",\"t\":[\"public static int[] twoSum(int[] arr,int target){ for(int i=0;i<arr.length;i++){ for(int j=i+1;j<arr.length;j++){ if(arr[i]+arr[j] == target){ return new int[]{i,j}; } } } return new int[]{}; } 解释：从结果来说，j也可以从0开始，只不过多遍历了几次，两数之和，两个数，正常的最里面的for循环从第一个数的后面开始 \"]},\"491\":{\"h\":\"2.1.3 方法二：哈希表\",\"t\":[\"public static int[] twoSum(int[] arr,int target){ //创建一个hashmap存储数组元素和对应的索引 Map<Integer,Integer> map = new HashMap<>(); //遍历数组元素 for(int i=0; i<arr.length;i++){ int complement = target - arr[i]; //检测是否存在与当前元素配对的差值 if(map.containsKey(complement)){ //返回两个数的索引 return new int[]{map.get(complement),i}; } //将当前元素和索引存入hashmap中 map.put(nums[i],i); } //如果没有找到符合条件的两个数，返回空数组 return new int[0]; } \"]},\"492\":{\"h\":\"2.2 三数之和\"},\"493\":{\"h\":\"2.2.1 题目说明\",\"t\":[\"给定一个包含 n 个整数的数组 nums，判断 nums 中是否存在三个元素 a，b，c ，使得 a + b + c = 0 ？找出所有满足条件且不重复的三元组。\",\"注意：答案中不可以包含重复的三元组。\",\"示例:\",\"给定数组 nums = [-1, 0, 1, 2, -1, -4]，\",\"满足要求的三元组集合为：\",\"[\",\"[-1, 0, 1],\",\"[-1, -1, 2]\",\"]\"]},\"494\":{\"h\":\"2.2.2 解题（推荐双指针法）\",\"t\":[\"将数组排序：首先，对给定的数组进行排序，以便更方便地使用双指针方法。排序的时间复杂度为O(n log n)，其中n是数组的长度。\",\"遍历数组：遍历排序后的数组，在每个位置上选择一个数字作为第一个数（最左边的指针）。\",\"使用双指针查找另外两个数：在选择的第一个数后面的子数组部分中，使用双指针方法来查找另外两个数，使得它们的和等于0减去第一个数。一个指针从第一个数的右边开始移动，即左指针，另一个指针从数组尾部向左移动，即右指针。\",\"调整指针位置：根据双指针所指的三个数之和与目标和比较的结果，调整指针的位置。如果三数之和小于目标和，将左指针向右移动一位；如果三数之和大于目标和，将右指针向左移动一位；如果三数之和等于目标和，将这三个数添加到结果集中。\",\"继续遍历：重复步骤3和步骤4，直到遍历完整个数组。\",\"返回结果：返回找到的所有满足条件的三个数的组合\",\"public static List<List<Integer>> threeSum(int[] nums) { // 对输入数组进行排序 Arrays.sort(nums); // 创建一个 ArrayList 用于存储满足条件的三元组 List<List<Integer>> result = new ArrayList<>(); // 遍历数组，略过最后两个元素，因为我们需要至少三个元素来形成一个三元组 for (int i = 0; i < nums.length - 2; i++) { // 排序后的数组，如果当前元素大于0，不可能再找到和为0的三元组，因为left=i+1 if (nums[i] > 0) { break; } // 跳过重复元素，以避免重复的三元组 if (i > 0 && nums[i] == nums[i - 1]) { continue; } // 初始化双指针，一个指针从当前元素的下一个开始，另一个指针从数组的最后一个元素开始 int left = i + 1; int right = nums.length - 1; // 当左指针小于右指针时，继续寻找满足条件的三元组 while (left < right) { int sum = nums[i] + nums[left] + nums[right]; // 根据三数之和与0的关系，移动左指针或右指针 if (sum == 0) { // 找到一个满足条件的三元组，添加到结果列表中 result.add(Arrays.asList(nums[i], nums[left], nums[right])); // 跳过重复元素，以避免重复的三元组 while (left < right && nums[left] == nums[left + 1]) { left++; } while (left < right && nums[right] == nums[right - 1]) { right--; } // 找到一个满足条件的三元组后，同时移动左右指针继续寻找下一个三元组 left++; right--; } else if (sum < 0) { // 如果和小于0，需要增加和的值，因此将左指针向右移动 left++; } else { // 如果和大于0，需要减小和的值，因此将右指针向左移动 right--; } } } // 返回包含满足条件的三元组的结果列表 return result; } \"]},\"495\":{\"h\":\"2.3 下一个排列\"},\"496\":{\"h\":\"2.3.1 题目说明\",\"t\":[\"实现获取下一个排列的函数，算法需要将给定数字序列重新排列成字典序中下一个更大的排列。\",\"如果不存在下一个更大的排列，则将数字重新排列成最小的排列（即升序排列）。\",\"必须原地修改，只允许使用额外常数空间。\",\"以下是一些例子，输入位于左侧列，其相应输出位于右侧列。\",\"1,2,3 → 1,3,2\",\"3,2,1 → 1,2,3\",\"1,1,5 → 1,5,1\"]},\"497\":{\"h\":\"2.3.2 解题：一遍扫描\",\"t\":[\"解题思路：\",\"先排除例外，如果数组是按照降序排列的，就没有升序的子序列了。 下一个排列就是将数组升序排列 比如[9,8,7]，下一个排列就是[7,8,9]\",\"如果数组有一个升序的子序列，那么就一定可以找到它的下一个排列。 也就是说从右往左，找到第一对连续的数字 nums[i] 和 nums[i+1],满足nums[i+1] > nums[i]\",\"比如 [1,5,7,4,2] 满足 nums[i+1] > nums[i] 则 i = 1, (num[2] = 7) > (num[1] = 5), 然后 从i+1到 数组结束，查找比5大，比7小的数字，\",\"找到了6 , 那么就确定了前两个数字1,6 ， 后面的按正序排序就行了\",\"如果没找到，则直接替换5和7的位置即可\",\"public void nextPermutation(int[] nums) { if (nums == null || nums.length <= 1) { return; } int i = nums.length - 2; while (i >= 0 && nums[i] >= nums[i + 1]) { i--; // 从右向左找到第一个不满足递减顺序的元素 } if (i >= 0) { int j = nums.length - 1; while (j > i && nums[j] <= nums[i]) { j--; // 从右向左找到第一个大于nums[i]的元素 } swap(nums, i, j); // 交换找到的两个元素 } reverse(nums, i + 1); // 翻转i之后的元素 } private void swap(int[] nums, int i, int j) { int temp = nums[i]; nums[i] = nums[j]; nums[j] = temp; } private void reverse(int[] nums, int start) { int i = start, j = nums.length - 1; while (i < j) { swap(nums, i, j); i++; j--; } } \"]},\"498\":{\"h\":\"第三章：二分查找\"},\"499\":{\"h\":\"第四章：字符串问题\"},\"500\":{\"h\":\"第五章：滑动窗口问题\"},\"501\":{\"h\":\"第六章：链表\"},\"502\":{\"h\":\"6.1 为什么链表很重要\",\"t\":[\"链表： 真正的动态数据结构，是最简单的动态数据结构，更深入的理解指针，更深入的理解递归；辅助组成其他数据结构\"]},\"503\":{\"h\":\"6.2 认识链表\",\"t\":[\"数据存储在节点(Node)中\",\"class Node { E e; Node next; } 1-->2--->3-->Null \",\"优点：真正的动态，不需要处理固定容量的问题\",\"缺点：丧失了随机访问的能力\",\"在链表头添加元素图例\",\"image-20231128212140857\",\"在链表中间添加元素\",\"image-20231127203803696\"]},\"504\":{\"h\":\"6.3 链表的增删改查\",\"t\":[\"package com.cx.study.algorithm.linkedlist; /** * @ClassName: LinkedList * @Author : chenxin * @Date :2023/11/27 20:21 * @Description: TODO * @Version :1.0 */ public class LinkedList<E> { private class Node{ public E e; public Node next; public Node(E e,Node next){ this.e = e; this.next = next; } public Node(E e){ this(e,null); } public Node(){ this(null,null); } @Override public String toString(){ return e.toString(); } } //private Node head; private Node dummyHead; //虚拟头节点 int size; public LinkedList(){ //head = null; dummyHead = new Node(null,null); size = 0; } //获取链表中的元素个数 public int getSize(){ return this.size; } public boolean isEmpty(){ return this.size == 0; } //在链表的index(0-based)位置添加新的元素e public void add(int index, E e){ if(index <0 || index >size){ throw new IllegalArgumentException(\\\"Add faild\\\"); } /* if(index == 0){ addFirst(e); }else{*/ Node prev = dummyHead; for(int i=0;i < index ;i++){ prev = prev.next; } // Node node = new Node(e); // node.next = prev.next; // prev.next = node; prev.next = new Node(e,prev.next); size++; /*}*/ } //在链表头添加新的元素e public void addFirst(E e){ // Node node = new Node(e); // node.next = head; // head = node; // head = new Node(e,head); // size ++; add(0,e); } public void addLast(E e){ add(size,e); } //获取链表的第index个元素的位置 public E get(int index){ if(index <0 || index >size){ throw new IllegalArgumentException(\\\"Get faild\\\"); } //从索引为0开始 Node cur = dummyHead.next; for(int i=0;i<index;i++){ cur = cur.next; } return cur.e; } public E getFirst(){ return get(0); } public E getLast(){ return get(size-1); } //修改链表的第index个位置的元素e public void set(int index,E e){ if(index <0 || index >size){ throw new IllegalArgumentException(\\\"Set faild\\\"); } Node cur = dummyHead.next; for(int i=0;i<index;i++){ cur = cur.next; } cur.e = e; } public boolean contains(E e){ Node cur = dummyHead.next; while (cur != null){ if(cur.e.equals(e)){ return true; } cur = cur.next; } return false; } //在链表中删除index位置的元素，返回删除的元素 public E remove(int index){ if(index <0 || index >size){ throw new IllegalArgumentException(\\\"Remove failed\\\"); } Node prev = dummyHead; for(int i=0; i<index;i++){ prev = prev.next; } Node retNode = prev.next; prev.next = retNode.next; retNode.next = null; size --; return retNode.e; } //删除第一个元素 public E removeFirst(){ return remove(0); } public E removeLast(){ return remove(size -1); } @Override public String toString() { StringBuilder res = new StringBuilder(); Node cur = dummyHead.next; while (cur != null){ res.append(cur + \\\"->\\\"); cur = cur.next; } res.append(\\\"NULL\\\"); return res.toString(); } } \"]},\"505\":{\"h\":\"6.4 用链表实现栈\",\"t\":[\"public interface Stack<E> { int getSize(); boolean isEmpty(); void push(E e); E pop(); E peek(); } \",\"package com.cx.study.algorithm.linkedlist; /** * @ClassName: LinkedListStack * @Author : chenxin * @Date :2023/11/30 14:41 * @Description: 用链表实现栈 * @Version :1.0 */ public class LinkedListStack<E> implements Stack<E>{ private LinkedList<E> list; public LinkedListStack(){ list = new LinkedList<>(); } @Override public int getSize() { return list.getSize(); } @Override public boolean isEmpty() { return list.isEmpty(); } @Override public void push(E e) { list.addFirst(e); } @Override public E pop() { return list.removeFirst(); } @Override public E peek() { return list.getFirst(); } @Override public String toString() { StringBuilder res = new StringBuilder(); res.append(\\\"Stack:top\\\"); res.append(list); return res.toString(); } public static void main(String[] args) { LinkedListStack<Integer> stack = new LinkedListStack<>(); for(int i=0;i<5;i++){ stack.push(i); System.out.println(stack); } stack.pop(); System.out.println(stack); } } \",\"性能测试\",\"package com.cx.study.algorithm.linkedlist; import java.util.Random; /** * @ClassName: LinkedListStackMain * @Author : chenxin * @Date :2023/11/30 14:53 * @Description: 用链表实现栈和用数组实现栈性能测试 * @Version :1.0 */ public class LinkedListStackMain { private static double testStack(Stack<Integer> stack,int opCount){ long startTime = System.nanoTime(); Random random = new Random(); for(int i=0;i<opCount;i++){ stack.push(random.nextInt(Integer.MAX_VALUE)); } for(int i=0;i<opCount;i++){ stack.pop(); } long endTime = System.nanoTime(); return (endTime -startTime) / 1000000000.0; } public static void main(String[] args) { int opCount = 100000; LinkedListStack<Integer> linkedListStack = new LinkedListStack<>(); double time2 = testStack(linkedListStack, opCount); System.out.println(\\\"LinkedListStack,time:\\\"+time2 + \\\"s\\\"); } } \"]},\"506\":{\"h\":\"6.5 用链表实现队列\",\"t\":[\"public interface Queue<E> { int getSize(); boolean isEmpty(); void enqueue(E e); E dequeue(); E getFront(); } \",\"package com.cx.study.algorithm.linkedlist; /** * @ClassName: LinkedListQueue * @Author : chenxin * @Date :2023/11/30 15:16 * @Description: TODO * @Version :1.0 */ public class LinkedListQueue<E> implements Queue<E>{ private class Node{ public E e; public Node next; public Node(E e, Node next){ this.e = e; this.next = next; } public Node(E e){ this(e,null); } public Node(){ this(null,null); } @Override public String toString(){ return e.toString(); } } private Node head,tail; private int size; public LinkedListQueue(){ head = null; tail = null; size = 0; } @Override public int getSize() { return size; } @Override public boolean isEmpty() { return size == 0; } @Override public void enqueue(E e) { if(tail == null){ tail = new Node(e); head = tail; }else{ tail.next = new Node(e); tail = tail.next; } size ++; } @Override public E dequeue() { if(isEmpty()){ throw new IllegalArgumentException(\\\"Cannot dequeue\\\"); } Node retNode = head; head = head.next; retNode.next = null; if(head == null){ tail = null; } size --; return retNode.e; } //队首元素 @Override public E getFront() { if(isEmpty()){ throw new IllegalArgumentException(\\\"queue is empty\\\"); } return head.e; } @Override public String toString() { StringBuilder res = new StringBuilder(); res.append(\\\"Queue: front \\\"); Node cur = head; while (cur != null){ res.append(cur + \\\"->\\\"); cur = cur.next; } res.append(\\\"NULL tail\\\"); return res.toString(); } public static void main(String[] args) { LinkedListQueue<Integer> queue = new LinkedListQueue(); for(int i =0;i< 10; i++){ queue.enqueue(i); System.out.println(queue); if(i % 3 == 2){ queue.dequeue(); System.out.println(queue); } } } } \"]},\"507\":{\"h\":\"6.6 力扣题目：删除链表中的元素\",\"t\":[\"题目：删除链表中等于给定值val的所有元素\",\"示例：1-->2-->3-->4-->6--->5-->6,val =6\",\"返回：1--2>-->3-->4-->5\",\"解题1：不使用虚拟头节点\",\"public class ListNode { int val; ListNode next; ListNode(int x){ val = x; } public ListNode(int[] arr){ if(arr == null || arr.length == 0){ throw new IllegalArgumentException(\\\"arr not null\\\"); } this.val = arr[0]; ListNode cur = this; for(int i=1; i<arr.length;i++){ cur.next = new ListNode(arr[i]); cur = cur.next; } } @Override public String toString() { StringBuilder res = new StringBuilder(); ListNode cur = this; while (cur != null){ res.append(cur.val + \\\"->\\\"); cur = cur.next; } res.append(\\\"NULL\\\"); return res.toString(); } } \",\"public class Solution { public ListNode removeElements(ListNode head,int val){ while (head !=null && head.val == val){ ListNode delNode = head; head = head.next; delNode.next = null; } if(head == null){ return null; } ListNode prev = head; while (prev.next != null){ if(prev.next.val == val){ ListNode delNode = prev.next; prev.next = delNode.next; delNode.next = null; }else{ prev = prev.next; } } return head; } public static void main(String[] args) { int[] nums = {1,2,6,3,4,5,6}; ListNode head = new ListNode(nums); System.out.println(head); ListNode res = (new Solution()).removeElements(head, 6); System.out.println(res); } } \",\"解题二：使用虚拟头节点\",\"public class Solution2 { public ListNode removeElements(ListNode head,int val){ ListNode dummyHead = new ListNode(-1); dummyHead.next = head; ListNode prev = dummyHead; while (prev.next != null){ if(prev.next.val == val){ prev.next = prev.next.next; }else{ prev = prev.next; } } return dummyHead.next; } public static void main(String[] args) { int[] nums = {1,2,6,3,4,5,6}; ListNode head = new ListNode(nums); System.out.println(head); ListNode res = (new Solution2()).removeElements(head, 6); System.out.println(res); } } \"]},\"508\":{\"h\":\"6.7 递归实现链表\",\"t\":[\"todo\"]},\"509\":{\"h\":\"6.8 反转链表\",\"t\":[\"不使用递归实现\",\"public class ListNode{ int val; ListNode next; ListNode(int x){val = x;} } class Solution{ public ListNode reverseList(ListNode head){ ListNode pre = null; ListNode cur = head; while(cur != null){ ListNode next = cur.next; cur.next = pre; pre = cur; cur = next; } return pre; } } \",\"使用递归实现\",\"public class ListNode{ int val; ListNode next; ListNode(int x){val = x;} } class Solution{ public ListNode reverseList(ListNode head){ if(head == null || head.next == null){ return head; } ListNode rev = reverseList(head.next); head.next.next = head; head.next = null; return rev; } } \"]},\"510\":{\"h\":\"第七章：哈希表\"},\"511\":{\"h\":\"第八章：栈和队列\"},\"512\":{\"h\":\"8.1 栈的介绍\",\"t\":[\"栈也是一种线性结构，相比数组，栈对应的操作是数组的子集，只能从一端添加元素，也只能从一端取出元素，这一端称为栈顶\",\"栈是一种后进先出的结构 LIFO(Last in first out)\",\"栈的实现 Stack\",\"void push(E) （入栈）\",\"E pop() （出栈）\",\"E peek() (获取栈顶元素)\",\"int getSize() （获取栈的大小）\",\"boolean isEmpty() （判断栈是否为空）\"]},\"513\":{\"h\":\"8.2 栈的实现\",\"t\":[\"Array类\",\"package com.cx.study.algorithm.array; /** * @ClassName: Array * @Author : chenxin * @Date :2023/11/14 11:48 * @Description: TODO * @Version :1.0 */ public class Array { private int[] data; //数组元素的个数 private int size; //构造函数，传入数组的容量capacity构造Array public Array(int capacity){ data = new int[capacity]; size = 0; } //无参数的构造函数，默认数组的容量capation=10 public Array(){ this(10); } //获取数组中的元素的个数 public int getSize(){ return this.size; } //获取数组的容量 public int getCapacity(){ return data.length; } //判断返回数组是否为空 public boolean isEmpty(){ return size == 0; } //向所有元素后添加一个新元素 public void addLast(int e){ if(size == data.length){ throw new IllegalArgumentException(\\\"AddLast failed. Array is full\\\"); } data[size] = e; size ++; } //在第index个位置插入一个新元素e public void add(int index,int e){ /*if(size == data.length){ throw new IllegalArgumentException(\\\"AddLast failed. Array is full\\\"); }*/ if(index <0 || index > size){ throw new IllegalArgumentException(\\\"Add failed. Require index >=0 and index >size\\\"); } //扩容 if(size == data.length){ resize(2 * data.length); } //从最后一个元素开始，只要i大于index,i减减，将当前元素的值赋值给后一个元素 for(int i = size -1; i>= index ; i--){ data[i + 1] = data[i]; } data[index] = e ; size ++; } //在所有元素前添加一个新元素 public void addFirst(int e){ add(0,e); } @Override public String toString(){ StringBuilder res = new StringBuilder(); res.append(String.format(\\\"Array: size = %d , capacity= %d\\\\n\\\",size,data.length)); res.append('['); for(int i=0; i<size; i++){ res.append(data[i]); if(i != size -1){ res.append(\\\", \\\"); } } res.append(']'); return res.toString(); } //获取index索引位置的元素 int get(int index){ if(index <0 || index >= size){ throw new IllegalArgumentException(\\\"Get failed. Index is illegal\\\"); } return data[index]; } public int getLast(){ return get(size-1); } public int getFirst(){ return get(0); } void set(int index,int e){ if(index <0 || index >= size){ throw new IllegalArgumentException(\\\"Get failed. Index is illegal\\\"); } data[index] = e; } //查找数组中是否有元素e public boolean contains(int e){ for(int i=0;i<size;i++){ if(data[i] == e){ return true; } } return false; } //查找数组中元素e所在的索引，如果不存在元素e,则返回-1 public int find(int e){ for(int i=0;i<size;i++){ if(data[i] == e){ return i; } } return -1; } //从数组中删除index位置的元素，返回删除的元素 public int remove(int index){ if(index <0 || index >= size){ throw new IllegalArgumentException(\\\"Remove failed. Index is illegal\\\"); } int ret = data[index]; for(int i= index +1 ; i<size; i++){ data[i-1] = data[i]; } size -- ; if(size == data.length /2){ resize(data.length /2); } return ret; } public int removeFirst(){ return remove(0); } public int removeLast(){ return remove(size - 1); } public void removeElement(int e){ int index = find(e); if(index != -1){ remove(index); } } private void resize(int newCapacity){ int[] newData = new int[newCapacity]; for(int i=0;i<size;i++){ newData[i] = data[i]; } data = newData; } public static void main(String[] args) { Array array = new Array(); for(int i=0; i< 10;i++){ array.addLast(i); } System.out.println(array); array.add(1,100); System.out.println(array); array.addFirst(-1); System.out.println(array); } } \",\"stack 接口\",\"package com.cx.study.algorithm.array; /** * @ClassName: Stack * @Author : chenxin * @Date :2023/11/20 14:04 * @Description: TODO * @Version :1.0 */ public interface Stack { int getSize(); boolean isEmpty(); void push(int e); int pop(); int peek(); } \",\"ArrayStack类\",\"package com.cx.study.algorithm.array; /** * @ClassName: ArrayStack * @Author : chenxin * @Date :2023/11/20 14:05 * @Description: TODO * @Version :1.0 */ public class ArrayStack implements Stack { Array array; public ArrayStack(int capacity){ array = new Array(capacity); } public ArrayStack(){ array = new Array(); } public int getCapacity(){ return array.getCapacity(); } @Override public int getSize() { return array.getSize(); } @Override public boolean isEmpty() { return array.isEmpty(); } @Override public void push(int e) { array.addLast(e); } @Override public int pop() { return array.removeLast(); } @Override public int peek() { return array.getLast(); } @Override public String toString() { StringBuilder res = new StringBuilder(); res.append(\\\"Stack: \\\"); res.append('['); for(int i=0;i<array.getSize();i++){ res.append(array.get(i)); if(i != array.getSize() -1){ res.append(\\\",\\\"); } } res.append(\\\"] top\\\"); return res.toString(); } public static void main(String[] args) { ArrayStack stack = new ArrayStack(); for(int i=0; i< 5; i++){ stack.push(i); System.out.println(stack); } stack.pop(); System.out.println(stack); } } \",\"测试结果\",\"image-20231120142710663\"]},\"514\":{\"h\":\"8.3 栈的应用\",\"t\":[\"undo操作- 编辑器\",\"系统调用栈-操作系统\",\"括号匹配-编译器\",\"力扣：20\",\"题目：给定一个只包括 '('，')'，'{'，'}'，'['，']' 的字符串 s ，判断字符串是否有效。\",\"有效字符串需满足：\",\"左括号必须用相同类型的右括号闭合。\",\"左括号必须以正确的顺序闭合。\",\"每个右括号都有一个对应的相同类型的左括号\",\"示例 1：\",\"输入：s = \\\"()\\\" 输出：true \",\"示例 2：\",\"输入：s = \\\"()[]{}\\\" 输出：true \",\"示例 3：\",\"输入：s = \\\"(]\\\" 输出：false \",\"​ 利用栈解决\",\" ```java import java.util.Stack; /** * @ClassName: Solution * @Author : chenxin * @Date :2023/11/20 15:44 * @Description: TODO * @Version :1.0 */ public class Solution { public static boolean isValid(String s){ Stack<Character> stack = new Stack<>(); for(int i=0; i<s.length();i++){ char c = s.charAt(i); if(c == '(' || c == '[' || c == '{'){ stack.push(c); }else{ if(stack.isEmpty()){ return false; } Character topChar = stack.pop(); if(c == ')' && topChar != '(' ){ return false; } if(c == ']' && topChar != '['){ return false; } if(c == '}' && topChar != '{'){ return false; } } } return stack.isEmpty(); } public static void main(String[] args) { String s = \\\"()[]{}\\\"; boolean valid = Solution.isValid(s); System.out.println(valid); } } ``` \"]},\"515\":{\"h\":\"8.4 队列介绍\",\"t\":[\"队列也是一种线性结构，相比数组，队列对应的操作是数组的子集\",\"队列只能从一端（队尾）添加元素，只能从另一端（队首）取出元素\",\"队列是一种先进先出的数据结构（先到先得） FIFO(First in First out)\"]},\"516\":{\"h\":\"8.5 队列的实现\",\"t\":[\"Queue\",\"void enqueue\",\"E dequeue()\",\"E getFront()\",\"int getSize()\",\"boolean isEmpty()\",\"Array类\",\"package com.cx.study.algorithm.array; /** * @ClassName: Array * @Author : chenxin * @Date :2023/11/14 11:48 * @Description: TODO * @Version :1.0 */ public class Array { private int[] data; //数组元素的个数 private int size; //构造函数，传入数组的容量capacity构造Array public Array(int capacity){ data = new int[capacity]; size = 0; } //无参数的构造函数，默认数组的容量capation=10 public Array(){ this(10); } //获取数组中的元素的个数 public int getSize(){ return this.size; } //获取数组的容量 public int getCapacity(){ return data.length; } //判断返回数组是否为空 public boolean isEmpty(){ return size == 0; } //向所有元素后添加一个新元素 public void addLast(int e){ if(size == data.length){ throw new IllegalArgumentException(\\\"AddLast failed. Array is full\\\"); } data[size] = e; size ++; } //在第index个位置插入一个新元素e public void add(int index,int e){ /*if(size == data.length){ throw new IllegalArgumentException(\\\"AddLast failed. Array is full\\\"); }*/ if(index <0 || index > size){ throw new IllegalArgumentException(\\\"Add failed. Require index >=0 and index >size\\\"); } //扩容 if(size == data.length){ resize(2 * data.length); } //从最后一个元素开始，只要i大于index,i减减，将当前元素的值赋值给后一个元素 for(int i = size -1; i>= index ; i--){ data[i + 1] = data[i]; } data[index] = e ; size ++; } //在所有元素前添加一个新元素 public void addFirst(int e){ add(0,e); } @Override public String toString(){ StringBuilder res = new StringBuilder(); res.append(String.format(\\\"Array: size = %d , capacity= %d\\\\n\\\",size,data.length)); res.append('['); for(int i=0; i<size; i++){ res.append(data[i]); if(i != size -1){ res.append(\\\", \\\"); } } res.append(']'); return res.toString(); } //获取index索引位置的元素 int get(int index){ if(index <0 || index >= size){ throw new IllegalArgumentException(\\\"Get failed. Index is illegal\\\"); } return data[index]; } public int getLast(){ return get(size-1); } public int getFirst(){ return get(0); } void set(int index,int e){ if(index <0 || index >= size){ throw new IllegalArgumentException(\\\"Get failed. Index is illegal\\\"); } data[index] = e; } //查找数组中是否有元素e public boolean contains(int e){ for(int i=0;i<size;i++){ if(data[i] == e){ return true; } } return false; } //查找数组中元素e所在的索引，如果不存在元素e,则返回-1 public int find(int e){ for(int i=0;i<size;i++){ if(data[i] == e){ return i; } } return -1; } //从数组中删除index位置的元素，返回删除的元素 public int remove(int index){ if(index <0 || index >= size){ throw new IllegalArgumentException(\\\"Remove failed. Index is illegal\\\"); } int ret = data[index]; for(int i= index +1 ; i<size; i++){ data[i-1] = data[i]; } size -- ; if(size == data.length /2){ resize(data.length /2); } return ret; } public int removeFirst(){ return remove(0); } public int removeLast(){ return remove(size - 1); } public void removeElement(int e){ int index = find(e); if(index != -1){ remove(index); } } private void resize(int newCapacity){ int[] newData = new int[newCapacity]; for(int i=0;i<size;i++){ newData[i] = data[i]; } data = newData; } public static void main(String[] args) { Array array = new Array(); for(int i=0; i< 10;i++){ array.addLast(i); } System.out.println(array); array.add(1,100); System.out.println(array); array.addFirst(-1); System.out.println(array); } } \",\"Queue接口\",\"package com.cx.study.algorithm.array; /** * @ClassName: Queue * @Author : chenxin * @Date :2023/11/20 16:44 * @Description: TODO * @Version :1.0 */ public interface Queue { int getSize(); boolean isEmpty(); void enqueue(int e); int dequeue(); int getFront(); } \",\"ArrayQueue类\",\"package com.cx.study.algorithm.array; /** * @ClassName: ArrayQueue * @Author : chenxin * @Date :2023/11/20 16:45 * @Description: TODO * @Version :1.0 */ public class ArrayQueue implements Queue{ private Array array; public ArrayQueue(int capacity){ array = new Array(capacity); } public ArrayQueue(){ array = new Array(); } public int getCapcity(){ return array.getCapacity(); } @Override public int getSize() { return array.getSize(); } @Override public boolean isEmpty() { return array.isEmpty(); } //添加元素是队列尾元素 @Override public void enqueue(int e) { array.addLast(e); } //取出元素是队列头的元素 @Override public int dequeue() { return array.removeFirst(); } @Override public int getFront() { return array.getFirst(); } @Override public String toString() { StringBuilder res = new StringBuilder(); res.append(\\\"Queue: \\\"); res.append(\\\"front [\\\"); for(int i=0; i<array.getSize();i++){ res.append(array.get(i)); if(i != array.getSize() -1){ res.append(\\\", \\\"); } } res.append(\\\"] tail\\\"); return res.toString(); } public static void main(String[] args) { ArrayQueue arrayQueue = new ArrayQueue(); for(int i=0;i< 10;i++){ arrayQueue.enqueue(i); System.out.println(arrayQueue); if(i % 3 == 2){ arrayQueue.dequeue(); System.out.println(arrayQueue); } } } } \",\"测试结果\",\"image-20231120171333665\"]},\"517\":{\"h\":\"8.6 循环队列\",\"t\":[\"定义：\",\"front == tail 队列为空\",\"image-20231120201529092\",\"tail +1 == front 队列满，即：(tail+1) % c == front 队列满\",\"image-20231120201703977\",\"实现：\",\"Queue 接口\",\"public interface Queue<E> { int getSize(); boolean isEmpty(); void enqueue(E e); E dequeue(); E getFront(); } \",\"LoopQueue类\",\"package com.cx.study.algorithm.queue; /** * @ClassName: LoopQueue * @Author : chenxin * @Date :2023/11/20 20:22 * @Description: TODO * @Version :1.0 */ public class LoopQueue<E> implements Queue<E> { private E[] data; private int front,tail; private int size; public LoopQueue(int capacity){ data = (E[])new Object[capacity +1]; front = 0; tail = 0; size = 0; } public LoopQueue(){ this(10); } public int getCapacity(){ return data.length -1; } @Override public int getSize() { return size; } @Override public boolean isEmpty() { return front == tail; } @Override public void enqueue(E e) { if((tail +1) % data.length == front){ resize(getCapacity() * 2); } data[tail] =e; tail = (tail +1) % data.length; size ++ ; } private void resize(int newCapacity){ E[] newData = (E[])new Object[newCapacity + 1]; for(int i=0;i<size;i++){ newData[i] = data[(i + front) % data.length]; } data = newData; front = 0; tail = size; } @Override public E dequeue() { if(isEmpty()){ throw new IllegalArgumentException(\\\"Cannot dequeue from an empty queue\\\"); } E ret = data[front]; data[front] = null; front = (front +1) % data.length; size --; if(size == getCapacity() /4 && getCapacity() /2 != 0){ resize(getCapacity() /2); } return ret; } @Override public E getFront() { if(isEmpty()){ throw new IllegalArgumentException(\\\"Cannot dequeue from an empty queue\\\"); } return data[front]; } @Override public String toString() { StringBuilder res = new StringBuilder(); res.append(String.format(\\\"Queue: size = %d , capacity= %d\\\\n\\\",size,getCapacity())); res.append(\\\" front [\\\"); for(int i=0; i != tail; i = (i+1) % data.length){ res.append(data[i]); if((i +1) % data.length != tail){ res.append(\\\", \\\"); } } res.append(\\\"] tail\\\"); return res.toString(); } public static void main(String[] args) { LoopQueue arrayQueue = new LoopQueue(); for(int i=0;i< 10;i++){ arrayQueue.enqueue(i); System.out.println(arrayQueue); if(i % 3 == 2){ arrayQueue.dequeue(); System.out.println(arrayQueue); } } } } \"]},\"518\":{\"h\":\"8.7 循环队列另一种实现方式(不浪费空间)\",\"t\":[\"public class LoopQueue implements Queue { private E[] data; private int front, tail; private int size; public LoopQueue(int capacity){ data = (E[])new Object[capacity]; // 由于不浪费空间，所以data静态数组的大小是capacity // 而不是capacity + 1 front = 0; tail = 0; size = 0; } public LoopQueue(){ this(10); } public int getCapacity(){ return data.length; } @Override public boolean isEmpty(){ // 注意，我们不再使用front和tail之间的关系来判断队列是否为空，而直接使用size return size == 0; } @Override public int getSize(){ return size; } @Override public void enqueue(E e){ // 注意，我们不再使用front和tail之间的关系来判断队列是否为满，而直接使用size if(size == getCapacity()) resize(getCapacity() * 2); data[tail] = e; tail = (tail + 1) % data.length; size ++; } @Override public E dequeue(){ if(isEmpty()) throw new IllegalArgumentException(\\\"Cannot dequeue from an empty queue.\\\"); E ret = data[front]; data[front] = null; front = (front + 1) % data.length; size --; if(size == getCapacity() / 4 && getCapacity() / 2 != 0) resize(getCapacity() / 2); return ret; } @Override public E getFront(){ if(isEmpty()) throw new IllegalArgumentException(\\\"Queue is empty.\\\"); return data[front]; } private void resize(int newCapacity){ E[] newData = (E[])new Object[newCapacity]; for(int i = 0 ; i < size ; i ++) newData[i] = data[(i + front) % data.length]; data = newData; front = 0; tail = size; } @Override public String toString(){ StringBuilder res = new StringBuilder(); res.append(String.format(\\\"Queue: size = %d , capacity = %d\\\\n\\\", size, getCapacity())); res.append(\\\"front [\\\"); // 注意，我们的循环遍历打印队列的逻辑也有相应的更改 :-) for(int i = 0; i < size; i ++){ res.append(data[(front + i) % data.length]); if((i + front + 1) % data.length != tail) res.append(\\\", \\\"); } res.append(\\\"] tail\\\"); return res.toString(); } public static void main(String[] args){ LoopQueue<Integer> queue = new LoopQueue<>(); for(int i = 0 ; i < 10 ; i ++){ queue.enqueue(i); System.out.println(queue); if(i % 3 == 2){ queue.dequeue(); System.out.println(queue); } } } } \"]},\"519\":{\"h\":\"8.8 循环队列另外一种实现方式二（浪费一个空间，但不使用size实现队列）\",\"t\":[\"public class LoopQueue implements Queue { private E[] data; private int front, tail; public LoopQueue(int capacity){ data = (E[])new Object[capacity + 1]; front = 0; tail = 0; } public LoopQueue(){ this(10); } public int getCapacity(){ return data.length - 1; } @Override public boolean isEmpty(){ return front == tail; } @Override public int getSize(){ // 注意此时getSize的逻辑: // 如果tail >= front，非常简单，队列中的元素个数就是tail - front // 如果tail < front，说明我们的循环队列\\\"循环\\\"起来了，此时，队列中的元素个数为： // tail - front + data.length // 画画图，看能不能理解为什么？ // // 也可以理解成，此时，data中没有元素的数目为front - tail, // 整体元素个数就是 data.length - (front - tail) = data.length + tail - front return tail >= front ? tail - front : tail - front + data.length; } @Override public void enqueue(E e){ if((tail + 1) % data.length == front) resize(getCapacity() * 2); data[tail] = e; tail = (tail + 1) % data.length; } @Override public E dequeue(){ if(isEmpty()) throw new IllegalArgumentException(\\\"Cannot dequeue from an empty queue.\\\"); E ret = data[front]; data[front] = null; front = (front + 1) % data.length; if(getSize() == getCapacity() / 4 && getCapacity() / 2 != 0) resize(getCapacity() / 2); return ret; } @Override public E getFront(){ if(isEmpty()) throw new IllegalArgumentException(\\\"Queue is empty.\\\"); return data[front]; } private void resize(int newCapacity){ E[] newData = (E[])new Object[newCapacity + 1]; int sz = getSize(); for(int i = 0 ; i < sz ; i ++) newData[i] = data[(i + front) % data.length]; data = newData; front = 0; tail = sz; } @Override public String toString(){ StringBuilder res = new StringBuilder(); res.append(String.format(\\\"Queue: size = %d , capacity = %d\\\\n\\\", getSize(), getCapacity())); res.append(\\\"front [\\\"); for(int i = front ; i != tail ; i = (i + 1) % data.length){ res.append(data[i]); if((i + 1) % data.length != tail) res.append(\\\", \\\"); } res.append(\\\"] tail\\\"); return res.toString(); } public static void main(String[] args){ LoopQueue<Integer> queue = new LoopQueue<>(); for(int i = 0 ; i < 10 ; i ++){ queue.enqueue(i); System.out.println(queue); if(i % 3 == 2){ queue.dequeue(); System.out.println(queue); } } } } \"]},\"520\":{\"h\":\"8.9 双端队列的实现\",\"t\":[\"public class Deque { private E[] data; private int front, tail; private int size; // 方便起见，我们的 Deque 实现，将使用 size 记录 deque 中存储的元素数量 public Deque(int capacity){ data = (E[])new Object[capacity]; // 由于使用 size，我们的 Deque 实现不浪费空间 front = 0; tail = 0; size = 0; } public Deque(){ this(10); } public int getCapacity(){ return data.length; } public boolean isEmpty(){ return size == 0; } public int getSize(){ return size; } // addLast 的逻辑和我们之前实现的队列中的 enqueue 的逻辑是一样的 public void addLast(E e){ if(size == getCapacity()) resize(getCapacity() * 2); data[tail] = e; tail = (tail + 1) % data.length; size ++; } // addFront 是新的方法，请大家注意 public void addFront(E e){ if(size == getCapacity()) resize(getCapacity() * 2); // 我们首先需要确定添加新元素的索引位置 // 这个位置是 front - 1 的地方 // 但是要注意，如果 front == 0，新的位置是 data.length - 1 的位置 front = front == 0 ? data.length - 1 : front - 1; data[front] = e; size ++; } // removeFront 的逻辑和我们之前实现的队列中的 dequeue 的逻辑是一样的 public E removeFront(){ if(isEmpty()) throw new IllegalArgumentException(\\\"Cannot dequeue from an empty queue.\\\"); E ret = data[front]; data[front] = null; front = (front + 1) % data.length; size --; if(getSize() == getCapacity() / 4 && getCapacity() / 2 != 0) resize(getCapacity() / 2); return ret; } // removeLast 是新的方法，请大家注意 public E removeLast(){ if(isEmpty()) throw new IllegalArgumentException(\\\"Cannot dequeue from an empty queue.\\\"); // 计算删除掉队尾元素以后，新的 tail 位置 tail = tail == 0 ? data.length - 1 : tail - 1; E ret = data[tail]; data[tail] = null; size --; if(getSize() == getCapacity() / 4 && getCapacity() / 2 != 0) resize(getCapacity() / 2); return ret; } public E getFront(){ if(isEmpty()) throw new IllegalArgumentException(\\\"Queue is empty.\\\"); return data[front]; } // 因为是双端队列，我们也有一个 getLast 的方法，来获取队尾元素的值 public E getLast(){ if(isEmpty()) throw new IllegalArgumentException(\\\"Queue is empty.\\\"); // 因为 tail 指向的是队尾元素的下一个位置，我们需要计算一下真正队尾元素的索引 int index = tail == 0 ? data.length - 1 : tail - 1; return data[index]; } private void resize(int newCapacity){ E[] newData = (E[])new Object[newCapacity]; for(int i = 0 ; i < size ; i ++) newData[i] = data[(i + front) % data.length]; data = newData; front = 0; tail = size; } @Override public String toString(){ StringBuilder res = new StringBuilder(); res.append(String.format(\\\"Queue: size = %d , capacity = %d\\\\n\\\", getSize(), getCapacity())); res.append(\\\"front [\\\"); for(int i = 0 ; i < size ; i ++){ res.append(data[(i + front) % data.length]); if(i != size - 1) res.append(\\\", \\\"); } res.append(\\\"] tail\\\"); return res.toString(); } public static void main(String[] args){ // 在下面的双端队列的测试中，偶数从队尾加入；奇数从队首加入 Deque<Integer> dq = new Deque<>(); for(int i = 0 ; i < 16 ; i ++){ if(i % 2 == 0) dq.addLast(i); else dq.addFront(i); System.out.println(dq); } // 之后，我们依次从队首和队尾轮流删除元素 System.out.println(); for(int i = 0; !dq.isEmpty(); i ++){ if(i % 2 == 0) dq.removeFront(); else dq.removeLast(); System.out.println(dq); } } } \"]},\"521\":{\"h\":\"8.10 java的stack有什么问题？\",\"t\":[\"在java中，不推荐使用stack类？\",\"答： 是的，java官方说的\",\"image-20231121195948004\",\"简单翻译：一个更加完整，一致的，后进先出的栈相关的操作，应该由 Deque 接口提供。并且，也推荐使用 Deque 这种数据结构（比如 ArrayDeque）来实现。\",\"因此，如果你想使用栈这种数据结构，Java 官方推荐的写法是这样的（假设容器中的类型是 Integer）：\",\"下面，我们先来看看 Stack 到底怎么了？再来看看为什么使用 Deque？\",\"java的stack类到底怎么了？\",\"答：java的stack最大的问题是继承了Vector这个类，使得子类继承了父类所有公有方法，而vector作为动态数组，是有能力在数组中的任何位置添加或删除元素的，因此，Stack继承了Vector，Stack也有这样的能力，如以下代码在java是正确的\",\"Stack<Integer> stack = new Stack<>(); stack.push(1); stack.push(2); //在stack的1，2元素中间插入666 stack.add(1,666); \",\"但是很显然，我们不希望对于栈来说，可以在1这个位置插入一个666，这一点也不666，而是破坏了栈这种数据结构的封装\",\"问题出在哪里？\",\"答：它犯了面向设计领域的一个基本错误：Stack和Vector之间的关系，不应该是继承关系，而应该是组合关系\",\"继承关系描述的是 is-a 的关系，即“是一个”的关系。\",\"猫是一个动物，所以猫这个类可以继承动物类；\",\"程序员是一个雇员，所以程序员这个类可以继承雇员类。\",\"而组合关系描述的是 has-a 的关系，即“有一个”的关系。\",\"车里有一台发动机，所以发动机这个类和车这个类之间，应该是组合关系，即车中包含一个成员变量，是发动机这个类的对象；\",\"电脑里有 CPU，内存，显卡。所以 CPU，内存，显卡，这些类和电脑类之间的关系，都应该是组合关系。\",\"所有一个更好的，基于vector的栈的实现，应该是这样的：\",\"public class Stack<E>{ private Vector<E> V = new Vector<E>(); //实现栈的方法 } \",\"什么是Deque接口？\",\"Deque 是双端队列的意思。所谓的双端队列，就是能在线性数据结构的两段，进行插入和删除操作。\",\"大家可以想象，由于 Stack 的定义是在同一端进，同一端出。所以，如果 Deque 可以满足在两段进行插入和删除，自然也能在同一端进 行插入和删除，也就是可以以此为基础，做成一个 stack。\"]},\"522\":{\"h\":\"8.11 用队列实现栈\",\"t\":[\"方式一（两个队列）: 入栈，出栈，获取栈顶元素时间复杂度都是o(n)\",\"package com.cx.study.algorithm.arrayQueue; import java.util.LinkedList; import java.util.Queue; /** * @ClassName: MyStack * @Author : chenxin * @Date :2023/11/22 10:28 * @Description: 队列实现栈 * 思路： * 1.入栈：假设给定的队列入队一端是栈顶，那么自己封装的入栈操作：直接把元素放入队列就好了 * 2.出栈：如何拿到队列尾的那个元素? * 要想拿到队尾的元素，我们就必须先把现在队列中的 n - 1 个元素都取出来。剩下的那一个元素，就是队尾的元素 * 可是，取出的 n - 1 个元素我们不能扔掉，问题又限制我们必须使用队列这种数据结构，所以，此时， * 我们可以使用另外一个队列 q2，来存储从 q 中取出的所有元素。最后，q 里只剩下一个元素， * 就是我们要拿出的“栈顶元素”。将这个元素删除后，q2 里的数据就是原始的数据， * 我们用 q2 覆盖 q 就好 * 3. 时间复杂度分析 * 入栈，出栈，获取栈顶元素都是o(n) * * @Version :1.0 */ public class MyStack { private Queue<Integer> q; public MyStack(){ q = new LinkedList<>(); } /** * 判断栈是否为空 * @return */ public boolean isEmpty(){ return q.isEmpty(); } /** * 返回栈中元素的数量 * @return */ public int size(){ return q.size(); } /** * 入栈 * @param x */ public void push(int x) { q.add(x); } /** * 出栈 * @return */ public int pop(){ //创建另外一个队列q2 Queue<Integer> q2 = new LinkedList<>(); //除了最后一个元素，将q中的所有元素放入q2 while (q.size() > 1){ q2.add(q.remove()); } //q中剩下的最后一个元素就是栈顶元素 int ret = q.remove(); //此时q2 是整个数据结构存储的所有其他数据，赋值给q q = q2; //返回栈顶元素 return ret; } /** * 获取栈顶元素 * @return */ public int peek() { int ret = pop(); push(ret); return ret; } } \",\"方式二： 两个队列，push 是 O(1) 的，pop 是 O(n)\",\"package com.cx.study.algorithm.arrayQueue; import java.util.LinkedList; import java.util.Queue; /** * @ClassName: MyStack2 * @Author : chenxin * @Date :2023/11/22 13:45 * @Description: 用队列实现栈：push 是 O(1) 的，pop 是 O(n) * @Version :1.0 */ public class MyStack2 { private Queue<Integer> q; //追踪记录栈顶元素 private int top; public void push(int x) { q.add(x); top = x; } public int pop() { Queue q2 = new LinkedList<>(); while (q.size() > 1){ // 每从 q 中取出一个元素，都给 top 赋值 // top 最后存储的就是 q 中除了队尾元素以外的最后一个元素 // 即新的栈顶元素 top = q.peek(); q2.add(q.remove()); } int ret = q.remove(); q = q2; return ret; } public int top() { return top; } public boolean empty() { return q.isEmpty(); } } \",\"方式三：两个队列，pop，时间复杂度是 O(1) 的；push，时间复杂度是 O(n)\",\"package com.cx.study.algorithm.arrayQueue; import java.util.LinkedList; import java.util.Queue; /** * @ClassName: MyStack3 * @Author : chenxin * @Date :2023/11/22 13:48 * @Description: 用队列实现栈： pop，时间复杂度是 O(1) 的；push，时间复杂度是 O(n) * @Version :1.0 */ public class MyStack3 { private Queue<Integer> q; /** Initialize your data structure here. */ public MyStack3() { q = new LinkedList<>(); } /** Push element x onto stack. */ public void push(int x) { Queue<Integer> q2 = new LinkedList<>(); q2.add(x); while(!q.isEmpty()) q2.add(q.remove()); q = q2; } /** Removes the element on top of the stack and returns that element. */ public int pop() { return q.remove(); } /** Get the top element. */ public int top() { return q.peek(); } /** Returns whether the stack is empty. */ public boolean empty() { return q.isEmpty(); } } \",\"方式四：只使用一个队列\",\"package com.cx.study.algorithm.arrayQueue; import java.util.LinkedList; import java.util.Queue; /** * @ClassName: MyStack4 * @Author : chenxin * @Date :2023/11/22 13:51 * @Description: 用队列实现栈：只使用一个队列 * @Version :1.0 */ public class MyStack4 { private Queue<Integer> q; /** Initialize your data structure here. */ public MyStack4() { q = new LinkedList<>(); } /** Push element x onto stack. */ public void push(int x) { // 首先，将 x 入队 q.add(x); // 执行 n - 1 次出队再入队的操作 for(int i = 1; i < q.size(); i ++) q.add(q.remove()); } /** Removes the element on top of the stack and returns that element. */ public int pop() { return q.remove(); } /** Get the top element. */ public int peek() { return q.peek(); } /** Returns whether the stack is empty. */ public boolean isEmpty() { return q.isEmpty(); } /** * 返回栈中元素的数量 * @return */ public int size(){ return q.size(); } public static void main(String[] args) { Queue<Integer> q = new LinkedList(); q.add(1); q.add(2); q.add(3); q.add(4); System.out.println(q); for(int i = 1; i < q.size(); i ++){ q.add(q.remove()); System.out.println(q); } System.out.println(q); System.out.println(q.peek()); } } \",\"测试类\",\"public class MyStackTest { public static void main(String[] args) { MyStack4 myStack = new MyStack4(); myStack.push(1); myStack.push(2); myStack.push(3); myStack.push(4); System.out.println(myStack.peek());//4 System.out.println(myStack.pop());//4 System.out.println(myStack.pop());//3 System.out.println(myStack.isEmpty()); //false System.out.println(myStack.size()); //2 } } \"]},\"523\":{\"h\":\"8.11 用栈实现队列\",\"t\":[\"方式一\",\"package com.cx.study.algorithm.queueArray; import java.util.Stack; /** * @ClassName: MyQueue * @Author : chenxin * @Date :2023/11/25 17:06 * @Description: 用栈实现队列 * @Version :1.0 */ public class MyQueue { private Stack<Integer> stack; public MyQueue(){ stack = new Stack<>(); } public boolean isEmpty(){ return stack.isEmpty(); } public int pop() { return stack.pop(); } /** Get the front element. */ public int peek() { return stack.peek(); } public int size(){ return stack.size(); } public void push(int x) { // 创建一个新的 stack2 Stack<Integer> stack2 = new Stack<>(); // 将 stack 的元素暂存进 stack2 while(!stack.empty()) stack2.push(stack.pop()); // 在 stack 中添加新元素 x stack.push(x); // 把 stack2 中的元素放回 stack while(!stack2.isEmpty()) stack.push(stack2.pop()); } } \",\"方式二\",\"package com.cx.study.algorithm.queueArray; import java.util.Stack; /** * @ClassName: MyQueue2 * @Author : chenxin * @Date :2023/11/27 9:35 * @Description: TODO * @Version :1.0 */ public class MyQueue2 { private Stack<Integer> stack; int front; public MyQueue2(){ stack = new Stack<>(); } public void push(int x) { if(isEmpty()) front = x; stack.push(x); } public int peek() { return front; } public int pop() { Stack<Integer> stack2 = new Stack<>(); while(stack.size() > 1) { front = stack.peek(); stack2.push(stack.pop()); } int ret = stack.pop(); while(!stack2.isEmpty()) stack.push(stack2.pop()); return ret; } public boolean isEmpty(){ return stack.isEmpty(); } } \",\"方式三\",\"package com.cx.study.algorithm.queueArray; import java.util.Stack; /** * @ClassName: MyQueue3 * @Author : chenxin * @Date :2023/11/27 9:44 * @Description: TODO * @Version :1.0 */ public class MyQueue3 { private Stack<Integer> stack1; private Stack<Integer> stack2; int front; public MyQueue3(){ stack1 = new Stack<>(); stack2 = new Stack<>(); } public void push(int x){ if(stack1.isEmpty()){ front = x; } stack1.push(x); } public int pop(){ if(!stack2.isEmpty()){ return stack2.pop(); } while (stack1.size() >1){ stack2.push(stack1.pop()); } return stack1.pop(); } public int peek(){ if(!stack2.isEmpty()){ return stack2.peek(); } return front; } public boolean isEmpty(){ return stack1.isEmpty() && stack2.isEmpty(); } } \",\"测试类\",\"public class MyQueueTest { public static void main(String[] args) { MyQueue3 myQueue = new MyQueue3(); myQueue.push(1); myQueue.push(2); myQueue.push(3); myQueue.push(4); System.out.println(myQueue.peek());//1 System.out.println(myQueue.pop());//1 System.out.println(myQueue.pop());//2 System.out.println(myQueue.isEmpty()); //false } } \"]},\"524\":{\"h\":\"第九章：排序算法\"},\"525\":{\"h\":\"9.1 选择排序法\"},\"526\":{\"h\":\"9.1.1 算法思路\",\"t\":[\"算法思路\",\"先把最小得拿出来\",\"剩下的，再把最新的拿出来\",\"剩下的再把最小的拿出来\",\"每次选择还没处理的元素里最小的元素\",\"如数组 6 4 2 3 1 5\",\"每次找数组最小的：1 2 3 4 5 6\",\"发现排序过程中占用了额外的空间\",\"可否原地完成？ 原地排序呢？可以\"]},\"527\":{\"h\":\"9.1.2 标准版（int类型）\",\"t\":[\"public static void selectSort(int[] arr){ for(int i=0;i<arr.length;i++){ //定义最小得值得索引 int minIndex = i; for(int j=i; j<arr.length;j++){ if(arr[j]<arr[minIndex]){ //如果比最小得索引小，则赋值最小索引 minIndex = j; } } //每次外层循环找到最小的，将i和最小的值交换位置 swap(arr,i,minIndex); } } public static void swap(int arr[],int i,int j){ int t = arr[i]; arr[i] = arr[j]; arr[j] = t; } \"]},\"528\":{\"h\":\"9.1.3 泛型版（兼容所有数据类型）\",\"t\":[\"public static <E extends Comparable<E>> void selectSort1(E[] arr){ for(int i=0;i<arr.length;i++){ int minIndex = i; for(int j=i; j<arr.length;j++){ if(arr[j].compareTo(arr[minIndex]) < 0){ minIndex = j; } } swap1(arr,i,minIndex); } } public static <E> void swap1(E arr[],int i,int j){ E t = arr[i]; arr[i] = arr[j]; arr[j] = t; } public static void main(String[] args) { Integer arr[] = {6,4,1,3,2,5}; Test.selectSort1(arr); System.out.println(Arrays.toString(arr)); } \",\"注意：\",\"接口泛型需要写在void前面，且需要继承Comparable\",\"Comparable 和 Comparator的区别\"]},\"529\":{\"h\":\"9.2 插入排序法\"},\"530\":{\"h\":\"9.2.1 算法思路\",\"t\":[\"插入排序类似生活中把牌按顺序排列\",\"已知数据\",\"i= 0\",\"6 4 2 3 1 5\",\"arr[0,i) 已经排好序的，arr[i,n) 未排序的\",\"把arr[i]放到合适的位置\",\"和选择排序的区别\",\"选择排序每次遍历i，最前面的元素总是最小的\",\"插入排序，对应没遍历完的数据是不会改变其位置，最前面的元素是i前面元素最小的\"]},\"531\":{\"h\":\"9.2.2 方式一\",\"t\":[\"{ for(int i=0;i<arr.length;i++){ for(int j=i; j-1>=0;j--){ if(arr[j].compareTo(arr[j-1]) < 0){ swap1(arr,j,j-1); }else{ break; } } } } public static <E> void swap1(E arr[],int i,int j){ E t = arr[i]; arr[i] = arr[j]; arr[j] = t; } \"]},\"532\":{\"h\":\"9.2.3 方式二\",\"t\":[\"public static <E extends Comparable<E>> void insertSort2(E[] arr){ for(int i=0;i<arr.length;i++){ E t = arr[i]; int j; for(j= i; j-1 >= 0 && t.compareTo(arr[j-1]) < 0 ;j--){ arr[j] = arr[j-1]; } arr[j] = t; } } \"]},\"533\":{\"h\":\"第十章：二叉树及递归\"},\"534\":{\"h\":\"第十一章：贪心算法\"},\"535\":{\"h\":\"第十二章：动态规划\"},\"536\":{\"h\":\"第十三章: 回溯算法\"},\"537\":{\"h\":\"第十四章：深度优先搜索和广度优先搜索\"},\"538\":{\"h\":\"第十五章：数据结构基础\"},\"539\":{\"h\":\"15.1 数据结构基础\",\"t\":[\"线性结构：数组；栈；队列；链表；哈希表\",\"树结构：二叉树；二分搜索树；红黑数；哈夫曼树\",\"图结构：领接矩阵；领接表\",\"自定义封装数组\",\"package com.cx.study.algorithm.array; /** * @ClassName: Array * @Author : chenxin * @Date :2023/11/14 11:48 * @Description: TODO * @Version :1.0 */ public class Array { private int[] data; //数组元素的个数 private int size; //构造函数，传入数组的容量capacity构造Array public Array(int capacity){ data = new int[capacity]; size = 0; } //无参数的构造函数，默认数组的容量capation=10 public Array(){ this(10); } //获取数组中的元素的个数 public int getSize(){ return this.size; } //获取数组的容量 public int getCapacity(){ return data.length; } //判断返回数组是否为空 public boolean isEmpty(){ return size == 0; } //向所有元素后添加一个新元素 public void addLast(int e){ if(size == data.length){ throw new IllegalArgumentException(\\\"AddLast failed. Array is full\\\"); } data[size] = e; size ++; } //在第index个位置插入一个新元素e public void add(int index,int e){ if(size == data.length){ throw new IllegalArgumentException(\\\"AddLast failed. Array is full\\\"); } if(index <0 || index > size){ throw new IllegalArgumentException(\\\"Add failed. Require index >=0 and index >size\\\"); } //从最后一个元素开始，只要i大于index,i减减，将当前元素的值赋值给后一个元素 for(int i = size -1; i>= index ; i--){ data[i + 1] = data[i]; } data[index] = e ; size ++; } //在所有元素前添加一个新元素 public void addFirst(int e){ add(0,e); } @Override public String toString(){ StringBuilder res = new StringBuilder(); res.append(String.format(\\\"Array: size = %d , capacity= %d\\\\n\\\",size,data.length)); res.append('['); for(int i=0; i<size; i++){ res.append(data[i]); if(i != size -1){ res.append(\\\", \\\"); } } res.append(']'); return res.toString(); } //获取index索引位置的元素 int get(int index){ if(index <0 || index >= size){ throw new IllegalArgumentException(\\\"Get failed. Index is illegal\\\"); } return data[index]; } void set(int index,int e){ if(index <0 || index >= size){ throw new IllegalArgumentException(\\\"Get failed. Index is illegal\\\"); } data[index] = e; } //查找数组中是否有元素e public boolean contains(int e){ for(int i=0;i<size;i++){ if(data[i] == e){ return true; } } return false; } //查找数组中元素e所在的索引，如果不存在元素e,则返回-1 public int find(int e){ for(int i=0;i<size;i++){ if(data[i] == e){ return i; } } return -1; } //从数组中删除index位置的元素，返回删除的元素 public int remove(int index){ if(index <0 || index >= size){ throw new IllegalArgumentException(\\\"Remove failed. Index is illegal\\\"); } int ret = data[index]; for(int i= index +1 ; i<size; i++){ data[i-1] = data[i]; } size -- ; return ret; } public int removeFirst(){ return remove(0); } public int removeLast(){ return remove(size - 1); } public void removeElement(int e){ int index = find(e); if(index != -1){ remove(index); } } public static void main(String[] args) { Array array = new Array(20); for(int i=0; i< 10;i++){ array.addLast(i); } System.out.println(array); array.add(1,100); System.out.println(array); } } \"]},\"540\":{\"c\":[\"算法\"]},\"541\":{\"c\":[\"数据结构\"]},\"542\":{\"h\":\"计算机基础\"},\"543\":{\"h\":\"一、网络\"},\"544\":{\"h\":\"1.OSI 七层模型是什么 ？\",\"t\":[\"从高到低分别为 \",\"应用层：为计算机用户提供服务\",\"表示层：数据处理（编解码、加密解密、压缩解压缩）\",\"会话层：管理（建立、维护、重连）应用程序之间的会话\",\"传输层：为两台主机进程之间的通信提供通用的数据传输服务\",\"网络层：路由和寻址（决定数据在网络的游走路径）\",\"数据链路层：侦编码和误差纠正控制\",\"物理层：透明地传送比特流传输\",\"每一层都专注做一件事情，并且每一层都需要使用下一层提供的功能比如传输层需要使用网络层提供的路由和寻址功能，这样传输层才知道把数据传输到哪里去\"]},\"545\":{\"h\":\"2. TCP/IP 四层模型是什么？\",\"t\":[\"从高到低分别为 \",\"应用层\",\"传输层\",\"网络层\",\"网络接口层\"]},\"546\":{\"h\":\"3. 传输层常见的协议\",\"t\":[\"TCP \",\"Transmission Control Protocol\",\"传输控制协议\",\"提供 面向连接 的，可靠 的数据传输服务\",\"UDP \",\"User Datagram Protocol\",\"用户数据协议\",\"提供 无连接 的，尽最大努力 的数据传输服务（不保证数据传输的可靠性），简单高效\"]},\"547\":{\"h\":\"4. Http: 从输入 URL 到页面展示到底发生了什么?\",\"t\":[\"总体分为以下几个过程 \",\"DNS解析\",\"TCP连接\",\"发送Http请求\",\"服务器处理请求并返回HTTP报文\",\"浏览器解析渲染页面\",\"连接结束\"]},\"548\":{\"h\":\"5. Http状态码\",\"t\":[\"​ \"]},\"549\":{\"h\":\"6. Http和Https有什么区别？\",\"t\":[\"端口号：http默认80，https默认是443\",\"url前缀：http https\",\"安全性与资源消耗：http是传输明文，基于tcp协议，https传输加密，基于SSL/TLS之上\",\"SEO优化：https有天然的优势\"]},\"550\":{\"h\":\"7. TCP和UDP的区别\",\"t\":[\"是否面向连接 \",\"TCP 提供面向连接的服务，在传送数据之前必须先建立连接，数据传送结束后要释放连接\",\"UDP 在传送数据之前不需要先建立连接\",\"是否可靠传输 \",\"TCP 提供可靠的传输服务，TCP 在传递数据之前，会有三次握手来建立连接，而且在数据传递时，有确认、窗口、重传、拥塞控制机制。通过 TCP 连接传输的数据，无差错、不丢失、不重复、并且按序到达\",\"UDP 报文后，不需要给出任何确认，并且不保证数据不丢失，不保证是否顺序到达\",\"是否有状态 \",\"TCP 传输是有状态的\",\"UDP 是无状态服务\",\"传输效率 \",\"TCP 的传输效率要比 UDP 低很多\",\"传输形式 \",\"TCP 是面向字节流的\",\"UDP 是面向报文的\",\"首部开销 \",\"TCP首部开销20 ～ 60 字节\",\"UDP首部开销8 字节\",\"是否提供广播或多播服务 \",\"TCP 只支持点对点通信\",\"UDP 支持一对一、一对多、多对一、多对多\"]},\"551\":{\"h\":\"8. HTTP是基于TCP还是UDP的？\",\"t\":[\"HTTP/3.0 之前是基于 TCP 协议的，而 HTTP/3.0 将弃用 TCP，改用 基于 UDP 的 QUIC 协议\",\"为了解决了 HTTP/2 中存在的队头阻塞问题\"]},\"552\":{\"h\":\"9. TCP的三次握手和四次挥手（非常重要）\",\"t\":[\"建立三次握手流程\",\"一次握手\",\"客户端发送带有 SYN（SEQ=x） 标志的数据包 -> 服务端，然后客户端进入 SYN_SEND 状态，等待服务器的确认\",\"二次握手\",\"服务端发送带有 SYN+ACK(SEQ=y,ACK=x+1) 标志的数据包 –> 客户端,然后服务端进入 SYN_RECV 状态\",\"三次握手\",\"客户端发送带有 ACK(ACK=y+1) 标志的数据包 –> 服务端，然后客户端和服务器端都进入ESTABLISHED 状态，完成 TCP 三次握手\",\"image-20240123141214004\",\"为什么要三次握手？\",\"三次握手的目的是建立可靠的通信信道，说到通讯，简单来说就是数据的发送与接收，而三次握手最主要的目的就是双方确认自己与对方的发送与接收是正常的\",\"第一次握手：Client 什么都不能确认；Server 确认了对方发送正常，自己接收正常\",\"第二次握手：Client 确认了：自己发送、接收正常，对方发送、接收正常；Server 确认了：对方发送正常，自己接收正常\",\"第三次握手：Client 确认了：自己发送、接收正常，对方发送、接收正常；Server 确认了：自己发送、接收正常，对方发送、接收正常\",\"二次握手为啥不行？\",\"举个现实的例子 \",\"你打我电话，电话铃声响起表示请求开始通话\",\"我听到铃声，接电话说您好\",\"但是实际情况可能是，你突然被紧急的事情打断，放下了电话，而我这边只能一直等待你说话，处于一种“悬挂”的状态\",\"四次挥手\",\"第一次挥手：客户端发送一个 FIN（SEQ=x） 标志的数据包->服务端，用来关闭客户端到服务器的数据传送。然后客户端进入 FIN-WAIT-1 状态\",\"第二次挥手：服务器收到这个 FIN（SEQ=X） 标志的数据包，它发送一个 ACK （ACK=x+1）标志的数据包->客户端 。然后服务端进入 CLOSE-WAIT 状态，客户端进入 FIN-WAIT-2 状态\",\"第三次挥手：服务端发送一个 FIN (SEQ=y)标志的数据包->客户端，请求关闭连接，然后服务端进入 LAST-ACK 状态\",\"第四次挥手：客户端发送 ACK (ACK=y+1)标志的数据包->服务端，然后客户端进入TIME-WAIT状态，服务端在收到 ACK (ACK=y+1)标志的数据包后进入 CLOSE 状态。此时如果客户端等待 2MSL 后依然没有收到回复，就证明服务端已正常关闭，随后客户端也可以关闭连接了\",\"image-20240123142630027\",\"三次挥手行不行？\",\"不行，如果少了第三次挥手，因为服务器收到客户端断开连接的请求时，可能还有一些数据没有发完，这时先回复 ACK，表示接收到了断开连接的请求。等到数据发完之后再发 FIN，断开服务器到客户端的数据传送\",\"如果没有第四次挥手（客户端对服务器的FIN的确认），则服务器将无法确认客户端是否已经接收到其发送的FIN消息，导致服务器不确定是否可以安全关闭连接，可能出现资源未释放或数据丢失的风险\"]},\"553\":{\"c\":[\"计算机基础\"]},\"554\":{\"c\":[\"计算机基础\"]},\"555\":{\"h\":\"ES\"},\"556\":{\"h\":\"一、ES常见操作\"},\"557\":{\"h\":\"1. 建表\",\"t\":[\"PUT statistic_result_detailinfo { \\\"mappings\\\": { \\\"statistic_result_detailinfo\\\": { \\\"dynamic\\\": \\\"false\\\", \\\"properties\\\": { \\\"ID\\\": { \\\"type\\\": \\\"keyword\\\" }, \\\"GATHER_PERSON\\\": { \\\"type\\\": \\\"keyword\\\" }, \\\"ITEM_CODE\\\": { \\\"type\\\": \\\"keyword\\\" }, \\\"ITEM_NAME\\\": { \\\"type\\\": \\\"keyword\\\" }, \\\"PITEM_NAME\\\": { \\\"type\\\": \\\"keyword\\\" }, \\\"TOTAL\\\": { \\\"type\\\": \\\"long\\\" }, \\\"DELTOTAL\\\": { \\\"type\\\": \\\"long\\\" }, \\\"IMPTIME\\\": { \\\"type\\\": \\\"date\\\", \\\"format\\\": \\\"yyyy-MM-dd HH:mm:ss\\\" }, \\\"DATAID\\\": { \\\"type\\\": \\\"keyword\\\" }, \\\"ACCOUNT_RECORD_ID\\\": { \\\"type\\\": \\\"keyword\\\" }, \\\"STATISTIC_INFO\\\": { \\\"type\\\": \\\"keyword\\\" } } } }, \\\"settings\\\": { \\\"number_of_shards\\\": \\\"1\\\", \\\"number_of_replicas\\\": \\\"1\\\" } } \",\"生产环境常用\",\"1.建立create-template.sh文件\",\"2.内容如下\",\"#!/bin/bash cd ./ #这样就会把所有的文件名保存到 ls.log 文件中 ls *.json > ls.log for i in $(cat ls.log) do echo $i #有用户名密码的执行方式 #curl -k --user gaonaite:Ceye.123 -H \\\"Content-Type: application/json\\\" -X PUT -d @$i \\\"https://154.154.0.88:24100/_template/${i/.json/}\\\" #无密码执行方式 curl -H \\\"Content-Type: application/json\\\" -X PUT -d @$i \\\"http://192.168.3.203:9200/_template/${i/.json/}\\\" done rm -f ls.log echo 'done!!!' \"]},\"558\":{\"h\":\"2. 复杂查询\",\"t\":[\"get statistic_unit_total/_search { \\\"size\\\": 0, \\\"query\\\": { \\\"bool\\\": { \\\"must\\\": [ { \\\"range\\\": { \\\"CREATEDATE\\\": { \\\"gte\\\": \\\"2023-01-03 00:00:00\\\", \\\"lte\\\": \\\"2024-01-03 23:59:59\\\" } } }, { \\\"term\\\": { \\\"APPTYPE\\\": { \\\"value\\\": \\\"Jstx\\\" } } }, { \\\"term\\\": { \\\"TYPE\\\": { \\\"value\\\": \\\"1\\\" } } } ] } }, \\\"aggs\\\": { \\\"group\\\": { \\\"terms\\\": { \\\"script\\\": \\\" doc['UNIT'].value + '|' + doc['APPTYPE'].value + '-' + doc['APPID'].value\\\", \\\"size\\\": 20000 }, \\\"aggs\\\": { \\\"count\\\": { \\\"sum\\\": { \\\"field\\\": \\\"TOTAL\\\" } } } } } } \"]},\"559\":{\"h\":\"3. 查询字段不为空的数据（类型不能是text）\",\"t\":[\"get statistic_unit_total/_search { \\\"query\\\": { \\\"bool\\\": { \\\"must_not\\\": { \\\"term\\\": { \\\"COL\\\": \\\"\\\" } } } }, \\\"size\\\": 1000 } \"]},\"560\":{\"h\":\"二、 ES面试题\"},\"561\":{\"h\":\"1. 详细描述一下Elasticsearch索引文档的过程\",\"t\":[\"Elasticsearch索引文档的过程涉及多个步骤，确保数据能够高效地存储并实现高可用性及可检索性。以下是Elasticsearch索引文档的一个简化版详细流程：\",\"索引请求：\",\"客户端（如应用程序）通过HTTP RESTful API向Elasticsearch发送一个Index Request，包含要索引的文档内容以及索引名、可选的类型（在Elasticsearch 7.x以后版本中类型已弃用，默认为_doc）、和可选的文档ID。\",\"路由与分片选择：\",\"Elasticsearch根据文档ID、索引配置的分片数量和算法，计算出文档应该被路由至哪个特定的主分片。每个索引会被分成多个分片，其中有一个主分片和若干副本分片。\",\"内存缓冲（Memory Buffer）：\",\"当分片所在节点接收到索引请求后，首先会将文档存储在内存缓冲区（Memory Buffer）中。这意味着新索引的文档并没有立即写入磁盘，而是暂时保留在内存中。\",\"Refresh Interval：\",\"Elasticsearch会定期（默认每秒一次）执行refresh操作，这会将内存缓冲区中的所有更改内容写入到文件系统缓存（Filesystem Cache），形成一个新的段（segment）。在这个阶段，文档变得可见，可以被搜索到。\",\"Translog：\",\"在文档进入内存缓冲的同时，Elasticsearch还会将文档变更记录到事务日志（Transaction Log，即Translog）。Translog用于确保在发生故障时，内存中的未持久化数据不会丢失。\",\"Flush：\",\"当达到一定条件时（例如，定时触发，默认30分钟，或者translog大小超过阈值，默认为512MB），Elasticsearch会触发flush操作。此时，内存缓冲区中的数据将被清空，内容被正式写入新的段，并且执行fsync操作，确保数据安全地刷新到磁盘上。同时，旧的translog会被截断，并创建一个新的translog来记录后续的更新。\",\"段合并（Segment Merge）：\",\"随着时间和刷新次数的增加，会产生很多小的段。为了优化性能和磁盘空间利用率，Elasticsearch后台会定期进行段合并操作，将多个较小的段合并成一个更大的段。\",\"复制分片：\",\"主分片完成索引和持久化后，相关的更改会被复制到相应的副本分片上，确保数据冗余和高可用性。\",\"一致性保证：\",\"在整个过程中，Elasticsearch会维护索引和搜索的一致性，确保文档在成为可搜索状态之前，相关更改已经在集群中被妥善传播和同步。\",\"总结来说，Elasticsearch在索引文档时采用了一种混合策略，结合内存缓冲、translog日志、周期性刷新、段管理和副本复制等多种手段，既保证了高性能写入，又确保了数据的安全性和查询效率。\"]},\"562\":{\"h\":\"2. 详细描述一下Elasticsearch搜索的过程\",\"t\":[\"Elasticsearch搜索过程是一个分布式、多阶段的过程，旨在从分布式索引集群中快速有效地找到匹配用户查询的文档。以下是搜索过程的详细步骤：\",\"搜索请求提交：\",\"客户端通过Elasticsearch的HTTP REST API发送搜索请求到集群中的任意节点。请求通常包括搜索的索引名称、查询条件、排序规则、分页参数等。\",\"协调节点：\",\"接收到请求的节点作为协调节点，负责整个搜索请求的执行。它首先解析和验证请求，然后根据索引的分片分配规则确定需要搜索哪些主分片和副本分片。\",\"分发阶段：\",\"协调节点将搜索请求广播到涉及到的所有相关分片（主分片或副本分片）。每个分片在本地执行相同的搜索请求，即使得搜索请求在分布式环境下能够并行处理。\",\"Query Phase（查询阶段）：\",\"在每个分片上，查询请求经过分析、转换和优化，然后执行在Lucene索引之上。每个分片会在本地构建一个优先队列（堆结构），包含按评分排序的最相关的top N个结果（这里的N通常是from + size，也就是搜索结果的起始位置和返回的数量）。\",\"初步结果聚合：\",\"各个分片将它们的局部最优结果集（含文档ID和评分）返回给协调节点。协调节点将这些初步结果合并成全局结果集，并依据评分进行排序。\",\"Fetch Phase（获取阶段）：\",\"根据初步结果集中的文档ID列表，协调节点再向对应的分片发起请求以获取完整的文档内容。这个阶段可能会进一步细分为Fetch Search Phase（获取实际文档内容）和可能的Expand Search Phase（如果查询中包含额外的信息需要从原始文档中提取）。\",\"结果裁剪与排序：\",\"协调节点收到完整文档后，可能还会执行二次排序、过滤器筛选或其他后期处理操作，最终生成满足用户请求的搜索结果。\",\"聚合处理：\",\"如果搜索请求中包含了聚合（Aggregations）部分，Elasticsearch会在分片级别计算各聚合统计量，然后在协调节点汇总这些统计数据。\",\"响应构建与返回：\",\"协调节点将最终的搜索结果（文档列表）、排序信息以及任何聚合结果打包成JSON格式的响应，然后返回给客户端。\",\"在整个过程中，Elasticsearch利用其分布式特性、缓存机制以及高效的索引结构，实现了近实时搜索，即便是在大规模数据集上也能提供快速响应。同时，Elasticsearch还提供了丰富的查询DSL（Domain Specific Language），允许用户构造复杂的搜索和分析场景。\"]},\"563\":{\"h\":\"3. Elasticsearch的倒排索引是什么？\",\"t\":[\"具体来说，在Elasticsearch的倒排索引中：\",\"词项（Term）: 是索引的基本单位，可以是一个单词、短语或数字等可搜索的内容单元。\",\"词典（Term Dictionary）: 包含了所有出现在文档集合中的词项，并且每个词项对应一个 postings list（也称倒排列表）。\",\"倒排列表（Posting List 或 Inverted List）: 对于每一个词项，倒排列表记录了所有包含该词项的文档ID及其相关信息，如词频（TF）、位置信息（Position）、词项在文档中的偏移量（Offset）等。这些信息对于搜索时计算相关性得分至关重要。\",\"压缩与优化：\",\"倒排索引为了节省存储空间和提高查找效率，会对词典和倒排列表进行压缩存储。\",\"可能采用跳跃列表、位图索引等方式加速对大量文档的遍历。\",\"通过这样的结构，当用户发起一个搜索请求时，Elasticsearch会查找倒排索引中与查询条件匹配的词项，并迅速定位到包含这些词项的文档集合，从而实现快速的全文检索。同时，由于记录了词频和其他相关度指标，Elasticsearch还能基于这些信息进行复杂的相关性排序。\"]},\"564\":{\"h\":\"4. Elasticsearch是如何实现master选举的？\",\"t\":[\"Elasticsearch采用了一个称为Zen Discovery的组件来进行集群的自动发现和Master节点选举。在Elasticsearch集群中，Master节点负责管理集群范围内的元数据变更，如索引创建、删除、分片分配等。\",\"以下简述Elasticsearch Zen Discovery中Master节点选举的实现方式：\",\"集群状态 publishing 和 subscribing：\",\"每个节点都会周期性地发布自己的集群状态到集群中的其他节点，并订阅其他节点的状态。这样每个节点都能了解到当前集群的最新状态。\",\"节点资格评估：\",\"不是所有的节点都有资格成为Master节点，只有在elasticsearch.yml配置文件中设置了node.master: true且满足其他特定条件（比如最小_master_nodes设置）的节点才有资格参与Master选举。\",\"Ping 通信：\",\"节点之间通过ping消息进行心跳检测，以此来判断节点是否存活以及网络连接状况。当一个节点连续几次未能收到另一个节点的ping消息时，会认为该节点已经离线。\",\"Master节点选举：\",\"当当前Master节点宕机或者网络分区导致失去联系时，其他候选节点开始进行Master选举。选举过程中，节点们通过一种基于投票的机制（quorum-based voting）决定新的Master节点。\",\"每个节点都会投给自己认为最合适成为Master的节点，一般会选择集群状态最新的节点。当选票数（votes）达到一定的阈值（quorum，通常是(N/2 + 1)，其中N为集群内有资格成为Master的节点总数）时，该节点就被选为新的Master节点。\",\"稳定性和安全性：\",\"为了避免脑裂（split-brain）问题，Elasticsearch引入了一个discovery.zen.minimum_master_nodes参数，要求至少有多少个节点在线并且互相可达，才能进行Master选举。这确保了在部分节点因网络故障隔离出去的情况下，不会产生两个独立的Master节点。\",\"总之，Elasticsearch通过Zen Discovery的自动发现和Master节点选举机制，确保了在各种异常情况下集群依然能够正常运行，并保持数据一致性和完整性。\"]},\"565\":{\"h\":\"5. 在并发情况下，es如何保证读写一致呢？\",\"t\":[\"Elasticsearch在并发情况下保证读写一致性的主要手段包括以下几个方面：\",\"乐观并发控制 (Optimistic Concurrency Control, OCC):\",\"Elasticsearch使用版本号（version number）来跟踪文档的变化。每次文档更新时，版本号都会递增。在执行更新或删除操作时，客户端必须指定要修改的文档版本号。如果请求中的版本号与服务器上实际的文档版本号不匹配，则更新或删除操作会失败，从而避免了并发冲突。\",\"Read-After-Write Consistency:\",\"Elasticsearch在默认情况下提供了“read-your-writes”一致性，即一旦索引操作成功返回，后续对该文档的读取操作就能看到最近写入的变更。这是通过在同一个节点上完成索引和搜索请求（只要没有跨分片操作）来实现的。\",\"Refresh Interval:\",\"Elasticsearch有一个刷新间隔（refresh interval），默认为1秒。这意味着每隔一秒，内存中的变更会被刷入新的段并使之可搜索，因此大多数情况下，用户在一个相对较短的时间窗口内就可以搜索到刚刚索引的文档。\",\"Replication and Sharding:\",\"Elasticsearch通过主副分片机制确保数据冗余和高可用性。主分片完成写入后，更新会被复制到对应的副分片上。在搜索时，除非主副分片之间的同步出现问题，否则搜索请求会等待直到所有分片都准备好。\",\"Consistency Settings:\",\"用户可以通过调整indices.consistencyLevel设置，选择\\\"one\\\"（默认）或\\\"all\\\"两种一致性级别。\\\"one\\\"意味着至少一个分片成功即可返回结果，而\\\"all\\\"则要求所有分片（包括主副分片）都成功才返回结果。然而，“all”级别可能会显著降低写操作的性能，并且不能保证强一致性（尤其在网络分区等极端情况下）。\",\"综上所述，Elasticsearch通过版本控制、读写在同一节点上的优化、定期刷新机制、数据复制和分片技术以及一致性级别的调整，实现在并发环境下的较高程度的读写一致性。但需要注意的是，Elasticsearch的设计目标更多地偏向于最终一致性（Eventual Consistency），而非严格的强一致性。在分布式系统中，强一致性往往需要牺牲性能和可用性为代价。\"]},\"566\":{\"h\":\"6. es索引数据多了怎么办呢？ 如何调优，部署\",\"t\":[\"随着Elasticsearch索引数据量的增长，可能会遇到性能下降、存储压力增大等问题。针对这种情况，可以从以下几个方面进行调优和部署策略调整：\",\"硬件升级与扩展：\",\"增加内存（RAM）：Elasticsearch在查询和索引过程中大量依赖内存，特别是对于Fielddata缓存、Filter缓存和Buffer Pool等。增加内存可以提升查询性能和索引速度。\",\"升级CPU：更强的CPU处理能力有助于提高数据处理速度，尤其是对于复杂查询和聚合操作。\",\"扩容磁盘空间：随着数据量增长，合理规划存储容量是必要的，可以考虑使用SSD硬盘，因为其I/O性能更高。\",\"横向扩展（Scale Out）：通过添加更多的节点到集群中，分散负载，实现水平扩展。\",\"索引与分片优化：\",\"合理设置分片数：过多或过少的分片数都可能导致性能问题，需根据数据规模和查询需求平衡考虑。\",\"冷热数据分离：将近期访问频繁的热数据和访问较少的冷数据分开存放，可以使用不同的索引或者ILM（Index Lifecycle Management）策略，将冷数据归档或压缩存储。\",\"时间序列数据优化：对于日志、监控类的时间序列数据，可以采用滚动索引（index rolling）策略，每天或每周创建新的索引，旧索引可定期删除或归档。\",\"查询优化：\",\"精准查询与过滤：尽量减少不必要的全文检索，使用精确查询或过滤条件缩小搜索范围。\",\"使用过滤器bitset查询：对于大型过滤条件，可以考虑使用bitset filter cache。\",\"字段数据缓存：对频繁使用的聚合字段启用fielddata缓存，但要注意内存使用量。\",\"配置调优：\",\"监控与调整缓存设置：根据业务需求和资源状况，调整filter缓存、fielddata缓存、request cache等大小。\",\"开启慢查询日志：通过分析慢查询日志，优化查询性能瓶颈。\",\"优化副本数量：虽然副本可以提高可用性，但也会消耗更多资源。根据实际业务需求和可用性要求，适度调整副本数量。\",\"集群健康检查与监控：\",\"使用Elasticsearch自带的Cluster Health API、Node Stats API等工具持续监控集群健康状况、节点资源使用情况和索引性能指标。\",\"配合使用Kibana、Prometheus+Grafana等可视化工具，实现可视化监控和报警。\",\"高级功能利用：\",\"利用Shard Allocation Awareness功能，将数据在物理机层面做更好的分布，避免热点。\",\"开启跨节点缓存（Cross Node Shard Fetching）以减少网络开销。\",\"运维自动化：\",\"使用Curator等工具进行索引管理和维护，如定期删除旧索引、调整分片大小等。\",\"结合Kubernetes、Docker等容器化技术，实现资源动态调度和弹性伸缩。\",\"总的来说，针对Elasticsearch数据量增多的问题，需要综合运用硬件升级、架构优化、查询调优、配置调整、运维自动化等多种手段，确保系统的稳定、高效运行。同时，良好的数据模型设计和数据生命周期管理也是关键环节。\"]},\"567\":{\"h\":\"7. Es对于大数据量（上亿量级）的聚合如何实现？\",\"t\":[\"对于上亿量级的大数据聚合，Elasticsearch提供了多种优化机制和方法来实现高效、准确的聚合操作：\",\"近似聚合(Aggregations with Approximation)：\",\"Cardinality 度量是一个非常有效的聚合方式，尤其是在大数据量下。它提供了基于HyperLogLog (HLL) 算法的字段基数估计，能够在保持相对准确的同时大幅减少内存占用。这对于需要计算大量不同值的数量而不关注具体值本身的应用场景特别有用。\",\"Bucket Aggregations：\",\"对于分桶聚合（如terms聚合），可以设定size限制返回的桶数，以及shard_size控制每个分片上桶的数量，防止内存溢出。\",\"使用composite聚合代替terms聚合，它能在内存中进行流式处理，特别是在处理大量唯一键时更加高效。\",\"Pipeline Aggregations：\",\"Pipeline聚合可以在聚合结果的基础上进一步处理数据，可以用于优化内存使用和计算效率。\",\"深度分页与Scroll API：\",\"对于大型聚合任务，使用Scroll API可以实现高效的深分页，而不是一次性加载所有数据，这有利于避免内存溢出问题。\",\"资源限制：\",\"设置合适的内存分配，特别是对于聚合操作，可以限制聚合上下文的内存使用，防止无限制增长。\",\"使用aggs.breaker.type和indices.breaker.total.use_real_memory等设置，对聚合操作的内存使用进行硬性限制。\",\"批量处理与脚本优化：\",\"如果聚合中使用到了脚本，应尽可能优化脚本逻辑，减少计算复杂度。\",\"对于大量数据的聚合，可以考虑采用批处理的方式，将大任务拆分为多个小任务，逐个处理后再合并结果。\",\"预聚合(Partial Aggregation)：\",\"在节点级别先执行部分聚合，然后再在协调节点上聚合结果，减轻单个节点的压力。\",\"索引优化与分割：\",\"数据分片策略也很重要，合理的分片策略可以帮助均匀分布负载，提升聚合效率。\",\"对于具有明显时间特征的数据，可以考虑时间序列索引模式，并利用ILM（Index Lifecycle Management）进行老化和归档，减少聚合所需扫描的数据量。\",\"硬件资源配置与集群扩展：\",\"根据负载适当增加硬件资源，如CPU、内存和存储，并通过横向扩展集群节点数来分散负载和提高并发处理能力。\",\"缓存策略：\",\"利用Elasticsearch内置的缓存机制，如Field Data缓存和Filter缓存，对于重复的聚合请求可以显著提高性能。\",\"综上所述，Elasticsearch在处理上亿量级的大数据聚合时，需要结合上述策略进行优化配置和设计，以确保聚合性能、资源有效利用以及系统的稳定性。同时，始终监控集群健康状况和性能指标，以便及时发现问题并作出相应调整。\"]},\"568\":{\"c\":[\"Es使用指南\"]},\"569\":{\"c\":[\"java es\"]},\"570\":{\"h\":\"JAVA进阶\",\"t\":[\"java进阶总结\",\"这里对java中基础的进阶总结\"]},\"571\":{\"h\":\"异常：\",\"t\":[\"Throwable 父类 Exception Error\",\"Exception: 程序本身可以处理的异常，可以分为Checked Exception(受检查异常，必须处理) 和Unchecked Exception(不受检查异常，可以不处理) Error: 程序无法处理的错误，如java虚拟机运行错误\",\"不受检查异常： 如空指针异常，数组越界\"]},\"572\":{\"h\":\"1. finally 里面的代码一定会执行吗\",\"t\":[\"答：不一定，在catch里面执行System.exit(1)\"]},\"573\":{\"h\":\"2. try-with-resource\",\"t\":[\"使用Java7之后的try-with-resources 语句改造上面的代码\",\"try(Scanner scanner = new Scanner(new File(\\\"test.txt\\\"))) { while(scanner.hasNext()){ System.out.println(scanner.nextLine()); } }catch(FileNotFoundException fnfe){ fnfe.printStackTrace(); } 备注：语句可以直接写在try后面 \"]},\"574\":{\"h\":\"3. 枚举\"},\"575\":{\"h\":\"3.1. 枚举作为数据存储标准写法\",\"t\":[\"public enum DeleteEnum { YES(\\\"1\\\", \\\"已删除\\\"), NO(\\\"0\\\", \\\"未删除\\\"); public String code; public String name; DeleteEnum(String code, String name) { this.code = code; this.name = name; } public static String getNameByCode(String code) { for(DeleteEnum type : values()){ if(type.code.equals(code)){ return type.name; } } return \\\"\\\"; } } \"]},\"576\":{\"h\":\"4. 泛型\"},\"577\":{\"h\":\"4.1 泛型本质是为了将类型参数化\"},\"578\":{\"h\":\"4.2 作用：\",\"t\":[\"泛型可以在编译时对类型进行安全检测，使得所有的强制转换都是自动隐式实现的，保证了类型的安全性；\",\"泛型作为”代码模板“，实现了 一套代码对各种类型的套用， 提高了代码的可重用性\"]},\"579\":{\"h\":\"4.3 使用场景：\",\"t\":[\"泛型集合\",\"Collection 的源码\",\"public interface Collection<E> extents Iterable<E> \",\"泛型方法\",\"// 泛型方法 public <T> void printArray(T[] array) { for (T element : array) { System.out.print(element + \\\" \\\"); } System.out.println(); } public static <E> int seach1(E[] arr,E target){ } 备注：在方法void 或返回值前面需要加泛型<E> \",\"泛型接口\",\"//在接口名称后面紧跟泛型<> public interface InterfaceName<T>{ //接口的方法定义 } //可以同时定义多个泛型，多个泛型用“，”逗号分割 public interface InterfaceName2<M,N>{ //接口的方法定义 } \",\"泛型类\",\"public class ClassName<T>{ private T first; private T second; public ClassName(T first,T second){ this.first = first; this.second = second; } public T getFirst(){ return first; } public T getSecond(){ return second; } } \",\"泛型加反射\"]},\"580\":{\"h\":\"4.4 泛型字母解释\",\"t\":[\"E: Element(表示集合元素，常在集合中使用)\",\"T：Type(表示java类，常在类和接口中使用)\",\"K: key(表示健)\",\"V: value(表示值)\",\"N: Number(表示数值类型)\",\"?: 表示不确定的java类型\"]},\"581\":{\"h\":\"4.5 泛型通配符\",\"t\":[\"1、<?>: 被称作无限定的通配符 2、<? extends T>: 被称作有上届的通配符 3、<? super T>: 被称作有下界的通配符\"]},\"582\":{\"h\":\"4.6 需求：给定一个数组和目录值要求返回对应下标，兼容所有类型\",\"t\":[\"//int 标准版 public static int seach(int[] arr,int target){ for(int i=0; i<arr.length;i++){ if(arr[i] == target){ return i; } } return -1; } //泛型版 public static <E> int seach1(E[] arr,E target){ for(int i=0; i<arr.length;i++){ if(arr[i].equals(target)){ return i; } } return -1; } public static void main(String[] args) { String[] arr1 = {\\\"8\\\",\\\"7\\\",\\\"9\\\",\\\"ss\\\",\\\"aa\\\"}; int ss = Test.seach1(arr1, \\\"ss\\\"); System.out.println(ss); } \"]},\"583\":{\"h\":\"5. java反射\"},\"584\":{\"h\":\"5.1 序列化和反序列化\",\"t\":[\"序列化：将数据结构或对象转换成二进制字节流的过程\",\"反序列化： 将在序列化过程中所生成的二进制字节流转换成数据结构或者对象的过程 如果有些字段不想被序列化可以用transient 修饰\"]},\"585\":{\"h\":\"5.2 反射优缺点\",\"t\":[\"优点：代码更加灵活\",\"缺点：增加了安全问题\"]},\"586\":{\"h\":\"5.3获取class的四种方式\",\"t\":[\"类.class\",\"Class.forName()\",\"Class class = Class.forName(\\\"com.cx.TargetObject\\\")\",\"通过对象实例instance.getClass() 获取\",\"TargetObject o = new TargetObject(); Class b = o.getClass();\",\"通过类加载器xxxClassLoader.loadClass()传入类路径获取\",\"ClassLoader.getSystemClassLoader().loadClass(\\\"cn.cx.TargetObject\\\")\"]},\"587\":{\"h\":\"6. java 值传递\",\"t\":[\"值传递：方法接收的是实参的拷贝，会创建副本 引用传递：方法接收的直接是实参所引用的对象在堆中的地址，不会创建副本，对形参的修改将影响到实参\",\"结论：如果参数是基本类型的话，很简单，传递的就是基本类型的字面量值的拷贝，会创建副本。 如果参数是引用类型，传递的就是实参所引用的对象在堆中地址值的拷贝，同样也会创建副本\",\"示例\",\"public static void main(String[] args) { int num1 = 10; int num2 = 20; swap(num1, num2); System.out.println(\\\"num1 = \\\" + num1); System.out.println(\\\"num2 = \\\" + num2); } public static void swap(int a, int b) { int temp = a; a = b; b = temp; System.out.println(\\\"a = \\\" + a); System.out.println(\\\"b = \\\" + b); } 输出 num1 = 10 num2 = 20 a = 20 b = 10 \"]},\"588\":{\"h\":\"7. jdk代理\",\"t\":[\"定义一个接口及其实现类；\",\"自定义 InvocationHandler 并重写invoke方法，在 invoke 方法中我们会调用原生方法（被代理类的方法）并自定义一些处理逻辑；\",\"通过 Proxy.newProxyInstance(ClassLoader loader,Class<?>[] interfaces,InvocationHandler) 方法创建代理对象\",\"例子\",\"定义发送短信的接口\",\"public interface SmsService { String send(String message); } \",\"实现发送短信的接口\",\"public class SmsServiceImpl implements SmsService{ public String send(String message){ System.out.println(\\\"send message:\\\" +message); return message; } } \",\"定义一个jdk动态类\",\"import java.lang.reflect.InvocationHandler; import java.lang.reflect.InvocationTargetException; import java.lang.reflect.Method; public class DebugInvocationHandler implements InvocationHandler { /** * 代理类中的真实对象 */ private final Object target; public DebugInvocationHandler(Object target) { this.target = target; } public Object invoke(Object proxy, Method method, Object[] args) throws InvocationTargetException, IllegalAccessException { //调用方法之前，我们可以添加自己的操作 System.out.println(\\\"before method \\\" + method.getName()); Object result = method.invoke(target, args); //调用方法之后，我们同样可以添加自己的操作 System.out.println(\\\"after method \\\" + method.getName()); return result; } } \",\"获取代理对象工厂类\",\"public class JdkProxyFactory { public static Object getProxy(Object target) { return Proxy.newProxyInstance( target.getClass().getClassLoader(), // 目标类的类加载 target.getClass().getInterfaces(), // 代理需要实现的接口，可指定多个 new DebugInvocationHandler(target) // 代理对象对应的自定义 InvocationHandler ); } } \",\"实际使用\",\"SmsService smsService = (SmsService) JdkProxyFactory.getProxy(new SmsServiceImpl()); smsService.send(\\\"java\\\"); \",\"6.控制台打印\",\"before method send send message:java after method send \"]},\"589\":{\"h\":\"总结\",\"t\":[\"jdk动态代理(默认)：运行时创建接口的代理实例，通过接口实现 cglib代理：采用底层的字节码技术，当目标对象不存在接口时，创建子类代理的实例，通过继承实现\"]},\"590\":{\"h\":\"8. unsafe类\",\"t\":[\"可以直接操作内存，使用要慎重\",\"unsafe类左右\\n内存操作\\n内存屏障\\n对象操作\\n数据操作\\nCAS 操作\\n线程调度\\nClass 操作\\n系统信息\"]},\"591\":{\"c\":[\"使用指南\"]},\"592\":{\"c\":[\"java\"]},\"593\":{\"h\":\"JAVA基础\",\"t\":[\"java基础总结\",\"这里对java中常见的知识点做一个总结\"]},\"594\":{\"h\":\"1、jdk、jvm、jre、jit\",\"t\":[\"jdk: 是一个提供开发和执行，Java程序环境的工具包 jvm: java虚拟机 jre: java运行环境 jit: 即时编译器，它负责将 Java 字节码转换为本地机器代码\"]},\"595\":{\"h\":\"2、i++,++i\",\"t\":[\"b= ++a 时，a先自增+1,再赋值给b， 输出a+1的值 b= a++时, 先赋值给b,然后a再+1 ，输出a的值 口诀： 符号在前就先加，符合在后就后加\"]},\"596\":{\"h\":\"3、位移运算符\",\"t\":[\"左移：<<, 左移多少位相当于多少位乘以2， 2<<3 = 2*(222)=16 右移：>>, 右移多少位相当于多少位/2, 8>>3 = 8/(222) = 1\"]},\"597\":{\"h\":\"4、continue、break区别\",\"t\":[\"continue: 指跳出当前的这一次循环，继续下一次循环 break: 指跳出整个循环体，继续执行循环下面的语句\",\"for(int i=0;i<5;i++){ if(i==1){ continue; } System.out.println(i); } 结果为：0，2，3，4 for(int i=0;i<5;i++){ if(i==1){ break; } System.out.println(i); } 结果为：0 \"]},\"598\":{\"h\":\"5、java 8种数据类型\",\"t\":[\"整数型：byte、short、int、long 浮点型：float、double 字符型：char 布尔型：boolean\"]},\"599\":{\"h\":\"6、基本类型和包装类型的区别？\",\"t\":[\"(1)包装类型是对基本类型的封装，包装类型提供了一些方法和属性，可以对基本类型进行更多的操作 (2) 基本类型的值可以直接赋值给对应的包装类型，反之亦然，java编译器会自动装箱和拆箱 (3) 包装类型可以使用null表示空值，而基本类型不能表示空值 (4) 包装类型可以作为泛型的参数，而基本类型不能作为泛型的参数 (5) 包装类型的对象比基本类型占用更多的内存空间\",\"Byte,Short,Integer,Long 这4种包装类默认创建了数值[-128,127] 的相应类型的缓存数据 题目\",\"Integer i1 = 40; Integer i2 = new Integer(40); System.out.println(i1==i2); \",\"答案：false, i1使用了缓存中的对象，i2会直接创建新的对象。\",\"自动装箱: 基本类型用它们对应的引用类型包装起来 (Integer i =10;) 实际调用valueOf方法 自动拆箱：将包装类型转换为基本数据类型 (int n = i;), 实际调用intValue 方法\"]},\"600\":{\"h\":\"7. 成员变量和局部变量\",\"t\":[\"//成员变量(属于类) private String name; //局部变量(属于方法) public void method(){ //int num1 =10; } \"]},\"601\":{\"h\":\"8、方法重载和重写\",\"t\":[\"重载：发生在同一个类中，参数列表必须修改 重写：发生在子父类中，参数列表一定不能修改\"]},\"602\":{\"h\":\"9、如果一个类没有声明构造方法，该程序能正确执行吗\",\"t\":[\"答：如果一个类没有声明构造方法，也可以执行！因为一个类即使没有声明构造方法也会有默认的不带参数的构造方法\"]},\"603\":{\"h\":\"10、构造方法有哪些特点？是否可以被重写？\",\"t\":[\"答：构造方法1、名称与类名相同 2、没有返回值 3、生成类的对象时自动执行，无需调用 不能被重写，但是可以重载，一个类是可以有多个构造函数的\",\"备注：没有返回值是指没有return\",\"public Test(String name){ this.name =name; } \"]},\"604\":{\"h\":\"11、面向对象三大特征\",\"t\":[\"封装：封装是指把一个对象的状态信息（也就是属性）隐藏在对象内部，不允许外部对象直接访问对象的内部信息。但是可以提供一些可以被外界访问的方法来操作属性 继承：继承是使用已存在的类的定义作为基础建立新类的技术，新类的定义可以增加新的数据或新的功能，也可以用父类的功能，但不能选择性地继承父类。通过使用继承，可以快速地创建新的类，可以提高代码的重用，程序的可维护性，节省大量创建新类的时间 ，提高我们的开发效率\",\"注意点：子类拥有父类对象所有的属性和方法（包括私有属性和私有方法），但是父类中的私有属性和方法子类是无法访问，只是拥有\",\"多态：多态，顾名思义，表示一个对象具有多种的状态，具体表现为父类的引用指向子类的实例。\"]},\"605\":{\"h\":\"12、接口和抽象类的区别\",\"t\":[\"共同点： 1、都不能被实例化 2、都包含抽象方法 区别：一个类只能继承一个类，但是可以实现多个接口\"]},\"606\":{\"h\":\"13、==和equals的区别\",\"t\":[\"对于基本类型来说，比较的是值；对于引用数据类型来说，比较的是对象的内存地址 equals: 类没有重写equals()方法时，等价于比较这两个对象；类重写了equals()方法时，一般 来比较两个对象的属性是否相等\",\"String a = new String(\\\"ab\\\"); // a 为一个引用 String b = new String(\\\"ab\\\"); // b为另一个引用,对象的内容一样 String aa = \\\"ab\\\"; // 放在常量池中 String bb = \\\"ab\\\"; // 从常量池中查找 System.out.println(aa == bb);// true System.out.println(a == b);// false System.out.println(a.equals(b));// true System.out.println(42 == 42.0);// true \"]},\"607\":{\"h\":\"14、为什么重写equals()时必须重写hashCode()方法？\",\"t\":[\"答：因为两个相等的对象的 hashCode 值必须是相等。如果重写 equals() 时没有重写 hashCode() 方法的话就可能会导致 equals 方法判断是相等的两个对象，hashCode 值却不相等\"]},\"608\":{\"h\":\"15、String StringBuffer StringBuilder的区别\",\"t\":[\"String不可变，线程安全 StringBuffer 线程安全 StringBuilder 线程不安全\"]},\"609\":{\"h\":\"16、字符串常量池\",\"t\":[\"// 在堆中创建字符串对象”ab“ // 将字符串对象”ab“的引用保存在字符串常量池中 String aa = \\\"ab\\\"; // 直接返回字符串常量池中字符串对象”ab“的引用 String bb = \\\"ab\\\"; System.out.println(aa==bb);// true \"]},\"610\":{\"h\":\"17、String s1 = new String(\\\"abc\\\") 创建了几个字符串对象？\",\"t\":[\"答：会创建1或者2个字符串对象。如果字符串常量池不存在，那么会先在字符串常量池创建，然后在堆空间创建\",\"扩展：String s = new String(\\\"xyz\\\") + new String(\\\"xyz\\\") 创建了几个对象\",\"答：4个。\",\"首先，两个 new String(\\\"xyz\\\") 分别在堆内存中创建了两个新的 String 对象，每个都包含内容 \\\"xyz\\\"。\",\"接着，字符串连接操作（+）触发了编译器对字符串字面量的合并，生成一个新的字符串 \\\"xyzxyz\\\"。由于 \\\"+\\\" 操作符两边都是 String 对象，因此在执行此操作时，JVM 会在字符串常量池中创建第三个对象，内容为 \\\"xyzxyz\\\"。\",\"最后，由于字符串连接的结果需要赋值给变量 s，Java 会创建第四个对象，也就是 s 所引用的新 String 对象。这个对象的值来源于步骤 3 中字符串常量池中的 \\\"xyzxyz\\\"，但是它是一个独立于常量池的新对象，在堆内存中分配空间\"]},\"611\":{\"h\":\"18. String.intern() 方法？\",\"t\":[\"作用：将指定的字符串对象的引用保存在字符串常量池中。 如果字符串常量池中保存了对应的字符串对象的引用，就直接返回该引用 如果字符串常量池中没有保存对应的字符串引用，那就在常量池创建一个指向该字符串对象的引用并返回\",\"String s1 = \\\"Programming\\\"; String s2 = new String(\\\"Programming\\\"); String s3 = \\\"Program\\\"; String s4 = \\\"ming\\\"; String s5 = \\\"Program\\\" + \\\"ming\\\"; String s6 = s3 + s4; System.out.println(s1 == s2); //false System.out.println(s1 == s5); // true System.out.println(s1 == s6); // false System.out.println(s1 == s6.intern()); //true System.out.println(s2 == s2.intern()); //false 解释如下： s1 == s2：比较的是栈上引用地址，虽然它们的内容都是 \\\"Programming\\\"，但由于 s1 是直接创建的字符串字面量，而 s2 是通过 new String(\\\"Programming\\\") 显式创建的对象，所以它们位于不同的内存区域，因此结果为 false。 s1 == s5：s5 是由两个字符串字面量 \\\"Program\\\" 和 \\\"ming\\\" 直接相加得到的，编译器会在编译期间将其优化合并为一个字符串字面量 \\\"Programming\\\"，因此它与 s1 引用的是同一个字符串常量池中的对象，结果为 true。 s1 == s6：s6 是通过 s3 + s4 运算符连接得到的，这是一个运行时操作，会创建一个新的 String 对象，而不是复用字符串常量池中的 \\\"Programming\\\"，所以 s1 和 s6 指向不同对象，结果为 false。 s1 == s6.intern()：s6.intern() 方法会尝试在字符串常量池中查找与 s6 内容相同的字符串，如果存在则返回该常量池中的引用，否则将 s6 加入常量池并返回其引用。因为 \\\"Programming\\\" 已经存在于常量池中（由前面的 s5 创建），所以这里返回的是常量池中的 \\\"Programming\\\" 的引用，因此 s1 和 s6.intern() 指向同一对象，结果为 true。 s2 == s2.intern()：s2 是通过 new String(\\\"Programming\\\") 创建的，即使调用 intern() 方法将其加入常量池，原始的 s2 仍然指向堆上的对象，而 s2.intern() 指向常量池中的对象，因此结果为 false \"]},\"612\":{\"c\":[\"使用指南\"]},\"613\":{\"c\":[\"java\"]},\"614\":{\"h\":\"JAVA集合\",\"t\":[\"java集合总结\",\"这里对java中集合总结\"]},\"615\":{\"h\":\"List\"},\"616\":{\"h\":\"1. 分类\",\"t\":[\"Collection集合包含Set、List、Queue Map集合包含HashMap Hashtable SortedMap\"]},\"617\":{\"h\":\"2. List、set、Queue、Map的区别？\",\"t\":[\"List: 有序可重复 Set: 无序不可重复 Queue：有序、可重复的 Map：key-value, key是无序、不可重复，value是无序、可重复的\"]},\"618\":{\"h\":\"3. 集合底层框架结构\"},\"619\":{\"h\":\"List\",\"t\":[\"ArrayList: Object[] 数组 Vector: Object[] 数组 LinkedList: 双向链表\"]},\"620\":{\"h\":\"Set\",\"t\":[\"HashSet(无序，唯一): HashMap LinkedHashSet：LinkedHashMap来实现的 TreeSet(有序，唯一): 红黑树\"]},\"621\":{\"h\":\"Map\",\"t\":[\"HashMap: 1.8之前是数组+链表组成，1.8以后当链表长度大于8，并且数组长度大于64会转换为红黑树 Hashtable: 数组+链表组成 TreeMap: 红黑树\"]},\"622\":{\"h\":\"4. ArrayList和LinkedList的区别\",\"t\":[\"是否线程安全： 都是线程不安全的 底层数据结构： ArrayList底层使用的是object数组；LinkedList底层使用的是双向链表 插入和删除是否受元素位置影响： ArrayList采用数组存储，执行add(E e)是直接追加到末尾，时间复杂度是O(1), 指定位置插入add(int index, E element) 时间复杂度为0(n) LinkedList 采用链表存储，在头尾插入或删除不受元素位置的影响，时间复杂度为O(1), 如果在指定位置i 插入和删除，时间复杂度为O(n) 是否支持快速随机访问：LinkedList不支持随机元素访问，而ArrayList可以通过元素快速获取元素对象 get(int index) 方法\"]},\"623\":{\"h\":\"5. ArrayList的扩容机制\",\"t\":[\"题目： ArrayList list = new ArrayList(20);中list扩容了几次？ 答案0次 解答： ArrayList构造方法有三个 ArrayList() 构建一个空的数组。1.7默认初始容量为10，1.8只是构造一个空的数组 ArrayList(int initialCapacity) 构造一个具有指定初始容量的空数组\",\"扩容核心代码：int newCapacity = oldCapacity + (oldCapacity >> 1);\",\"扩容机制：每次添加元素的时候都会判断是否能够容下，如果不够就会发生扩容，扩容的大小为原大小的1.5倍数。\",\"ArrayList<Integer> arrayList = new ArrayList<Integer>(20); for(int i=1;i<=50;i++){ arrayList.add(i); } \",\"前20次添加不会发生扩容，当21元素添加时数组容量从20扩容到30，当添加31元素时数组容量从30扩容到45， 当添加46元素时，数组容量从45扩容到67\"]},\"624\":{\"h\":\"Set\"},\"625\":{\"h\":\"1. Comparable 和 Comparator的区别\",\"t\":[\"Comparable 接口和 Comparator 接口都是 Java 中用于排序的接口，它们在实现类对象之间比较大小、排序\",\"Comparable: java.lang包下面，有个compareTo方法 （自然排序固定），如：Collections.sort() Comparator: java.util包下面，有个compare(T o1, T o2) 方法，可定制排序\",\"总：需要为一个类定义一个默认的比较规则，可以使用Comparable接口。如果我们需要定义多个不同的比较规则或者对已经存在的类进行排序并且无法修改源代码，可以使用Comparator接口\"]},\"626\":{\"h\":\"2. HashSet、LinkedHashSet、TreeSet 三者的异同\",\"t\":[\"相同：三者都是Set接口的实现类，都能保证元素唯一，并且都不是线程安全 不同：HashSet的底层数据结构是哈希表(基于HashMap实现)，用于不需要保证元素插入和取出顺序场景 linkedHashSet的底层是链表和哈希表，用于保证元素的插入和取出满足fifo的场景 TreeSet 底层是红黑树，用于支持对元素自定义排序规则场景\"]},\"627\":{\"h\":\"Map\"},\"628\":{\"h\":\"1. HashMap 和 HashTable的区别\",\"t\":[\"线程安全：HashMap线程不安全，hashtable线程安全(方法用synchronized修饰了)， 线程安全推荐用ConcurrentHashMap，因为线程安全问题，所以HashMap要比HashTable效率高\",\"null值： HashMap可以存储null的key和value, hashtable不允许有null健和null值\",\"扩容：HashMap默认初始化大小为16，之后每次扩容，容量变为原来的2倍，hashtable默认初始化大小为11，之后每次扩容，容量变为原来的2n+1。\",\"底层数据结构：1.8以后hashmap采用链表+数组+红黑树(链表长度大于8，数组长度大于64)\"]},\"629\":{\"h\":\"2、HashSet和HashMap区别\",\"t\":[\"HashSet 底层就是基于 HashMap 实现的,个别方法是自己特有的\"]},\"630\":{\"h\":\"3、HashMap和TreeMap 区别\",\"t\":[\"底层数据结构：hashmap使用哈希表，treemap使用红黑树 元素顺序：hashmap不保证元素顺序，treemap会根据健的自然顺序或自定义比较器来对元素进行排序，并保持有序状态 性能：hashmap性能比treemap高 自定义排序：treemap允许根据键的自然顺序或自定义比较器来进行排序\"]},\"631\":{\"h\":\"4、HashMap底层实现\",\"t\":[\"1.8以前： 数组+链表 1.8以后： 数组+链表+红黑树(链表长度大于8，并且数组长度小于64的时候，会进行数组扩容，而不是转换为红黑树)\"]},\"632\":{\"h\":\"5、HashMap的长度为什么是2的幂次方\",\"t\":[\"答: 是为了减少hash碰撞，把数据分配均匀,其中数组下标计算方式为(n-1) & hash &：按位与，都为1的时候才为1，举例假设n=8 ,hash 为17 即：7&17 00111 10001 00001 计算结果为1 之所以长度取2的幂次方，是为了保证n-1转换为2进展后对应的都是1， 如：8-1转换2进制=111 16-1转换2进制=1111 32-1转换二进制=11111\"]},\"633\":{\"h\":\"6、HashMap遍历方式\",\"t\":[\"Map<Integer,String> map = new HashMap(); (1) map.ketSet for(Integer key:map.keySet()){ System.out.println(key); System.out.println(map.get(key)); } 备注：使用map.ketSet遍历，for循环第一个参数为map集合的第一个类型 (2) map.entrySet for(Map.Entry<Integer,String> entry: map.entrySet()){ System.out.println(entry.getKey()); System.out.println(entry.getValue()); } 备注：使用map.entrySet遍历，for循环第一个参数为Map.Entry<> 泛型里面填上map对应的类型 (3).lambda表达式 map.forEach((key,value) ->{ System.out.println(key); System.out.println(value); }) \"]},\"634\":{\"h\":\"7、ConcurrentHashMap 和 Hashtable的区别\",\"t\":[\"底层数据结构：1.7 concurrentHashMap 底层采用分段的数组+链表实现，1.8采用数组+链表+红黑树 线程安全：1.7中 concurrentHashMap 对整个桶数组进行了分割分段(分段锁)，1.8以后改为Node 数组 +链表+红黑树的数据结构来实现，并发控制使用synchronized 和cas 来操作\"]},\"635\":{\"h\":\"待更新\",\"t\":[\" HashMap源码深入分析\"]},\"636\":{\"h\":\"HashMap源码分析\"},\"637\":{\"h\":\"1.数组和链表的优缺点\",\"t\":[\"数组\",\"优点 \",\"随机访问：支持通过索引快速访问，时间复杂度为O(1)\",\"缺点 \",\"大小固定：一旦定义，数组的大小通常不容易改变\",\"插入和删除操作成本高： 插入和删除元素时可能需要移动大量元素，复杂度为0(n)\",\"链表\",\"优点 \",\"动态大小：链表的大小可以根据需要动态增长和缩减\",\"插入和删除效率高：在已知节点的情况下，向链表中插入或删除一个节点只需改变相应的指针，时间复杂度为O(1)\",\"缺点 \",\"随机访问较慢：与数组相比，链表不支持直接通过索引快速访问元素，访问任意位置的元素平均需要O(n)的时间\"]},\"638\":{\"h\":\"2. 有没有一种方式整合上面两种数据结构的优势？\",\"t\":[\"散列表，也称hash\",\"image-20240306213702402\",\"hash的核心理论\",\"就是把任意长度的输入，通过hash算法变成固定长度的输出。\",\"Hash的特点\",\"从hash值不可以反向推导出原始的数据\",\"输入数据的微小变化会得到完全不同的hash值，相同的数据会得到相同的值\",\"哈希算法的执行效率要高效，长的文本也能快速地计算出哈希值\",\"hash算法的冲突概率要小\",\"注意：由于hash的原理是将输入空间的值映射成hash空间内，而hash值的空间远小于输入的空间，因此一定会存在不同的输入被映射成相同输出的情况\"]},\"639\":{\"h\":\"3. hashmap 底层数据结构？\",\"t\":[\"image-20240306215048127\"]},\"640\":{\"h\":\"4. put数据原理分析？\",\"t\":[\"put key value值\",\"计算key的hash值\",\"经过hash值扰动函数，使此hash值更散列\",\"构建出node对象\",\"路由算法，找出node应存放在数组的位置 \",\"（table.length -1）& node.hash\"]},\"641\":{\"h\":\"5. 什么是哈希碰撞？\",\"t\":[\"经过hash运算后得到的值一样\",\"带来的问题 \",\"会使得链表越来越长，get起来性能变差\"]},\"642\":{\"h\":\"6. 为啥引入红黑树\",\"t\":[\"解决链化很长的问题\"]},\"643\":{\"h\":\"7. hashmap 扩容原理？\",\"t\":[\"扩容触发条件 \",\"当hashmap中的元素数量超过当前容量乘以0.75的值时候，会发生扩容\",\"扩容通常是扩大原来数量的2倍\"]},\"644\":{\"h\":\"8. hashmap源码之-类的属性\",\"t\":[\"public class HashMap<K,V> extends AbstractMap<K,V> implements Map<K,V>, Cloneable, Serializable { // 序列号 private static final long serialVersionUID = 362498820763181265L; // 默认的初始容量是16 static final int DEFAULT_INITIAL_CAPACITY = 1 << 4; // 最大容量 static final int MAXIMUM_CAPACITY = 1 << 30; // 默认的负载因子 static final float DEFAULT_LOAD_FACTOR = 0.75f; // 当桶(bucket)上的结点数大于等于这个值时会转成红黑树 static final int TREEIFY_THRESHOLD = 8; // 当桶(bucket)上的结点数小于等于这个值时树转链表 static final int UNTREEIFY_THRESHOLD = 6; // 桶中结构转化为红黑树对应的table的最小容量,当数组长度大于64时才会转换红黑树 static final int MIN_TREEIFY_CAPACITY = 64; // 存储元素的数组，总是2的幂次倍 transient Node<k,v>[] table; // 存放具体元素的集 transient Set<map.entry<k,v>> entrySet; // 存放元素的个数，注意这个不等于数组的长度。 transient int size; // 每次扩容和更改map结构的计数器 transient int modCount; // 阈值(容量*负载因子) 当实际大小超过阈值时，会进行扩容 int threshold; // 负载因子 final float loadFactor; } \"]},\"645\":{\"h\":\"9. hashmap源码之-类的构造方法\",\"t\":[\" // 默认构造函数。 public HashMap() { this.loadFactor = DEFAULT_LOAD_FACTOR; // all other fields defaulted } // 包含另一个“Map”的构造函数 public HashMap(Map<? extends K, ? extends V> m) { this.loadFactor = DEFAULT_LOAD_FACTOR; putMapEntries(m, false);//下面会分析到这个方法 } // 指定“容量大小”的构造函数 public HashMap(int initialCapacity) { this(initialCapacity, DEFAULT_LOAD_FACTOR); } // 指定“容量大小”和“负载因子”的构造函数 public HashMap(int initialCapacity, float loadFactor) { if (initialCapacity < 0) throw new IllegalArgumentException(\\\"Illegal initial capacity: \\\" + initialCapacity); if (initialCapacity > MAXIMUM_CAPACITY) initialCapacity = MAXIMUM_CAPACITY; if (loadFactor <= 0 || Float.isNaN(loadFactor)) throw new IllegalArgumentException(\\\"Illegal load factor: \\\" + loadFactor); this.loadFactor = loadFactor; // 初始容量暂时存放到 threshold ，在resize中再赋值给 newCap 进行table初始化 this.threshold = tableSizeFor(initialCapacity); } 注意： tableSizeFor 将其扩容到与 initialCapacity 最接近的 2 的幂次方大小 \"]},\"646\":{\"c\":[\"使用指南\"]},\"647\":{\"c\":[\"java\"]},\"648\":{\"h\":\"JUC\"},\"649\":{\"h\":\"1 进程和线程的区别\",\"t\":[\"进程可以看作一个正在运行的程序 一个进程包含多个线程\"]},\"650\":{\"h\":\"2 并发与并行的区别\",\"t\":[\"并发：两个及两个以上的作业在同一时间段内执行，即同一时间段执行多个任务，这些任务可能会交替执行 并行：两个及两个以上的作业在同一时刻执行，即同一时刻同时执行多个任务 最关键的点：是否是同时执行\"]},\"651\":{\"h\":\"3 java线程的生命周期和状态\",\"t\":[\"new：初始状态，线程被创建出来但没有被调用start() runnable: 运行状态，线程被调用了start()等待运行的状态 blocked: 阻塞状态，需要等待锁释放 waiting: 等待状态，表示该线程需要等待其他线程做出一些特定动作，如通知或中断 time_waiting: 超时等待状态，可以在指定的时间后自行返回而不是像waiting那样一直等待 terminated: 终止状态，表示该线程已经运行完毕\"]},\"652\":{\"h\":\"4 死锁\",\"t\":[\"线程A持有资源2，线程B持有资源1，他们同时都想申请对方的资源，所以这两个线程就会互相等待而进入死锁状态\",\"死锁的四个必要条件 1、互斥条件：该资源任意一个时刻只由一个线程占用 2、请求与保持条件：一个线程因请求资源而阻塞时，对已获得的资源保持不放 3、不剥夺条件：线程已获得的资源在未使用完之前不能被其他线程强行剥夺，只有自己使用完毕后才释放资源 4、循环等待条件: 若干线程之间形成一种头尾相接的循环等待资源关系\"]},\"653\":{\"h\":\"5 sleep() 和wait()对比\",\"t\":[\"共同点：两者都可以暂停线程的执行 区别： 1、sleep() 方法没有释放锁，而wait() 方法释放了锁 2、wait() 通常被用于线程间交互，sleep()通常被用于暂停执行 3、wait()方法被调用后，线程不会自动苏醒，需要调用notify() 或者 notifyAll()方法，sleep()方法执行完成后，线程会自动苏醒， 4、sleep() 是Thread类的静态本地方法，wait() 则是Object类的本地方法\"]},\"654\":{\"h\":\"6 为什么wait()方法不定义在Thread中?\",\"t\":[\"wait() 是让获得对象锁的线程实现等待，会自动释放当前线程占有的对象锁，每个对象都拥有对象锁，既然要释放当前线程占有的对象锁并让其进入waiting状态，自然是要 操作对应的对象而非当前的线程\"]},\"655\":{\"h\":\"7 为什么sleep() 方法定义在Thread中？\",\"t\":[\"答：因为sleep()是让当前线程暂停执行，不涉及到对象类，也不需要获得对象锁\"]},\"656\":{\"h\":\"8 可以直接调用Thread类中的run方法吗？\",\"t\":[\"答：调用 start() 方法方可启动线程并使线程进入就绪状态，直接执行 run() 方法的话不会以多线程的方式执行。\"]},\"657\":{\"h\":\"9 JMM内存模型\",\"t\":[\"可见性：某个线程要先将变量从主内存拷贝到自己的工作内存空间，然后对变量进行操作，操作完成后 再将变量写回主内存\",\"原子性：不可分割，完整性，即某个线程正在做某个业务时，中间不可以被加塞或者被分割。需要整体完整， 要么同时成功，要么同时失败 有序性：在 JMM 中，对共享变量的写入和读取应该按照程序的顺序进行，防止出现意外的执行顺序\",\"happens-before原则\",\"在JMM中， 如果一个操作执行的结果需要对另一个操作可见性 或者 代码重排序，那么这两个操作之间必须存在happens-before关系\",\"happens-before总原则 \",\"如果一个操作happens-before另一个操作，那么第一个操作的执行结果将对第二个操作可见， 而且第一个操作的执行顺序排在第二个操作之前\",\"两个操作之间存在happens-before关系，并不意味着一定要按照happens-before原则制定的顺序来执行。 如果重排序之后的执行结果与按照happens-before关系来执行的结果一致，那么这种重排序并不非法\"]},\"658\":{\"h\":\"10 volatile\",\"t\":[\"volatile 是java虚拟机提供的轻量级同步机制 它基本上遵守了jmm规范,保证可以性和禁止指令重排，但是不保证原子性\",\"如何解决原子性 使用AtomicInteger i++ ===》 atomicInteger.getAndIncrement();\",\"AtomicInteger 为何能实现原子性 使用了CAS(比较并交换) 底层unsafe类 +自旋锁保证 原子性\",\"CAS 确定会有ABA问题 ABA问题： 线程A修改一个值后再改回原来的值，此次线程B读到值还是原来的值，而线程B是不知道线程A已经修改过的 ABA问题解决： 加版本号\",\"AtomicReference 原子引用 AtomicStampedReference 版本号原子引用 //100代表初始值 1代表版本号 AtomicStampedReference<Integer> ato = new AtomicStampedReference<>(100,1); \",\"问：volatile凭什么可以保证可见性和有序性？\",\"答：内存屏障\"]},\"659\":{\"h\":\"10.1 内存屏障\",\"t\":[\"定义：内存屏障（也称内存栅栏，内存栅障，屏障指令等，是一类同步屏障指令，是CPU或编译器在对内存随机访问的操作中的一个同步点，使得此点之前的所有读写操作都执行后才可以开始执行此点之后的操作），避免代码重排序。内存屏障其实就是一种JVM指令，Java内存模型的重排规则会要求Java编译器在生成JVM指令时插入特定的内存屏障指令，通过这些内存屏障指令，volatile实现了Java内存模型中的可见性和有序性，但volatile无法保证原子性。\",\"内存屏障之前的所有写操作都要回写到主内存\",\"内存屏障之后的所有读操作都能获得内存屏障之前的所有写操作的最新结果(实现了可见性)\",\"因此重排序时，不允许把内存屏障之后的指令重排序到内存屏障之前。 一句话：对一个 volatile 域的写, happens-before 于任意后续对这个 volatile 域的读，也叫写后读\",\"能干嘛？\",\"阻止屏障两边的指令重排序\",\"写数据时加入屏障，强制将线程私有工作内存的数据刷回主物理内存\",\"读数据时加入屏障，线程私有工作内存的数据失效，重新到主物理内存中获取最新数据\",\"JMM将内存屏障插入策略分为4种\",\"写 \",\"在每个volatile写操作的前面插入一个StoreStore屏障\",\"在每个volatile写操作的后面插入一个StoreLoad屏障\",\"读 \",\"在每个volatile读操作的后面插入一个LoadLoad屏障\",\"在每个volatile读操作的后面插入一个LoadStore屏障\",\"image-20231223173053744\"]},\"660\":{\"h\":\"11 java锁\",\"t\":[\"悲观锁：认为共享资源每次被访问的时候就会出现问题，所以每次在获取资源操作的时候都会上锁，如synchronized 和 ReentrantLock 乐观锁：认为共享资源每次被访问的时候不会出现问题，无需加锁也无需等待， cas算法+版本号实现， AtomicInteger，LongAddr ，有ABA问题 公平锁：锁被释放后，先申请的线程先得到锁 非公平锁：锁被释放后，后申请的线程可能会先获取到锁 可重入锁：也叫递归锁，指的是线程可以再次获取自己内部锁 共享锁：一把锁可以被多个线程同时获得 （读锁） 独占锁：一把锁只能被一个线程获得（写锁）\"]},\"661\":{\"h\":\"12 synchronized\",\"t\":[\"作用：主要解决的是多个线程之间访问资源的同步性，可以保证被它修饰的方法或者代码块在任意时刻只能有一个线程执行\",\"使用： 修饰实例方法（锁当前对象实例） 给当前对象实例加锁，进入同步代码前要获得当前对象实例的锁\",\"synchronized void method(){ //业务代码 } \",\"修饰静态方法（锁当前类）\",\" synchronized static void method(){ //业务代码 } \",\"修饰代码块 （锁指定对象/类）\",\" synchronized(object) 表示进入同步代码库前要获得给定对象的锁 synchronized(类.class) 表示进入同步代码前要获得给定Class的锁 \",\"构造方法可以用synchronized修饰么 答：不能，因为构造方法本身就属于线程安全，不存在同步的构造方法一说\",\"synchronized底层原理？ 修饰代码块情况\",\" public class SynchronizedDemo{ public void method(){ synchronized(this){ System.out.println(\\\"synchronized 代码块\\\"); } } } \",\"底层使用的是monitorenter 和 monitorexit 指令，一个monitorenter指令包含两个monitorexit指令，这是为了保证锁在同步代码块代码正常执行以及出现异常 的这两种情况下都能被正确释放，如果自己加了异常，则只会出现一个monitorenter 和一个monitorexit指令\",\"修饰方法的情况\",\" public class SynchronizedDemo2{ public synchronized void method(){ System.out.println(\\\"synchronized 方法\\\") } } \",\"底层使用的是ACC_SYNCHRONIZED 访问标识，标记是一个同步方法\",\"1.6之后synchronized底层做了哪些优化？ 答：1.6以后对锁的实现引入了大量的优化，如偏向锁、轻量级锁、自旋锁、锁消除、锁粗化. 锁的四种状态，依次是无锁、偏向锁、轻量级锁、重量级锁，他们会随着竞争激烈而逐渐升级，锁可以升级但不可降级\"]},\"662\":{\"h\":\"13 synchronized 和 ReentrantLock 的区别\",\"t\":[\"1.原始构成 synchronized 是关键字属于jvm层面 monitorenter(底层是通过monitor对象来完成，) monitorexit Lock是具体类(java.util.concurrent.locks.lock)是api层面的锁\",\"2.使用方法 synchronized 不需要用户去手动释放锁，当synchronized代码执行完后系统会自动 让线程释放对锁的占用 ReentrantLock 则需要用户去手动释放锁若没有主动释放锁，就有可能导致出现死锁现象 需要配合lock()和unlock()方法配合try/finally语句块来完成\",\"3.等待是否可中断 synchronized 不可中断，除非抛出异常或者正常运行完成 ReentrantLock 可中断，1.设置超时方法 tryLock(long timeOut,TimeUnit unit) 2.lockInterruptibly()放代码块中，调用interupt()方法可中断\",\"4.加锁是否公平 synchronized 非公平锁 ReentrantLock 两者都可以，默认非公平锁，构造方法可以传入boolean值， true为公平锁，false为非公平锁\",\"5.锁绑定多个条件Condition synchronized 没有 ReentrantLock 用来实现分组唤醒需要唤醒的线程们，可以精确唤醒，而不是像synchronized 要么随机唤醒一个线程，要么唤醒全部线程\",\"​\"]},\"663\":{\"h\":\"14 ThreadLocal\",\"t\":[\"作用：每一个线程都有自己的专属本地变量，存放私有的数据\",\"方法： get() set()\",\"private static final ThreadLocal<SimpleDateFormat> formatter = ThreadLocal.withInitial(()->new SimpleDateFormat(\\\"yyyyMMdd HHmmm\\\")); \",\"原理：\",\"Thread类源码\",\"public class Thread implements Runnable { //...... //与此线程有关的ThreadLocal值。由ThreadLocal类维护 ThreadLocal.ThreadLocalMap threadLocals = null; //与此线程有关的InheritableThreadLocal值。由InheritableThreadLocal类维护 ThreadLocal.ThreadLocalMap inheritableThreadLocals = null; //...... } \",\"最终的变量是放在了当前线程的 ThreadLocalMap 中，并不是存在 ThreadLocal 上，ThreadLocal 可以理解为只是ThreadLocalMap的封装，传递了变量值\",\"每个Thread中都具备一个ThreadLocalMap，而ThreadLocalMap可以存储以ThreadLocal为 key ，Object 对象为 value 的键值对\",\"Thread ThreadLocal ThreadLocalMap关系\",\"image-20231220092323293\",\"应用场景\",\"用户身份信息存储\",\"数据库session: 使用ThreadLocal来存储和管理数据库会话的\",\"主要作用\",\"解决并发问题\",\"在线程中传递数据，避免要把某些数据一直通过参数传递\",\"开源框架应用\",\"spring \",\"事物管理：数据库连接，保证事务上下文在同一线程内有效\",\"请求上下文\",\"内存泄露问题\",\"什么是内存泄漏？\",\"不再会被使用的对象或者变量占用的内存不能被回收，就是内存泄露\",\"ThreadLocalMap 中使用的 key 为 ThreadLocal 的弱引用，而 value 是强引用。所以，如果 ThreadLocal 没有被外部强引用的情况下，在垃圾回收的时候，key 会被清理掉，而 value 不会被清理掉\",\"使用完 ThreadLocal方法后最好手动调用remove()方法\",\"补充：\",\"强引用：死都不收\",\"软引用：系统内存充足不会被回收，不足会被回收\",\"class MyObject { //一般开发中不用调用这个方法，本次只是为了讲课演示 @Override protected void finalize() throws Throwable { System.out.println(Thread.currentThread().getName()+\\\"\\\\t\\\"+\\\"---finalize method invoked....\\\"); } } public class ReferenceDemo { public static void main(String[] args) { //当我们内存不够用的时候，soft会被回收的情况，设置我们的内存大小：-Xms10m -Xmx10m SoftReference<MyObject> softReference = new SoftReference<>(new MyObject()); System.gc(); try { TimeUnit.SECONDS.sleep(1); } catch (InterruptedException e) { e.printStackTrace(); } System.out.println(\\\"-----gc after内存够用: \\\"+softReference.get()); try { byte[] bytes = new byte[9 * 1024 * 1024]; }catch (Exception e){ e.printStackTrace(); }finally { System.out.println(\\\"-----gc after内存不够: \\\"+softReference.get()); } } public static void strongReference() { MyObject myObject = new MyObject(); System.out.println(\\\"-----gc before: \\\"+myObject); myObject = null; System.gc(); try { TimeUnit.SECONDS.sleep(1); } catch (InterruptedException e) { e.printStackTrace(); } System.out.println(\\\"-----gc after: \\\"+myObject); } } \",\"弱引用：都会回收\",\"public class ReferenceDemo { public static void main(String[] args) { WeakReference<MyObject> weakReference = new WeakReference<>(new MyObject()); System.out.println(\\\"-----gc before内存够用: \\\"+weakReference.get()); System.gc(); try { TimeUnit.SECONDS.sleep(1); } catch (InterruptedException e) { e.printStackTrace(); } System.out.println(\\\"-----gc after内存够用: \\\"+weakReference.get()); } public static void softReference() { //当我们内存不够用的时候，soft会被回收的情况，设置我们的内存大小：-Xms10m -Xmx10m SoftReference<MyObject> softReference = new SoftReference<>(new MyObject()); System.gc(); try { TimeUnit.SECONDS.sleep(1); } catch (InterruptedException e) { e.printStackTrace(); } System.out.println(\\\"-----gc after内存够用: \\\"+softReference.get()); try { byte[] bytes = new byte[9 * 1024 * 1024]; }catch (Exception e){ e.printStackTrace(); }finally { System.out.println(\\\"-----gc after内存不够: \\\"+softReference.get()); } } public static void strongReference() { MyObject myObject = new MyObject(); System.out.println(\\\"-----gc before: \\\"+myObject); myObject = null; System.gc(); try { TimeUnit.SECONDS.sleep(1); } catch (InterruptedException e) { e.printStackTrace(); } System.out.println(\\\"-----gc after: \\\"+myObject); } } \",\"虚引用：在任何时候都可能被回收\",\"为什么要用弱引用，不用如何？弱引用就万事大吉了么\"]},\"664\":{\"h\":\"15 线程池\",\"t\":[\"为什么要使用线程池\",\"池化技术思想，如数据库连接池，Http连接池\",\"减少每次获取资源的消耗，提高对资源的利用率\",\"提高线程的可管理性\",\"如何创建线程池\",\"通过ThreadPoolExecutor 构造函数来创建（推荐）\",\"//推荐使用spring的 @Bean(\\\"commonServiceExecutor\\\") public ThreadPoolTaskExecutor commonServiceExecutor() { ThreadPoolTaskExecutor executor = new ThreadPoolTaskExecutor(); executor.setCorePoolSize(30); executor.setQueueCapacity(60); executor.setMaxPoolSize(100); executor.setKeepAliveSeconds(60); executor.setRejectedExecutionHandler(new ThreadPoolExecutor.CallerRunsPolicy()); executor.setThreadNamePrefix(\\\"common-task-worker-\\\"); executor.initialize(); return executor; } \",\"通过Executor框架的工具类Executors来创建（不推荐）\",\"里面默认的任务队列是Integer.MAX_VALUE,容易导致oom\",\"Executors.newFixedThreadPool(int) 固定数线程 Executors.newSingleThreadExecutor() 一池一线程 Executors.newCachedThreadPool() 一池多线程 Executors.newScheduledThreadPool() 了解 jdk1.8后 Executors.newWorkStealingPool(int) \",\"//代码示例 ExecutorService executor = Executors.newFixedThreadPool(20); for (int i = 0; i < 20; i++) { executor.submit(() -> { dosome(); } }); } executor.shutdown(); \",\"线程池常见的参数\",\"corePoolSize: 线程池的核心线程数量\",\"maximumPoolSize: 线程池的最大线程数\",\"keepAliveTime: 当线程数大于核心线程数时，多余的空闲线程存活的最长时间\",\"unit: 时间单位\",\"workQueue：任务队列，用来储存等待执行任务的队列\",\"threadFactory： 线程工厂，用来创建线程，一般默认即可\",\"RejectedExecutionHandler： 拒绝策略\",\" public ThreadPoolExecutor(int corePoolSize, int maximumPoolSize, long keepAliveTime, TimeUnit unit, BlockingQueue<Runnable> workQueue, ThreadFactory threadFactory, RejectedExecutionHandler handler ) \",\"线程池的拒绝策略\",\"AbortPolicy：抛出异常来拒绝新任务的处理\",\"CallerRunsPolicy： 调用执行自己的线程运行任务，也就是直接在调用execute方法的线程中运行(run)被拒绝的任务，如果执行程序已关闭，则会丢弃该任务 （推荐使用）\",\"DiscardPolicy：不处理新任务，直接丢弃掉\",\"DiscardOldestPolicy：此策略将丢弃最早的未处理的任务请求\",\"线程池工作流程？\",\"​ 工作流程：\",\"核心数，能干活的\",\"核心数满了，阻塞队列待着\",\"阻塞队列满了，扩容，扩到线程池所能达到的最高极限\",\"两种情况：线程数大多启动拒绝策略；无事可做超过一定时间就会收缩到corePoolSize大小\",\"如何设置最大线程数？\",\"CPU 密集型任务：N（CPU 核心数）+1\",\"I/O 密集型任务(2N)：2N\",\"代码实操\",\"public class CustomThreadPool { private static class ThreadPoolHolder{ private static ExecutorService threadPool = new ThreadPoolExecutor(10, 20, 30, TimeUnit.SECONDS, new LinkedBlockingQueue<>(), Executors.defaultThreadFactory(), new ThreadPoolExecutor.CallerRunsPolicy()); } public CustomThreadPool(){ } public static ExecutorService getInstance(){ return ThreadPoolHolder.threadPool; } } 使用 ExecutorService threadPoolExecutor = CustomThreadPool.getInstance(); Runnable runnable = ()->{ customMethods(); }; threadPoolExecutor.execute(runnable); \"]},\"665\":{\"h\":\"16 AQS\",\"t\":[\"AQS是什么？\",\"字面意思：AbstractQueuedSynchronizer是抽象的队列同步器，主要用来构建锁和同步器\",\"技术解释：是用来构建锁或者其它同步器组件的重量级基础框架及整个JUC体系的基石， 通过内置的FIFO队列来完成资源获取线程的排队工作，并通过一个int类变量 表示持有锁的状态\",\"AQS的原理？\",\"有阻塞就需要排队，实现排队必然需要队列\",\"AQS使用一个volatile的int类型的成员变量来表示同步状态，通过内置的 FIFO队列来完成资源获取的排队工作将每条要去抢占资源的线程封装成 一个Node节点来实现锁的分配，通过CAS完成对State值的修改\",\"state变量+CLH双端队列\"]},\"666\":{\"h\":\"17 Semaphore\",\"t\":[\"作用： 信号量主要用于两个目的，一个是用于多个共享资源的互斥使用，另一个用于 并发线程数的控制\",\"生活例子：抢车位\",\"方法\",\"acquire()：获取一个许可\",\"release()：释放一个许可\",\"案例：模拟6个车抢三个车位\",\"public static void main(String[] args) { Semaphore semaphore = new Semaphore(3); for (int i = 0; i < 6; i++) { new Thread(() -> { try { semaphore.acquire(); System.out.println(Thread.currentThread().getName() + \\\"抢到车位\\\"); try { TimeUnit.SECONDS.sleep(3); } catch (InterruptedException e) { e.printStackTrace(); } System.out.println(Thread.currentThread().getName() + \\\"停车3秒后离开车位\\\"); } catch (Exception e) { e.printStackTrace(); } finally { semaphore.release(); } }, String.valueOf(i)).start(); } } \",\"​\"]},\"667\":{\"h\":\"18 CountDownLatch\",\"t\":[\"定义： 让一些线程阻塞直到另一些线程完成一系列操作后才被唤醒\",\"通过一个计数器实现，计数器的初始值是线程的数量，每当一个线程执行完毕后，计数器的值就-1，当计数器的值为0时，表示所有的线程都执行完毕\",\"方法\",\"await(): 调用await()方法的线程会被挂起，它会等待直到count值为0才继续执行\",\"await(long timeout,TimeUnit unit): 等待一定的时间后count值还没变为0的话就会继续执行\",\"countDown(): 将count值减1\",\"案例\",\"6个同学，班长最后关灯走人 public class CountDownLatchTest { public static void main(String[] args) throws InterruptedException { CountDownLatchTest countDownLatchTest = new CountDownLatchTest(); countDownLatchTest.test1(); System.out.println(\\\"===========================\\\"); countDownLatchTest.test2(); } /** * 没用countdownlatch之前, main线程会先执行 */ public void test1(){ for(int i=0;i<6;i++){ new Thread(()->{ System.out.println(Thread.currentThread().getName()+\\\"\\\\t上完自习,离开教室\\\"); },String.valueOf(i)).start(); } System.out.println(Thread.currentThread().getName()+\\\"\\\\t***********班长最后关门走人\\\"); } /** * 用countdownlatch */ public void test2() throws InterruptedException { CountDownLatch countDownLatch = new CountDownLatch(6); for(int i=0;i<6;i++){ new Thread(()->{ countDownLatch.countDown(); System.out.println(Thread.currentThread().getName()+\\\"\\\\t上完自习，离开教室\\\"); },String.valueOf(i)).start(); } countDownLatch.await(); System.out.println(Thread.currentThread().getName()+\\\"\\\\t***********班长最后关门走人\\\"); } } 备注：注意countDownLatch.countDown()的位置是在线程里面，不是for循环里面 \",\"扩展：使用CompletableFuture也可以实现countdownLatch功能\",\"public void test3() throws Exception { CompletableFuture<Void> future1 = CompletableFuture.runAsync(() -> { System.out.println(\\\"Task 1 running\\\"); }); CompletableFuture<Void> future2 = CompletableFuture.runAsync(() -> { System.out.println(\\\"Task 2 running\\\"); }); CompletableFuture<Void> future3 = CompletableFuture.runAsync(() -> { System.out.println(\\\"Task 3 running\\\"); }); CompletableFuture<Void> allFutures = CompletableFuture.allOf(future1, future2, future3); allFutures.get(); // 等待所有任务完成 System.out.println(\\\"All tasks completed\\\"); } \"]},\"668\":{\"h\":\"19 CyclicBarrier\",\"t\":[\"字面意思：可循环(Cyclic) 使用的屏障(Barrier)\",\"理解： 集齐7颗龙珠就能召唤神龙，它要做的事情是，让一组线程到达一个屏障 （也可以叫同步点）时被阻塞，直到最后一个线程到达屏障时，屏障才会开门，所用被 屏障拦截的线程才能干活，线程进入屏障通过CyclicBarrier的await()方法\",\"代码示例\",\"public static void main(String[] args) { CyclicBarrier cyclicBarrier = new CyclicBarrier(7,()->{ System.out.println(\\\"召唤神龙\\\"); }); for(int i=0;i<7;i++){ int finalI = i; new Thread(()->{ System.out.println(\\\"收集到第\\\"+(finalI +1)+\\\"颗龙珠\\\"); try { cyclicBarrier.await(); } catch (InterruptedException e) { e.printStackTrace(); } catch (BrokenBarrierException e) { e.printStackTrace(); } },String.valueOf(i)).start(); } } \"]},\"669\":{\"h\":\"20 锁\",\"t\":[\"乐观锁 \",\"总是假设最好的情况，认为共享资源每次被访问的时候不会出现问题，线程可以不停地执行，无需加锁也无需等待，只是在提交的时候去验证对应的资源是否被其他线程修改了（版本号或cas算法）\",\"代表：AtomicInteger LongAddr\",\"如何实现乐观锁：通过版本号机制或CAS算法实现\",\"乐观锁会存在ABA问题，解决思路是追加版本号或时间戳，如：AtomicStampedReference 类就是用来解决ABA问题\",\"补充：cas算法 \",\"cas是一个原子操作，底层依赖于一条cpu的原子指令\",\"涉及三个操作数 \",\"V: 要更新的变量值\",\"E: 预期值\",\"N: 拟要写入的新值\",\"当且仅当 V 的值等于 E 时，CAS 通过原子方式用新值 N 来更新 V 的值。如果不等，说明已经有其它线程更新了 V，则当前线程放弃更新\",\"举一个简单的例子：线程 A 要修改变量 i 的值为 6，i 原值为 1（V = 1，E=1，N=6，假设不存在 ABA 问题）。 \",\"i 与 1 进行比较，如果相等， 则说明没被其他线程修改，可以被设置为 6 。\",\"i 与 1 进行比较，如果不相等，则说明被其他线程修改，当前线程放弃更新，CAS 操作失败\",\"悲观锁 \",\"共享资源每次只给一个线程使用，其他线程阻塞，用完后再把资源\",\"代表：synchronized 和 reentrantlock\",\"高并发场景下，激烈的锁竞争会造成线程阻塞\",\"公平锁\",\"非公平锁\",\"可重入锁（递归锁）\",\"死锁\",\"写锁（独占锁）\",\"读锁（共享锁）\",\"自旋锁SpinLock\",\"无锁->独占锁->读写锁->邮戳锁\",\"无锁->偏向锁->轻量锁->重量锁\"]},\"670\":{\"h\":\"21 CompletableFuture\",\"t\":[\"为啥要有CompletableFuture？\",\"先说说FutureTask的弊端\",\"get(): 会导致阻塞，要获取结果必须等待\",\"get(1L,TimeUnit.SECONDS): 过时不候，有时结果没出来，就得不到结果\",\"completableFuture 是什么？\",\"completableFuture 实现了Future和CompletionStage接口\",\"public class CompletableFuture<T> implements Future<T>,CompletionStage<T> \",\"CompletionStage是什么？\",\"代表异步计算过程中的某一个阶段，一个阶段完成后可能会触发另外一个阶段，有点类似linux系统的管道分隔符传参数\",\"一个阶段的执行可能是被单个阶段的完成触发，也可能是由多个阶段一起触发\",\"​ 在java8中，CompletableFuture提供了非常强大的Future的扩展功能，可以帮助我们简化异步编程的复杂性，并且提供了函数式编程能力，可以通过回调的方式处理计算结果，也提供了转换和组合的方法\",\"它可以代表一个明确完成的Future, 也可能代表一个完成阶段，它支持在计算完成以后触发一些函数或执行某些动作\",\"​\",\"核心的静态方法\",\"无返回值\",\"runAsync\",\"参数1：runAsync(Runnable runnable)\",\"参数2：runAsync(Runnable runnable,Executor executor)\",\"CompletableFuture<Void> task = CompletableFuture.runAsync(() -> { System.out.println(\\\"11\\\"); }); System.out.println(task.get()); \",\"有返回值\",\"supplyAsync\",\"参数1：\",\"supplyAsync(Supplier<U> supplier) \",\"参数2：\",\"supplyAsync(Supplier<U> supplier,Executor executor) \",\"CompletableFuture<String> task = CompletableFuture.supplyAsync(() -> { System.out.println(\\\"11\\\"); return \\\"22\\\"; }); System.out.println(task.get()); \",\"上述executor 参数说明\",\"没有指定Executor的方法，直接使用默认的ForkJoinPool.commonPool() 作为它的线程池执行异步代码\",\"如果指定线程池，则使用我们自定义的或者特别指定的线程池执行异步代码\",\"减少阻塞和轮询\",\"public static void main(String[] args) { CompletableFuture<Integer> future = CompletableFuture.supplyAsync(() -> { System.out.println(Thread.currentThread().getName() + \\\"\\\\t\\\" + \\\"come in\\\"); int result = ThreadLocalRandom.current().nextInt(10); try { TimeUnit.SECONDS.sleep(1); } catch (InterruptedException e) { throw new RuntimeException(e); } System.out.println(\\\"计算结束，耗时1秒，结果为：\\\" + result); if (result > 6) { int age = 10 / 0; } return result; }).whenComplete((v, e) -> { if (e == null) { System.out.println(\\\"---result=\\\" + v); } }).exceptionally(e -> { System.out.println(\\\"异常：\\\" + e.getCause()); return -44; }); try { TimeUnit.SECONDS.sleep(3); } catch (InterruptedException e) { throw new RuntimeException(e); } } \",\"CompletableFuture性能测试(重要)\",\"需求：假设一个方法执行需要1秒，同时有三个方法，要求三个方法执行都只需要1秒\",\"public class CompletablePerformanceTest { public static void main(String[] args) { querySync(); queryAsync(); querySimpleAsync(); } /** * 正常执行版，耗时3秒 */ public static void querySync(){ long startTime = System.currentTimeMillis(); // 未使用CompletableFuture前的代码 queryInterface1(); queryInterface2(); queryInterface3(); long endTime = System.currentTimeMillis(); System.out.println(\\\"Sync Total time: \\\" + (endTime - startTime) + \\\"ms\\\"); } /** * 异常执行版，耗时1秒钟 */ public static void queryAsync(){ long startTime = System.currentTimeMillis(); CompletableFuture<Void> future1 = CompletableFuture.runAsync(() -> queryInterface1()); CompletableFuture<Void> future2 = CompletableFuture.runAsync(() -> queryInterface2()); CompletableFuture<Void> future3 = CompletableFuture.runAsync(() -> queryInterface3()); CompletableFuture.allOf(future1,future2,future3).join(); long endTime = System.currentTimeMillis(); System.out.println(\\\"ASync Total time: \\\" + (endTime - startTime) + \\\"ms\\\"); } /** * 异步简洁版，适用于方法多的场景 */ public static void querySimpleAsync(){ long startTime = System.currentTimeMillis(); CompletableFuture<Void> allOf = CompletableFuture.allOf( CompletableFuture.runAsync(() -> queryInterface1()), CompletableFuture.runAsync(() -> queryInterface2()), CompletableFuture.runAsync(() -> queryInterface3())); allOf.join(); long endTime = System.currentTimeMillis(); System.out.println(\\\"Simple ASync Total time: \\\" + (endTime - startTime) + \\\"ms\\\"); } private static void queryInterface1() { // 模拟查询接口1需要1秒钟 try { Thread.sleep(1000); System.out.println(\\\"方法1执行了\\\"); } catch (InterruptedException e) { e.printStackTrace(); } } private static void queryInterface2() { // 模拟查询接口2需要1秒钟 try { Thread.sleep(1000); System.out.println(\\\"方法2执行了\\\"); } catch (InterruptedException e) { e.printStackTrace(); } } private static void queryInterface3() { // 模拟查询接口3需要1秒钟 try { Thread.sleep(1000); System.out.println(\\\"方法3执行了\\\"); } catch (InterruptedException e) { e.printStackTrace(); } } } \",\"image-20240103094946571\",\"CompletableFuture常用方法 \",\"获得结果和触发计算\",\"获取结果 \",\"public T get() 不见不散\",\"public T get(long timeout,TimeUnit unit) 过时不侯\",\"public T join()\",\"System.out.println(CompletableFuture.supplyAsync(()->\\\"abc\\\").thenApply(r->r+\\\"123\\\").join()); 输出：abc123 \",\"对计算结果进行处理\",\"thenApply\",\"计算结果存在依赖关系，这两个线程串行化\",\"由于存在依赖关系，报错不走下一步\",\"任务 A 执行完执行 B，B 需要 A 的结果，同时任务 B 有返回值\",\"public static void thenApply(){ CompletableFuture.supplyAsync(()->{ try { TimeUnit.SECONDS.sleep(1); } catch (InterruptedException e) { throw new RuntimeException(e); } System.out.println(\\\"111\\\"); return 1024; }).thenApply(f->{ int age = 10/0; System.out.println(\\\"222\\\"); return f+1; }).thenApply(f->{ System.out.println(\\\"333\\\"); return f+1; }).whenCompleteAsync((v,e)->{ System.out.println(\\\"完成，v:\\\"+v); }).exceptionally(e->{ e.printStackTrace(); return null; }); System.out.println(\\\"主线程结束\\\"); try { TimeUnit.SECONDS.sleep(2); } catch (InterruptedException e) { throw new RuntimeException(e); } } \",\"image-20240103200926330\",\"handle\",\"有异常也可以往下一步走，根据带的异常参数可以进一步处理\",\"public static void handle(){ CompletableFuture.supplyAsync(()->{ try { TimeUnit.SECONDS.sleep(1); } catch (InterruptedException e) { throw new RuntimeException(e); } System.out.println(\\\"111\\\"); return 1024; }).handle((f,e)->{ int age = 10/0; System.out.println(\\\"222\\\"); return f+1; }).handle((f,e)->{ System.out.println(\\\"333\\\"); return f+1; }).whenCompleteAsync((v,e)->{ System.out.println(\\\"完成，v:\\\"+v); }).exceptionally(e->{ e.printStackTrace(); return null; }); System.out.println(\\\"主线程结束\\\"); try { TimeUnit.SECONDS.sleep(2); } catch (InterruptedException e) { throw new RuntimeException(e); } } \",\"image-20240103201122547\",\"对计算结果进行消费\",\"thenAccept\",\"接收任务的处理结果，并消费处理，无返回结果\",\"任务 A 执行完执行 B，B 需要 A 的结果，但是任务 B 无返回值\",\" public static void thenAccept(){ CompletableFuture.supplyAsync(()->{ return 1; }).thenApply(f->{ return f+2; }).thenApply(f->{ return f+3; }).thenAccept(r-> System.out.println(r)); } \",\"thenRun\",\"任务A执行完执行B,并且B不需要A的结果\",\"System.out.println(CompletableFuture.supplyAsync(() -> \\\"resultA\\\").thenRun(() -> {}).join()); 输出：null \",\"对计算速度进行选用\",\"applyToEither(了解)\",\"对计算结果进行合并\",\"thenCombine\",\"两个CompletionStage任务都完成后，最终能把两个任务的结果一起交给thenCombine 来处理\",\"先完成的先等着，等待其它分支任务\",\"public static void main(String[] args) throws ExecutionException, InterruptedException { CompletableFuture<Integer> completableFuture1 = CompletableFuture.supplyAsync(() -> { System.out.println(Thread.currentThread().getName() + \\\"\\\\t\\\" + \\\"---come in \\\"); return 10; }); CompletableFuture<Integer> completableFuture2 = CompletableFuture.supplyAsync(() -> { System.out.println(Thread.currentThread().getName() + \\\"\\\\t\\\" + \\\"---come in \\\"); return 20; }); CompletableFuture<Integer> thenCombineResult = completableFuture1.thenCombine(completableFuture2, (x, y) -> { System.out.println(Thread.currentThread().getName() + \\\"\\\\t\\\" + \\\"---come in \\\"); return x + y; }); System.out.println(thenCombineResult.get()); } \"]},\"671\":{\"h\":\"22 LockSupport 与线程中断\",\"t\":[\"线程中断机制\",\"如何停止、中断一个运行中的线程？\",\"中断：用于停止线程的机制，中断只是一种协作机制，Java没有给中断增加任何语法，中断的过程完全需要程序员自己实现。若要中断一个线程，你需要手动调用该线程的interrupt方法，该方法也仅仅是将线程对象的中断标识设成true；\",\"中断相关的api方法\",\"void interrupt()\",\"实例方法interrupt()仅仅是设置线程的中断状态为true，不会停止线程\",\"static boolean interrupted()\",\"静态方法，Thread.interrupted(); 判断线程是否被中断，并清除当前中断状态 这个方法做了两件事： 1 返回当前线程的中断状态 2 将当前线程的中断状态设为false\",\"返回当前线程的中断状态(boolean类型)且将当前线程的中断状态设为false，此方法调用之后会清除当前线程的中断标志位的状态（将中断标志置为false了），返回当前值并清零置false\",\"boolean isInterrupted()\",\"判断当前线程是否被中断（通过检查中断标志位）\",\"如何使用中断标识停止线程\",\"通过volatile变量实现\",\"private static volatile boolean isStop = false; public static void main(String[] args) { new Thread(() -> { while(true) { if(isStop) { System.out.println(Thread.currentThread().getName()+\\\"线程------isStop = true,自己退出了\\\"); break; } System.out.println(\\\"-------hello interrupt\\\"); } },\\\"t1\\\").start(); //暂停几秒钟线程 try { TimeUnit.SECONDS.sleep(1); } catch (InterruptedException e) { e.printStackTrace(); } isStop = true; } \",\"通过AtomicBoolean\",\"private final static AtomicBoolean atomicBoolean = new AtomicBoolean(true); public static void main(String[] args) { Thread t1 = new Thread(() -> { while(atomicBoolean.get()) { try { TimeUnit.MILLISECONDS.sleep(500); } catch (InterruptedException e) { e.printStackTrace(); } System.out.println(\\\"-----hello\\\"); } }, \\\"t1\\\"); t1.start(); try { TimeUnit.SECONDS.sleep(3); } catch (InterruptedException e) { e.printStackTrace(); } atomicBoolean.set(false); } \",\"通过Thread类自带的中断api方法实现\",\"当前线程的中断标识为true，是不是就立刻停止？\",\"中断只是一种协同机制，修改中断标识位仅此而已，不是立刻stop打断\",\"LockSupport\",\"是什么？ \",\"LockSupport是用来创建锁和其他同步类的基本线程阻塞原语\",\"LockSupport中的park() 和 unpark() 的作用分别是阻塞线程和解除阻塞线程\",\"线程等待唤醒机制\",\"方式1：使用Object中的wait()方法让线程等待，使用Object中的notify()方法唤醒线程\",\"wait和notify方法必须要在同步块或者方法里面，且成对出现使用\",\"先wait后notify才OK\",\"public class ObjectWaitAndNoTify { public static void main(String[] args) { //normal(); //error1(); error2(); } //正常 public static void normal(){ Object objectLock = new Object(); new Thread(()->{ synchronized (objectLock){ try { objectLock.wait(); } catch (InterruptedException e) { throw new RuntimeException(e); } } System.out.println(Thread.currentThread().getName()+\\\"\\\\t\\\"+\\\"被唤醒了\\\"); },\\\"t1\\\").start(); try { TimeUnit.SECONDS.sleep(3); } catch (InterruptedException e) { throw new RuntimeException(e); } new Thread(()->{ synchronized (objectLock){ objectLock.notify(); } },\\\"t2\\\").start(); } //异常展示1-去掉同步代码块(报错：Exception in thread \\\"t1\\\" java.lang.IllegalMonitorStateException) public static void error1(){ Object objectLock = new Object(); //同一把锁，类似资源类 new Thread(() -> { try { objectLock.wait(); } catch (InterruptedException e) { e.printStackTrace(); } System.out.println(Thread.currentThread().getName()+\\\"\\\\t\\\"+\\\"被唤醒了\\\"); },\\\"t1\\\").start(); //暂停几秒钟线程 try { TimeUnit.SECONDS.sleep(3L); } catch (InterruptedException e) { e.printStackTrace(); } new Thread(() -> { objectLock.notify(); },\\\"t2\\\").start(); } //异常情况2：将notify放在wait方法前面(无法唤醒) public static void error2(){ Object objectLock = new Object(); //同一把锁，类似资源类 new Thread(() -> { synchronized (objectLock) { objectLock.notify(); } System.out.println(Thread.currentThread().getName()+\\\"\\\\t\\\"+\\\"通知了\\\"); },\\\"t1\\\").start(); //t1先notify了，3秒钟后t2线程再执行wait方法 try { TimeUnit.SECONDS.sleep(3L); } catch (InterruptedException e) { e.printStackTrace(); } new Thread(() -> { synchronized (objectLock) { try { objectLock.wait(); } catch (InterruptedException e) { e.printStackTrace(); } } System.out.println(Thread.currentThread().getName()+\\\"\\\\t\\\"+\\\"被唤醒了\\\"); },\\\"t2\\\").start(); } } \",\"方式2：使用JUC包中Condition的await()方法让线程等待，使用signal()方法唤醒线程\",\"Condtion中的线程等待和唤醒方法之前，需要先获取锁\",\"一定要先await后signal，不要反了\",\"public class ConditionAwaitAndSignal { public static void main(String[] args) { // normal(); // error1(); error2(); } public static void normal(){ Lock lock = new ReentrantLock(); Condition condition = lock.newCondition(); new Thread(()->{ lock.lock(); System.out.println(Thread.currentThread().getName()+\\\"\\\\t\\\"+\\\"start\\\"); try { condition.await(); System.out.println(Thread.currentThread().getName()+\\\"\\\\t\\\"+\\\"被唤醒\\\"); } catch (InterruptedException e) { throw new RuntimeException(e); }finally { lock.unlock(); } },\\\"t1\\\").start(); try { TimeUnit.SECONDS.sleep(3); } catch (InterruptedException e) { throw new RuntimeException(e); } new Thread(()->{ lock.lock(); try{ condition.signal(); }catch (Exception e){ e.printStackTrace(); }finally { lock.unlock(); } System.out.println(Thread.currentThread().getName()+\\\"\\\\t\\\"+\\\"通知了\\\"); },\\\"t2\\\").start(); } //异常：去掉lock/unlock(condition.await();和 condition.signal();都触发了 IllegalMonitorStateException异常。) public static void error1(){ Lock lock = new ReentrantLock(); Condition condition = lock.newCondition(); new Thread(() -> { try { System.out.println(Thread.currentThread().getName()+\\\"\\\\t\\\"+\\\"start\\\"); condition.await(); System.out.println(Thread.currentThread().getName()+\\\"\\\\t\\\"+\\\"被唤醒\\\"); } catch (InterruptedException e) { e.printStackTrace(); } },\\\"t1\\\").start(); //暂停几秒钟线程 try { TimeUnit.SECONDS.sleep(3L); } catch (InterruptedException e) { e.printStackTrace(); } new Thread(() -> { try { condition.signal(); } catch (Exception e) { e.printStackTrace(); } System.out.println(Thread.currentThread().getName()+\\\"\\\\t\\\"+\\\"通知了\\\"); },\\\"t2\\\").start(); } //异常2，先signal后await（等待被唤醒） public static void error2(){ Lock lock = new ReentrantLock(); Condition condition = lock.newCondition(); new Thread(() -> { lock.lock(); try { condition.signal(); System.out.println(Thread.currentThread().getName()+\\\"\\\\t\\\"+\\\"signal\\\"); } catch (Exception e) { e.printStackTrace(); }finally { lock.unlock(); } },\\\"t1\\\").start(); //暂停几秒钟线程 try { TimeUnit.SECONDS.sleep(3L); } catch (InterruptedException e) { e.printStackTrace(); } new Thread(() -> { lock.lock(); try { System.out.println(Thread.currentThread().getName()+\\\"\\\\t\\\"+\\\"等待被唤醒\\\"); condition.await(); System.out.println(Thread.currentThread().getName()+\\\"\\\\t\\\"+\\\"被唤醒\\\"); } catch (Exception e) { e.printStackTrace(); }finally { lock.unlock(); } },\\\"t2\\\").start(); } } \",\"方式3：LockSupport类可以阻塞当前线程以及唤醒指定被阻塞的线程**（都可以用无限制，推荐）**\",\"park() : 阻塞当前线程或者阻塞传入的具体线程\",\"unpark(): 唤醒处于阻塞状态的指定线程\",\"public static void main(String[] args) { //正常使用+不需要锁块 Thread t1 = new Thread(() -> { System.out.println(Thread.currentThread().getName()+\\\" \\\"+\\\"1111111111111\\\"); LockSupport.park(); System.out.println(Thread.currentThread().getName()+\\\" \\\"+\\\"2222222222222------end被唤醒\\\"); },\\\"t1\\\"); t1.start(); //暂停几秒钟线程 try { TimeUnit.SECONDS.sleep(3); } catch (InterruptedException e) { e.printStackTrace(); } LockSupport.unpark(t1); System.out.println(Thread.currentThread().getName()+\\\" -----LockSupport.unparrk() invoked over\\\"); } \"]},\"672\":{\"h\":\"23 Synchronized 与锁升级\",\"t\":[\"从无锁-->偏向锁-->轻量级锁-->重量级锁\",\"锁\",\"优点\",\"缺点\",\"适用场景\",\"偏向锁\",\"加锁和解锁不需要额外的消耗，和执行非同步方法相比仅存在纳秒级的差距\",\"如果线程间存在锁竞争，会带来额外的锁撤销的消耗\",\"适用于只有一个线程访问同步快的场景\",\"轻量级锁\",\"竞争的线程不会阻塞，提高了程序的响应速度\",\"如果始终得不到锁竞争的线程，使用自旋会消耗cpu\",\"追求响应时间；同步块执行速度非常快\",\"重量级锁\",\"线程竞争不使用自旋，不会消耗cpu\",\"线程阻塞，响应时间缓慢\",\"追求吞吐量，同步块执行速度较长\",\"synchronized锁升级过程总结：一句话，就是先自旋，不行再阻塞。 实际上是把之前的悲观锁(重量级锁)变成在一定条件下使用偏向锁以及使用轻量级(自旋锁CAS)的形式\",\"synchronized在修饰方法和代码块在字节码上实现方式有很大差异，但是内部实现还是基于对象头的MarkWord来实现的。 JDK1.6之前synchronized使用的是重量级锁，JDK1.6之后进行了优化，拥有了无锁->偏向锁->轻量级锁->重量级锁的升级过程，而不是无论什么情况都使用重量级锁。\",\"偏向锁:适用于单线程适用的情况，在不存在锁竞争的时候进入同步方法/代码块则使用偏向锁。轻量级锁：适用于竞争较不激烈的情况(这和乐观锁的使用范围类似)， 存在竞争时升级为轻量级锁，轻量级锁采用的是自旋锁，如果同步方法/代码块执行时间很短的话，采用轻量级锁虽然会占用cpu资源但是相对比使用重量级锁还是更高效。重量级锁：适用于竞争激烈的情况，如果同步方法/代码块执行时间很长，那么使用轻量级锁自旋带来的性能消耗就比使用重量级锁更严重，这时候就需要升级为重量级锁。\",\"对象头markword\",\"image-20240108103708262\",\"对象在堆内存由：对象头、实例数据、对齐填充组成\",\"image-20240108103957084\"]},\"673\":{\"c\":[\"juc内容\"]},\"674\":{\"c\":[\"java\"]},\"675\":{\"h\":\"jvm\"},\"676\":{\"h\":\"jvm知识梳理\"},\"677\":{\"h\":\"1. 整体图\",\"t\":[\"image-20240110203713386\"]},\"678\":{\"h\":\"2. 解释说明\"},\"679\":{\"h\":\"2.1. 类加载器\",\"t\":[\"负责加载class文件，class文件在文件开头有特定的文件标识（cafe babe），将class文件 字节码内容加载到内存中，并将这些内容转换成方法区中的运行时数据结构并且ClassLoader 只负责class文件的加载，至于它是否可以运行，则由Execution Engine决定\",\"虚拟机自带的加载器\",\"1.启动类加载器（BootStrap）\",\"2.扩展类加载器（Extension）\",\"3.应用程序加载器（AppClassLoader）\",\"双亲委派？\",\"往上捅，理解为我爸是李刚，有事找我爸，当一个类收到类加载请求，他不会自己去加载这个类， 而是把这个请求委派给父类完成，每一个层次类加载器都是如此，因此所有的加载请求都应该传 送到启动类加载中，只有当父类无法加载时，子类加载器才会尝试自己去加载\"]},\"680\":{\"h\":\"2.2. 程序计数器（Program Counter Register）\",\"t\":[\"每个线程都有一个程序计数器，是线程私有的，就是一个指针，指向方法区中的方法字节码 （用来存储向下一条指令的地址，也即将要执行的代码），由执行引擎读取下一条指令， 是一个非常小的内存空间，几乎可以忽略不记。 这块内存区域很小，它是当前线程所执行的字节码的行号指示器，字节码解释器通过改变这个 计数器的值来选取下一条需要执行的字节码指令。 如果执行的是一个Native方法，那这个计数器是空的。 用以完成分支、循环、跳转、异常处理、线程恢复等基础功能。 不会发生内存溢出（OutOfMemory =oom）错误\"]},\"681\":{\"h\":\"2.3. 方法区（Method Area）\",\"t\":[\"供各线程共享的运行时内存区域。它存储了每一个类的结构信息。例如 运行时常量池（Runtime Constrant Pool）、字段和方法数据、 构造函数和普通方法的字节码内容。上面讲的是规范，在不同虚拟机里头实现 是不一样的，最典型的就是永久代（PermGen space）和元空间（Metaspace）. 但是实例变量存在堆内存中，和方法区无关\"]},\"682\":{\"h\":\"2.4. 栈（stack）\",\"t\":[\"先进后出，后进先出 (子弹夹)\",\"栈管运行，堆管存储\",\"栈也叫栈内存，主管java程序的运行，是在线程创建时创建，它的生命期是随线程的生命期， 线程结束栈内存也就释放，对于栈来说不存在垃圾回收问题，只要线程一结束该栈就Over, 生命周期和线程一致，是线程私有的。8种基本类型的变量+对象的引用变量+实例方法都是 在函数的栈内存中分配\",\"栈存储什么？\",\"1.本地变量（Local Variables）: 输入参数和输出参数以及方法内的变量\",\"2.栈操作（Operand Stack）:记录出栈、入栈的操作\",\"3.栈帧数据（Frame Data）: 包括类文件、方法等待\",\"栈报的错误？\",\"错误 java.lang.StackOverflowError\"]},\"683\":{\"h\":\"2.5. 堆（heap）\",\"t\":[\"一个jvm实例只存在一个堆内存，堆内存的大小是可以调节的。类加载器读取了类文件后， 需要把类、方法、常变量放在堆内存中，保存所有引用类型的真实信息，以方便执行器执行 ，堆分为三部分\",\"1.Young Generation Space 新生区 Young/New\",\"2.Tenure generation space 养老区 Old/Tenure\",\"3.Permanent Space 永久区 Perm\",\"java7之前？\",\"堆内存逻辑上分为三部分： 新生+养老+永久 新生区： 伊甸区（Eden Space）、 幸存者0区（Survivor 0 Space）、幸存者1区（Survivor 1 Space）\",\"java 堆从gc的角度还可以细分为？\",\"新生代（Eden 区、From Survivor区 和To Survivor区）和老年区 新生代比例 8：1：1\",\"如果出现java.lang.OutOfMemoryError: java heap space异常？\",\"1.java虚拟机的堆内存设置不够，可以通过参数-Xms、-Xmx来调整\",\"2.代码中创建了大量大对象，并且长时间不能被垃圾收集器收集（存在被引用）\",\"image-20240110204942188\"]},\"684\":{\"h\":\"2.6 什么情况下对象会进入老年代\",\"t\":[\"大对象直接进入老年代\",\"对象经历15次Minor GC后（可通过-XX:MaxTenuringThreshold参数调整），若仍然存活，则会被晋升到老年代（Old Generation）\"]},\"685\":{\"h\":\"3. 垃圾判别阶段算法\"},\"686\":{\"h\":\"3.1 引用计数法\",\"t\":[\"给对象添加一个引用计数器 \",\"每当有引用+1，引用失效减1\",\"存在循环依赖问题\"]},\"687\":{\"h\":\"3.2 可达性分析算法\",\"t\":[\"这个算法的基本思想就是通过一系列的称为 “GC Roots” 的对象作为起点，从这些节点开始向下搜索，节点所走过的路径称为引用链，当一个对象到 GC Roots 没有任何引用链相连的话，则证明此对象是不可用的，需要被回收\",\"解决循环依赖问题\",\"哪些对象可以作为 GC Roots 呢？\",\"虚拟机栈(栈帧中的局部变量表)中引用的对象\",\"本地方法栈(Native 方法)中引用的对象\",\"方法区中类静态属性引用的对象\",\"方法区中常量引用的对象\",\"所有被同步锁持有的对象\",\"JNI（Java Native Interface）引用的对象\"]},\"688\":{\"h\":\"4. 垃圾清除阶段算法\"},\"689\":{\"h\":\"4.1 标记清除（Mark-Sweep）\",\"t\":[\"标记：Collector从引用根节点开始遍历，标记所有被引用的对象。一般是在对象的Header中记录为可达对象\",\"清除：Collector对堆内存从头到尾进行线性的遍历，如果发现某个对象在其Header中没有标记为可达对象，则将其回收\",\"很多书、视频讲错了！说是标记的垃圾对象。这里要注意了\",\"image-20240112141723002\",\"缺点\",\"在进行GC的时候，需要停止整个应用程序\",\"产生内存碎片\"]},\"690\":{\"h\":\"4.2 复制算法\",\"t\":[\"年轻代\",\"-XX:MaxTenuringThreshold -- 设置对象在新生代中存活的次数\",\"将堆内存分为两个区域，每次只使用其中一个区域，当该区域满时，将存活的对象复制到另一个区域，然后清除整个区域。这样可以避免内存碎片问题\",\"image-20240112142621269\",\"优点\",\"没有标记和清除过程，实现简单，运行高效\",\"复制过去以后保证空间的连续性，不会出现“碎片”问题\",\"缺点\",\"需要两倍的内存空间\"]},\"691\":{\"h\":\"4.3 标记压缩\",\"t\":[\"适用于老年代\",\"背景\",\"复制算法的高效性是建立在存活对象少、垃圾对象多的前提下的。这种情况在新生代经常发生，但是在老年代，更常见的情况是大部分对象都是存活对象。如果依然使用复制算法，由于存活对象较多，复制的成本也将很高。因此，基于老年代垃圾回收的特性，需要使用其他的算法\",\"标记－清除算法的确可以应用在老年代中，但是该算法不仅执行效率低下，而且在执行完内存回收后还会产生内存碎片，所以JVM 的设计者需要在此基础之上进行改进。标记 - 压缩（Mark - Compact）算法由此诞生\",\"执行过程\",\"第一阶段和标记-清除算法一样，从根节点开始标记所有被引用对象\",\"第二阶段将所有的存活对象压缩到内存的一端，按顺序排放\",\"最后，清理边界外所有的空间\",\"标记-压缩算法的最终效果等同于标记-清除算法执行完成后，再进行一次内存碎片整理，因此，也可以把它称为标记-清除-压缩(Mark-Sweep-Compact)算法\",\"image-20240112143335429\",\"优点\",\"此算法消除了“标记-清除”和“复制”两个算法的弊端\",\"缺点\",\"从效率上来说，标记-压缩算法要低于复制算法\",\"效率不高，不仅要标记所有存活对象，还要整理所有存活对象的引用地址\",\"对于老年代每次都有大量对象存活的区域来说，极为负重\",\"移动过程中，需要全程暂停用户应用程序。即：STW\"]},\"692\":{\"h\":\"4.4 分代收集算法\",\"t\":[\"根据对象的存活周期将堆内存分为新生代和老年代。新生代使用复制算法，老年代使用标记-清除或标记-整理算法，针对不同存活特性采用不同的垃圾回收算法\"]},\"693\":{\"h\":\"4.5 增量收集算法\",\"t\":[\"前面四种算法，在垃圾回收都会让应用程序所有的线程都会挂起，暂停一切正常的工作，等待垃圾回收的完成（Stop the World）\",\"为了解决这个问题，即对实时垃圾收集算法的研究直接导致了增量收集（Incremental Collecting）算法的诞生\",\"基本思想 \",\"如果一次性将所有的垃圾进行处理，需要造成系统长时间的停顿，那么就可以让垃圾收集线程和应用程序线程交替执行。每次，垃圾收集线程只收集一小片区域的内存空间，接着切换到应用程序线程。依次反复，直到垃圾收集完成\",\"总的来说，增量收集算法的基础仍是传统的标记-清除和复制算法。增量收集算法通过对线程间冲突的妥善处理，允许垃圾收集线程以分阶段的方式完成标记、清理或复制工作\",\"缺点 \",\"使用这种方式，由于在垃圾回收过程中，间断性地还执行了应用程序代码，所以能减少系统的停顿时间。但是，因为线程切换和上下文转换的消耗，会使得垃圾回收的总体成本上升，造成系统吞吐量的下降\"]},\"694\":{\"h\":\"4.6 分区算法\",\"t\":[\"G1收集器使用的算法\",\"分代算法将按照对象的生命周期长短划分成两个部分，分区算法将整个堆空间划分成连续的不同小区间\",\"每一个小区间都独立使用，独立回收。这种算法的好处是可以控制一次回收多少个小区间\",\"一般来说，在相同条件下，堆空间越大，一次GC时所需要的时间就越长，有关GC产生的停顿也越长。为了更好地控制GC产生的停顿时间，将一块大的内存区域分割成多个小块，根据目标的停顿时间，每次合理地回收若干个小区间，而不是整个堆空间，从而减少一次GC所产生的停顿\",\"image-20240112144506125\"]},\"695\":{\"h\":\"5. 垃圾回收器分类\"},\"696\":{\"h\":\"5.1 串行垃圾回收器\",\"t\":[\"Serial 串行垃圾回收器，它为单线程环境设计且只使用一个线程进行垃圾回收，会暂停所有的用户线程，所以不适合服务器环境\",\"主要有 \",\"Serial\",\"Serial Old\"]},\"697\":{\"h\":\"5.2 并行垃圾回收器\",\"t\":[\"Parallel 并行垃圾回收器，多个垃圾收集线程并行工作，此时用户线程是暂停的,适用于科学计算/大数据处理首页处理等弱交互场景\",\"主要有 \",\"ParNew\",\"Parallel Scavenge\",\"Parallel Old\"]},\"698\":{\"h\":\"5.3 并发垃圾收集器\",\"t\":[\"CMS 并发垃圾收集器，用户线程和垃圾收集线程同时执行（不一定是并行，可能交替执行） 不需要停顿用户线程，适用对响应时间有要求的场景\",\"主要有 \",\"CMS\",\"G1\"]},\"699\":{\"h\":\"5.4 收集器和垃圾分代之间的关系\",\"t\":[\"​ \"]},\"700\":{\"h\":\"5.5 如何查看默认垃圾收集器\",\"t\":[\"java -XX:+PrintCommandLineFlags -version\",\"jinfo -flag 相关垃圾回收器参数 进程ID\",\"默认并行垃圾收集器\"]},\"701\":{\"h\":\"6. 垃圾收集器落地实现\",\"t\":[\"如果说收集算法是内存回收的方法论，那么垃圾收集器就是内存回收的具体实现\",\"image-20240110211339202\"]},\"702\":{\"h\":\"6.1 Serial 收集器\",\"t\":[\"串行回收\",\"-XX:+UseSerialGC\"]},\"703\":{\"h\":\"6.2 ParNew 收集器\",\"t\":[\"并行回收\",\"Par是Parallel的缩写，New：只能处理的是新生代\",\"复制算法\",\"-XX:+UseParNewGC\"]},\"704\":{\"h\":\"6.3 Parallel Scavenge 收集器\",\"t\":[\"吞吐量优先\",\"和ParNew 的区别 \",\"目标则是达到一个可控制的吞吐量（Throughput），它也被称为吞吐量优先的垃圾收集器\",\"自适应调节策略也是Parallel Scavenge与ParNew一个重要区别\",\"jdk8默认的垃圾回收器\",\"-XX:+UseParallelGC\"]},\"705\":{\"h\":\"6.4 Serial Old 收集器\"},\"706\":{\"h\":\"6.5 Parallel Old 收集器\"},\"707\":{\"h\":\"6.6 CMS 收集器\",\"t\":[\"HotSpot虚拟机中第一款真正意义上的并发收集器，它第一次实现了让垃圾收集线程与用户线程同时工作\",\"CMS的垃圾收集算法采用标记-清除算法，并且也会”Stop-the-world”\",\"收集过程分为四个阶段\",\"初始标记（STW）：暂时时间非常短，标记与GC Roots直接关联的对象\",\"并发标记（最耗时）：从GC Roots开始遍历整个对象图的过程。不会停顿用户线程\",\"重新标记：（STW）：修复并发标记环节，因为用户线程的执行，导致数据的不一致性问题\",\"并发清理（最耗时）\",\"image-20240112164121973\",\"优点\",\"并发收集\",\"低延迟\",\"缺点\",\"会产生内存碎片\",\"CMS收集器对CPU资源非常敏感\",\"CMS收集器无法处理浮动垃圾\"]},\"708\":{\"h\":\"6.7 G1 收集器\",\"t\":[\"为啥要有G1？ \",\"垃圾收集经常造成STW的GC又跟不上实际的需求，所以才会不断地尝试对GC进行优化。G1（Garbage-First）垃圾回收器是在Java7 update 4之后引入的一个新的垃圾回收器，是当今收集器技术发展的最前沿成果之一。\",\"为了适应现在不断扩大的内存和不断增加的处理器数量，进一步降低暂停时间（pause time），同时兼顾良好的吞吐量\",\"jdk9默认的垃圾回收器\",\"-XX:+UseG1GC\",\"特点 \",\"并行与并发 \",\"并行性：G1在回收期间，可以有多个GC线程同时工作，有效利用多核计算能力。此时用户线程STW\",\"并发性：G1拥有与应用程序交替执行的能力，部分工作可以和应用程序同时执行，因此，一般来说，不会在整个回收阶段发生完全阻塞应用程序的情况\",\"分代收集 \",\"将堆空间分为若干个区域（Region）,这些区域中包含了逻辑上的年轻代和老年代\",\"空间整合\",\"可预测的停顿时间模型\",\"垃圾回收过程 \",\"年轻代GC \",\"当Eden空间耗尽时，G1会启动一次年轻代垃圾回收过程。\",\"年轻代垃圾回收只会回收Eden区和Survivor区\",\"并发标记过程 \",\"当越来越多的对象晋升到老年代old region时，为了避免堆内存被耗尽，虚拟机会触发一个混合的垃圾收集器\",\"混合回收\",\"FullGC\",\"G1收集器的垃圾回收过程主要分为以下几个步骤 \",\"初始标记：G1收集器首先会对整个堆内存进行初始标记。在此阶段，G1收集器会标记出所有存活的对象\",\"并发标记：在初始标记之后，G1收集器会启动并发标记阶段。在此阶段，G1收集器会在应用程序运行的同时继续标记存活的对象\",\"最终标记：在并发标记阶段结束后，G1收集器会对整个堆内存进行最终标记。在此阶段，G1收集器会标记出所有存活的对象，并计算出每个Region中存活对象的总大小\",\"混合回收：在最终标记之后，G1收集器会根据每个Region中存活对象的总大小来决定采用哪种回收方式。如果一个Region中存活对象的总大小超过了该Region容量的50%，那么G1收集器就会对该Region进行回收。否则，G1收集器就会将该Region标记为可回收的Region\",\"并发清理：在混合回收阶段之后，G1收集器会启动并发清理阶段。在此阶段，G1收集器会在应用程序运行的同时清理可回收的Region\",\"并发重置：在并发清理阶段结束后，G1收集器会对堆内存进行并发重置。在此阶段，G1收集器会将可回收的Region标记为可用Region\"]},\"709\":{\"h\":\"6.8 ZGC 收集器\",\"t\":[\"在尽可能对吞吐量影响不大的前提下，实现在任意堆内存大小下都可以把垃圾收集的停顿时间限制在十毫秒以内的低延迟\",\"ZGC：是一款基于Region内存布局的，（暂时）不设分代的，使用了读屏障、染色指针和内存多重映射等技术来实现可并发的标记-压缩算法的，以低延迟为首要目标的一款垃圾收集器\",\"ZGC的工作过程可以分为4个阶段：并发标记-并发预备重分配-并发重分配-并发重映射等\"]},\"710\":{\"h\":\"7 . STW\",\"t\":[\"Stop-the-World ，简称STW，指的是GC事件发生过程中，会产生应用程序的停顿。停顿产生时整个应用程序线程都会被暂停，没有任何响应，有点像卡死的感觉，这个停顿称为STW\",\"可达性分析算法中枚举根节点（GC Roots）会导致所有Java执行线程停顿。 \",\"分析工作必须在一个能确保一致性的快照中进行\",\"一致性指整个分析期间整个执行系统看起来像被冻结在某个时间点上\",\"如果出现分析过程中对象引用关系还在不断变化，则分析结果的准确性无法保证\",\"STW是JVM在后台自动发起和自动完成的。在用户不可见的情况下，把用户正常的工作线程全部停掉\",\"开发中不要用System.gc();会导致Stop-the-world的发生\"]},\"711\":{\"h\":\"8. 类加载过程\"},\"712\":{\"h\":\"8.1 类的生命周期\",\"t\":[\"7个阶段，其中验证、准备、解析这三个阶段称为连接\",\"加载（loading） \",\"简而言之就是将Java类的字节码文件加载到机器内存中，并在内存中构建出Java类的原型——类模板对象\",\"验证（Verification） \",\"保证加载的字节码是合法、合理并符合规范的\",\"格式检查、语义检查、字节码验证、符合引用验证\",\"准备 (Preparation) \",\"为类的静态变量分配内存，并将其初始化为默认值\",\"解析 (Resolution) \",\"将类、接口、字段和方法的符号引用转为直接引用\",\"也就是得到类、字段、方法在内存中的指针或者偏移量\",\"初始化 (Initialization) \",\"为类的静态变量赋予正确的初始值\",\"父类的static块优先级高于子类\",\"使用 (Using) \",\"使用new关键字为其创建对象实例\",\"卸载 (Unloading)\",\"image-20240115204007004\"]},\"713\":{\"h\":\"8.2 类加载过程\",\"t\":[\"五个阶段 \",\"加载\",\"验证\",\"准备\",\"解析\",\"初始化\"]},\"714\":{\"h\":\"8.3 类加载器\",\"t\":[\"作用\",\"类加载器的主要作用就是加载 Java 类的字节码（ .class 文件）到 JVM 中（在内存中生成一个代表该类的 Class 对象）\",\"jvm内置三个加载器\",\"BootstrapClassLoader(启动类加载器)\",\"最顶层的加载类，由 C++实现，通常表示为 null，并且没有父级，主要用来加载 JDK 内部的核心类库（ %JAVA_HOME%/lib目录下的 rt.jar、resources.jar、charsets.jar等 jar 包和类）以及被 -Xbootclasspath参数指定的路径下的所有类\",\"ExtensionClassLoader(扩展类加载器)\",\"主要负责加载 %JRE_HOME%/lib/ext 目录下的 jar 包和类以及被 java.ext.dirs 系统变量所指定的路径下的所有类\",\"AppClassLoader(应用程序类加载器)\",\"面向我们用户的加载器，负责加载当前应用 classpath 下的所有 jar 包和类\"]},\"715\":{\"h\":\"8.4 双亲委派机制\",\"t\":[\"定义 \",\"如果一个类加载器在接到加载类的请求时，它首先不会自己尝试去加载这个类，而是把这个请求任务委托给父类加载器去完成，依次递归，如果父类加载器可以完成类加载任务，就成功返回。只有父类加载器无法完成此加载任务时，才自己去加载\",\"本质 \",\"引导类加载器先加载，若加载不到，由扩展类加载器加载，若还加载不到，才会由系统类加载器或自定义的类加载器进行加载\",\"源码分析 \",\"双亲委派机制在java.lang.ClassLoader**.loadClass**(String,boolean)接口中体现 \",\"先在当前加载器的缓存中查找有无目标类，如果有，直接返回\",\"判断当前加载器的父加载器是否为空，如果不为空，则调用parent.loadClass(name, false)接口进行加载\",\"反之，如果当前加载器的父类加载器为空，则调用findBootstrapClassOrNull(name)接口，让引导类加载器进行加载\",\"如果通过以上3条路径都没能成功加载，则调用findClass(name)接口进行加载。该接口最终会调用java.lang.ClassLoader接口的defineClass系列的native接口加载目标Java类\",\"优点 \",\"避免类的重复加载，确保一个类的全局唯一性\",\"保护程序安全，防止核心API被随意篡改\",\"弊端 \",\"顶层的ClassLoader无法访问底层的ClassLoader所加载的类\"]},\"716\":{\"h\":\"8.5 tomcat 为啥要破坏双亲委派机制\",\"t\":[\"为啥？\",\"在某些情况下，应用程序可能需要加载自己的特定版本的类库而不使用父类加载器提供的版本\",\"一个web容器可能要部署两个或者多个应用程序，不同的应用程序，可能会依赖同一个第三方类库的不同版本，因此要保证每一个应用程序的类库都是独立、相互隔离的\",\"tomcat类加载机制\",\"img\",\"CommonClassLoader：tomcat最基本的类加载器，加载路径中的class可以被tomcat和各个webapp访问\",\"CatalinaClassLoader：tomcat私有的类加载器，webapp不能访问其加载路径下的class，即对webapp不可见\",\"SharedClassLoader：各个webapp共享的类加载器，对tomcat不可见\",\"WebappClassLoader：webapp私有的类加载器，只对当前webapp可见\",\"每一个web应用程序对应一个WebappClassLoader，每一个jsp文件对应一个JspClassLoader，所以这两个类加载器有多个实例\",\"每个webappClassLoader加载自己的目录下的class文件，不会传递给父类加载器\"]},\"717\":{\"h\":\"\"},\"718\":{\"h\":\"9. jvm常见参数总结\"},\"719\":{\"h\":\"9.1 打印设置的XX选项及值\",\"t\":[\"-XX:+PrintCommandLineFlags\",\"可以让在程序运行前打印出用户手动设置或者JVM自动设置的XX选项\",\"java -XX:+PrintCommandLineFlags -version\",\"image-20240120153240638\",\"-XX:+PrintFlagsInitial\",\"表示打印出所有XX选项的默认值\",\"java -XX:+PrintFlagsInitial\",\"image-20240120153435513\",\"-XX:+PrintFlagsFinal\",\"表示打印出XX选项在运行程序时生效的值\",\"java -XX:+PrintFlagsFinal -version\",\"image-20240120154037590\",\"-XX:+PrintVMOptions\",\"打印jvm的参数\",\"java -XX:+PrintVMOptions -version\",\"​ \"]},\"720\":{\"h\":\"9.2 栈\",\"t\":[\"-Xss128k \",\"设置每个线程的栈大小为128k\",\"等价于 -XX:ThreadStackSize = 128k\",\"jinfo -flag +Xss128k 1234\"]},\"721\":{\"h\":\"9.3 堆\",\"t\":[\"-Xms4000m\",\"设置jvm初始堆内存为4000m\",\"等价于：-XX:InitialHeapSize\",\"-Xmx4000m\",\"设置jvm最大堆内存为4000m\",\"等价于：-XX:MaxHeapSize\",\"eg：设置某个服务的初始堆内存和最大堆内存的大小\",\"java -Xms2g -Xmx4g -jar YourApplication.jar\",\"eg: 查看某个服务的初始堆内存和最大堆内存的大小\",\"jinfo -flags pid(对应的进程编号)\",\"-XX:MaxTenuringThreshold=15\",\"默认值是15\",\"新生代每次MinorGC后，还存活的对象年龄+1，当对象的年龄大于设置的这个值时就进入老年代\",\"-Xmn2g\",\"设置年轻代大小为2g\",\"官方推荐配置为整个堆大小的3/8\"]},\"722\":{\"h\":\"9.4 方法区\",\"t\":[\"元空间 \",\"-XX:MetaspaceSize \",\"初始空间大小\"]},\"723\":{\"h\":\"9.5 垃圾回收器相关\",\"t\":[\"查看默认垃圾回收器\",\"jinfo -flags pid\",\"image-20240120162145438\",\"串行回收\",\"-XX:+UseSerialGC\",\"ParNew\",\"-XX:+UseSerialGC\",\"G1\",\"-XX：+UseG1GC\"]},\"724\":{\"h\":\"9.6 GC相关的内容\",\"t\":[\"-XX:+PrintGCDetails \",\"在发生垃圾回收时打印内存回收详细的日志， 并在进程退出时输出当前内存各区域分配情况\",\"eg \",\"java -XX:+PrintGCDetails -jar your_application.jar\"]},\"725\":{\"h\":\"10. jdk监控和故障工具总结\"},\"726\":{\"h\":\"10.1 jps\",\"t\":[\"查看所有java进程\",\"命令 \",\"jps -l \",\"输出主类的全名，如果进程执行的是 Jar 包，输出 Jar 路径\",\"jps -v \",\"输出虚拟机进程启动时 JVM 参数\",\"比如：-Xms20m -Xmx50m是启动程序指定的jvm参数\",\"jps -m \",\"输出传递给 Java 进程 main() 函数的参数\"]},\"727\":{\"h\":\"10.2 jstat\",\"t\":[\"JVM Statistics Monitoring Tool 简称jstat\",\"监视虚拟机各种运行状态信息\",\"可以显示本地或者远程虚拟机进程中的类装载、内存、垃圾收集、JIT编译等运行数据\",\"基本语法\",\"jstat -<option> [-t] [-h<lines>] <vmid> [<interval> [<count>]] \",\"option参数 \",\"类加载相关的 \",\"-class: 显示ClassLoader的相关信息：类的装载、卸载数量、总空间、类装载所消耗的时间等\",\"垃圾回收相关的 \",\"-gc: 显示与GC相关的堆信息。包括Eden区、两个Survivor区、老年代、永久代等的容量、已用空间、GC时间合计等信息\",\"JIT相关的 \",\"-compiler：显示JIT编译器编译过的方法、耗时等信息\",\"interval参数 \",\"用于指定输出统计数据的周期，单位为毫秒。即：查询间隔\",\"count参数 \",\"用于指定查询的总次数\",\"-t参数 \",\"可以在输出信息前加上一个Timestamp列，显示程序的运行时间。单位：秒\",\"-h参数 \",\"可以在周期性数据输岀时，输出多少行数据后输出一个表头信息\",\"常见使用\",\"jstat -gc <pid> 1000 10 说明：这里的<pid>是Java进程的进程ID。该命令将每隔1秒（1000毫秒）输出一次垃圾回收相关的数据，共输出10次 jstat -gcutil <pid> <interval> <count>：显示各代的内存使用情况 \",\"image-20240118171400373\"]},\"728\":{\"h\":\"10.3 jinfo\",\"t\":[\"实时查看和调整虚拟机各项参数\",\"基本语法\",\"jinfo [ options ] pid 说明：java 进程ID 必须要加上 \",\"options \",\"no option\",\"输出全部的参数和系统熟悉\",\"-flag name\",\"输出对应名称的参数\",\"-flag [+-]name\",\"开启或关闭对应名称的参数\",\"-flag name=value\",\"设定对应名称的参数\",\"-flags\",\"输出全部的参数\",\"image-20240120100855312\",\"查看\",\"查看曾经赋值的参数\",\"jinfo -flags pid\",\"image-20240118202937978\",\"查看某个java进程的具体参数的值\",\"jinfo -flag 具体参数 pid\",\"image-20240118203345937\",\"修改\",\"boolean 类型 \",\"jinfo -flag [+|-]具体参数 PID\",\"非boolean类型 \",\"jinfo -flag 具体参数=具体参数值 PID\"]},\"729\":{\"h\":\"10.4 jmap\",\"t\":[\"生成堆转储快照\",\"基本语法\",\"jmap [option] <pid> \",\"option 包括\",\"-dump: 生成dump文件\",\"-heap: 输出整个堆空间的详细信息，包括GC的使用、堆配置信息\",\"使用1\",\"导出内存映像文件\",\"手动方式\",\"jmap -dump:format=b,file=<filename.hprof> <pid> jmap -dump:live,format=b,file=<filename.hprof> <pid> \",\"​ eg: jmap -dump:format=b,file=test.hprof 11101\",\"使用2\",\"显示堆内存相关信息\",\"jmap -heap pid\",\"jmap -histo pid\"]},\"730\":{\"h\":\"10.5 jhat\",\"t\":[\"全称：jvm heap analysis tool\",\"分析heapdump文件\",\"jdk9以后已经被删除\"]},\"731\":{\"h\":\"10.6 jstack\",\"t\":[\"生成虚拟机当前时刻的线程快照\",\"基本语法 \",\"jstack option pid\",\"option参数 \",\"-F: 当正常输出的请求不被响应时，强制输出线程堆栈\",\"-l: 除堆栈外，显示关于锁的附加信息\",\"-m: 如果调用到本地方法的话，可以显示C/C++的堆栈\",\"-h: 帮助操作\",\"eg \",\"jstack -l 11121\"]},\"732\":{\"h\":\"10.7 jconsole\",\"t\":[\"java监视与管理控制台\",\"启动 \",\"jdk/bin目录下，启动jconsole.exe命令\",\"不需要使用jps命令来查询\",\"主要作用 \",\"监控内存\",\"监控线程\",\"监控死锁\",\"类加载与虚拟机信息\"]},\"733\":{\"h\":\"10.8 Visual VM\",\"t\":[\"多合一故障处理工具\"]},\"734\":{\"h\":\"11. 性能调优\"},\"735\":{\"h\":\"11.1 排查问题\",\"t\":[\"打印GC日志，通过GCviewer或者 http://gceasy.io来分析日志信息\",\"灵活运用 命令行工具，jstack，jmap，jinfo等\",\"dump出堆文件，使用内存分析工具分析文件\",\"使用阿里Arthas，或jconsole，JVisualVM来实时查看JVM状态\",\"jstack查看堆栈信息\"]},\"736\":{\"h\":\"11.2 解决问题\",\"t\":[\"适当增加内存，根据业务背景选择垃圾回收器\",\"优化代码，控制内存使用\",\"增加机器，分散节点压力\",\"合理设置线程池线程数量\",\"使用中间件提高程序效率，比如缓存，消息队列等\"]},\"737\":{\"h\":\"11.3 案例分析\",\"t\":[\"案例1：堆溢出\",\"报错信息 \",\"java.lang.OutOfMemoryError: Java heap space\",\"原因分析 \",\"代码可能存在大对象分配\",\"可能存在内存泄漏，导致多次GC后，还是无法找到一块足够大的内存容纳当前对象\",\"解决方法 \",\"检查是否存在大对象分配，最有可能是大数据分配\",\"通过jmap命令，把堆内存dump下来，使用MAT等工具分析一下，检查是否存在内存泄漏的问题\",\"如果没有找到明显的内存泄漏，使用 -Xmx 加大堆内存\",\"案例2：元空间溢出\",\"报错信息\",\"java.lang.OutOfMemoryError: Metaspace\",\"原因分析\",\"运行期间生成了大量的代理类，导致方法区被撑爆，无法卸载\",\"应用长时间运行，没有重启\",\"元空间内存设置过小\",\"解决方法\",\"检查是否永久代空间或者元空间设置的过小\",\"检查代码中是否存在大量的反射操作\",\"dump之后通过mat检查是否存在大量由于反射生成的代理类\",\"案例3：GC overhead limit exceeded\",\"报错原因 \",\"超过98%的时间用来做GC并且回收了不到2%的堆内存时会抛出此异常\",\"解决方法 \",\"检查项目中是否有大量的死循环或有使用大内存的代码，优化代码\",\"添加参数 -XX:-UseGCOverheadLimit 禁用这个检查，其实这个参数解决不了内存问题，只是把错误的信息延后，最终出现 java.lang.OutOfMemoryError: Java heap space\",\"dump内存，检查是否存在内存泄漏，如果没有，加大内存\",\"案例4：线程溢出\",\"报错信息 \",\"java.lang.OutOfMemoryError : unable to create new native Thread\",\"问题原因 \",\"出现这种异常，基本上都是创建了大量的线程导致的\",\"解决方法 \",\"通过 -Xss 设置每个线程栈大小的容量\",\"调大Linux- /proc/sys/vm/max_map_count的值\"]},\"738\":{\"h\":\"11.4 性能调优案例\",\"t\":[\"案例1：调整堆大小提高服务的吞吐量\",\"案例2：jvm优化之JIT优化\",\"案例3：合理配置堆内存\",\"-Xms -Xmx\",\"案例4：CPU占用很高排查方案(重要)\",\"排查思路\",\"首先查看java进程id\",\"jps -l \",\"根据进程 ID 检查当前使用异常线程的pid\",\"top -Hp 1111 说明： 1.-H：表示显示线程级别的信息 2.-p: 标志后面跟着一个进程ID 命令的含义是显示特定进程ID（PID）对应的进程以及其线程的详细信息，包括CPU占用、内存占用等 \",\"把线程pid变为16进制如 31695 -> 7bcf 然后得到0x7bcf\",\"printf \\\"%x\\\" 31695 \",\"把线程pid变为16进制如 31695 -> 7bcf 然后得到0x7bcf\",\"jstack 1111 > jstack.log \",\"打开jstask.log文件，查找刚刚转换16进制id是否存在\",\"或者4，5步也可以使用以下命令\",\"jstack pid | grep -A20 0x5555 备注：-A20表示显示匹配行之后的20行文本内容 \",\"使用arthas\",\"Arthas是一款阿里巴巴开源的Java诊断工具，特别适用于线上生产环境下的问题排查。当Java应用程序出现CPU使用率过高的问题时，Arthas可以帮助我们迅速定位问题所在。以下是如何使用Arthas来分析CPU过高的问题：\",\"启动Arthas：\",\"下载arthas-boot.jar到服务器，并通过Java命令启动Arthas：\",\"wget https://alibaba.github.io/arthas/arthas-boot.jar java -jar arthas-boot.jar \",\"Arthas会列出当前机器上的Java进程列表，选择对应消耗CPU高的进程进行attach。\",\"查看CPU使用情况：\",\"使用dashboard命令可以直观地看到系统的总体运行情况，包括各个线程的CPU占用率、线程数、内存占用等信息：\",\"dashboard \",\"定位高CPU占用的线程：\",\"查找当前哪个线程占用CPU最高，可以使用thread命令：\",\"thread -n 5 # 显示当前CPU占用最高的5个线程 thread id # 查看特定线程号的详细信息 \",\"查看线程栈信息：\",\"获取占用CPU高的线程的详细调用栈，通过栈信息我们可以知道线程在执行哪个方法或代码块：\",\"thread 35 # 假设35是高CPU占用的线程ID \",\"跟踪方法调用：\",\"如果想进一步追踪特定方法的执行情况，可以使用trace命令：\",\"trace com.example.MyClass.methodName # 跟踪特定类的方法调用 \",\"统计方法执行耗时：\",\"使用tt（time tunnel）命令可以统计方法的执行次数和总耗时，帮助定位慢方法：\",\"tt -t com.example.MyClass.methodName --threshold 100 \",\"通过以上步骤，Arthas可以帮助我们快速定位到消耗CPU资源过高的线程以及引起问题的具体方法调用，进而针对性地优化代码或调整配置，解决问题。在实际应用中，可能还需要结合具体的业务场景和日志分析，综合判断造成CPU飙升的原因。\",\"案例5：G1并发执行的线程数对性能的影响\",\"-XX:ConcGCThreads=8\",\"案例6：调整垃圾回收器提高服务的吞吐量\",\"-XX:+UseG1GC\",\"案例7：日均百万级订单交易系统如何设置JVM参数\",\"初始堆和最大堆Xms Xmx 要相对较高 \",\"xms和xmx为啥要设置成一样 \",\"减少内存扩展和收缩带来的性能损耗，每次扩展和收缩都会带来一定的性能开销，包括系统调用、内存重分配、GC暂停时间增长等\",\"避免内存抖动\",\"垃圾回收器选择G1 -XX:+UseG1GC；对于G1垃圾收集器，还可以考虑 -XX:G1HeapRegionSize 设置每个堆区域的大小\",\"并发线程数：-XX:ParallelGCThreads 或 -XX:ConcGCThreads\",\"元空间大小：-XX:MaxMetaspaceSize\",\"栈大小：-Xss\",\"年轻代和老年代比例 \",\"分析应用中对象的生命周期分布，如果大部分对象都是瞬时对象，则年轻代可以适当增大，以便快速回收。\",\"如果发现有大量的对象晋升到了老年代并长期存在，那么可能需要增大老年代的空间，以避免频繁的Full GC\",\"参数 -XX:NewRatio 可以用来设置年轻代与老年代的相对大小，默认值通常是1:2，这意味着年轻代占堆内存的1/3，老年代占2/3。\",\"根据实际情况调整此参数，如果Full GC过于频繁，可能是由于年轻代太小，导致晋升的对象太多；反之，若年轻代过大但老年代却常有空间剩余，说明年轻代可以适当减小\",\"​\"]},\"739\":{\"c\":[\"使用指南\"]},\"740\":{\"c\":[\"jvm\"]},\"741\":{\"h\":\"数据库\"},\"742\":{\"h\":\"一. 基础知识\"},\"743\":{\"h\":\"1.1 E-R图\",\"t\":[\"全称：实体联系图，提供了表示实体类型、属性和联系的方法\",\"主要有三个要素组成\",\"实体：用矩形框表示，通常是现场时间的业务对象。比如学生、课程、班级等实体\",\"属性：用椭圆形表示，即某个实体拥有的属性\",\"联系：用菱形表示，即实体与实体之间的关系\",\"image-20240129101219200\"]},\"744\":{\"h\":\"1.2 数据库三大范式\",\"t\":[\"第一范式 \",\"属性不可再分\",\"第二范式 \",\"第一范式基础上，消除了非主属性对于码的部分函数依赖\",\"通俗理解：在满足1NF的基础上，2NF要求表必须有主键，并且表中的其他数据（非键字段）必须完全依赖于主键\",\"举例：假如有个图书馆，假设我们记录每本书借出的时间，如果“书籍ID+借书日期”作为一个组合主键，那么其他信息，比如借书人的信息，就应该直接依赖于这个组合主键，而不是仅依赖其中的一部分（比如仅依赖书籍ID）\",\"第三范式 \",\"三范式在第二范式基础上，消除了非主属性对于码的传递函数依赖\",\"通俗理解：在满足1NF和2NF的基础上，3NF要求数据中不存在非主键字段之间的依赖。这意味着所有的非键信息都只能依赖于键信息，不能相互依赖\",\"举例：比方说，在一个记录了书籍和作者信息的表中，如果“作者国籍”实际上是和“作者名”相关联的，那么“作者国籍”就不应该直接出现在记录书籍的表中，因为这会导致与书籍直接相关的信息之外的冗余\"]},\"745\":{\"h\":\"1.3 drop、delete、truncate的区别\",\"t\":[\"drop \",\"drop table 表名\",\"直接将表都删掉\",\"delete \",\"delete from 表名 where 列名=值\",\"删除表里面的数据\",\"truncation \",\"truncate table 表名\",\"只删除表中的数据\"]},\"746\":{\"h\":\"1.4 having 和 where的区别\",\"t\":[\"where: 过滤指定的行，后面不能加聚合函数，where在group by 前\",\"having: 过滤分组，一般都是和group by 连用，不能单独使用。having在group by之后\",\"select cust_name,count(*) as num from customs where cust_age is not null group by cust_name having count(*) >= 1 \"]},\"747\":{\"h\":\"1.5 ON 和 WHERE的区别\",\"t\":[\"连接表时，sql会根据连接条件生成一张新的临时表。on就是连接条件，它决定临时表的生成\",\"where是在临时表生成后，再对临时表中的数据进行过滤，生成最终的结果集\",\"总结 \",\"on是生成一张临时表，where是对临时表进行筛选\"]},\"748\":{\"h\":\"1.6 LEFT/RIGHT JOIN\",\"t\":[\"left join .. on \",\"返回左表中的所有行，即使右表中没有满足条件的行也是如此\",\"right join ..on \",\"返回右表中的所有行，即使左表中没有满足条件的行也是如此\"]},\"749\":{\"h\":\"二、MYSQL\",\"t\":[\"mysql知识总结汇总\"]},\"750\":{\"h\":\"2.1. 常见脚本创建\"},\"751\":{\"h\":\"2.1.1 创建表\",\"t\":[\"create table if not exists `test_table` ( id bigint(20) unsigned not null auto_increment comment '主键id', record_id int comment '记录id', create_time datetime not null default current_timestamp comment '创建时间', update_time datetime NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP COMMENT '更新时间', test_name varchar(255) CHARACTER SET utf8mb4 COLLATE utf8mb4_general_ci not null comment '测试内容', jyaq text CHARACTER SET utf8mb4 COLLATE utf8mb4_general_ci COMMENT '简要案情', primary key (id) using btree, key idx_test_index (test_name) using btree ) ENGINE = InnoDB CHARACTER SET = utf8mb4 COLLATE = utf8mb4_general_ci COMMENT = '测试表表名称' ROW_FORMAT = Dynamic; \"]},\"752\":{\"h\":\"2.1.2 更新表\"},\"753\":{\"h\":\"2.1.3 修改表字段(可以重复执行，线上环境推荐)\",\"t\":[\"新增字段\",\"drop procedure if exists add_field_test_table; delimiter $$ create procedure add_field_test_table() begin if not exists (select 1 from information_schema.columns where table_schema='test' and table_name = 'test_table' and column_name = 'test_name2') then ALTER TABLE `test_table` add COLUMN `test_name2` varchar(255) DEFAULT NULL COMMENT '测试内容2添加'; end if ; end $$ delimiter ; call add_field_test_table; drop procedure if exists add_field_test_table; \",\"修改字段\",\"drop procedure if exists modify_field_test_table; delimiter $$ create procedure modify_field_test_table() begin if exists (select 1 from information_schema.columns where table_schema='test' and table_name = 'test_table' and column_name = 'test_name2') then ALTER TABLE `test_table` modify COLUMN `test_name2` varchar(50) DEFAULT NULL COMMENT '测试内容2修改'; end if ; end $$ delimiter ; call modify_field_test_table; drop procedure if exists modify_field_test_table; \"]},\"754\":{\"h\":\"2.1.4 添加列\",\"t\":[\"alter table user add age int(10); \"]},\"755\":{\"h\":\"2.1.5 修改列\",\"t\":[\"alter table user modify column age tinyint; \"]},\"756\":{\"h\":\"2.1.5 删除列\",\"t\":[\"alter table user drop column age; \"]},\"757\":{\"h\":\"2.1.6 创建索引\",\"t\":[\"create index user_index on user(id); \"]},\"758\":{\"h\":\"2.1.7 添加索引\",\"t\":[\"alter table user add index user_index(id); \"]},\"759\":{\"h\":\"2.1.8 创建唯一索引\",\"t\":[\"create unique index user_index on user(id); \"]},\"760\":{\"h\":\"2.1.9 删除索引\",\"t\":[\"alter table user drop index user_index; \"]},\"761\":{\"h\":\"2.2 mysql字符集\"},\"762\":{\"h\":\"2.2.1 字符集\",\"t\":[\"创建统一使用utf8mb4字符集\"]},\"763\":{\"h\":\"2.3 mysql基础\"},\"764\":{\"h\":\"1. NULL 和 ‘’的区别是什么？\",\"t\":[\"NULL 代表一个不确定的之，就算是两个NULL,它两也不一定相等\",\"‘’的长度是0，是不占用空间的，而NULL是需要占用空间的\",\"NULL会影响聚合函数的结果\",\"查询NULL值时，必须使用is null 或is not null来判断\"]},\"765\":{\"h\":\"2. MyISAM 和InnoDB有什么区别？\",\"t\":[\"是否支撑行级锁\",\"是否支持事务\",\"是否支持外键\",\"是否支持mvcc\",\"总结：innodb都支持，myisam都不支持\"]},\"766\":{\"h\":\"2.4 mysql事务(重要)\"},\"767\":{\"h\":\"1. 事务的特性\",\"t\":[\"原子性 \",\"事物是最小的执行单位，不允许分割\",\"隔离性 \",\"并发访问数据库时候，一个用户的事物不被其他事物所干扰，各并发事物之间数据库是独立的\",\"持久性 \",\"一个事物被提交之后，它对数据库中数据的改变是持久的\",\"一致性 \",\"执行事务前后，数据保持一致\"]},\"768\":{\"h\":\"2. 并发事务带来的问题\"},\"769\":{\"h\":\"1. 脏读\",\"t\":[\"一个事务读取到了另外一个数据修改还未提交的数据\"]},\"770\":{\"h\":\"2. 丢失修改\",\"t\":[\"两个事务同时读取一个数据，第一个事务修改了这个数据后，第二个数据也修改了这个数据，这样第一个事务内的修改结果被丢失\"]},\"771\":{\"h\":\"3. 不可重复读\",\"t\":[\"一个事务内多次读取同一数据，在这个事务还没结束时，另外一个事务也访问该数据，在第一个事务中的两次读数据之间，由于第二个事务的修改导致第一个事务两次读取的数据可能不太一样。发生了在一个事务内两次读到的数据是不一样的情况\"]},\"772\":{\"h\":\"4. 幻读\",\"t\":[\"一个事务读取了几行数据，接着另外一个并发事务插入了一些数据，在随后的查询中，第一个事务就会发现多了一些原本不存在的记录，像发生了幻觉一样\"]},\"773\":{\"h\":\"5. 不可重复读和幻读的区别？\",\"t\":[\"不可重复读的重点是内容修改或者记录减少\",\"幻读重点在新增\"]},\"774\":{\"h\":\"3. 如何解决并发事务带来的问题\"},\"775\":{\"h\":\"1. 加锁\",\"t\":[\"mysql中主要是通过读写锁来实现并发控制\",\"共享锁 \",\"又称读锁，事务在读取记录的时候获取共享锁，允许多个事务同时获取\",\"排他锁 \",\"又称写锁/独占锁，事务在修改记录的时候获取排他锁，不允许多个事务同时获取，如果一个记录已经被加了排他锁，那其他事务不能再对这条记录加任何类型的锁\",\"表级锁\",\"行级锁 \",\"仅对相关的记录上锁\"]},\"776\":{\"h\":\"2. MVCC\",\"t\":[\"多版本并发控制的方法，即对一份数据会存储多个版本，通过事务的可见性来保证事务能看到自己应该看到的版本。\",\"通常会有一个全局的版本分配器来为每一行数据设置版本号，版本号是唯一的\",\"所依赖的手段主要是 \",\"隐藏字段 \",\"用来判断当前版本数据的可见性\",\"read view \",\"用来判断当前版本数据的可见性\",\"undo log \",\"用于记录某行数据的多个版本的数据\"]},\"777\":{\"h\":\"4. sql标准定义了哪些事务隔离级别\"},\"778\":{\"h\":\"1. 读未提交\",\"t\":[\"READ-UNCOMMITTED\",\"最低的隔离级别，允许读取尚未提交的数据变更，可能会导致脏读、幻读、不可重复读\"]},\"779\":{\"h\":\"2. 读已提交\",\"t\":[\"READ-COMMITTED\",\"允许读取并发事务已经提交的数据，可以阻止脏读，但是幻读或不可重复读仍有可能发生\"]},\"780\":{\"h\":\"3.可重复读（RR）\",\"t\":[\"REPEATABLE-READ\",\"对同一个字段的多次读取结果都是一致的，除非数据是被本身事务自己所修改，可以阻止脏读和不可重复读，但幻读仍有可能发生\"]},\"781\":{\"h\":\"4. 可串行化\",\"t\":[\"SERIALIZABLE\",\"最高的隔离级别，完全服从ACID的隔离级别，所有的事物依次逐个执行，这样事物之间就完全不可能产生干扰，该级别可以防止脏读，不可重复读和幻读\"]},\"782\":{\"h\":\"5. mysql默认隔离级别\",\"t\":[\"可重复读\",\"命令\",\"mysql8 以下 select @@tx_isolation mysql8 以上 select @@transaction_isolation \"]},\"783\":{\"h\":\"2.5. mysql锁\"},\"784\":{\"h\":\"1. 表级锁\",\"t\":[\"对整张表加锁\"]},\"785\":{\"h\":\"2. 行级锁\",\"t\":[\"针对索引字段加的锁，只针对当前操作的行记录进行加锁\",\"注意事项 \",\"在执行update、delete语句时，如果where条件中字段没有命中唯一索引或索引失效的话，就会导致全部扫描\",\"行锁分类 \",\"记录锁 \",\"Record Lock\",\"属于单个行记录上的锁\",\"间隙锁 \",\"Gap Lock\",\"锁定一个范围，不包括记录本身\",\"临键锁 \",\"Next-Key Lock\",\"Record Lock + Gap Lock, 锁定一个范围，包含记录本身，主要为了解决幻读\",\"可重复读隔离级别下，默认的行锁？ \",\"默认使用临键锁，如果操作的索引是唯一索引或主键，会对临键锁进行优化，降级为记录锁\"]},\"786\":{\"h\":\"3 .共享锁\",\"t\":[\"读锁，允许多个事务同时获取\"]},\"787\":{\"h\":\"4. 排他锁\",\"t\":[\"写锁，事务在修改记录的时候获取排他锁，不允许多个事务同时获取\"]},\"788\":{\"h\":\"5. 当前读和快照读的区别？\",\"t\":[\"快照读\",\"一致性非锁定读，就是单纯的select语句\",\"快照即记录的历史版本，每行记录可能存在多个历史版本\",\"快照读情况下，如果读取的记录正在执行update/delete操作，读取操作不会因此去等待记录上X锁的释放，而是会去读取行的一个快照\",\"当前读\",\"就是给行记录加X锁或S锁\",\"# 对读的记录加一个X锁 select ... for update # 对读的记录加一个S锁 select ...LOCK IN SHARE MODE \"]},\"789\":{\"h\":\"6. 哪些操作会加表级锁，哪些操作会加行级锁\",\"t\":[\"INNODB存储引擎下\",\"表级锁 \",\"altert table， drop table 等ddl操作会隐式地对表加表级锁\",\"行级锁 \",\"默认情况下，dml操作（insert,update,delete) 进行行级锁定\",\"在查询时，通过select...for update可以显式获取行级锁\"]},\"790\":{\"h\":\"2.6 mysql索引\"},\"791\":{\"h\":\"1. 索引介绍\",\"t\":[\"索引是一种用于快速查询和检索数据的数据结构\",\"其本质可以看成是一种排序好的数据结构\"]},\"792\":{\"h\":\"2. 索引的优缺点\",\"t\":[\"优点 \",\"大大加快数据的检索速度\",\"通过创建唯一性索引，可以保证数据库表中每一行数据的唯一性\",\"缺点 \",\"创建索引和维护索引需要耗费许多时间\",\"索引需要使用物理文件存储，也会耗费一定空间\",\"索引一定能提高查询性能吗？ \",\"大多数情况下，索引查询都会比全表扫描要快的，但是如果数据库的数据量不大，使用索引也不一定能够带来很大提升\"]},\"793\":{\"h\":\"3. 索引类型总结\",\"t\":[\"Mysql默认索引结构为B+ Tree\",\"为啥要使用b+ tree \",\"二叉树 \",\"如果是递增的，会导致右边越来越多，变成了链表，不合适\",\"平衡二叉树 \",\"要求左右子树的树高差绝对值不能超过1，如果数据太多，树的高度就会越来越高\",\"Hash表 \",\"哈希索引只支持等值查询（即给定一个确切的键值），对于范围查询则无效，因为它不具备顺序性\",\"哈希索引没有顺序性，无法进行高效扫描\",\"对于哈希索引，每当插入或删除数据时，可能导致哈希桶重新分配，成本较高\",\"B-Tree B树 \",\"多路平衡查找树，可以有多个子节点，每个节点可以存储多个值，解决了上面两种树的缺点，但是不适合区间查找\",\"为啥B树不适合区间查找？ \",\"因为数据分布在整个树的各个层级，查询过程更复杂\",\"B+Tree \",\"只有叶子节点才存储数据，非叶子节点只存储索引\",\"B+Tree叶子节点使用了双向链表链接，并且使用从小到大排列，范围查找效率高，只需扫描一遍叶子节点即可\",\"由于非叶子节点没有存放数据，因此B+树比B树更矮更胖，减少了磁盘IO次数\",\"聚簇索引\",\"索引结构和数据一起存放的索引，InnoDB中的主键索引就属于聚簇索引\",\".idb文件就包含了该表的索引和数据\",\"优点 \",\"查询速度非常快,定位到索引的节点，就定位到了数据\",\"对排序查找和范围查找优化\",\"缺点 \",\"依赖于有序的数据\",\"更新代价大\",\"非聚簇索引\",\"索引结构和数据分开存放的索引，二级索引就数据非聚簇索引\",\"非聚簇索引的叶子节点并不一定存放数据的指针，因为二级索引的叶子节点存放的是主键，根据主键再回表查数据\",\"优点 \",\"更新代价比聚簇索引要小\",\"缺点 \",\"依赖于有序的数据\",\"可能会二次查询(回表)：这应该是非聚簇索引的最大缺点了，当查到索引对应的指针或主键后，可能还会根据指针或主键再到数据文件或表中查询\",\"非聚簇索引一定回表查询吗？ \",\"不一定回表查询\",\"覆盖索引\",\"如果一个索引包含(或者说覆盖)所有需要查询的字段的值，我们就称之为覆盖索引\",\"覆盖索引即需要查询的字段正好是索引的字段，那么直接根据该索引，就可以查到数据了，而无需回表查询\",\"在InnoDB存储引擎中，如果不是主键索引，叶子节点存储的是主键+列值，最终还是要回表，也就是通过主键再查找一次，这样就会比较慢，而覆盖索引就是把要查询出的列和索引是对应的，不做回表操作\",\"联合索引\",\"使用表中的多个字段创建索引，就是联合索引，也叫组合索引或复合索引\",\"主键索引\",\"特殊的唯一索引，主键索引字段的所有值都是唯一的，一张表只能有一个\",\"主键索引不能为NULL\",\"结构就是聚簇索引\",\"基于主键索引查询一定不需要回表\",\"ALTER TABLE table_name ADD PRIMARY KEY (column_name); \",\"唯一索引\",\"一张表可以创建多个\",\"可以为空\",\"通常是非聚簇索引\",\"需要回表\",\"ALTER TABLE table_name ADD UNIQUE KEY (column1, column2); \"]},\"794\":{\"h\":\"4 . 最左前缀匹配原则\",\"t\":[\"指的是查询从索引的最左前列开始并且不跳过索引中的列\",\"主要是where后面的条件优化\",\"假设建立索引A,B,C; \",\"where a = value 会利用索引\",\"where b = value 不会利用索引\",\"口诀\",\"1.从最左开始，建立索引的第一个字段不能丢失，不然索引会失效哦，简称带头大哥不能死\",\"中间兄弟不能断\",\"正确使用索引的一些建议\",\"不为NULL的字段：索引字段的数据应该尽量不为NULL\",\"被频繁查询的字段：创建索引的字段应该是查询操作非常频繁的字段\",\"被作为条件查询的字段：被作为where条件查询的字段，应该被考虑建立索引\",\"频繁需要排序的字段可以建立索引\",\"被经常频繁用于连接的字段可以使用索引\",\"尽可能的考虑建立联合索引而不是单列索引\",\"避免索引失效 \",\"创建了组合索引，但查询条件未遵守最左匹配原则\",\"在索引列上进行计算、函数、类型转换\",\"以%开头的LIKE查询\",\"in的取值范围较大时会导致索引失效\"]},\"795\":{\"h\":\"5. 为啥不对表中所有的列创建索引？\",\"t\":[\"1. 存储空间占用 1. 写操作性能下降 \"]},\"796\":{\"h\":\"2.7. explain\",\"t\":[\"explain\",\"获取执行计划相关信息\",\"用法\",\"explain + select 查询语句 \",\"举例\",\"mysql> explain SELECT * FROM dept_emp WHERE emp_no IN (SELECT emp_no FROM dept_emp GROUP BY emp_no HAVING COUNT(emp_no)>1); +----+-------------+----------+------------+-------+-----------------+---------+---------+------+--------+----------+-------------+ | id | select_type | table | partitions | type | possible_keys | key | key_len | ref | rows | filtered | Extra | +----+-------------+----------+------------+-------+-----------------+---------+---------+------+--------+----------+-------------+ | 1 | PRIMARY | dept_emp | NULL | ALL | NULL | NULL | NULL | NULL | 331143 | 100.00 | Using where | | 2 | SUBQUERY | dept_emp | NULL | index | PRIMARY,dept_no | PRIMARY | 16 | NULL | 331143 | 100.00 | Using index | +----+-------------+----------+------------+-------+-----------------+---------+---------+------+--------+----------+-------------+ \",\"解释\",\"id : select 查询的序列标识符 \",\"select 标识符，是查询中select 的序号，用来标识整个查询中select 语句的顺序\",\"id如果相同，从上往下依次执行。id不同，id值越大，执行优先级越高，如果行引用其他行的并集结果， 则该值可以为NULL\",\"select_type : select 关键字对应的查询类型 \",\"主要区分普通查询、联合查询、子查询等复杂的查询，常见的值有 \",\"SIMPLE : 简单查询，不包含UNION 或者子查询\",\"PRIMARY: 查询中如果包含子查询或其他部分，外层的select 将被标记为primary\",\"SUBQUERY: 子查询中的第一个select\",\"UNION: 在union中，union 之后出现的select\",\"DERIVED: 在from中出现的子查询将被标记为derived\",\"UNION RESULT : UNION 查询的结果\",\"table : 用到的表名\",\"partitions : 匹配的分区，对于未分区的表，值为NULL\",\"type : 表的访问方法（重要） \",\"查询执行的类型，描述了查询是如何执行的，所有值的顺序从最优到最差排序为：system > const > eq_ref > ref > fulltext > range > index > all\",\"system \",\"如果表使用的引擎对于表行数统计是精确的，且表中只有一行记录的情况下，访问方法是system ，是const的一种特例\",\"const \",\"表中最多只有一行匹配的记录，一次查询就可以找到\",\"eq_ref \",\"当联表查询时，前一张表的行在当前这张表中只有一行与之对应。是除了system与const之外最好的join方式，常用于使用主键或唯一索引的所有字段作为连表条件\",\"ref \",\"使用普通索引作为查询条件，查询结果可能找到多个符合条件的行\",\"range \",\"对索引列进行范围查询，执行计划中的key列表示哪个索引被使用了\",\"index \",\"查询遍历了整棵索引树，与ALL类似，只不过扫描的是索引，而索引一般在内存中，速度更快\",\"all \",\"全表扫描\",\"possible_keys : 可能用到的索引 \",\"可能用到的索引，如果这一列为NULL,则表示没有可能用到的索引\",\"key : 实际用到的索引（重要） \",\"表示实际用到的所有。如果为NULL ,则表示未用到索引\",\"key_len : 所选索引的长度 \",\"表示mysql实际使用的索引的最大长度，当使用到联合索引时，有可能是多个列的长度和\",\"ref : 当使用索引等值查询时，与索引作比较的列或常量\",\"rows : 预计要读取的行数\",\"filtered : 按表条件过滤后，留存的记录数的百分比\",\"Extra ：附加信息 （重要） \",\"Using filesort \",\"MySQL无法直接通过索引获取有序数据，而不得不在内存或磁盘上进行外部排序操作\",\"优化点 \",\"添加合适索引\",\"尽可能使用覆盖索引\",\"调整MySQL的sort_buffer_size系统变量，适当增加排序缓冲区的大小\",\"Using temporary \",\"mysql 需要创建临时表来存储查询的结果，常见于order by 和group by\",\"Using index \",\"表明查询使用了覆盖索引，不用回表，查询效率非常高\",\"Using index condition \",\"表示查询优化器选择使用了索引条件下推这个特性\",\"Using where \",\"表明查询使用了where 子句进行条件过滤，一般在没有使用到索引的时候会出现\",\"Using join buffer \",\"联表查询的方式，表示当被驱动表的没有使用索引的时候，mysql会先将驱动表读出来放到join buffer中，再遍历被驱动表进行查询\"]},\"797\":{\"h\":\"2.8 MVCC\",\"t\":[\"数据库操作 \",\"读读并发（没有问题）\",\"读写并发 （MVCC）\",\"写写并发 （加锁）\",\"当前读和快照读 \",\"快照读 \",\"就是读取快照数据，像我们常用的普通select语句在不加锁情况下就是快照读\",\"当前读 \",\"就是读取最新数据，所有加锁的select,或者对数据进行增删改都会进行当前读\",\"快照读是mvcc实现的基础，而当前读是悲观锁实现的基础\",\"快照读存储在哪里呢？ \",\"undolog\",\"在同一时刻，select要快照读的时候，要读取哪个快照呢？ \",\"隐藏字段 \",\"隐藏事务id\",\"回滚指针\",\"形成快照链表\",\"那么具体应该读取哪个快照呢？ \",\"read view \",\"trx_ids: 系统当前未提交的事务id的列表\",\"low_limit_id: 应该分配给下一个事务的id值\",\"up_limit_id：未提交的事务中最小的事务id\",\"creator_trx_id： 创建这个read view的事务id\",\"读取原则 \",\"事务id大的事务应该能看到事务id小的事务的变更结果\",\"如果隐藏事务id小于未提交的事务中最小的事务id,证明在所有未提交是否创建之前，隐藏事务id已经创建了，因此这条记录对当前事务就应该是可见的\",\"如果隐藏事务id大于应该分配给下一个事务的id值，不可见\",\"如果隐藏事务id大于未提交的事务中最小的事务id并且小于未提交的事务中最小的事务id，会和trx_ids进行逐一比较\",\"多版本并发控制- Multi-Version Concurrency Control\",\"用于在多个并发事务同时读写数据库时保持数据的一致性和隔离性\",\"InnoDB对MVCC的实现 \",\"隐藏字段 \",\"DB_TRX_ID(6字节)：表示最后一次插入或更新该行的事务id。\",\"DB_ROLL_PTR(7字节)：回滚指针，指向该行的undo log。如果该行未被更新，则为空\",\"DB_ROW_ID(6字节)：如果没有设置主键且该表没有唯一非空索引时，InnoDB会使用该id来生成聚簇索引\",\"Read View \",\"主要是用来做可见性判断，里面保持了当前对本事务不可见的其他活跃事务\",\"undo log \",\"作用 \",\"当事务回滚时用于将数据恢复到修改前的样子\",\"另一个作用是mvcc, 当读取记录时，若该记录被其他事务占用或当前版本对该事务不可见，则可以通过undo log读取之前的版本数据，以此实现非锁定读\"]},\"798\":{\"h\":\"2.9 什么是回表？\",\"t\":[\"当SQL查询仅依赖于非聚集索引（又称二级索引、辅助索引）时，如果查询所需要的数据不在该非聚集索引中完全包含，那么数据库需要借助索引中存储的主键值，回到聚集索引（主键索引）中查找对应的完整行记录。\",\"具体来说，假设一个表有主键id和若干其他列如name、age等，若存在一个基于name的非聚集索引。当执行如下查询：\",\"Sql\",\"1SELECT * FROM table WHERE name = 'John'; \",\"如果数据库首先使用name的索引来定位到name='John'的记录，但该索引只包含了name和对应的id值，并没有存储age等其他列的信息。为了得到完整的行数据，数据库就需要根据索引中查找到的主键id值，进一步回到聚集索引中去检索对应主键的行，这个过程就被形象地称为“回表”。\"]},\"799\":{\"h\":\"2.10 mysql三大日志\",\"t\":[\"binlog \",\"物理日志，记录内容修改情况，只要发生表数据更新，都会产生binlog日志，保证了mysql集群架构的数据一致性\",\"redolog \",\"重做日志：拥有崩溃恢复能力\",\"undolog \",\"回滚日志保证事物的原子性\"]},\"800\":{\"h\":\"2.11 mysql主从复制原理\",\"t\":[\"MySQL的主从复制（Master-Slave Replication）是一种数据同步技术，它可以将主数据库（Master）的所有数据更改自动复制到一个或多个从数据库（Slave）上，从而实现数据的分布式存储和备份，以及读写分离等功能。主从复制的基本原理和配置步骤如下：\"]},\"801\":{\"h\":\"基本原理\",\"t\":[\"Binlog记录： \",\"主数据库开启二进制日志（Binary Log），记录所有的数据更改操作，包括INSERT、UPDATE、DELETE以及其他DDL语句。\",\"格式分类 \",\"statement \",\"记录的就是sql语句的原文，也就是说在数据库中执行的sql会原封不动的记录到binlog中\",\"会导致主从同步的数据不一致问题（如删除语句指定了limit而没有使用order by ，在主库和从库上的执行结构可能是不一样的）\",\"row \",\"会记录每个数据更改的具体行的细节，不会导致主从不一致问题\",\"缺点：可能要记录更多的内容，比如批量修改，就需要把每条记录的变更都记录下来\",\"mixed \",\"statement + row结合，mysql会根据sql情况，自动在row和statement中互相切换选择一个他认为合适的格式进行记录\",\"复制流程： \",\"从数据库通过I/O线程连接主数据库，请求并读取主数据库的二进制日志事件（binlog events）。\",\"I/O线程将读取到的binlog events传输到从数据库的中继日志（Relay Log）中。\",\"从数据库的SQL线程读取中继日志，并按顺序重新执行（重做）这些事件，从而在从数据库上产生与主数据库相同的数据更改。\"]},\"802\":{\"h\":\"2.12 mysql是如何实现事物的\",\"t\":[\"MySQL实现事务处理是通过底层数据库引擎的支持，特别是InnoDB存储引擎。InnoDB是MySQL中支持事务的标准引擎，它提供了ACID（Atomicity原子性、Consistency一致性、Isolation隔离性、Durability持久性）事务特性。以下是MySQL如何实现事务的简述：\",\"原子性（Atomicity）：\",\"MySQL通过将一系列SQL语句封装在一个事务中来保证原子性。在一个事务内的所有操作要么全部成功提交，要么全部失败回滚，不会存在部分执行的现象。\",\"一致性（Consistency）：\",\"通过约束（如外键约束、唯一约束等）和预写日志（Write-Ahead Log, WAL，即Redo Log）来维持数据库的一致性状态。在事务提交前，所有对数据的修改都会先写入Redo Log中，确保即使在系统崩溃的情况下也能恢复数据至一致状态。\",\"隔离性（Isolation）：\",\"MySQL通过锁定机制和多版本并发控制（MVCC，Multiversion Concurrency Control）来实现事务的隔离性。\",\"锁定机制：InnoDB支持行级锁，包括共享锁（读锁）和排他锁（写锁），以此来防止多个事务对同一资源的并发访问引发的问题。\",\"MVCC：在可重复读（Repeatable Read）隔离级别下，InnoDB不锁定正在读取的数据，而是为事务提供一个快照视图，每个事务只能看到自己开始时刻的数据库状态，避免了脏读、不可重复读和幻读等问题。\",\"持久性（Durability）：\",\"Redo Log（重做日志）和Undo Log（回滚日志）共同确保事务的持久性。\",\"Redo Log记录了事务对数据库所做的修改，当事务提交时，Redo Log的内容会被刷入磁盘，即便发生宕机，也能通过Redo Log在系统重启时恢复未持久化的数据。\",\"Undo Log保存了事务修改前的数据，用于在事务回滚时撤销对数据库的更改。\",\"在实际操作中，用户通过START TRANSACTION、COMMIT和ROLLBACK SQL语句来手动控制事务的边界，而在自动提交模式下（默认模式），每条单独的SQL语句被视为一个隐式事务。在事务执行期间，MySQL会根据事务隔离级别采取相应的并发控制策略，以确保数据的正确性和完整性。\"]},\"803\":{\"h\":\"2.13 一条sql的执行过程？\",\"t\":[\"连接器 \",\"管理链接，权限验证\",\"分析器 \",\"语法分析，生成解析树\",\"优化器 \",\"生成执行计划。根据索引看看是否可以优化\",\"执行器 \",\"执行sql语句\",\"image-20240421141844033\"]},\"804\":{\"h\":\"2.14 sql调优优化\",\"t\":[\"不分库分表 \",\"软优化 \",\"数据库参数调优 \",\"innodb_buffer_pool_size: 缓冲池大小，它控制着InnoDB存储引擎使用的内存大小。通常，可以将参数设置为系统可用内存的70%-80%\",\"最大连接数\",\"事物日志的大小：innodb_log_file_size\",\"分析慢查询sql语句，分析执行计划，进行sql改写和程序改写\",\"优化数据库的索引结构\",\"表结构优化 \",\"多表join \",\"数据冗余\",\"宽表\",\"引入nosql和程序架构调整\",\"硬优化 \",\"提升系统硬件（更快的io,更多的内存）；带宽、cpu、硬盘\",\"分库分表 \",\"可以先看分表是否满足业务的需求和未来增长\",\"如果分表不能满足，则考虑分库分表\"]},\"805\":{\"h\":\"三、ORACLE\"},\"806\":{\"h\":\"3.1. 常见脚本创建\"},\"807\":{\"h\":\"3.1.1 创建表\",\"t\":[\"标准写法\",\"CREATE TABLE test_table( id varchar2(255) primary key, name varchar2(50), birthdate date, is_active char(1) ); COMMENT ON TABLE test_table IS '测试表名'; COMMENT ON COLUMN test_table.name IS '测试姓名'; \",\"生产环境执行-推荐写法(需要在命令窗口执行)\",\" PROMPT test_table 创建表 DECLARE FLAG_NUM NUMBER; BEGIN SELECT COUNT(*) INTO FLAG_NUM FROM USER_TABLES ATS WHERE ATS.TABLE_NAME = UPPER('test_table'); IF FLAG_NUM = 0 THEN EXECUTE IMMEDIATE 'CREATE TABLE test_table( id varchar2(255) primary key, name varchar2(50), birthdate date, is_active char(1) )'; -- ADD COMMENTS TO THE COLUMNS EXECUTE IMMEDIATE 'COMMENT ON TABLE test_table IS ''测试表名'''; EXECUTE IMMEDIATE 'COMMENT ON COLUMN test_table.name IS ''测试姓名'''; END IF; END; / COMMIT; \",\"Alt text\"]},\"808\":{\"h\":\"1.2 更新表\",\"t\":[\"修改表字段varchar为clob alter table test_table rename column name to name_clob; alter table test_table add name clob; update test_table set name=trim(name_clob); alter table test_table drop column name_clob; comment on column test_table.name is '测试修改';\",\" \",\"表后面新增字段\",\"alter table test_table add (sms_type number(9) default null, bkry_id varchar2(255) default null ); comment on column test_table.sms_type is '短信类型'; comment on column test_table.bkry_id is '布控人员id' \",\"修改表字段长度\",\" alter table test_table modify (bkry_id varchar2(50)); \"]},\"809\":{\"c\":[\"mysql\"]},\"810\":{\"c\":[\"mysql\"]},\"811\":{\"h\":\"JAVA\",\"t\":[\"所学知识沉淀汇总\",\"JAVA基础\",\"JAVA进阶\",\"JAVA集合\",\"JUC\",\"Spring\",\"算法\",\"ES\",\"JVM\",\"Mysql\",\"Redis\",\"计算机基础\",\"SpringCloud\",\"消息队列\"]},\"812\":{\"h\":\"Redis\"},\"813\":{\"h\":\"Redis知识梳理\"},\"814\":{\"h\":\"1. redis 为什么这么快\",\"t\":[\"redis 基于内存，内存的访问速度是磁盘的上千倍\",\"redis 基于Reactor模式设计开发了一套高效的事件处理模型，主要是单线程事件循环和io多路复用\",\"redis 内置了多种优化过后的数据类型/结构实现，性能非常高\"]},\"815\":{\"h\":\"2. redis的应用\",\"t\":[\"分布式锁 \",\"redisson\",\"限流 \",\"redis + lua脚本的方式实现了限流\",\"消息队列\",\"缓存\",\"复杂业务场景 \",\"比如通过bitmap统计活跃用户\",\"通过sorted set维护排行榜\"]},\"816\":{\"h\":\"3. redis的数据类型\"},\"817\":{\"h\":\"1. String(字符串)\",\"t\":[\"命令\",\"最常用\",\"set key value\",\"get key\",\"数值增减\",\"递增数字 \",\"incr key\",\"增加指定的整数 \",\"incrby key increment\",\"递减数值 \",\"decr key\",\"减少指定的整数 \",\"decrby key decrement\",\"获取字符串长度\",\"strlen key\",\"分布式锁\",\"setnx key value\",\"set key value [EX seconds] [PX milliseconds] [NX][XX] EX: key在多少秒之后过期 PX: key在多少毫秒之后过期 NX: 当key不存在的时候，才创建key，效果等同于setnx XX: 当key存在的时候，覆盖key eg: set lock order ex 10 get lock \",\"应用场景\",\"缓存\",\"访问数\",\"点赞\",\"INCR items:1 \",\"底层实现\",\"sds(简单动态字符串)\"]},\"818\":{\"h\":\"2. List(列表)\",\"t\":[\"介绍\",\"一个双端链表的结构，容量大概是40多亿，主要功能有push/pop等，一般用在栈、队列、消息队列等场景\",\"常用命令\",\"向列表左边添加元素 \",\"lpush key value [value...]\",\"向列表右边添加元素 \",\"rpush key value [value...]\",\"查看列表 \",\"lrange key start stop\",\"获取列表中元素的个数 \",\"llen key\",\"lpush cxlist 1 2 3 4 5 lrange cxlist 0 9 llen cxlist \",\"应用场景\",\"微信公众号订阅的消息\",\"我同时关注了人民日报和王者荣耀，假设两个公账号对应的id分别为11，22 只要他们发布了新文章，都会到我的list lpush likearticle:cx的id 11 22 查看我自己订阅的全部文章 lrange likearticle:cx的id 0 9 \"]},\"819\":{\"h\":\"3. Set(集合)\",\"t\":[\"命令\",\"添加元素 \",\"sadd key member [member...]\",\"删除元素 \",\"srem key member[member...]\",\"遍历集合中的所有元素 \",\"smembers key\",\"判断元素是否在集合中 \",\"sismember key member\",\"获取集合中的元素总数 \",\"scard key\",\"从集合中随机弹出一个元素，元素不删除 \",\"srandmember key [数字]\",\"从集合中随机弹出一个元素，出一个删一个 \",\"spop key [数字]\",\"集合运算 \",\"差集 \",\"属于A但不属于B的元素构成的集合\",\"SDIFF key [key...]\",\"交集 \",\"属于A同时也属于B的共同拥有的元素构成的集合\",\"SINTER key [key...]\",\"并集 \",\"属于A或者属于B的元素合并后的集合\",\"SUNION key [key...]\",\"应用场景\",\"网站UV统计\",\"文章点赞\",\"1. 新增点赞 sadd pub:msgid 点赞用户id1 点赞用户id2 2. 取消点赞 srem pub:msgid 点赞用户id 3.展现所有点赞过的用户 smembers pub:msgid 4.点赞用户数统计，就是常见的点赞红色数字 scard pub:msgid 5.判断某个朋友是否对楼主点赞过 sismember pub:msgid 用户id \",\"共同好友，好友推荐\",\"好友推荐 sadd s1 1 2 3 4 5 sadd s2 3 4 5 6 7 sinter s1 s2 sdiff s1 s2 sdiff s2 s1 \",\"抽奖\",\"1.用户id，立即参与按钮 sadd key 用户id 2.显示已经有多少人参与了 scard key 3.抽奖 srandmember key 2 : 随机抽奖2个人，元素不删除 spop key 3: 随机抽奖3个人，元素会删除 \",\"使用set实现抽奖系统如何做？\",\"sadd key value1 value2 .... \",\"向指定集合添加一个元素\",\"spop key count \",\"随机去除一个或多个，不允许重复\",\"srandmember key count \",\"随机取出，允许重复\"]},\"820\":{\"h\":\"4. Hash(散列)\",\"t\":[\"结构\",\"类似Map<String,Map<Object,Object>> \",\"命令\",\"一次设置一个字段值\",\"hset key field value\",\"一次获取一个字段的值\",\"hget key field\",\"一次设置多个字段值\",\"hmset key field value [field value...]\",\"一次获取多个字段值\",\"hmget key field [field ...]\",\"获取所有字段值\",\"hgetall key\",\"获取某个key内的全部数量\",\"hlen\",\"删除一个key\",\"hdel\",\"hset cxhash cx1 value1 hget cxhash cx1 hgetall cxhash hlen cxhash \",\"应用场景\",\"购物车\",\"增加商品 hset shopcar:uid:cx 33333 1 hset shopcar:uid:cx 44444 1 增加商品数量 hincrby shopcar:uid:cx 44444 1 商品总数 hlen shopcar:uid:cx 全部选择 hgetall shopcar:uid:cx \"]},\"821\":{\"h\":\"5. Zset(有序集合)\",\"t\":[\"命令\",\"添加元素 \",\"zadd key score member [score member...]\",\"增加某个元素的分数 \",\"zincrby key increment member\",\"获取元素的排名 \",\"从大到小 \",\"zrevrank key member\",\"从小到大 \",\"zrank key member\",\"获取有序集合中指定范围内的成员，按照成员的分数从大到小进行排序 \",\"zrevrange key start stop [withscores] \",\"可选的WITHSCORES参数表示是否同时返回成员的分数\",\"应用场景\",\"抖音热搜\",\" 1.点击视频 zincrby hotvcr:20240211 1 飞驰人生2 zincrby hotvct:20240211 15 飞驰人生2 3 熊出没 2.展示当日排行前10条 zrevrange hotvcr:20240211 0 9 withscores \"]},\"822\":{\"h\":\"6. HyperLogLog(基数统计)\",\"t\":[\"是什么？\",\"去重复统计功能的基数估计算法就是hyperloglog \",\"基数 \",\"是一种数据集，去重复后的真实个数\",\"基数统计 \",\"用于统计一个集合中不重复的元素个数，就是对集合去重复后剩余元素的计算\",\"hyperLogLog是一种概率算法的实现\",\"原理说明\",\"只是进行不重复的基数统计，不是集合也不保存数据，只记录数量而不是具体内容\",\"有误差 \",\"非精准统计\",\"牺牲准确率来换取空间，误差仅仅只是0.81%左右\",\"基本命令\",\"将所有元素添加到key中 \",\"pfadd key element ...\",\"统计key的估算值 \",\"pfcount key\",\"合并key至新key \",\"pgmerge new_key key1 key2...\",\"应用场景\",\"页面UV统计\",\"public void init() { log.info(\\\"------模拟后台有用户点击首页，每个用户来自不同ip地址\\\"); new Thread(() -> { String ip = null; for (int i = 1; i <=200; i++) { Random r = new Random(); ip = r.nextInt(256) + \\\".\\\" + r.nextInt(256) + \\\".\\\" + r.nextInt(256) + \\\".\\\" + r.nextInt(256); Long hll = redisTemplate.opsForHyperLogLog().add(\\\"hll\\\", ip); log.info(\\\"ip={},该ip地址访问首页的次数={}\\\",ip,hll); //暂停几秒钟线程 try { TimeUnit.SECONDS.sleep(3); } catch (InterruptedException e) { e.printStackTrace(); } } },\\\"t1\\\").start(); } \",\"底层实现\",\"Redis 的 HyperLogLog 数据结构底层实现主要依赖于概率算法，用于估计一个大规模集合中不重复元素的数量（即基数）。以下是 HyperLogLog 的关键实现原理：\",\"哈希映射：\",\"当向 HyperLogLog 添加元素时，Redis 首先会对元素进行哈希运算，将元素转化为一个长二进制串。\",\"这个哈希值会根据哈希空间大小被截断，进而映射到一个固定大小的桶（bucket）集合中。\",\"存储桶结构：\",\"HyperLogLog 内部维护一个固定长度（例如 Redis 中为 16384）的数组，数组中的每个元素代表一个桶，存储一个称为“最大前缀零”的计数（即哈希值对应的二进制串中连续零的最大长度）。\",\"前缀零计数：\",\"根据哈希值映射到的桶位置，计算对应的二进制串中最长的连续零的个数，并将这个数字作为桶的计数值存储下来。\",\"桶中存储的计数值越大，表示映射到该桶的元素越多，但哈希碰撞的可能性就越小。\",\"基数估算：\",\"利用统计学原理，基于所有桶中存储的最大前缀零计数的分布，HyperLogLog 可以估算出大概率下集合基数的大小。\",\"通过公式转换，可以从这些计数中得出一个近似的基数，尽管这个估计值并非完全准确，但在标准误差范围内（通常为 0.81% 左右），能很好地反映出真实基数。\",\"内存优化：\",\"无论 HyperLogLog 存储了多少元素，其内存占用始终固定在 12KB 左右（在 Redis 的实现中），这是因为只需存储每个桶的计数值，无需存储实际的元素值。\",\"合并操作：\",\"HyperLogLog 支持合并多个相同结构的 HyperLogLog，合并后的 HyperLogLog 能够估计所有输入 HyperLogLog 中元素的总基数。\",\"通过这样的设计，Redis 中的 HyperLogLog 实现了在有限内存中估算海量数据基数的功能，非常适合于大数据场景下的去重计数需求。\"]},\"823\":{\"h\":\"7. Bitmap (位图)\",\"t\":[\"是什么？\",\"由0和1状态表现的二进制位的bit数据\",\"每一个格子里面只能放1或者0，用它来判断Y/N状态\",\"image-20240211110630802\",\"用string类型作为底层数据结构实现的一种统计二值状态的数据类型，本质是数组，它是基于String数据类型的按位的操作。bitmap支持的最大位数是2的32位，极大的节约存储空间，使用512M内存就可以存储42.9亿的字节信息\",\"能干嘛？\",\"主要用于状态统计\",\"可以解决下面类似需求 \",\"用户是否登录过\",\"打卡上下班，签到统计\",\"日活统计\",\"最近一周的活跃用户\",\"基本命令\",\"setbit\",\"setbit key offset value \",\"setbit 键偏移位，只能0或者1\",\"bitmap的偏移量是从零开始算的\",\"getbit\",\"getbit key offset\",\"strlen\",\"统计字节数占用多少\",\"bitcount\",\"全部键里面含有1的有多少个\",\"setbit k2 0 1 setbit k2 1 1 setbit k2 15 1 bitcount k2 输出 3 \",\"应用场景\",\"统计活跃用户\",\"京东签到领取京豆\",\"需求说明 \",\"签到日历仅展示当月签到数据 签到日历需展示最近连续签到天数 假设当前日期是20240211，且20240211未签到 若20240211已签到且0212未签到，则连续签到天数为1 若20240211已签到且0612已签到，则连续签到天数为2 连续签到天数越多，奖励越大 所有用户均可签到\",\"image-20240211111205798\",\"解决思路\",\"传统的数据库存储，对于大量用户肯定是不适合的\",\"一个月最多31天，刚好int类型是32位，那一个int类型就可以搞定一个月\",\"一条数据直接存储一个月的签到记录，不再是存储一天的签到记录\",\"具体实现\",\"setbit sign:u1:202402 0 1 setbit sign:u1:202402 1 1 setbit sign:u1:202402 2 1 setbit sign:u1:202402 3 1 setbit sign:u1:202402 30 1 getbit sign:u1:202402 0 getbit sign:u1:202402 1 getbit sign:u1:202402 15 \"]},\"824\":{\"h\":\"8. Geospatial (地理位置)\",\"t\":[\"命令\",\"GEOADD 多个经度(longitude)、纬度(latitude)、位置名称(member)添加到指定的 key 中\",\"GEOADD city 116.403963 39.915119 \\\"天安门\\\" 116.403414 39.924091 \\\"故宫\\\" 116.024067 40.362639 \\\"长城\\\" \",\"GEOPOS 从键里面返回所有给定位置元素的位置（经度和纬度）\",\"GEOPOS city 天安门 故宫 \",\"GEODIST 返回两个给定位置之间的距离\",\"GEODIST city 天安门 长城 km \",\"GEORADIUS 以给定的经纬度为中心， 返回与中心的距离不超过给定最大距离的所有位置元素\",\"应用案例\",\"美团附近酒店推送\",\"解题思路\",\"GEORADIUS: 以给定的经纬度为中心，找出某一半径内的元素\",\"代码实现\",\"@RestController public class GeoController { public static final String CITY =\\\"city\\\"; @Autowired private RedisTemplate redisTemplate; @RequestMapping(\\\"/geoadd\\\") public String geoAdd() { Map<String, Point> map= new HashMap<>(); map.put(\\\"天安门\\\",new Point(116.403963,39.915119)); map.put(\\\"故宫\\\",new Point(116.403414 ,39.924091)); map.put(\\\"长城\\\" ,new Point(116.024067,40.362639)); redisTemplate.opsForGeo().add(CITY,map); return map.toString(); } @GetMapping(value = \\\"/geopos\\\") public Point position(String member) { //获取经纬度坐标 List<Point> list= this.redisTemplate.opsForGeo().position(CITY,member); return list.get(0); } @GetMapping(value = \\\"/geohash\\\") public String hash(String member) { //geohash算法生成的base32编码值 List<String> list= this.redisTemplate.opsForGeo().hash(CITY,member); return list.get(0); } @GetMapping(value = \\\"/geodist\\\") public Distance distance(String member1, String member2) { Distance distance= this.redisTemplate.opsForGeo().distance(CITY,member1,member2, RedisGeoCommands.DistanceUnit.KILOMETERS); return distance; } /** * 通过经度，纬度查找附近的 * 北京王府井位置116.418017,39.914402 */ @GetMapping(value = \\\"/georadius\\\") public GeoResults radiusByxy() { //这个坐标是北京王府井位置 Circle circle = new Circle(116.418017, 39.914402, Metrics.KILOMETERS.getMultiplier()); //返回50条 RedisGeoCommands.GeoRadiusCommandArgs args = RedisGeoCommands.GeoRadiusCommandArgs.newGeoRadiusArgs().includeDistance().includeCoordinates().sortAscending().limit(50); GeoResults<RedisGeoCommands.GeoLocation<String>> geoResults= this.redisTemplate.opsForGeo().radius(CITY,circle, args); return geoResults; } /** * 通过地方查找附近 */ @GetMapping(value = \\\"/georadiusByMember\\\") public GeoResults radiusByMember() { String member=\\\"天安门\\\"; //返回50条 RedisGeoCommands.GeoRadiusCommandArgs args = RedisGeoCommands.GeoRadiusCommandArgs.newGeoRadiusArgs().includeDistance().includeCoordinates().sortAscending().limit(50); //半径10公里内 Distance distance=new Distance(10, Metrics.KILOMETERS); GeoResults<RedisGeoCommands.GeoLocation<String>> geoResults= this.redisTemplate.opsForGeo().radius(CITY,member, distance,args); return geoResults; } } \"]},\"825\":{\"h\":\"4. redis 如何判断数据是否过期？\"},\"826\":{\"h\":\"1. 立刻删除\",\"t\":[\"对cpu不友好，拿时间换空间\"]},\"827\":{\"h\":\"2. 惰性删除\",\"t\":[\"只会在取出key的时候才对数据进行过期简称\"]},\"828\":{\"h\":\"3. 定期删除\",\"t\":[\"每隔一段时间抽取一批key执行删除过期key操作\"]},\"829\":{\"h\":\"4. 总结\",\"t\":[\"redis采用定期删除+惰性/懒汉式删除\",\"如果上面都没被删除到，有漏网之鱼，必须要有个兜底的方案，就是redis缓存淘汰策略\"]},\"830\":{\"h\":\"5. redis 内存淘汰机制了解么？\"},\"831\":{\"h\":\"1. redis默认内存多少？在哪查看？如何设置修改？\",\"t\":[\"查看redis最大内存 \",\"打开redis配置文件，设置maxmemory参数，maxmemory是bytes字节类型，注意转换。\",\"redis默认内存多少可以用 \",\"如果不设置最大内存大小或者设置最大内存大小为0，在64位操作系统下不限制内存大小\",\"生产环境如何配置？ \",\"一般推荐Redis设置内存为最大物理内存的四分之三\",\"如何修改redis内存设置 \",\"命令修改 \",\"config set maxmemory 104857600\",\"config get maxmemory\",\"配置文件修改\",\"如何查看redis内存情况 \",\"info memory\"]},\"832\":{\"h\":\"2. redis 缓存淘汰策略\",\"t\":[\"noeviction \",\"不会驱逐任何key\",\"allkeys-lru（最近最少使用） \",\"对所有key使用lru算法进行删除\",\"volatile-lru \",\"对所有设置了过期时间的key使用lru算法进行删除\",\"allkeys-random \",\"对所有key随机删除\",\"volatile-random \",\"对所有设置了过期时间的key随机删除\",\"volatile-ttl \",\"删除马上要过期的key\",\"allkeys-lfu \",\"对所有key使用lfu算法进行删除\",\"volatile-lfu \",\"对所有设置了过期时间的key使用lfu算法进行删除\",\"总结\",\"2个维度 \",\"过期键在筛选\",\"所有键中筛选\",\"4个方面 \",\"lru：最近最少使用\",\"lfu： 最近最不经常使用\",\"random\",\"ttl\"]},\"833\":{\"h\":\"6. 布隆过滤器\",\"t\":[\"是什么？\",\"由一个初值都为0的bit数组和多个哈希函数构成，主要用于判断一个元素是否在集合中\",\"本质就是判断具体数据存不存在一个大的集合中\",\"布隆过滤器是一种类似set的数据结构，只是统计结果不太准确\",\"特点\",\"高效地插入和查询\",\"一个元素如果判断结果为存在的时候元素不一定存在，但是判断结果为不存在的时候则一定不存在\",\"布隆过滤器可以添加元素，但是不能删除元素，删除会导致误判率增加\",\"误判只会发生在过滤器没有添加过的元素，对于添加过的元素不会发生误判\",\"结论备注 \",\"有，是可能有\",\"无，是肯定无 \",\"可以保证的是，如果布隆过滤器判断一个元素不在一个集合中，那这个元素一定不会在集合中\",\"原理\",\"初始化\",\"布隆过滤器本质上是由长度为m的位向量或位列表（仅包含0或1位值的列表）组成，最初所有的值均设置为0\",\"image-20240211152637599\",\"添加\",\"向布隆过滤器添加数据时，为了尽量地址不冲突，会使用多个hash函数对key进行运算，得到一个下标索引值，然后对位数组长度进行取模运算得到一个位置，每个hash函数都会算得一个不同的位置，再把位数组的这几个位置都置为1就完成了add操作\",\"image-20240211153048779\",\"判断是否存在\",\"查询某个key是否存在时，先把这个key通过相同的多个hash函数进行运算，查看对应的位置是否都为1，只要有一个位是0，就证明key不存在；如果这几个位置全都是1，说明极有可能存在的，因为这些1可能是因为其他的key存在导致的，也就是hash冲突\",\"优缺点\",\"优点 \",\"高效地插入和查询，占用空间少\",\"缺点 \",\"不能删除元素\",\"存在误判：不同的数据可能出现相同的hash值\",\"使用场景\",\"解决缓存穿透问题\",\"黑名单校验\",\"扩展\",\"布谷鸟过滤器 \",\"解决布隆过滤器不能删除元素的问题\",\"代码实现\",\"使用guava库中的BloomFilter类（只能单机使用）\",\"public static void main(String[] args) { BloomFilter<String> bloomFilter = BloomFilter.create( Funnels.stringFunnel(), 1000, 0.01); bloomFilter.put(\\\"apple\\\"); bloomFilter.put(\\\"banana\\\"); System.out.println(bloomFilter.mightContain(\\\"apple\\\")); // true System.out.println(bloomFilter.mightContain(\\\"orange\\\")); // false } \"]},\"834\":{\"h\":\"7. 缓存雪崩+缓存击穿+缓存穿透\"},\"835\":{\"h\":\"1. 缓存雪崩\",\"t\":[\"发生\",\"大批缓存同时到期\",\"比如多个缓存数据设置了相同的过期时间，在同一时刻失效\",\"redis主机挂了，redis全盘崩溃\",\"解决\",\"分散过期时间\",\"redis缓存集群实现高可用\",\"主从+哨兵\"]},\"836\":{\"h\":\"2. 缓存穿透\",\"t\":[\"是什么？ \",\"查询一条记录，先redis后数据库都查询不到该条记录，但是请求每次都会打到数据库上面去，导致后台数据库压力暴增，redis成为了一个摆设\",\"解决 \",\"空对象缓存\",\"布隆过滤器\"]},\"837\":{\"h\":\"3. 缓存击穿\",\"t\":[\"是什么？\",\"大量的请求同时查询一个key时，key正好失效了，导致大量的请求打到数据库上面去\",\"简单来说就是key突然失效了，暴打mysql\",\"解决\",\"方案一：互斥更新、随机退避、差异失效时间\",\"image-20240211155417244\",\"方案二：对于频繁的热点key，不设置过期时间\",\"方案三：互斥独占锁防止击穿\",\"image-20240211155213874\"]},\"838\":{\"h\":\"8. redis分布锁\"},\"839\":{\"h\":\"1. 一个靠谱的分布锁锁需要具备的条件和刚需\",\"t\":[\"独占性 \",\"任何时刻只能有且仅有一个线程持有\",\"高可用 \",\"不能因为某一个节点挂了而出现获取锁和释放锁失败的情况\",\"防死锁 \",\"杜绝死锁，必须有超时机制或者撤销操作，有个兜底终止跳出方案\",\"不乱抢 \",\"防止张冠李戴，不能私下unlock别人的锁，只能自己加锁自己释放\",\"重入性 \",\"同一个节点的同一个线程如果获得锁之后，它也可用再次获取这个锁\"]},\"840\":{\"h\":\"2. 为啥要上分布锁？\",\"t\":[\"synchronized，单机版ok,上分布式\",\"nginx分布式微服务，单机锁不行\",\"取消单机锁，上redis分布式锁setnx\",\"setnx只加了锁，没有释放锁，出异常的话，可能无法释放锁，必须要在代码层面finally释放锁\",\"假设宕机了，代码没有走到finally这块，没办法保证解锁，这个key没有被删除，需要设置key的过期时间\",\"为redis的分布锁锁key,增加过期时间，必须要setnx+过期时间在同一行（保证具备原子性）\",\"Boolean flagLock = stringRedisTemplate.opsForValue().setIfAbsent(key,value,10L,TimeUnit.SECONDS); \",\"必须规定只能自己删除自己的锁，你不能把别人的锁删除了，防止张冠李戴\",\"redis集群环境下，我们自己写的也不ok, 直接上redisson\"]},\"841\":{\"h\":\"3. redisson使用场景\",\"t\":[\"多个服务间保证同一时刻同一时间段内同一用户只能有一个请求\"]},\"842\":{\"h\":\"4. redisson的看门狗缓存续命了解么？\",\"t\":[\"问题：redis分布锁锁过期了，但是业务逻辑还没处理完怎么办？\",\"答：守护线程续命\",\"额外起一个线程，定期检查线程是否还持有锁，如果有则延长过期时间\",\"redisson里面使用\\\"看门狗\\\"定期检查（每1/3的锁时间检查一次），如果线程还持有锁，则刷新过期时间\",\"上面有bug，受系统时钟影响\",\"通过redisson新建出来的锁key，默认是30秒\",\"Config.java 中 private long lockWatchdogTimeout = 30 * 1000; 可以通过修改Config.lockWatchdogTimeout来另行指定 \",\"初始化了一个定时器，dely 的时间是 internalLockLeaseTime/3。在 Redisson 中，internalLockLeaseTime 是 30s，也就是每隔 10s 续期一次，每次 30s\",\"标准没有bug写法\",\"RLock redissonLock = redisson.getLock(REDIS_LOCK_KEY); redissonLock.lock(); try{ }finally{ if(redissonLock.isLocked() && redissonLock.isHeldByCurrentThread()) { redissonLock.unlock(); } } \"]},\"843\":{\"h\":\"9. 数据双写一致性问题\"},\"844\":{\"h\":\"1. 缓存双写一致性，谈谈你的理解？\",\"t\":[\"如果redis中有数据- 需要和数据库中的值相同\",\"如果redis中无数据-数据库中的值要是最新的值\"]},\"845\":{\"h\":\"2. 缓存操作分类\",\"t\":[\"只读缓存\",\"读写缓存 \",\"同步直写策略：写缓存时也同步写数据库，缓存和数据库中的数据一致\",\"对于读写缓存来说，要想保证缓存和数据库中的数据一致，就要采用同步直写策略\"]},\"846\":{\"h\":\"3 .缓存一致性几种更新策略\",\"t\":[\"目的：保证最终一致性 \",\"给缓存设置过期时间，是保证最终一致性的解决方案\"]},\"847\":{\"h\":\"1. 先更新数据库，在更新缓存\",\"t\":[\"假设在更新redis缓存出现了异常，导致更新失败，会导致两边数据不一致，读到脏数据\"]},\"848\":{\"h\":\"2.先删除缓存，再更新数据库\",\"t\":[\"如果A线程正在更新数据库或更新数据库失败，此时B线程请求再次访问缓存时，发现redis里面没数据，缓存缺少，再次读取mysql时，从数据库读取到的还是旧值，将旧值写入了缓存\",\"解决方案 \",\"使用互斥锁 \",\"多个线程同时去查询数据库的这条数据，那么我们可以在第一个查询数据的请求上使用一个 互斥锁来锁住它。 其他的线程走到这一步拿不到锁就等着，等第一个线程查询到了数据，然后做缓存\",\"采用延时双删策略 \",\"在第一次删除缓存值后，延迟一段时间再次进行删除\",\"这个延迟时间怎么确定呢？ \",\"在业务程序运行的时候，统计下线程读数据和写缓存的操作时间，自行评估自己的项目的读数据业务逻辑的耗时， 以此为基础来进行估算。然后写数据的休眠时间则在读数据业务逻辑的耗时基础上加百毫秒即可\",\"这么做的目的，就是确保读请求结束，写请求可以删除读请求造成的缓存脏数据\",\"性能下降怎么办？ \",\"第二次删除可以作为异步，自己启一个线程，异步删除\"]},\"849\":{\"h\":\"3. 先更新数据库，再删除缓存（推荐）\",\"t\":[\"异常问题\",\"假如缓存删除失败或者来不及，导致请求再次访问redis时缓存命中，读取到的是缓存旧值\",\"解决方案\",\"可以把要删除或者要更新的值暂存消息队列中\",\"当程序没有成功删除或更新时，可以从消息队列中重新读取，然后再次进行删除或更新\",\"如果成功删除或更新，从消息队列去除\",\"如果重试一定次数没有成功，发送报警信息给运维人员\",\"推荐理由\",\"先删除缓存值再更新数据库，有可能导致请求因缓存缺失而访问数据库，给数据库带来压力，严重导致打满mysql\",\"如果业务应用中读取数据库和写缓存的时间不好估算，那么，延迟双删中的等待时间就不好设置\"]},\"850\":{\"h\":\"10 . redis经典五种数据类型底层实现\"},\"851\":{\"h\":\"1. 查看类型和编码命令\",\"t\":[\"查看类型 \",\"type 键\",\"查看编码 \",\"object encoding hello\",\"debug结构 \",\"debug object person\"]},\"852\":{\"h\":\"2. String底层结构\",\"t\":[\"3大编码格式\",\"int\",\"保存long型的64位有符合整数\",\"只有整数才会使用int\",\"embstr\",\"代表embstr格式的sds(简单动态字符串)，保存长度小于44字节的字符串\",\"embstr: embedded string,表示嵌入式的String\",\"raw\",\"保存长度大于44字节的字符串\",\"案例测试\",\"image-20240212145935967\",\"SDS\",\"简单动态字符串\",\"包含\",\"int len \",\"已用的字节长度\",\"int alloc \",\"字符串最大字节长度\",\"char flags \",\"用来表示sds的类型\",\"char buf[] \",\"真正有效的字符串数据，长度由alloc控制\",\"image-20240212150230483\",\"redis为什么要重新设计一个sds数据结构？\",\"image-20240212150342380\",\"总结\",\"Redis内部会根据用户给的不同键值而使用不同的编码格式，自适应地选择较优化的内部编码格式，而这一切对用户完全透明!\"]},\"853\":{\"h\":\"3. hash底层结构\",\"t\":[\"两种编码格式\",\"ziplist\",\"hashtable\",\"结构\",\"hash-max-ziplist-entries\",\"使用压缩列表保存时哈希表集合中的最大元素个数(默认512)\",\"hash-max-ziplist-value\",\"使用压缩列表保存时哈希集合中单个元素的最大长度(默认64)\",\"查看上述命令\",\"config get hash*\",\"config set hash-max-ziplist-entries 3\",\"config set hash-max-ziplist-value 8\",\"结论\",\"哈希对象保存的键值对数量小于 512 个\",\"所有的键值对的健和值的字符串长度都小于等于 64byte（一个英文字母一个字节） 时用ziplist，反之用hashtable\",\"ziplist升级到hashtable可以，反过来降级不可以\",\"ziplist\",\"ziplist是一个经过特殊编码的双向链表，它不存储指向上一个链表节点和指向下一个链表节点的指针，而是存储上一个节点长度和当前长度\",\"image-20240212153920900\",\"已经有链表了，为什么出来一个压缩链表？\",\"普通的双向链表会有两个指针，在存储数据很小的情况下，我们存储的实际数据的大小可能还没有指针占用的内存大，得不偿失\",\"链表在内存中一般是不连续的，遍历相对比较慢\",\"压缩链表获取链表长度时不用再遍历整个链表，直接拿到len值就可以了，这个时间复杂度是 O(1)\"]},\"854\":{\"h\":\"4. list底层结构\",\"t\":[\"命令\",\"config get list*\",\"list-max-ziplist-size\",\"ziplist在entry配置\",\"默认为-2，当取负值的时候，表示按照占用字节数来限定每个quicklist节点上的ziplist的长度\",\"-2: 每个quicklist节点上的ziplist大小不能超过8 Kb。（-2是Redis给出的默认值）\",\"list-compress-depth\",\"ziplist压缩配置\",\"表示一个quicklist两端不被压缩的节点个数，节点指的是quicklist双向链表的节点\",\"默认值是0,表示都不压缩\",\"编码格式\",\"quicklist\",\"是ziplist和linkedlist的结合体\",\"image-20240212155644485\"]},\"855\":{\"h\":\"5. Set底层结构\",\"t\":[\"编码格式 \",\"intset \",\"存储的元素都是整数类型\",\"hashtable \",\"不是整数类型，就用hashtable\",\"命令 \",\"config get set*\"]},\"856\":{\"h\":\"6. ZSet底层结构\",\"t\":[\"编码格式 \",\"ziplist\",\"skiplist\",\"命令 \",\"config get zset*\",\"zset_max_ziplist_entries(默认128)\",\"zset_max_ziplist_value(默认值是64)\",\"结论 \",\"大于上面两个默认值时会使用跳表\",\"否则使用ziplist\"]},\"857\":{\"h\":\"7. 跳表\",\"t\":[\"是什么？ \",\"跳表=链表+多级索引\",\"跳表是可以实现二分查找的有序链表（由于链表无法进行二分查找，借用数据库索引思想，提取出链表中关键节点当索引，先在关键节点上查找，再进入下层链表查找）\",\"为啥使用跳表而不使用B+树呢？ \",\"跳表插入新元素时，只需修改几个指针就能完成，而B+树插入新节点可能导致节点分裂\",\"跳表支持高效的范围查询\",\"跳表的实现相对B+树更为简单，因为它没有节点分裂、合并等复杂操作，也不需要强制保持严格的平衡\",\"跳表的高度是动态调整的，可以根据数据规模的变化自动调整索引层次，以保持较高的查询效率\"]},\"858\":{\"h\":\"11. redis 持久化\"},\"859\":{\"h\":\"1. 持久化方式\",\"t\":[\"RDB(快照 snapshotting)\",\"AOF(只追加文件，append-only file)\",\"RDB和AOF的混合持久化(4.0版本后新增)\",\"RDB是redis默认采用的持久化方式，在redis.conf配置文件中默认有此下配置\",\"save 900 1 #在900秒(15分钟)之后，如果至少有1个key发生变化，Redis就会自动触发bgsave命令创建快照。 save 300 10 #在300秒(5分钟)之后，如果至少有10个key发生变化，Redis就会自动触发bgsave命令创建快照。 save 60 10000 #在60秒(1分钟)之后，如果至少有10000个key发生变化，Redis就会自动触发bgsave命令创建快照。 \"]},\"860\":{\"h\":\"2. RDB创建快照时会阻塞主线程吗？\",\"t\":[\"redis提供了两个命令来生成RDB快照文件\",\"save \",\"同步保存操作，会阻塞redis主线程\",\"bgsave \",\"fork出一个子线程，子线程执行，不会阻塞redis主线程，默认选项\"]},\"861\":{\"h\":\"3 . AOF持久化\",\"t\":[\"什么是aof持久化\",\"aof持久化的实时性更好，redis6.0以后默认开启\",\"appendonly yes \",\"开启aof持久化后每执行一条会更改redis中的数据的命令，redis就会将该命令写入aof缓存区，然后再写入文件中，最后再根据持久化方式（fsync策略）的配置来决定何时将系统内核缓存区的数据同步到硬盘中的\",\"持久化方式\",\"appendfsync always\",\"appendfsync everysec(兼顾数据和写入性能，推荐)\",\"appendsync no\"]},\"862\":{\"h\":\"4 . 如何选择RDB 和AOF?\",\"t\":[\"如果redis保存的数据丢失一些也没有什么影响的化，可以选择使用rdb\",\"不建议单独使用aof\",\"如果保存的数据要求安全性比较高的话，建议同时开启RDB和AOF持久化或者开启RDB和AOF混合持久化\"]},\"863\":{\"h\":\"12. redis的I/O多路复用模型\"},\"864\":{\"h\":\"1. 是什么？\",\"t\":[\"I/O: 网络I/O\",\"多路：多个客户端连接（连接就是套接字描述符，即socket或者channel）\",\"复用：复用一个或几个线程。也就是说一个或一组线程处理多个TCP连接，使用单进程就能实现同时处理多个客户端的连接\",\"一句话：一个服务端进程可以同时处理多个套接字描述符；其发展可以分select->poll->epoll三个阶段来描述的\"]},\"865\":{\"h\":\"2. 概念\",\"t\":[\"同步 \",\"调用者要一直等待调用结果的通知后才能进行后续的执行，现在就要，我可以等，等出结果为止\",\"异步 \",\"指被调用方先返回应答让调用者先回去，然后再计算调用结果，计算完最终结果后再通知并返回给调用方\",\"异步调用要想获得结果一般通过回调\",\"同步与异步的理解 \",\"同步、异步的讨论对象是被调用者（服务提供者），重点在于获得调用结果的消息通知方式上\",\"阻塞 \",\"调用方一直在等待而且别的事情什么都不做，当前进/线程会被挂起，啥都不干\",\"非阻塞 \",\"调用在发出去后，调用方先去忙别的事情，不会阻塞当前进/线程，而会立即返回\",\"阻塞与非阻塞的理解 \",\"阻塞、非阻塞的讨论对象是调用者（服务请求者），重点在于等消息时候的行为，调用者是否能干其它事\"]},\"866\":{\"h\":\"3. I/O多路复用\",\"t\":[\"redis利用epoll来实现IO多路复用，将连接信息和事件放在队列中，依次放到文件事件分派器，事件分派器将事件分发给事件处理器\",\"所谓 I/O 多路复用机制，就是说通过一种机制，可以监视多个描述符，一旦某个描述符就绪（一般是读就绪或写就绪），能够通知程序进行相应的读写操作。这种机制的使用需要 select 、 poll 、 epoll 来配合。多个连接共用一个阻塞对象，应用程序只需要在一个阻塞对象上等待，无需阻塞等待所有连接。当某条连接有新的数据可以处理时，操作系统通知应用程序，线程从阻塞状态返回，开始进行业务处理\"]},\"867\":{\"h\":\"4. select\",\"t\":[\"select方式，既做到了一个线程处理多个客户端连接（文件描述符），又减少了系统调用的开销（多个文件描述符只有一次 select 的系统调用 + N次就绪状态的文件描述符的 read 系统调用\"]},\"868\":{\"h\":\"5. poll\",\"t\":[\"poll使用pollfd数组来代替select中的bitmap，数组没有1024的限制，可以一次管理更多的client。它和 select 的主要区别就是，去掉了 select 只能监听 1024 个文件描述符的限制\",\"当pollfds数组中有事件发生，相应的revents置位为1，遍历的时候又置位回零，实现了pollfd数组的重用\",\"问题 \",\"poll 解决了select缺点中的前两条，其本质原理还是select的方法，还存在select中原来的问题 \",\"pollfds数组拷贝到了内核态，仍然有开销\",\"poll并没有通知用户态哪一个socket有数据，仍然需要O(n)的遍历\"]},\"869\":{\"h\":\"6. epoll\",\"t\":[\"三步调用 \",\"epoll_create \",\"创建一个epoll句柄\",\"epoll_ctl \",\"像内核添加、修改或删除要监控的文件描述符\",\"epoll_wait \",\"类似发起select()调用\",\"结论 \",\"epoll是现在最先进的IO多路复用器，Redis、Nginx，linux中的Java NIO都使用的是epoll\",\"这里“多路”指的是多个网络连接，“复用”指的是复用同一个线程\",\"image-20240213102806318\"]},\"870\":{\"h\":\"13. redis集群\"},\"871\":{\"h\":\"1. redis 哨兵\",\"t\":[\"Redis Sentinel 简称 redis哨兵\",\"什么是redis sentinel? 有什么用\",\"Redis Sentinel是一个用于监控和管理Redis实例的工具。它可以自动发现Redis实例并监控它们的健康状况，一旦发现实例出现故障，它可以自动进行故障转移，将客户端流量引导到备用实例上，从而确保Redis服务的高可用性。\",\"Redis Sentinel还可以进行故障恢复、配置管理和通知等功能，使得Redis集群的管理更加简单和可靠\",\"redis sentinel 如何选择出新的master？\",\"监测：哨兵会不断地监听所有的redis实例，并收集关于它们健康状态的信息，包括主从关系，延迟等\",\"判断故障：当哨兵检测到主节点故障时，它会通过与其他哨兵节点进行投票来确认主节点是否真的故障\",\"选举：如果多个哨兵节点一致认为主节点故障，它们将会进行选举，选择出一个新的主节点\",\"故障转移：一旦新的主节点被选出，哨兵会通知客户端和其他redis实例，将流量引导到新的主节点\",\"在进行主节点选择时，Sentinel会考虑实例的健康状况、优先级、配置等因素，以选择最适合的实例作为新的主节点。这样可以确保新的主节点能够提供高性能和高可用性的服务。\",\"redis sentinel 可以防止脑裂么？\",\"脑裂 \",\"redis脑裂是指在redis集群中, 由于网络分区或故障，导致主节点和从节点之间出现数据不一致的情况\",\"redis 脑裂可以通过哨兵来避免，但是不保证100%能解决\"]},\"872\":{\"h\":\"2. redis集群\",\"t\":[\"redis cluster的哈希槽为啥是16384个？\",\"16384 = 2的14次方，如果槽位是65536个，发送心跳信息的消息头是65536/8/1024 = 8k；如果槽位是16384个，发送心跳信息的消息头是16384/8/1024 = 2k。因为redis每秒都会发送一定数量的心跳包，如果消息头是8k,未免有些太大了，浪费网络资源\",\"其次redis集群的主节点一般都不会超过1000个，对于节点在1000个以内的redis集群，16384个槽位完全够用\",\"槽位越小，节点少的情况下，压缩比高，容易传输。redis主节点的配置信息中它所负责的哈希槽是通过一张bitmap的形式来保存的，在传输过程中会进行bitmap压缩，bitmap 填充率 = slots /N (N表示节点数)，也就是说slots越小，填充率就会越小，压缩率就会越高，传输效率就会越高\",\"补充\",\"redis集群并没有使用一致性hash而是引入了哈希槽的概念，每个key通过crc16校验后对16384取模来决定放置哪个槽，CRC16实际有16bit，可以产生2的16次方=65536个\"]},\"873\":{\"h\":\"14. redis的大key\"},\"874\":{\"h\":\"1. 排查大key\",\"t\":[\"命令 \",\"bigkeys\"]},\"875\":{\"h\":\"2. 处理方法\",\"t\":[\"数据结构重新设计，将大key拆分为多个小key\",\"大key的数据迁移到数据库\",\"读取大key可以采用分页或流式读取的方法，逐步消费数据\"]},\"876\":{\"h\":\"15. redis事物\"},\"877\":{\"h\":\"1. redis事物支持原子性吗\",\"t\":[\"支持，Redis使用MULTI、EXEC、WATCH等命令来实现事务，当调用EXEC命令执行事务时，Redis会保证事务块内的命令序列是原子地被执行，中间不会被其他命令插队\"]},\"878\":{\"h\":\"2. redis事物有什么缺陷\",\"t\":[\"不支持事物回滚\",\"WATCH命令用于实现CAS（Compare and Swap）操作，它可以监视一个或多个键，如果在EXEC命令执行前，被监视的键发生了变化，则整个事务会取消执行。但是，WATCH是乐观锁机制，不能保证在高并发场景下一定能成功锁定资源\",\"Redis在事务执行阶段（EXEC命令前）不会对命令进行语法校验，只有真正执行时才会发现错误。这在一定程度上降低了开发调试阶段的便利性\"]},\"879\":{\"h\":\"3. 解决方案？\",\"t\":[\"事前检查\",\"使用WATCH命令： 对于需要依赖外部条件的事务，可以通过WATCH命令配合MULTI/EXEC来实现有条件的操作，确保在事务执行前数据未发生变化\",\"手动补救措施\",\"在事物执行失败后，编写相应的补救逻辑\",\"设计事物时考虑幂等性\"]},\"880\":{\"c\":[\"使用指南\"]},\"881\":{\"c\":[\"redis\"]},\"882\":{\"h\":\"Spring+SpringBoot\"},\"883\":{\"h\":\"1. Sping Ioc\"},\"884\":{\"h\":\"1. 谈谈你对spring ioc的理解？\",\"t\":[\"ioc\",\"控制反转（Inversion of Control）\",\"IOC是一种设计思想，就是将原本在程序中手动创建对象的控制权，交给spring框架来管理\",\"控制 \",\"指的是对象创建的权力\",\"反转 \",\"控制权交给外部环境（Spring 框架，IOC容器）\",\"将对象之间的相互依赖关系交给ioc容器来管理，并由ioc容器完成对象的注入\",\"实现原理\",\"Spring IoC（Inversion of Control，控制反转）是Spring框架的核心特性之一，它通过容器（ApplicationContext）来管理和装配Bean（Java对象）。IoC的设计理念是将对象的创建和管理责任转移给容器，而不是硬编码在应用程序代码中，这样可以降低组件之间的耦合度，提高代码的灵活性和可维护性。\",\"Spring IoC实现原理：\",\"容器初始化：\",\"Spring容器在启动时会读取配置信息，这些配置信息可以来自于XML配置文件、注解、Java配置类等。\",\"容器会解析这些配置信息，构建一个完整的对象依赖关系图谱（Dependency Graph）。\",\"Bean的定义与注册：\",\"用户在配置中定义Bean，通过<bean>标签或@Component等注解声明类为Spring Bean，并可以设置其属性、初始化方法、销毁方法以及作用域等信息。\",\"容器根据这些定义创建Bean实例。\",\"依赖注入（DI, Dependency Injection）：\",\"Spring IoC容器通过依赖注入来管理Bean间的依赖关系。\",\"依赖注入有两种主要形式：构造器注入（Constructor Injection）和setter注入（Setter Injection）。\",\"构造器注入是在创建Bean时通过构造函数传递依赖对象，setter注入则是通过setter方法在Bean创建后设置依赖对象。\",\"自动装配（Auto Wiring）：\",\"Spring还支持自动装配，容器可以根据Bean的类型、名称或其他条件自动匹配和注入依赖。\",\"通过@Autowired注解可以实现自动装配。\",\"生命周期管理：\",\"Spring IoC容器负责管理Bean的完整生命周期，包括实例化、初始化、依赖注入、使用以及销毁等阶段。\",\"用户可以通过实现InitializingBean接口或定义init-method，以及实现DisposableBean接口或定义destroy-method来定制Bean的初始化和销毁逻辑。\",\"Scope管理：\",\"Spring容器支持多种作用域，如Singleton（默认，单例）、Prototype（每次请求都会新建一个实例）、Request、Session（仅在Web应用中可用）等，确保在正确的作用域范围内创建和管理Bean。\",\"通过以上机制，Spring IoC容器担当了一个工厂的角色，负责创建、装配和管理应用中的所有对象，实现了对象的解耦和松散耦合的架构。\"]},\"885\":{\"h\":\"2. Spring Bean\",\"t\":[\"是指被IOC容器所管理的对象\",\"通过xml或注解配置\"]},\"886\":{\"h\":\"3. 将一个类声明Bean的注解有哪些？\",\"t\":[\"@Component\",\"@Repository\",\"@Service\",\"@Controller\"]},\"887\":{\"h\":\"4. 注入Bean的注解有哪些？\",\"t\":[\"@Autowired\",\"@Resource\",\"@Inject\"]},\"888\":{\"h\":\"5. @Autowired和@Resource的区别是什么？\",\"t\":[\"@Autowired 是spring提供的注解，@Resource是jdk提供的注解\",\"@Autowired默认的注入方式为byType(根据类型进行匹配)，@Resource默认注入方式为byName(根据名称进行匹配)\",\"当一个接口存在多个实现类的情况下，@Autowired 和@Resource都需要通过名称才能正确匹配到对应的 Bean。Autowired 可以通过 @Qualifier 注解来显式指定名称，@Resource可以通过 name 属性来显式指定名称\",\"@Autowired 支持在构造函数、方法、字段和参数上使用。@Resource 主要用于字段和方法上的注入，不支持在构造函数或参数上使用\"]},\"889\":{\"h\":\"5. Bean的作用域有哪些？\",\"t\":[\"singleton\",\"只存在一个实例\",\"prototype\",\"每次对该bean的请求都会创建一个新的实例\",\"request\",\"每个http请求都会创建一个新的实例，该实例仅在当前http请求内有效\",\"session\",\"每个http会话都会创建一个新的实例，该实例仅在当前会话内有效\",\"global session\",\"该实例仅在当前全局会话内有效\",\"application\",\"每个servletContext都会创建一个新的实例，该实例在整个web应用中有效\",\"websocket\",\"在当前websocket会话内有效\",\"如何配置bean的作用域呢？\",\"xml方式\",\"<bean id=\\\"...\\\" class=\\\"...\\\" scope=\\\"singleton\\\"></bean> \",\"注解\",\"@Bean @Scope(value = ConfigurableBeanFactory.SCOPE_PROTOTYPE) public Person personPrototype() { return new Person(); } \"]},\"890\":{\"h\":\"6. Bean的生命周期了解么？\",\"t\":[\"Spring框架中的bean生命周期包括以下几个阶段：\",\"实例化（Instantiation）：当Spring容器启动时，会根据配置文件或注解来实例化bean对象。 \",\"通俗理解 \",\"内存中申请一块内存空间\",\"租赁好房子，自己的家具东西还没搬家进去\",\"属性设置（Population）：在实例化之后，Spring容器会通过依赖注入或者调用setter方法来设置bean的属性。\",\"初始化（Initialization）：在属性设置完成后，Spring容器会调用bean的初始化方法（可以通过@PostConstruct注解或实现InitializingBean接口来定义初始化方法）。 \",\"通俗理解 \",\"完成属性的各种赋值\",\"装修、家电家具进场\",\"使用（In Use）：此时bean已经初始化完成，可以被其他bean或组件使用。\",\"销毁（Destruction）：当Spring容器关闭时，会调用bean的销毁方法（可以通过@PreDestroy注解或实现DisposableBean接口来定义销毁方法）。\",\"通过实现InitializingBean和DisposableBean接口、使用@PostConstruct和@PreDestroy注解、配置init-method和destroy-method属性等方式，可以对bean的初始化和销毁过程进行定制化操作。\"]},\"891\":{\"h\":\"2. Spring Aop\"},\"892\":{\"h\":\"1. 谈谈你对aop的理解？\",\"t\":[\"aop\",\"aspect-oriented programming: 面向切面编程\",\"能够将与业务无关，却为业务模块所共同调用的逻辑（如事务处理、日志管理、权限控制）封装起来，便于减少系统的重复代码，降低模块间的耦合度\",\"spring aop 是基于动态代理的，如果要代理的对象，实现了某个接口，那么spring aop就会使用jdk proxy, 去创建对象，而对于没有实现接口的对象，spring会使用cglib生成一个被代理对象的子类来作为代理\",\"spring aop 的实现主要依赖于代理模式和反射模式\",\"补充：jdk动态代理和cglib代理\",\"jdk动态代理 \",\"目标类和代理类要实现相同的接口\",\"jdk的动态代理主要涉及java.lang.reflect包中的两个类：Proxy和InvocationHandler。其中InvocationHandler是一个接口，可以通过实现该接口定义横切逻辑；而Proxy为InvocationHandler实现类动态创建一个符合某一接口的代理实例\",\"jdk动态代理是利用反射机制生成一个实现代理接口的匿名类，在调用具体方法前调用InvokeHandler来处理\",\"cglib代理 \",\"代理类是目标类的子类，依赖cglib.jar\",\"cglib动态代理是利用asm开源包，对代理对象类的class文件加载进来，通过修改其字节码生成子类来处理\"]},\"893\":{\"h\":\"3. Spring MVC\"},\"894\":{\"h\":\"1. spring mvc的核心组件\",\"t\":[\"dispatcherServlet: 核心的中央处理器，负责接收请求、分发\",\"handlerMapping: 处理器映射器，根据url去匹配查找能处理的handler，并会将请求涉及到的拦截器和handler一起封装’\",\"hadlerAdapter: 处理器适配器，根据HandlerMapping 找到的Handler,适配执行对应的Handler\",\"Handler: 请求处理器，处理实际请求的处理器\",\"ViewResolver: 视图解析器\"]},\"895\":{\"h\":\"2. Spring Mvc的原理？\",\"t\":[\"Spring MVC是Spring框架中用于构建Web应用程序的一部分，它基于MVC（Model-View-Controller）设计模式，用于处理Web请求和响应。下面是Spring MVC的工作原理：\",\"客户端发送请求：客户端（通常是浏览器）发送HTTP请求到Web服务器。\",\"DispatcherServlet接收请求：在Spring MVC中，所有的请求都会先经过DispatcherServlet，它充当前端控制器的角色。DispatcherServlet接收到请求后，会根据配置找到合适的处理器（Handler）来处理请求。\",\"处理器映射器（Handler Mapping）：处理器映射器负责将请求映射到相应的处理器（Controller）。它会根据请求的URL和其他条件找到合适的处理器来处理请求。\",\"执行处理器（Controller）：一旦找到了合适的处理器，DispatcherServlet会将请求转发给该处理器。处理器执行业务逻辑，可能会调用业务逻辑组件来处理请求，并返回一个ModelAndView对象，其中包含了处理结果和视图名称。\",\"视图解析器（View Resolver）：视图解析器负责将逻辑视图名称解析为实际的视图对象。它会根据视图名称找到对应的视图对象，通常是一个JSP、Thymeleaf、Freemarker等模板文件。\",\"渲染视图：一旦找到了视图对象，DispatcherServlet会将模型数据传递给视图对象，视图对象会将模型数据渲染为最终的HTML页面。\",\"响应客户端：渲染完视图后，DispatcherServlet将响应返回给客户端，完成一次请求-响应周期。\",\"Spring MVC的核心是DispatcherServlet，它协调整个请求处理流程，通过处理器映射器、处理器适配器、视图解析器等组件来实现请求的分发和处理。通过这种方式，Spring MVC能够将业务逻辑和视图展示分离，使得Web应用程序的开发更加模块化和灵活。\"]},\"896\":{\"h\":\"3. 统一异常处理怎么做？\",\"t\":[\"使用注解\",\"@ControllerAdvice + @ExceptionHandler\",\"@ControllerAdvice @ResponseBody public class GlobalExceptionHandler { @ExceptionHandler(BaseException.class) public ResponseEntity<?> handleAppException(BaseException ex, HttpServletRequest request) { //...... } @ExceptionHandler(value = ResourceNotFoundException.class) public ResponseEntity<ErrorReponse> handleResourceNotFoundException(ResourceNotFoundException ex, HttpServletRequest request) { //...... } } \"]},\"897\":{\"h\":\"4. Spring 事务\"},\"898\":{\"h\":\"1. spring事务的传播行为\",\"t\":[\"REQUIRED（默认）：如果当前存在事务，则加入该事务；如果当前没有事务，则创建一个新的事务。\",\"SUPPORTS：如果当前存在事务，则加入该事务；如果当前没有事务，则以非事务的方式执行。\",\"MANDATORY：如果当前存在事务，则加入该事务；如果当前没有事务，则抛出异常。\",\"REQUIRES_NEW：创建一个新的事务，如果当前存在事务，则将当前事务挂起。\",\"NOT_SUPPORTED：以非事务方式执行操作，如果当前存在事务，则将当前事务挂起。\",\"NEVER：以非事务方式执行操作，如果当前存在事务，则抛出异常。\",\"NESTED：如果当前存在事务，则在嵌套事务内执行；如果当前没有事务，则创建一个新的事务。\"]},\"899\":{\"h\":\"2. spring的事务隔离级别\",\"t\":[\"DEFAULT：使用数据库默认的隔禅级别，通常为数据库的默认隔离级别。\",\"READ_UNCOMMITTED：允许一个事务读取另一个事务未提交的数据修改，会导致脏读、不可重复读和幻读的问题。\",\"READ_COMMITTED：一个事务只能读取另一个事务已经提交的数据，可以避免脏读，但可能会出现不可重复读和幻读的问题。\",\"REPEATABLE_READ：确保在事务执行期间多次读取相同数据时，会得到相同的结果，可以避免脏读和不可重复读，但仍可能出现幻读的问题。\",\"SERIALIZABLE：最高的隔离级别，确保事务可以完全隔离，不会出现脏读、不可重复读和幻读的问题，但性能较差\",\" DEFAULT(TransactionDefinition.ISOLATION_DEFAULT), READ_UNCOMMITTED(TransactionDefinition.ISOLATION_READ_UNCOMMITTED), READ_COMMITTED(TransactionDefinition.ISOLATION_READ_COMMITTED), REPEATABLE_READ(TransactionDefinition.ISOLATION_REPEATABLE_READ), SERIALIZABLE(TransactionDefinition.ISOLATION_SERIALIZABLE); \"]},\"900\":{\"h\":\"5. Spring 框架中用到的设计模式\",\"t\":[\"工厂设计模式 \",\"BeanFactory、ApplicationContext 创建bean对象\",\"代理设计模式 \",\"spring 中的bean默认都是单例的\",\"模板方法模式 \",\"spring中的jdbcTemplate 等对数据库操作的类\",\"观察者模式 \",\"spring 事件驱动模型\",\"适配器模式 \",\"spring aop 的增强或通知以及mvc中适配controller\"]},\"901\":{\"h\":\"6. Spring&Springboot常用注解\"},\"902\":{\"h\":\"1. @SpringBootApplication\",\"t\":[\"加在主类上\",\"等同于 @Configuration+@EnableAutoConfiguration +@ComponentScan \",\"@EnableAutoConfiguration \",\"启用SpringBoot的自动配置机制\",\"@ComponentScan \",\"扫描被@Component (@Repository,@Service,@Controller)注解的 bean，注解默认会扫描该类所在的包下所有的类\",\"@Configuration \",\"允许在 Spring 上下文中注册额外的 bean 或导入其他配置类\"]},\"903\":{\"h\":\"2. Spring Bean相关\"},\"904\":{\"h\":\"2.1 @AutoWired\"},\"905\":{\"h\":\"2.2 @Component @Repository @Service @Controller\",\"t\":[\"@Component \",\"通用的注解，可标注任意类为Spring组件\"]},\"906\":{\"h\":\"2.3 @RestController\",\"t\":[\"@Controller + @ ResponseBody\",\"将函数的返回值直接填入http响应体中，是Rest风格的控制器\"]},\"907\":{\"h\":\"2.4 @Scope\",\"t\":[\"声明spring bean 的作用域\",\"@Bean @Scope(\\\"singleton\\\") public Person personSingleton() { return new Person(); } \"]},\"908\":{\"h\":\"2.5 @Configuration\",\"t\":[\"一般用来声明配置类，可以使用@Component注解替代\",\"@Configuration public class AppConfig { @Bean public TransferService transferService() { return new TransferServiceImpl(); } } \"]},\"909\":{\"h\":\"3. http相关\"},\"910\":{\"h\":\"3.1 @GetMapping\",\"t\":[\"get请求\",\"@GetMapping(\\\"/users\\\") public ResponseEntity<List<User>> getAllUsers() { return userRepository.findAll(); } \"]},\"911\":{\"h\":\"3.2 @PostMapping\"},\"912\":{\"h\":\"3.3 @PutMapping\"},\"913\":{\"h\":\"3.4 @DeleteMapping\"},\"914\":{\"h\":\"4. 前后端传值\"},\"915\":{\"h\":\"4.1 @PathVariable 和 @RequestParam\",\"t\":[\"@PathVariable： 用于获取路径参数\",\"@RequestParam: 用于获取查询参数\",\"举例\",\"假设请求url: /klasses/123456/teachers?type=web\",\"@GetMapping(\\\"/klasses/{klassId}/teachers\\\") public List<Teacher> getKlassRelatedTeachers( @PathVariable(\\\"klassId\\\") Long klassId, @RequestParam(value = \\\"type\\\", required = false) String type ) { ... } 获取到的数据为：klassId=123456,type=web \"]},\"916\":{\"h\":\"4.2 @RequestBody\",\"t\":[\"用于读取 Request 请求（可能是 POST,PUT,DELETE,GET 请求）的 body 部分并且Content-Type 为 application/json 格式的数据，接收到数据之后会自动将数据绑定到 Java 对象上去\",\"需要注意： 一个请求方法只可以有一个 @RequestBody\"]},\"917\":{\"h\":\"5. 读取配置文件\"},\"918\":{\"h\":\"5.1 @Value(常用)\",\"t\":[\"使用 @Value(\\\"${property}\\\") 读取比较简单的配置信息\",\"@Value(\\\"${test}\\\") String test; \"]},\"919\":{\"h\":\"5.2 @ConfigurationProperties(常用)\",\"t\":[\"wuhan2020: 2020年初武汉爆发了新型冠状病毒，疫情严重，但是，我相信一切都会过去！武汉加油！中国加油！ my-profile: name: Guide哥 email: koushuangbwcx@163.com library: location: 湖北武汉加油中国加油 books: - name: 天才基本法 description: 二十二岁的林朝夕在父亲确诊阿尔茨海默病这天，得知自己暗恋多年的校园男神裴之即将出国深造的消息——对方考取的学校，恰是父亲当年为她放弃的那所。 - name: 时间的秩序 description: 为什么我们记得过去，而非未来？时间“流逝”意味着什么？是我们存在于时间之内，还是时间存在于我们之中？卡洛·罗韦利用诗意的文字，邀请我们思考这一亘古难题——时间的本质。 - name: 了不起的我 description: 如何养成一个新习惯？如何让心智变得更成熟？如何拥有高质量的关系？ 如何走出人生的艰难时刻？ \",\"@Component @ConfigurationProperties(prefix = \\\"library\\\") class LibraryProperties { @NotEmpty private String location; private List<Book> books; @Setter @Getter @ToString static class Book { String name; String description; } 省略getter/setter ...... } \"]},\"920\":{\"h\":\"5.3 @PropertySource\",\"t\":[\"读取指定properties文件\",\"@Component @PropertySource(\\\"classpath:website.properties\\\") class WebSite { @Value(\\\"${url}\\\") private String url; 省略getter/setter ...... } \"]},\"921\":{\"h\":\"7 . Springboot 自动装配原理？\"},\"922\":{\"h\":\"1. 什么是自动装配？\",\"t\":[\"减去繁琐的配置，通过注解或者一些简单的配置就能在spring boot下实现某块功能\"]},\"923\":{\"h\":\"2. Springboot 是如何实现自动装配的\",\"t\":[\"@EnableAutoConfiguration：Spring Boot的自动装配是通过@EnableAutoConfiguration注解来实现的。这个注解会触发Spring Boot的自动配置机制，根据项目的依赖和配置来自动配置应用程序的各种组件。\",\"条件化配置：Spring Boot的自动装配是基于条件化配置的，通过@Conditional注解和条件化的配置类来决定是否应该应用某些配置。比如，根据类路径中是否存在某个类、是否存在某个Bean、是否满足某些条件等来决定是否自动配置某个组件。\",\"自动配置类：Spring Boot中有大量的自动配置类，这些类用于根据条件来自动配置各种组件，比如数据源、JPA、Web应用程序等。这些自动配置类会根据条件来判断是否需要自动配置某个组件。\",\"自动扫描：Spring Boot会自动扫描项目中的依赖和配置，根据扫描到的内容来决定是否需要自动配置某个组件\",\"springboot 将自动装配的类放在spring-boot-autoconfigure包的META-INF/spring.factories文件中\",\"总结：\",\"Spring Boot 通过@EnableAutoConfiguration开启自动装配，通过 SpringFactoriesLoader 最终加载META-INF/spring.factories中的自动配置类实现自动装配，自动配置类其实就是通过@Conditional按需加载的配置类，想要其生效必须引入spring-boot-starter-xxx包实现起步依赖\"]},\"924\":{\"h\":\"8. Spring 循环依赖？\",\"t\":[\"定义 \",\"多个bean之间相互依赖，形成了一个闭环。比如：A依赖B,B依赖C、C依赖于A\",\"两种依赖方式 \",\"构造器循环依赖 \",\"spring 容器无法解决构造器级别的循环依赖，因为构造器注入必须在实例化阶段完成，而在实例化过程中遇到循环依赖会导致死锁，spring会抛出BeanCurrentlyInCreationException异常\",\"setter属性循环依赖 \",\"setter属性循环依赖是指Bean A通过setter方法注入依赖于Bean B，而Bean B也通过setter方法注入依赖于Bean A\",\"spring 通过三级缓存机制巧妙地解决了setter注入的循环依赖问题\",\"两种注入方式对循环依赖的影响？ \",\"AB循环依赖问题只要A的注入方式是setter且singleton,就不会有循环依赖问题\",\"​\"]},\"925\":{\"h\":\"9. Spring 三级缓存\",\"t\":[\"DefaultSingletonBeanRegistry 类\",\"三个map\",\"第一级缓存（也叫单例池）singletonObjects:存放已经经历 了完整生命周期的Bean对象 （成品）\",\"第二级缓存：earlySingletonObjects,存放早期暴露出来的Bean 对象，Bean的生命周期未结束 （半成品）\",\"第三级缓存：Map<String,ObjectFactory> singletonFactories, 存放可以生成Bean的工厂 （工厂）\",\"image-20240318160307799\",\"spring内部通过三级缓存来解决循环依赖\",\"A/B两对象在三级缓存中的迁移说明\",\"A创建过程中需要B，于是A将自己放到三级缓存里面，去实例化B\",\"B实例化的时候发现需要A,于是B先查一级缓存，没有，再查二级缓存，还没没有，再查三级缓存，找到了A然后把三级缓存里面的这个A放到二级缓存里面，并删除三级缓存里面的A\",\"B顺利初始化完毕，将自己放到一级缓存里面（此时B里面的A依然是创建中状态），然后回来接着创建A,此时B已经创建结束，直接从一级缓存里面拿到B, 然后完成创建，并将A自己放到一级缓存里面\",\"四个方法\",\"getSingleton\",\"doCreateBean\",\"populateBean\",\"addSingleton\"]},\"926\":{\"h\":\"10. springboot的启动流程\",\"t\":[\"Spring Boot 的启动流程可以概括为以下几个关键步骤：\",\"启动入口点：\",\"Spring Boot 应用程序的启动始于 public static void main(String[] args) 方法，其中通常会调用 SpringApplication.run(Application.class, args) 方法。\",\"初始化SpringApplication：\",\"创建 SpringApplication 实例，构造函数中会做一些基本的初始化工作，包括检测和决定应用程序类型（如Servlet容器、反应式容器或无容器）、初始化一些基础的ApplicationContext Initializer 和 ApplicationListener。\",\"加载环境和外部配置：\",\"Spring Boot 会创建一个 Environment 对象，它封装了应用程序运行时的所有环境属性。环境配置来源于多个地方，包括命令行参数、系统环境变量、JVM系统属性、application.properties 或 application.yml 配置文件等。\",\"Spring Boot 的 Auto-Configuration：\",\"自动配置是Spring Boot的核心特性之一，它会根据项目类路径（classpath）上的 jar 包和类来智能地决定哪些 beans 应该被添加到 ApplicationContext 中。这个过程通过扫描 META-INF/spring.factories 文件中声明的 EnableAutoConfiguration 类来实现。\",\"创建ApplicationContext：\",\"SpringApplication 通过调用 createApplicationContext() 方法来创建 ApplicationContext，这一步会依据应用程序类型选择合适的上下文实现，如 AnnotationConfigServletWebServerApplicationContext（用于Servlet环境）或 AnnotationConfigReactiveWebServerApplicationContext（用于响应式环境）\",\"6 . 加载Spring Beans：\",\"创建好 ApplicationContext 之后，Spring Boot 开始加载和注册所有的 Spring Beans，包括用户自定义的和通过自动配置生成的bean。\",\"启动监听器：\",\"加载并初始化从 META-INF/spring.factories 文件中声明的 ApplicationListener 实现，这些监听器将在应用生命周期的不同阶段被触发\",\"启动嵌入式Web服务器：\",\"如果是Web应用程序，Spring Boot会根据配置自动创建和配置嵌入式Web服务器，如Tomcat或Jetty，并将Spring容器注册到Web容器中，使其能够对外提供HTTP服务。\",\"执行ApplicationRunner/CommandLineRunner：\",\"Spring Boot 会查找并执行实现了 ApplicationRunner 或 CommandLineRunner 接口的bean，这些接口定义的方法会在所有Spring Beans初始化完成后被执行，通常用于应用启动后的额外初始化任务。\",\"启动完成：\",\"当所有准备工作完成后，Spring Boot 应用程序便处于启动完成并等待处理请求的状态。\",\"以上就是Spring Boot启动的大致流程，每个步骤都涉及众多细节，但核心思路是简化应用配置、自动装配和启动过程，使得开发者可以快速构建和部署微服务应用。\"]},\"927\":{\"h\":\"11. spring BeanFactory和FactoryBean的区别\",\"t\":[\"BeanFactory \",\"是Spring Ioc容器的核心接口，它负责管理和实例化应用程序中定义的Bean。\",\"是个工厂\",\"FacotryBean \",\"是一个特殊的Bean, 它是一个接口, 允许开发者通过实现该接口来提供Bean的实例的创建逻辑\"]},\"928\":{\"c\":[\"spring\"]},\"929\":{\"c\":[\"java\"]},\"930\":{\"h\":\"SpringCloud\"},\"931\":{\"h\":\"1. springcloud 对应的组件？\",\"t\":[\"服务注册发现\",\"nacos （cloud alibaba）\",\"consul （cloud最新）\",\"eureka (淘汰)\",\"负载均衡\",\"LoadBalancer (cloud最新)\",\"ribbon (淘汰)\",\"服务调用\",\"openFeign\",\"断路器\",\"CircuitBreaker （cloud最新）\",\"hystrix (淘汰)\",\"网关\",\"gateway\",\"分布式链路追踪\",\"Sleuth(Micrometer) + ZipKin\",\"SpringCloud Alibaba Nacos\",\"服务注册和配置中心\",\"SpringCloud Alibaba Sentinel\",\"服务的熔断和限流\",\"SpringCloud Alibaba Seata\",\"分布式事务\"]},\"932\":{\"h\":\"2. CAP&BASE理论\"},\"933\":{\"h\":\"1. CAP\",\"t\":[\"Consistency\",\"一致性\",\"所有节点访问同一份最新的数据副本\",\"Availability\",\"可用性\",\"非故障的节点在合理的时间内返回合理的响应\",\"Partition Tolerance\",\"分区容错性\",\"分布式系统出现网络分区的时候，仍然能够对外提供服务\",\"CAP 理论中分区容错性 P 是一定要满足的，在此基础上，只能满足可用性 A 或者一致性 C\",\"常见注册中心\",\"zookeeper保证的是cp \",\"任何时刻对 ZooKeeper 的读请求都能得到一致性的结果\",\"zookeeper 不保证每次请求的可用性\",\"eureka保证的是ap \",\"Eureka 保证即使大部分节点挂掉也不会影响正常提供服务，只要有一个节点是可用的就行了\",\"nacos 支持ap和cp\"]},\"934\":{\"h\":\"2. BASE理论\",\"t\":[\"Basically Available \",\"基本可用\",\"分布式系统在出现不可预知故障的时候，允许损失部分可用性。但是，这绝不等价于系统不可用\",\"Soft-state \",\"软状态\",\"允许系统中的数据存在中间状态（CAP 理论中的数据不一致），并认为该中间状态的存在不会影响系统的整体可用性，即允许系统在不同节点的数据副本之间进行数据同步的过程存在延时\",\"Eventually Consistent \",\"最终一致性\",\"最终一致性强调的是系统中所有的数据副本，在经过一段时间的同步后，最终能够达到一个一致的状态\",\"核心思想 \",\"即使无法做到强一致性，但每个应用都可以根据自身业务特点，采用适当的方式来使系统达到最终一致性\"]},\"935\":{\"h\":\"3. SpringCloud Gateway\"},\"936\":{\"h\":\"1. spring cloud gateway 支持限流吗\",\"t\":[\"支持，限流是一种常见的微服务网关功能，用于控制对后端服务的请求流量，以防止过载和保护后端服务\",\"内置的限流过滤器是基于令牌桶算法或漏桶算法实现的\",\"令牌桶算法：允许一定的突发流量\",\"漏桶算法则可以平滑请求流量\",\"实现\",\"方法一\",\"使用RequestRateLimiterGatewayFilterFactory来配置基于令牌桶算法的限流策略\",\"spring: cloud: gateway: routes: - id: my_route uri: http://example.org predicates: - Path=/foo/** filters: - name: RequestRateLimiter args: key-resolver: \\\"#{@userKeyResolver}\\\" redis-rate-limiter.replenishRate: 1 redis-rate-limiter.burstCapacity: 3 \",\"方法二\",\"自定义限流过滤器，实现GatewayFilter接口\",\"@Component public class CustomRateLimiterFilter implements GatewayFilter, Ordered { // 实现限流逻辑 } \"]},\"937\":{\"h\":\"4. 分布式ID\"},\"938\":{\"h\":\"1. 雪花算法\",\"t\":[\"雪花算法（Snowflake）是一种分布式唯一ID生成算法，它的实现原理是基于Twitter的Snowflake算法。Snowflake算法的核心思想是将一个64位的整数ID分成三部分：时间戳、机器ID和序列号。具体实现如下：\",\"时间戳部分（41位）：记录生成ID的时间，精确到毫秒级，可以用69年。\",\"机器ID部分（10位）：记录机器的ID，可以分配1024台机器。\",\"序列号部分（12位）：记录同一毫秒内生成的ID序号，可以生成4096个ID。\",\"Snowflake算法的优点包括：\",\"分布式唯一性：每个ID都是唯一的，且可以在分布式系统中生成。\",\"高性能：生成ID的速度很快，不会影响系统的性能。\",\"简单易用：Snowflake算法的实现比较简单，可以轻松集成到各种系统中。\",\"Snowflake算法的缺点包括：\",\"时钟回拨问题：如果系统时钟发生回拨，可能会导致生成的ID不唯一。\",\"依赖机器ID：需要为每台机器分配一个唯一的ID，如果机器数量过多会增加管理成本。\",\"有限的时间范围：由于时间戳部分只有41位，所以Snowflake算法能够使用的时间范围是有限的。\",\"总的来说，雪花算法是一种简单高效的分布式ID生成算法，适用于大多数分布式系统。但在实际应用中需要注意时钟回拨问题和机器ID的管理。\"]},\"939\":{\"h\":\"2. 美团叶子算法\",\"t\":[\"leaf- 解决了雪花算法时钟回拨问题\"]},\"940\":{\"h\":\"5. 分布式锁\",\"t\":[\"redisson\"]},\"941\":{\"h\":\"6. 分布式事务\"},\"942\":{\"h\":\"1. 2PC 3PC TCC了解么\",\"t\":[\"2pc\",\"两阶段提交，将事务的提交过程分为资源准备和资源提交提交两个阶段，并且由事务协调者来协调所有事物参与者；如果准备阶段所有事物参与者都预留资源成功，则进行第二阶段的资源提交，否则事物协调者回滚资源\",\"第一阶段：准备阶段\",\"第二阶段：提交阶段\",\"事物的提交\",\"事物的回滚\",\"缺点\",\"性能问题\",\"可靠性问题\",\"数据一致性问题\",\"二阶段无法解决的问题 \",\"协调者在发出 commit 消息之后宕机，而唯一接收到这条消息的参与者同时也宕机了，那么即使协调者通过选举协议产生了新的协调者，这条事务的状态也是不确定的，没人知道事务是否被已经提交\",\"3pc\",\"三阶段提交协议\",\"对2pc的改进，在第一阶段和第二阶段中插入了一个准备阶段\",\"在协调者和参与者中引入超时机制\",\"3pc会分为3个阶段\",\"准备阶段\",\"预提交阶段 \",\"执行事务\",\"或者中断事务\",\"提交阶段 \",\"提交事务\",\"或者中断事务\",\"优缺点\",\"优点 \",\"降低了阻塞范围，并且在等待超时后，协调者或参与者会中断事务，避免了协调者单点问题，\",\"缺点 \",\"数据不一致问题依然存在\",\"TCC\",\"全称：Try Confirm Cancel；是应用层的两阶段提交\",\"核心思想\",\"针对每个操作，都要实现对应的确认和补偿操作，也就是业务逻辑的每个分支都需要实现try、confirm、cancel三个操作\",\"tcc的执行流程可以分为两个阶段\",\"第一阶段 \",\"try: 业务系统做检测并预留资源，比如常见的下单，在try阶段是将下单的库存给锁住\",\"第二阶段 \",\"根据第一阶段的结果决定是执行confirm还是cancel\",\"cnonfirm : 执行真正的业务\",\"cancle: 是对try阶段预留资源的释放（出问题，释放锁）\"]},\"943\":{\"h\":\"7. 负载均衡\"},\"944\":{\"h\":\"1. 负载均衡算法\",\"t\":[\"随机法\",\"轮询\",\"加权轮询\",\"加权随机\",\"最小并发连接\",\"哈希算法\"]},\"945\":{\"h\":\"8. 服务限流\"},\"946\":{\"h\":\"1. 固定窗口计数器算法\",\"t\":[\"固定窗口其实就是时间窗口，固定窗口计数器算法规定了单位时间处理的请求数量\",\"不推荐使用，体验差\"]},\"947\":{\"h\":\"2. 滑动窗口计数器算法\",\"t\":[\"是固定窗口计数器的升级版\",\"它把时间以一定比例分配\",\"当滑动窗口的格子划分的越多，滑动窗口的滚动就越平滑，限流的统计就会越精准\"]},\"948\":{\"h\":\"3.漏桶算法\",\"t\":[\"我们可以把发请求的动作比作成注水到桶中，我们处理请求的过程可以比喻为漏桶漏水。我们往桶中以任意速率流入水，以一定速率流出水。当水超过桶流量则丢弃，因为桶容量是不变的，保证了整体的速率\",\"漏桶算法强制限制数据的传输速率，使其保持稳定，不允许突发流量，即无论系统的处理能力如何，流出速率总是稳定的，无法处理超过预设速率的突发请求\"]},\"949\":{\"h\":\"4. 令牌桶算法\",\"t\":[\"基本原理：\",\"令牌桶算法维护一个固定容量的桶，桶中以固定速率生成令牌，每个令牌代表一个请求的处理权限。\",\"当请求到达时，需要从桶中获取一个令牌，如果桶中有足够的令牌，则允许处理该请求；如果桶中没有足够的令牌，则拒绝该请求或者将请求放入队列中等待令牌。\",\"桶中的令牌数量有上限，如果桶满了，新生成的令牌将被丢弃。\",\"实现限流的设计过程：\",\"初始化令牌桶，设置桶的容量和令牌生成速率。\",\"定时以固定速率向桶中添加令牌，直到桶满为止。\",\"当请求到达时，尝试从桶中获取一个令牌，如果成功则处理该请求，否则拒绝请求或者将请求放入队列中等待。\",\"不足之处：\",\"令牌桶算法需要定时地生成令牌，这可能会引入额外的系统开销。\",\"令牌过期问题\",\"令牌生成速率预先设定\",\"更好的方案：\",\"漏桶算法与令牌桶算法类似，也是用于流量整形和限速。不同的是，漏桶算法对流入的请求均匀流出，不管请求何时到达，都按固定速率处理。它可以严格控制数据发送速率，且不会允许突发流量，适用于对输出速率有稳定要求且不允许突刺的场景。\"]},\"950\":{\"h\":\"9 . openFeigin\"},\"951\":{\"h\":\"1. 使用\",\"t\":[\"主启动类增加 @EnableFeiginClients\",\"业务逻辑接口 @FeignClient\",\"@Component @FeignClient(value = \\\"CLOUD-PAYMENT-SERVICE\\\") public interface PaymentFeignService { @GetMapping(value = \\\"/payment/get/{id}\\\") CommonResult<Payment> getPaymentById(@PathVariable(\\\"id\\\") Long id); } \"]},\"952\":{\"h\":\"2. 超时时间\",\"t\":[\"openFeigin默认的超时时间是1秒钟。这意味着如果调用的服务在1秒内没有响应，openFeign将会抛出超时异常，需要修改配置\",\"feign: client: config: default: ## 连接超时时间，设置了5秒 connectTimeout: 5000 ## 读取的超时时间，设置了10秒 readTimeout: 10000 \"]},\"953\":{\"h\":\"3. feign调用的底层原理\",\"t\":[\"Feign是一个声明式的HTTP客户端，它使得编写Web服务客户端变得非常容易。在Spring Cloud中，Feign被用来实现服务间的调用，即微服务之间的RPC（Remote Procedure Call）通信。\",\"Feign的底层主要依赖于 Ribbon 和 HTTP 客户端（如 Apache HttpClient 或 OkHttp）。其工作原理可以简单描述为：\",\"动态代理：Feign通过JDK或CGLIB动态代理技术创建一个接口的实现类，这个实现类会包装请求方法，当调用这个方法时，实际上是在执行一个HTTP请求。\",\"编码/解码：对于方法参数，Feign会通过Encoder进行编码转换成适合HTTP传输的格式（如JSON、XML等），然后通过HTTP客户端发送请求。接收到响应后，再通过Decoder将HTTP响应内容解码成Java对象返回。\",\"负载均衡：Feign集成了Ribbon，能够实现客户端负载均衡，即在调用远程服务时，可以根据配置的负载均衡策略选择目标服务实例。\",\"Hystrix支持：默认情况下，Feign集成了Hystrix（可选配置），可以实现服务降级、熔断以及隔离等功能，提高系统的稳定性和容错性。\",\"超时与重试：通过Ribbon，Feign可以设置请求的超时时间和重试次数等策略。\",\"总结来说，Feign利用了Ribbon的客户端负载均衡和多种HTTP客户端库的能力，结合自己强大的API声明式定义和处理机制，使得服务间调用变得更加简洁、高效且易于维护。\"]},\"954\":{\"h\":\"4. feign 优化\",\"t\":[\"超时设置优化\",\"默认HttpClient修改为Apache HttpClient\",\"对请求和响应进行GZIP压缩\"]},\"955\":{\"h\":\"10 Hystrix\"},\"956\":{\"h\":\"1. 服务降级\",\"t\":[\"定义 \",\"服务器忙，请稍后再试，不让客户端等待并立刻返回一个友好提示，fallback\",\"哪些情况会发生降级 \",\"程序运行异常\",\"超时\",\"服务熔断触发服务降级\",\"线程池/信号量打满也会导致服务降级\",\"配置的降级策略生效：在一些框架（如Hystrix、Sentinel）中，可以根据预先设定的规则（如RT响应时间、QPS请求数量等）自动触发服务降级\"]},\"957\":{\"h\":\"2. 服务熔断\",\"t\":[\"定义\",\"类似保险丝达到最大服务访问后，直接拒绝访问，拉闸限电，然后调用服务降级的方法并返回友好提示\",\"服务的降级-->进而熔断-->恢复调用链路\"]},\"958\":{\"h\":\"3. 服务限流\",\"t\":[\"定义 \",\"秒杀高并发等操作，严禁一窝蜂的过来拥挤，大家排队，一秒钟N个，有序进行\"]},\"959\":{\"h\":\"4. 注解\"},\"960\":{\"h\":\"1. @HystrixCommand\",\"t\":[\"服务降级\",\"需要有一个兜底的方法\",\"@HystrixCommand(fallbackMethod = \\\"paymentInfo_TimeOutHandler\\\",commandProperties = { @HystrixProperty(name=\\\"execution.isolation.thread.timeoutInMilliseconds\\\",value=\\\"3000\\\") }) public String paymentInfo_TimeOut(Integer id){} \"]},\"961\":{\"h\":\"2. @DefaultProperties(defaultFallback = \\\"\\\")\",\"t\":[\"@HystrixCommand 需要在每个方法配置一个，太繁琐\",\"@DefaultProperties(defaultFallback = \\\"payment_Global_FallbackMethod\\\") public class PaymentHystirxController{} \"]},\"962\":{\"h\":\"11. sentinel\"},\"963\":{\"h\":\"1. @SentinelResource\",\"t\":[\"可以对资源进行限流、熔断、降级等操作\",\"@SentinelResource(value = \\\"resourceName\\\", blockHandler = \\\"handleBlock\\\") public String getResource() { // 方法逻辑 } \",\"在上面的例子中，@SentinelResource 注解标识了 getResource 方法为 Sentinel 的资源，其中 value 属性指定了资源的名称。另外，通过 blockHandler 属性指定了当资源被流控时的处理方法，即 handleBlock 方法。这样就可以实现对资源的限流操作。\",\"除了 blockHandler 属性外，@SentinelResource 注解还支持其他属性，比如 fallback、defaultFallback 等，用于指定资源被降级或熔断时的处理方法\"]},\"964\":{\"h\":\"2. 限流规则\",\"t\":[\"流控\",\"直接\",\"关联\",\"image-20240414164111402\",\"熔断\",\"image-20240414164202806\",\"热点规则\",\"授权规则\"]},\"965\":{\"h\":\"12 . Seata\"},\"966\":{\"h\":\"1. 使用\",\"t\":[\"@GlobalTransactional\"]},\"967\":{\"h\":\"2. 三大组件\",\"t\":[\"TC\",\"全局事务协调器，负责全局事务的协调和管理\",\"Transaction Coordinator\",\"TM\",\"事务管理器，负责全局事务的发起、提交和回滚\",\"Transaction Manager\",\"RM\",\"资源管理器，负责管理分支事务的生命周期\",\"Resource Manager\",\"流程\",\"TM 开启分布式事务（TM 向 TC 注册全局事务记录）；\",\"按业务场景，编排数据库、服务等事务内资源（RM 向 TC 汇报资源准备状态 ）；\",\"TM 结束分布式事务，事务一阶段结束（TM 通知 TC 提交/回滚分布式事务）；\",\"TC 汇总事务信息，决定分布式事务是提交还是回滚；\",\"TC 通知所有 RM 提交/回滚 资源，事务二阶段结束。\"]},\"968\":{\"h\":\"3. 底层原理\",\"t\":[\"Seata 提供了多种分布式事务模式，包括 AT（Automatic Transaction）、TCC（Try-Confirm-Cancel）、Saga 和 XA。以下是 Seata 在 AT 模式下解决分布式事务的基本原理：\",\"Seata AT 模式的底层原理：\",\"全局事务协调器（TC，Transaction Coordinator）： \",\"TC 组件负责维护全局事务的生命周期，包括开启事务、提交事务或回滚事务，并记录全局事务状态。\",\"分支事务协调器（TM & RM，Transaction Manager & Resource Manager）： \",\"TM 是全局事务的发起者，通常嵌入在应用服务中，负责开启全局事务并将本地事务转换为全局事务。\",\"RM 是资源管理器，每个数据库作为一个RM，Seata提供了RM代理，将其对接到数据库，负责单机事务的提交和回滚。\",\"事务上下文和undo/redo日志： \",\"开启全局事务后，Seata 会在每个参与分布式事务的数据库实例上注册分支事务，并在执行SQL前保存原始数据到Undo Log（用于回滚）和在执行后保存已更新的数据到Redo Log（用于重做）。\",\"事务提交与回滚： \",\"全局提交时，TC 通知所有RM提交分支事务，RM根据Redo Log提交更改。\",\"若任何RM提交失败，则TC通知所有RM回滚，RM根据Undo Log还原事务执行前的状态。\",\"一致性保障： \",\"通过两阶段提交（2PC）的过程，确保所有分支事务要么全部提交，要么全部回滚，以此来保证分布式事务的一致性。\",\"流程概览：\",\"开启全局事务：TM 向 TC 发起全局事务的开启请求，并获得全局事务ID（XID）。\",\"分支事务注册：在每个数据库操作之前，TM 将本地事务与全局事务关联，并将操作前的原始数据存入 Undo Log。\",\"执行本地事务：应用正常执行本地 SQL。\",\"分支事务报告：在本地事务提交前，TM 把分支事务的状态报告给 TC。\",\"全局提交/回滚决策：TC 根据所有分支事务的状态作出全局提交或回滚的决定，并通知所有RM执行相应的动作。\",\"通过这种方式，Seata AT模式能够在分布式环境下模拟出类似于传统数据库ACID特性的一致性事务行为。\"]},\"969\":{\"h\":\"13 . nacos\"},\"970\":{\"h\":\"1. nacos的心跳机制？\",\"t\":[\"客户端心跳\",\"对于临时实例（租约模式），Nacos 使用客户端主动上报心跳的方式。每个服务实例在其启动后，通过集成的 Nacos 客户端 SDK 向 Nacos Server 发送心跳，通常是周期性的 HTTP 请求或者 TCP 协议的数据包。\",\"心跳包通常包含服务实例的基本信息和当前状态，比如服务ID、IP地址、端口、权重等信息。\",\"如果服务实例在指定的时间间隔内没有向 Nacos Server 报告心跳，则会被标记为不健康或下线，不再对外提供服务发现，从而防止客户端调用已失效的服务实例。\",\"服务端探测\",\"对于持久实例（非租约模式），Nacos 采用服务端主动探测的方式来进行健康检查。服务端会按照预设的时间间隔向服务实例发起探测请求，例如发送 HTTP GET 或者 TCP PING 请求。\",\"如果服务实例能正确响应探测请求，那么认为该实例是健康的；如果连续多次探测失败，则服务端会认为该实例不健康，并从服务列表中剔除。\",\"nacos的心跳默认是5秒，即服务实例默认每隔5秒向nacos服务器发送一次心跳。默认超时时间可能是15秒或者30秒，那么如何通过配置文件修改呢\",\"# Spring Boot 应用中的 application.yml 或 application.properties 文件 spring: cloud: nacos: discovery: # 设置服务实例心跳间隔 heartbeat: interval: 5000 # 单位：毫秒，这里设置为5秒，可根据实际需要调整 timeout: 15000 # 单位：毫秒，这是心跳超时时间，超过这个时间未收到心跳，服务将被视为不健康 # 根据某些版本或特定场景的配置项，可能会使用如下形式： # metadata: # preserved.heart.beat.interval: 5000 # 用于设置心跳间隔 # preserved.heart.beat.timeout: 15000 # 设置心跳超时时间 # Nacos 服务注册中心地址 server-addr: localhost:8848 注意：上述配置的具体键值可能会随着 Nacos 和 Spring Cloud Alibaba 版本的变化而变化，请根据所使用的 Nacos 客户端版本文档进行准确配置。 如果你不是使用 Spring Cloud 集成而是直接使用 Nacos 客户端 SDK，则需要参考对应的 SDK 文档来配置心跳间隔等参数，通常是在初始化客户端时通过 API 进行设置。 \"]},\"971\":{\"h\":\"2. nacos服务注册发现的原理\",\"t\":[\"Nacos 作为阿里巴巴开源的一款集成了服务注册与发现、配置管理、动态DNS服务于一体的中间件，其底层实现服务注册和发现的过程主要包括以下几个关键步骤和技术要点：\",\"服务注册：\",\"当服务实例启动时，通过集成Nacos SDK，服务实例会向Nacos Server发起注册请求，提交自身的服务ID、IP地址、端口、元数据等信息。\",\"Nacos Server接收这些信息并存储在内部的数据结构中，通常是基于内存的高性能数据存储方案，以保证服务注册和查询的高效率。\",\"Nacos Server还支持持久化到磁盘或数据库（如MySQL），以便在服务器重启或集群环境下保持服务实例列表的一致性。\",\"服务心跳：\",\"注册成功后，服务实例会维持一个心跳机制，定期向Nacos Server发送心跳，表明自己的存活状态。\",\"若Nacos Server在指定时间内未收到服务实例的心跳，则认为该实例已下线，并从服务列表中移除。\",\"服务发现：\",\"当客户端（消费者）需要调用服务时，它会通过Nacos SDK向Nacos Server发起服务发现请求，请求指定服务名下的可用服务实例列表。\",\"Nacos Server根据服务名查找对应的服务实例集合，筛选出健康在线的服务实例，并将这些信息返回给客户端。\",\"如果配置了健康检查和负载均衡策略，Nacos还会根据策略进一步过滤和排序服务实例列表。\",\"健康检查：\",\"Nacos支持主动健康检查，通过健康检查插件可以检测服务实例的实际健康状况，例如通过TCP、HTTP等方式验证服务是否可用。\",\"数据同步：\",\"在集群部署模式下，Nacos Server之间的数据同步采用Raft一致性算法保证数据的强一致性，从而确保各个节点上的服务注册信息和服务发现结果是一致的。\",\"DNS服务：\",\"另外，Nacos还提供了DNS服务发现模式，客户端可以直接通过DNS协议获取服务实例的IP地址和端口，无需直接调用Nacos API，简化了服务发现过程。\",\"总的来说，Nacos通过一套高效可靠的消息通信机制、数据存储与同步策略以及服务健康监测机制，实现了微服务架构中的服务注册与发现的核心功能。\"]},\"972\":{\"h\":\"3. nacos动态刷新底层实现\",\"t\":[\"@RefreshScope 是 Spring Cloud 体系中用来实现实时刷新配置的一种注解，特别在结合 Nacos 作为配置中心时，能够使得应用在无需重启的情况下，动态更新从 Nacos 中获取的配置。\",\"@RefreshScope 工作原理概览：\",\"注入 Bean 时的代理机制：\",\"当一个类或者方法被标记为 @RefreshScope 注解时，Spring 容器不会直接实例化该 Bean，而是通过 CGLIB 或 JDK 动态代理创建一个代理对象。\",\"当其他组件依赖这个 Bean 时，实际上是依赖于这个代理对象。\",\"监听配置变化：\",\"Nacos 客户端（如 NacosConfigService）会周期性地或通过长轮询方式从 Nacos 服务器拉取配置信息，检测是否有变更。\",\"当配置发生变更时，Nacos 客户端会接收到通知。\",\"触发刷新：\",\"配置变化后，Nacos 客户端会通过某种机制（例如发布一个 RefreshEvent 事件到 Spring Cloud 的事件广播系统）通知到所有带有 @RefreshScope 的 Bean。\",\"在 Spring Cloud 生态中，有一个 RefreshScope 类，它实现了 ApplicationListener 接口，因此它可以监听到 RefreshScopeRefreshedEvent 或 RefreshEvent，并在接收到这些事件时，重新加载并刷新代理对象中的配置属性值。\",\"属性注入更新：\",\"对于那些通过 @Value 注解从配置中心读取的属性，一旦配置刷新，相应的 Bean 属性值也会随之更新。\",\"主动刷新接口：\",\"除了被动监听配置变化外，也可以通过访问 /refresh 端点主动触发整个应用程序范围内的配置刷新。\",\"总结来说，@RefreshScope 的作用是配合配置中心（如 Nacos）实现配置的热更新，确保应用在运行时能响应外部配置的变化，从而增强了微服务架构下的灵活性和可运维性。\"]},\"973\":{\"h\":\"14. xxl-job\"},\"974\":{\"h\":\"1.xxl-job 和elastic-job的区别\",\"t\":[\"xxl-job 和 elastic-job 都是用于解决分布式环境下的定时任务调度问题，但它们的设计理念和适用场景有所不同：\",\"xxl-job：\",\"出自大众点评，后来由阿里云继续维护和开发。\",\"它是一个分布式的任务调度框架，采用中心化的设计，调度中心通过数据库锁来保证集群分布式调度的一致性。\",\"易于管理和监控，提供友好的Web界面，支持任务失败后的报警功能。\",\"依赖MySQL数据库作为持久化存储，不依赖Zookeeper等分布式协调服务。\",\"优势在于其简洁易用，对于中小规模的分布式任务调度场景非常适合。\",\"elastic-job：\",\"原先是由当当网开发，现在属于Apache ShardingSphere生态的一部分。\",\"分为Elastic-Job-Lite和Elastic-Job-Cloud两种模式，分别对应轻量级和云原生的解决方案。\",\"Elastic-Job-Lite是去中心化的解决方案，无需中心节点，基于Zookeeper实现分布式协调。\",\"强调弹性和可扩展性，支持任务分片和作业失败的转移执行，提供丰富的容错策略。\",\"对于大规模分布式任务调度，尤其是需要高性能和高度弹性的场景，Elastic-Job的功能更加全面和强大。\",\"选择哪一个更好主要取决于您的实际需求：\",\"如果你的任务调度需求比较简单，部署规模较小，对运维界面友好度和易于入门有较高要求，那么xxl-job可能是更好的选择。\",\"如果你需要处理大量分布式任务，强调任务的弹性分配、高可用性和强大的容错机制，且愿意接受更高的学习成本，那么Elastic-Job可能更适合。\",\"总的来说，两者都是优秀的产品，关键在于评估自身项目的技术栈、任务规模、扩展性需求以及团队对相关技术的熟悉程度等因素，从而做出合适的选择。\"]},\"975\":{\"h\":\"2. xxl-job是如何保证分布式下只有一个任务执行的，原理是什么？\",\"t\":[\"XXL-JOB 为了保证分布式环境下同一个任务只有一个执行器执行，采用了中心化调度和分布式锁机制来防止任务重复执行。具体原理如下：\",\"中心化调度：\",\"XXL-JOB 设计了一个调度中心（xxl-job-admin），所有的任务调度指令都由调度中心统一发出。\",\"所有执行器（xxl-job-executor）会向调度中心注册自己及其所能执行的任务列表。\",\"当调度中心根据CRON表达式计算出某个任务应该被执行时，它会选择一个执行器（通常是轮询或基于权重选择）来执行该任务。\",\"分布式锁：\",\"调度中心在数据库中存储任务调度的相关信息，其中包括任务的执行状态、下次执行时间等。\",\"在确定执行任务的执行器时，调度中心会使用数据库锁（如悲观锁或者乐观锁）来确保同一时刻只有一个执行器获得执行任务的权利。\",\"当一个执行器领取到任务准备执行时，会在数据库中标记任务为锁定状态，其他执行器此时尝试领取同一任务时就会发现任务已被锁定，从而避免了重复执行。\",\"任务唯一标识与执行记录：\",\"每个任务都有唯一的标识符，执行器在执行任务前会检查任务是否已经被执行或正在执行，这是通过查询数据库中任务调度记录表实现的。\",\"如果发现任务正在执行或已完成，则不会再执行该任务。\",\"数据库原子操作：\",\"在任务调度过程中，调度中心通过数据库事务来保证任务分配和执行状态更新的原子性，确保无论何时只有一个执行器成功领到任务并执行。\",\"总结来说，XXL-JOB通过中心化的调度策略结合数据库的原子操作和分布式锁机制，有效防止了分布式环境下任务的并发执行问题，确保了任务的幂等性。\"]},\"976\":{\"h\":\"15. skywalking 底层是如何实现分布式链路追踪的\"},\"977\":{\"h\":\"1. skywalking 底层是如何实现分布式链路追踪的\",\"t\":[\"Apache SkyWalking 是一个开源的可观测性平台，用于分布式系统的链路追踪、性能监控和诊断。其底层实现分布式链路追踪的核心原理主要包括以下几个方面：\",\"探针(Agent)：\",\"SkyWalking 使用探针（Agent）植入到各个服务的进程中，这些探针通常是以Javaagent的形式存在，也可以是语言特定的SDK。探针的主要作用是在服务的方法调用前后插入追踪点，记录span（基本追踪单元）数据，包括请求的开始时间、结束时间、跨度、操作类型、调用关系、以及相关的元数据（如HTTP请求头、响应码、错误信息等）。\",\"Span与Trace概念：\",\"在SkyWalking中，一个完整的调用链路称为一个Trace，Trace由一系列的Span组成，每个Span代表一次服务间的调用或一次服务内部的操作。\",\"Span包含了操作的详细信息，例如服务名称、操作名、开始和结束时间戳、执行耗时等，并且每个Span都有一个全局唯一的Trace ID和Span ID，以及可选的Parent Span ID来标识调用层级和父子关系。\",\"采样与上报：\",\"Agent会对服务产生的Spans进行采样，即根据配置的采样策略决定哪些Span需要被记录并上报给OAP服务器。采样策略既可以是全量记录，也可以是基于比例或条件触发的。\",\"上报的数据通常经过高效的序列化之后，通过gRPC或者HTTP等方式发送给OAP服务器。\",\"OAP服务(Observability Analysis Platform)：\",\"OAP服务器负责接收来自各服务探针的Span数据，将它们存储在一个集中的存储系统中，如Elasticsearch、H2、MySQL、TiDB等。\",\"OAP还负责对收集的数据进行聚合、分析和索引，以便于后续查询和展示。\",\"跟踪上下文传递：\",\"在分布式系统中，SkyWalking通过传递跟踪上下文（通常是通过ThreadLocal或者其他语言特性的上下文传播机制）来串联整个请求链路中的各个Span，确保跨进程、跨服务的调用能够形成完整的调用链。\",\"可视化展示：\",\"最终，SkyWalking提供了一个UI界面，可以将收集到的分布式链路信息以拓扑图和调用链详情等形式展现出来，帮助开发者和运维人员直观理解系统间的调用关系、识别性能瓶颈和定位问题。\",\"通过以上的方式，SkyWalking实现了跨越分布式系统各个服务和组件的链路追踪，使得复杂的微服务架构中的请求路径变得透明和可追溯。\"]},\"978\":{\"c\":[\"springcloud\"]},\"979\":{\"c\":[\"springcloud\"]},\"980\":{\"h\":\"kafka\"},\"981\":{\"h\":\"1. kafka消息堆积了如何处理？\",\"t\":[\"产生原因 \",\"生产者产生的消息速率超过消费者消费速率时\",\"解决方案 \",\"监控与警报 \",\"设置实时监控系统，密切关注kafka集群的各项指标，包括但不限于broker磁盘使用率，消息堆积数量\",\"设置阈值警报，当消息堆积量达到一定水平立刻通知运维团队\",\"增加消费者资源 \",\"增加消费者数量\",\"优化消费者配置：如增大fetch.message.max.bytes参数，允许消费者一次性从Broker拉取更多消息，提高消费吞吐量；调整max.poll.records以控制每次拉取消息的数量\",\"扩展现有的topic分区\"]},\"982\":{\"h\":\"2. kafka 如何保证消息不丢失？\",\"t\":[\"生产者丢失消息的情况\",\"send后添加回调函数\",\" ListenableFuture<SendResult<String, Object>> future = kafkaTemplate.send(topic, o); future.addCallback(result -> logger.info(\\\"生产者成功发送消息到topic:{} partition:{}的消息\\\", result.getRecordMetadata().topic(), result.getRecordMetadata().partition()), ex -> logger.error(\\\"生产者发送消失败，原因：{}\\\", ex.getMessage())); \",\"如果消息发送失败，需检查失败的原因\",\"另外生产者的重试次数设置一个比较合理的值，一般是3\",\"消费者丢失消息的情况\",\"偏移量表示当前消费到的分区的所在位置\",\"解决方法：每次在真正消费完消息之后再自己手动提交offset\",\"kafka丢失的情况\",\"kafka为分区引入了多副本机制。分区中的多个副本之间会有一个leader的家伙，其他副本称为follower。我们发送的消息会被发送到leader副本，然后follower副本才能从leader副本中拉取消息进行同步\",\"设置acks = all \",\"acks的默认值为1, 代表我们的消息被leader副本接收之后就算被成功发送。当配置acks = all 表示只有所有ISR列表的副本全部收到消息时，生产者才会接收到来自服务器的响应，这种模式是最高级别的，也是最安全的，可以保证不止一个broker接收到消息，该模式的延迟会很高\",\"设置replication.factor >= 3\"]},\"983\":{\"h\":\"3. kafka 如何保证消息顺序消费？\",\"t\":[\"kafka只能保证分区中的消息有序\",\"消息在被追加到分区的时候都会分配一个特定的偏移量（offset）, kafka通过偏移量来保证消息在分区内的顺序性\",\"解决方案\",\"方法1：1个Topic只对应一个分区。但是破坏了kafka的设计初衷\",\"方法2： 发送消息的时候指定key/Partition\"]},\"984\":{\"h\":\"4. kafka 如何保证消息不重复消费？\",\"t\":[\"kafka出现消息重复消费的原因 \",\"服务端侧已经消费的数据没有成功提交offset (根本原因)\",\"kafka侧 由于服务端处理业务时间长或者网络链接等原因让kafka认为服务假死，触发了分区rebalance\",\"解决方案 \",\"消费消息服务做幂等校验，比如redis的set,mysql的主键等天然的幂等功能。这种方法最有效\",\"关闭自动提交，将enable.auto.commit 参数设置为false, 关闭自动提交，开发者在代码中手动提交offset。 什么时候提交offset合适？ \",\"处理完消息再提交：依旧有消息重复消费的风险，和自动提交一样\",\"拉取到消息即提交： 会有消息丢失的风险，允许消息延时的场景，一般会采用这种方式。然后，通过定时任务在业务不繁忙的时候做数据兜底\"]},\"985\":{\"h\":\"5. kafka重试机制\",\"t\":[\"Kafka 消费者在默认配置下会进行最多 10 次 的重试，每次重试的时间间隔为 0，即立即进行重试。如果在 10 次重试后仍然无法成功消费消息，则不再进行重试，消息将被视为消费失败\"]},\"986\":{\"c\":[\"消息队列\"]},\"987\":{\"c\":[\"消息队列\"]}},\"dirtCount\":0,\"index\":[[\"次重试后仍然无法成功消费消息\",{\"1\":{\"985\":1}}],[\"次\",{\"1\":{\"985\":1}}],[\"次出队再入队的操作\",{\"1\":{\"522\":1}}],[\"密切关注kafka集群的各项指标\",{\"1\":{\"981\":1}}],[\"密集型任务\",{\"1\":{\"664\":2}}],[\"密集不透光的树林\",{\"1\":{\"236\":1}}],[\"识别性能瓶颈和定位问题\",{\"1\":{\"977\":1}}],[\"采样策略既可以是全量记录\",{\"1\":{\"977\":1}}],[\"采样与上报\",{\"1\":{\"977\":1}}],[\"采用了中心化调度和分布式锁机制来防止任务重复执行\",{\"1\":{\"975\":1}}],[\"采用中心化的设计\",{\"1\":{\"974\":1}}],[\"采用服务端主动探测的方式来进行健康检查\",{\"1\":{\"970\":1}}],[\"采用适当的方式来使系统达到最终一致性\",{\"1\":{\"934\":1}}],[\"采用延时双删策略\",{\"1\":{\"848\":1}}],[\"采用轻量级锁虽然会占用cpu资源但是相对比使用重量级锁还是更高效\",{\"1\":{\"672\":1}}],[\"采用链表存储\",{\"1\":{\"622\":1}}],[\"采用底层的字节码技术\",{\"1\":{\"589\":1}}],[\"采用局部思维\",{\"1\":{\"234\":1}}],[\"采用长焦+低角度+统一元素的背景\",{\"1\":{\"227\":1}}],[\"采用竖构图的三分构图法\",{\"1\":{\"227\":1}}],[\"采用什么样角度\",{\"0\":{\"46\":1}}],[\"植入到各个服务的进程中\",{\"1\":{\"977\":1}}],[\"探针的主要作用是在服务的方法调用前后插入追踪点\",{\"1\":{\"977\":1}}],[\"探针\",{\"1\":{\"977\":1}}],[\"易于管理和监控\",{\"1\":{\"974\":1}}],[\"易于塑造深不可测的性格\",{\"1\":{\"76\":1}}],[\"端点主动触发整个应用程序范围内的配置刷新\",{\"1\":{\"972\":1}}],[\"端口\",{\"1\":{\"970\":1,\"971\":1}}],[\"端口号\",{\"1\":{\"549\":1}}],[\"筛选出健康在线的服务实例\",{\"1\":{\"971\":1}}],[\"版本的变化而变化\",{\"1\":{\"970\":1}}],[\"版本号是唯一的\",{\"1\":{\"776\":1}}],[\"版本号或cas算法\",{\"1\":{\"669\":1}}],[\"版本号原子引用\",{\"1\":{\"658\":1}}],[\"版本号都会递增\",{\"1\":{\"565\":1}}],[\"毫秒\",{\"1\":{\"970\":2}}],[\"汇总事务信息\",{\"1\":{\"967\":1}}],[\"汇报资源准备状态\",{\"1\":{\"967\":1}}],[\"授权规则\",{\"1\":{\"964\":1}}],[\"熔断\",{\"1\":{\"963\":1,\"964\":1}}],[\"熔断以及隔离等功能\",{\"1\":{\"953\":1}}],[\"令牌生成速率预先设定\",{\"1\":{\"949\":1}}],[\"令牌过期问题\",{\"1\":{\"949\":1}}],[\"令牌桶算法需要定时地生成令牌\",{\"1\":{\"949\":1}}],[\"令牌桶算法维护一个固定容量的桶\",{\"1\":{\"949\":1}}],[\"令牌桶算法\",{\"0\":{\"949\":1},\"1\":{\"936\":1}}],[\"漏桶算法对流入的请求均匀流出\",{\"1\":{\"949\":1}}],[\"漏桶算法与令牌桶算法类似\",{\"1\":{\"949\":1}}],[\"漏桶算法强制限制数据的传输速率\",{\"1\":{\"948\":1}}],[\"漏桶算法\",{\"0\":{\"948\":1}}],[\"漏桶算法则可以平滑请求流量\",{\"1\":{\"936\":1}}],[\"滑动窗口的滚动就越平滑\",{\"1\":{\"947\":1}}],[\"滑动窗口计数器算法\",{\"0\":{\"947\":1}}],[\"滑动窗口问题\",{\"0\":{\"500\":1}}],[\"轮询\",{\"1\":{\"944\":1}}],[\"轮廓圆润\",{\"1\":{\"169\":1}}],[\"轮廓鲜明\",{\"1\":{\"169\":1}}],[\"轮廓\",{\"0\":{\"169\":1},\"1\":{\"162\":1}}],[\"轮廓不清晰的模特\",{\"1\":{\"159\":1}}],[\"释放锁\",{\"1\":{\"942\":1}}],[\"释放一个许可\",{\"1\":{\"666\":1}}],[\"精确到毫秒级\",{\"1\":{\"938\":1}}],[\"精准查询与过滤\",{\"1\":{\"566\":1}}],[\"机器id部分\",{\"1\":{\"938\":1}}],[\"机器id和序列号\",{\"1\":{\"938\":1}}],[\"机位需要低机位\",{\"1\":{\"244\":1}}],[\"机位来到拱桥的最低处\",{\"1\":{\"230\":1}}],[\"机位角度等\",{\"1\":{\"152\":1}}],[\"机位高度始终与被摄主体高度相同\",{\"1\":{\"34\":1}}],[\"机位\",{\"0\":{\"32\":1,\"34\":1,\"276\":1},\"1\":{\"18\":1,\"19\":1,\"123\":1}}],[\"断路器\",{\"1\":{\"931\":1}}],[\"断开服务器到客户端的数据传送\",{\"1\":{\"552\":1}}],[\"淘汰\",{\"1\":{\"931\":3}}],[\"淘宝\",{\"1\":{\"126\":1}}],[\"条件化配置\",{\"1\":{\"923\":1}}],[\"省略getter\",{\"1\":{\"919\":1,\"920\":1}}],[\"了完整生命周期的bean对象\",{\"1\":{\"925\":1}}],[\"了不起的我\",{\"1\":{\"919\":1}}],[\"了解\",{\"0\":{\"356\":1,\"357\":1,\"359\":1,\"369\":1,\"374\":1,\"447\":1,\"448\":1,\"451\":1},\"1\":{\"445\":2,\"454\":1,\"469\":1,\"664\":1,\"670\":1}}],[\"了解三庭五眼和人脸的骨骼结构\",{\"1\":{\"166\":1}}],[\"邀请我们思考这一亘古难题\",{\"1\":{\"919\":1}}],[\"罗韦利用诗意的文字\",{\"1\":{\"919\":1}}],[\"卡洛\",{\"1\":{\"919\":1}}],[\"恰是父亲当年为她放弃的那所\",{\"1\":{\"919\":1}}],[\"湖北武汉加油中国加油\",{\"1\":{\"919\":1}}],[\"武汉加油\",{\"1\":{\"919\":1}}],[\"武侠类除外\",{\"1\":{\"144\":1}}],[\"武侠\",{\"1\":{\"144\":1}}],[\"疫情严重\",{\"1\":{\"919\":1}}],[\"声明spring\",{\"1\":{\"907\":1}}],[\"扫描被\",{\"1\":{\"902\":1}}],[\"启用springboot的自动配置机制\",{\"1\":{\"902\":1}}],[\"启动完成\",{\"1\":{\"926\":1}}],[\"启动嵌入式web服务器\",{\"1\":{\"926\":1}}],[\"启动监听器\",{\"1\":{\"926\":1}}],[\"启动入口点\",{\"1\":{\"926\":1}}],[\"启动arthas\",{\"1\":{\"738\":1}}],[\"启动jconsole\",{\"1\":{\"732\":1}}],[\"启动\",{\"1\":{\"732\":1}}],[\"启动类加载器\",{\"1\":{\"679\":1,\"714\":1}}],[\"工厂\",{\"1\":{\"925\":1}}],[\"工厂设计模式\",{\"1\":{\"900\":1}}],[\"工作原理概览\",{\"1\":{\"972\":1}}],[\"工作流程\",{\"1\":{\"664\":1}}],[\"工作分配\",{\"1\":{\"299\":1}}],[\"工作分类\",{\"1\":{\"299\":1}}],[\"渲染完视图后\",{\"1\":{\"895\":1}}],[\"渲染视图\",{\"1\":{\"895\":1}}],[\"却为业务模块所共同调用的逻辑\",{\"1\":{\"892\":1}}],[\"销毁\",{\"1\":{\"890\":1}}],[\"销毁方法以及作用域等信息\",{\"1\":{\"884\":1}}],[\"家电家具进场\",{\"1\":{\"890\":1}}],[\"租约模式\",{\"1\":{\"970\":1}}],[\"租赁好房子\",{\"1\":{\"890\":1}}],[\"租借\",{\"1\":{\"125\":1}}],[\"装修\",{\"1\":{\"890\":1}}],[\"装配和管理应用中的所有对象\",{\"1\":{\"884\":1}}],[\"装造要求\",{\"1\":{\"127\":1}}],[\"注入\",{\"1\":{\"972\":1}}],[\"注入bean的注解有哪些\",{\"0\":{\"887\":1}}],[\"注册成功后\",{\"1\":{\"971\":1}}],[\"注册全局事务记录\",{\"1\":{\"967\":1}}],[\"注解从配置中心读取的属性\",{\"1\":{\"972\":1}}],[\"注解时\",{\"1\":{\"972\":1}}],[\"注解还支持其他属性\",{\"1\":{\"963\":1}}],[\"注解标识了\",{\"1\":{\"963\":1}}],[\"注解默认会扫描该类所在的包下所有的类\",{\"1\":{\"902\":1}}],[\"注解的\",{\"1\":{\"902\":1}}],[\"注解来显式指定名称\",{\"1\":{\"888\":1}}],[\"注解\",{\"0\":{\"959\":1},\"1\":{\"884\":1,\"889\":1}}],[\"注意转换\",{\"1\":{\"831\":1}}],[\"注意countdownlatch\",{\"1\":{\"667\":1}}],[\"注意这个不等于数组的长度\",{\"1\":{\"644\":1}}],[\"注意点\",{\"1\":{\"604\":1}}],[\"注意此时getsize的逻辑\",{\"1\":{\"519\":1}}],[\"注意是给父元素设置text\",{\"1\":{\"358\":1}}],[\"注意事项\",{\"1\":{\"357\":1,\"785\":1}}],[\"注意\",{\"1\":{\"254\":1,\"347\":1,\"365\":1,\"454\":1,\"464\":1,\"493\":1,\"518\":3,\"528\":1,\"638\":1,\"645\":1,\"970\":1}}],[\"注意前期用光\",{\"1\":{\"254\":1}}],[\"注意水平面的对齐\",{\"1\":{\"242\":1}}],[\"注意水平线的对齐\",{\"1\":{\"238\":1}}],[\"注意人物轮廓及光线\",{\"1\":{\"208\":1}}],[\"注意人物面部补光\",{\"1\":{\"81\":1}}],[\"注意注重人脸的角度和肢体的摆放\",{\"1\":{\"207\":1}}],[\"注意藏小腿肉\",{\"1\":{\"159\":1}}],[\"注意腿的延伸感\",{\"1\":{\"158\":1}}],[\"注意四肢的协调和道具配合使用\",{\"1\":{\"156\":1}}],[\"注意控制面部表情\",{\"1\":{\"149\":1}}],[\"注意补光\",{\"1\":{\"81\":1}}],[\"注意日出时间\",{\"1\":{\"81\":1}}],[\"注意实的背景要具有一定的观赏性\",{\"1\":{\"69\":1}}],[\"注意力不仅在人物身上\",{\"1\":{\"39\":1}}],[\"注意力和观察力可以放在\",{\"1\":{\"17\":1}}],[\"注意形体\",{\"1\":{\"37\":1}}],[\"谈谈你对aop的理解\",{\"0\":{\"892\":1}}],[\"谈谈你对spring\",{\"0\":{\"884\":1}}],[\"谈谈你的理解\",{\"0\":{\"844\":1}}],[\"逐步消费数据\",{\"1\":{\"875\":1}}],[\"逐个处理后再合并结果\",{\"1\":{\"567\":1}}],[\"处理完消息再提交\",{\"1\":{\"984\":1}}],[\"处理实际请求的处理器\",{\"1\":{\"894\":1}}],[\"处理器执行业务逻辑\",{\"1\":{\"895\":1}}],[\"处理器适配器\",{\"1\":{\"894\":1,\"895\":1}}],[\"处理器映射器负责将请求映射到相应的处理器\",{\"1\":{\"895\":1}}],[\"处理器映射器\",{\"1\":{\"894\":1,\"895\":1}}],[\"处理方法\",{\"0\":{\"875\":1}}],[\"处于一种\",{\"1\":{\"552\":1}}],[\"处于高调和低调之间\",{\"1\":{\"84\":1}}],[\"填充率就会越小\",{\"1\":{\"872\":1}}],[\"填充率\",{\"1\":{\"872\":1}}],[\"槽位越小\",{\"1\":{\"872\":1}}],[\"浪费网络资源\",{\"1\":{\"872\":1}}],[\"浪费一个空间\",{\"0\":{\"519\":1}}],[\"脑裂可以通过哨兵来避免\",{\"1\":{\"871\":1}}],[\"脑裂\",{\"1\":{\"871\":1}}],[\"脑袋不能陷下去会突出脸大\",{\"1\":{\"159\":1}}],[\"脑袋微侧看一边\",{\"1\":{\"158\":1}}],[\"脑袋方向\",{\"1\":{\"156\":1}}],[\"哨兵会通知客户端和其他redis实例\",{\"1\":{\"871\":1}}],[\"哨兵会不断地监听所有的redis实例\",{\"1\":{\"871\":1}}],[\"哨兵\",{\"0\":{\"871\":1}}],[\"仍然能够对外提供服务\",{\"1\":{\"933\":1}}],[\"仍然需要o\",{\"1\":{\"868\":1}}],[\"仍然有开销\",{\"1\":{\"868\":1}}],[\"仍然指向堆上的对象\",{\"1\":{\"611\":1}}],[\"啥都不干\",{\"1\":{\"865\":1}}],[\"现在属于apache\",{\"1\":{\"974\":1}}],[\"现在就要\",{\"1\":{\"865\":1}}],[\"现实中道路河流颜色阴影\",{\"1\":{\"222\":1}}],[\"借用数据库索引思想\",{\"1\":{\"857\":1}}],[\"借助dr5插件的d\",{\"1\":{\"257\":1}}],[\"借助光线塑造面部立体感\",{\"1\":{\"169\":1}}],[\"得知自己暗恋多年的校园男神裴之即将出国深造的消息\",{\"1\":{\"919\":1}}],[\"得不偿失\",{\"1\":{\"853\":1}}],[\"得到一个下标索引值\",{\"1\":{\"833\":1}}],[\"键\",{\"1\":{\"851\":1}}],[\"键偏移位\",{\"1\":{\"823\":1}}],[\"续期一次\",{\"1\":{\"842\":1}}],[\"守护线程续命\",{\"1\":{\"842\":1}}],[\"杜绝死锁\",{\"1\":{\"839\":1}}],[\"防死锁\",{\"1\":{\"839\":1}}],[\"防止张冠李戴\",{\"1\":{\"839\":1,\"840\":1}}],[\"防止核心api被随意篡改\",{\"1\":{\"715\":1}}],[\"防止出现意外的执行顺序\",{\"1\":{\"657\":1}}],[\"防止无限制增长\",{\"1\":{\"567\":1}}],[\"防止内存溢出\",{\"1\":{\"567\":1}}],[\"防止继承\",{\"1\":{\"473\":1}}],[\"差异失效时间\",{\"1\":{\"837\":1}}],[\"差集\",{\"1\":{\"819\":1}}],[\"占用空间少\",{\"1\":{\"833\":1}}],[\"占位文本\",{\"1\":{\"461\":1}}],[\"误判只会发生在过滤器没有添加过的元素\",{\"1\":{\"833\":1}}],[\"误差仅仅只是0\",{\"1\":{\"822\":1}}],[\"懒汉式删除\",{\"1\":{\"829\":1}}],[\"惰性删除\",{\"0\":{\"827\":1}}],[\"北京王府井位置116\",{\"1\":{\"824\":1}}],[\"纬度查找附近的\",{\"1\":{\"824\":1}}],[\"纬度\",{\"1\":{\"824\":1}}],[\"刚好int类型是32位\",{\"1\":{\"823\":1}}],[\"刚开始练习压力调到15或者12左右\",{\"1\":{\"251\":1}}],[\"奖励越大\",{\"1\":{\"823\":1}}],[\"签到日历需展示最近连续签到天数\",{\"1\":{\"823\":1}}],[\"签到日历仅展示当月签到数据\",{\"1\":{\"823\":1}}],[\"签到统计\",{\"1\":{\"823\":1}}],[\"京东签到领取京豆\",{\"1\":{\"823\":1}}],[\"桶中的令牌数量有上限\",{\"1\":{\"949\":1}}],[\"桶中以固定速率生成令牌\",{\"1\":{\"949\":1}}],[\"桶中存储的计数值越大\",{\"1\":{\"822\":1}}],[\"桶中结构转化为红黑树对应的table的最小容量\",{\"1\":{\"644\":1}}],[\"页面uv统计\",{\"1\":{\"822\":1}}],[\"页面尺寸混乱\",{\"1\":{\"473\":1}}],[\"牺牲准确率来换取空间\",{\"1\":{\"822\":1}}],[\"熊出没\",{\"1\":{\"821\":1}}],[\"飞驰人生2\",{\"1\":{\"821\":2}}],[\"飞鸟\",{\"1\":{\"199\":1,\"273\":1}}],[\"购物车\",{\"1\":{\"820\":1}}],[\"购买\",{\"1\":{\"125\":1,\"280\":1}}],[\"立刻删除\",{\"0\":{\"826\":1}}],[\"立即参与按钮\",{\"1\":{\"819\":1}}],[\"立体感消弱\",{\"1\":{\"83\":1}}],[\"立体感强\",{\"1\":{\"76\":1}}],[\"展示当日排行前10条\",{\"1\":{\"821\":1}}],[\"展现所有点赞过的用户\",{\"1\":{\"819\":1}}],[\"展出和发表\",{\"1\":{\"122\":1}}],[\"介绍\",{\"1\":{\"818\":1}}],[\"递减数值\",{\"1\":{\"817\":1}}],[\"递增数字\",{\"1\":{\"817\":1}}],[\"递归锁\",{\"1\":{\"669\":1}}],[\"递归实现链表\",{\"0\":{\"508\":1}}],[\"限流规则\",{\"0\":{\"964\":1}}],[\"限流的统计就会越精准\",{\"1\":{\"947\":1}}],[\"限流是一种常见的微服务网关功能\",{\"1\":{\"936\":1}}],[\"限流\",{\"1\":{\"815\":1}}],[\"证明在所有未提交是否创建之前\",{\"1\":{\"797\":1}}],[\"证件照\",{\"1\":{\"276\":1}}],[\"附加信息\",{\"1\":{\"796\":1}}],[\"速度更快\",{\"1\":{\"796\":1}}],[\"匹配的分区\",{\"1\":{\"796\":1}}],[\"频繁需要排序的字段可以建立索引\",{\"1\":{\"794\":1}}],[\"叶子节点存储的是主键+列值\",{\"1\":{\"793\":1}}],[\"聚簇索引\",{\"1\":{\"793\":1}}],[\"聚合处理\",{\"1\":{\"562\":1}}],[\"范围查找效率高\",{\"1\":{\"793\":1}}],[\"临键锁\",{\"1\":{\"785\":1}}],[\"像内核添加\",{\"1\":{\"869\":1}}],[\"像我们常用的普通select语句在不加锁情况下就是快照读\",{\"1\":{\"797\":1}}],[\"像发生了幻觉一样\",{\"1\":{\"772\":1}}],[\"像素单位常见有三种像素名称\",{\"1\":{\"468\":1}}],[\"像素表示画像元素之意\",{\"1\":{\"468\":1}}],[\"像素是影响显示的基本单位\",{\"1\":{\"468\":1}}],[\"像素\",{\"1\":{\"460\":2,\"467\":1,\"468\":1}}],[\"幻读重点在新增\",{\"1\":{\"773\":1}}],[\"幻读\",{\"0\":{\"772\":1},\"1\":{\"778\":1}}],[\"丢失修改\",{\"0\":{\"770\":1}}],[\"脏读\",{\"0\":{\"769\":1}}],[\"持久化方式\",{\"0\":{\"859\":1},\"1\":{\"861\":1}}],[\"持久化\",{\"0\":{\"858\":1}}],[\"持久性\",{\"1\":{\"767\":1,\"802\":1}}],[\"持续时间\",{\"1\":{\"457\":1}}],[\"持续多久\",{\"1\":{\"456\":1}}],[\"隔离级别下\",{\"1\":{\"802\":1}}],[\"隔离性\",{\"1\":{\"767\":1,\"802\":1}}],[\"隔绝感\",{\"1\":{\"127\":2}}],[\"`test\",{\"1\":{\"751\":1,\"753\":4}}],[\"```\",{\"1\":{\"514\":1}}],[\"```java\",{\"1\":{\"514\":1}}],[\"列名=值\",{\"1\":{\"745\":1}}],[\"列表\",{\"0\":{\"818\":1}}],[\"列表内容$\",{\"1\":{\"414\":1}}],[\"列表中每一项的具体描述\",{\"1\":{\"406\":1}}],[\"列表中每一项的项目名\",{\"1\":{\"406\":1}}],[\"列表元素往往有很多的限制\",{\"1\":{\"406\":1}}],[\"列表元素的默认的css样式\",{\"1\":{\"406\":1}}],[\"列表元素\",{\"0\":{\"406\":1}}],[\"联表查询的方式\",{\"1\":{\"796\":1}}],[\"联合查询\",{\"1\":{\"796\":1}}],[\"联合索引\",{\"1\":{\"793\":1}}],[\"联系\",{\"1\":{\"743\":1}}],[\"联想法\",{\"1\":{\"189\":1}}],[\"班级等实体\",{\"1\":{\"743\":1}}],[\"班长最后关门走人\",{\"1\":{\"667\":2}}],[\"班长最后关灯走人\",{\"1\":{\"667\":1}}],[\"课程\",{\"1\":{\"743\":1}}],[\"帮助开发者和运维人员直观理解系统间的调用关系\",{\"1\":{\"977\":1}}],[\"帮助定位慢方法\",{\"1\":{\"738\":1}}],[\"帮助操作\",{\"1\":{\"731\":1}}],[\"统计下线程读数据和写缓存的操作时间\",{\"1\":{\"848\":1}}],[\"统计活跃用户\",{\"1\":{\"823\":1}}],[\"统计字节数占用多少\",{\"1\":{\"823\":1}}],[\"统计key的估算值\",{\"1\":{\"822\":1}}],[\"统计方法执行耗时\",{\"1\":{\"738\":1}}],[\"统一异常处理怎么做\",{\"0\":{\"896\":1}}],[\"统一向一个方向浮动即可\",{\"1\":{\"430\":1}}],[\"统一肤色\",{\"1\":{\"254\":1}}],[\"统一的红墙有了光影感后\",{\"1\":{\"231\":1}}],[\"统一的情绪表达\",{\"1\":{\"185\":1}}],[\"禁用这个检查\",{\"1\":{\"737\":1}}],[\"消费消息服务做幂等校验\",{\"1\":{\"984\":1}}],[\"消费者在默认配置下会进行最多\",{\"1\":{\"985\":1}}],[\"消费者丢失消息的情况\",{\"1\":{\"982\":1}}],[\"消费者\",{\"1\":{\"971\":1}}],[\"消息将被视为消费失败\",{\"1\":{\"985\":1}}],[\"消息在被追加到分区的时候都会分配一个特定的偏移量\",{\"1\":{\"983\":1}}],[\"消息堆积数量\",{\"1\":{\"981\":1}}],[\"消息之后宕机\",{\"1\":{\"942\":1}}],[\"消息队列\",{\"1\":{\"811\":1,\"815\":1},\"2\":{\"986\":1,\"987\":1}}],[\"消息队列等场景\",{\"1\":{\"818\":1}}],[\"消息队列等\",{\"1\":{\"736\":1}}],[\"消除了非主属性对于码的传递函数依赖\",{\"1\":{\"744\":1}}],[\"消除了非主属性对于码的部分函数依赖\",{\"1\":{\"744\":1}}],[\"消色成分越高\",{\"1\":{\"92\":1}}],[\"灵活运用\",{\"1\":{\"735\":1}}],[\"秒杀高并发等操作\",{\"1\":{\"958\":1}}],[\"秒\",{\"1\":{\"727\":1}}],[\"老年代占2\",{\"1\":{\"738\":1}}],[\"老年代\",{\"1\":{\"727\":1}}],[\"老年代使用标记\",{\"1\":{\"692\":1}}],[\"监听配置变化\",{\"1\":{\"972\":1}}],[\"监测\",{\"1\":{\"871\":1}}],[\"监视虚拟机各种运行状态信息\",{\"1\":{\"727\":1}}],[\"监控与警报\",{\"1\":{\"981\":1}}],[\"监控与调整缓存设置\",{\"1\":{\"566\":1}}],[\"监控死锁\",{\"1\":{\"732\":1}}],[\"监控线程\",{\"1\":{\"732\":1}}],[\"监控内存\",{\"1\":{\"732\":1}}],[\"监控类的时间序列数据\",{\"1\":{\"566\":1}}],[\"命令修改\",{\"1\":{\"831\":1}}],[\"命令可以统计方法的执行次数和总耗时\",{\"1\":{\"738\":1}}],[\"命令的含义是显示特定进程id\",{\"1\":{\"738\":1}}],[\"命令行工具\",{\"1\":{\"735\":1}}],[\"命令\",{\"1\":{\"726\":1,\"782\":1,\"817\":1,\"819\":1,\"820\":1,\"821\":1,\"824\":1,\"854\":1,\"855\":1,\"856\":1,\"874\":1}}],[\"命名高低频组\",{\"1\":{\"256\":1}}],[\"元数据等信息\",{\"1\":{\"971\":1}}],[\"元空间大小\",{\"1\":{\"738\":1}}],[\"元空间内存设置过小\",{\"1\":{\"737\":1}}],[\"元空间溢出\",{\"1\":{\"737\":1}}],[\"元空间\",{\"1\":{\"722\":1}}],[\"元素会删除\",{\"1\":{\"819\":1}}],[\"元素不删除\",{\"1\":{\"819\":2}}],[\"元素不显示出来\",{\"1\":{\"380\":1}}],[\"元素顺序\",{\"1\":{\"630\":1}}],[\"元素在标准流里面都是属于一个fc的\",{\"1\":{\"465\":1}}],[\"元素高度\",{\"1\":{\"458\":1}}],[\"元素停留在动画的哪一个位置\",{\"1\":{\"457\":1}}],[\"元素必须设置宽度\",{\"1\":{\"455\":1}}],[\"元素必须有宽度\",{\"1\":{\"455\":1}}],[\"元素有高度情况下\",{\"1\":{\"455\":1}}],[\"元素有宽度的情况下\",{\"1\":{\"455\":1}}],[\"元素个数为一排总数\",{\"1\":{\"453\":1}}],[\"元素可以膨胀以填充额外的空间\",{\"1\":{\"435\":1}}],[\"元素一旦浮动后\",{\"1\":{\"430\":1}}],[\"元素进行定位\",{\"1\":{\"425\":1}}],[\"元素脱离标准流\",{\"1\":{\"424\":1,\"425\":1}}],[\"元素依然按照标准流布局\",{\"1\":{\"423\":1}}],[\"元素按照标准版布局\",{\"1\":{\"422\":1}}],[\"元素是按照标准流进行排布\",{\"1\":{\"422\":1}}],[\"元素实际占用宽度\",{\"1\":{\"393\":1}}],[\"元素水平居中方案\",{\"1\":{\"387\":1}}],[\"元素和其他元素之间的间距\",{\"1\":{\"383\":1}}],[\"元素和内容之间的间距\",{\"1\":{\"383\":1}}],[\"元素自己的边框\",{\"1\":{\"383\":1}}],[\"元素的内容width\",{\"1\":{\"383\":1}}],[\"元素的隐藏\",{\"0\":{\"380\":1}}],[\"元素的组织和整体视觉呈现\",{\"1\":{\"148\":1}}],[\"元素状态伪类\",{\"1\":{\"373\":1}}],[\"元素选择器\",{\"1\":{\"368\":1,\"377\":1}}],[\"元素解读\",{\"1\":{\"127\":1}}],[\"顶层的classloader无法访问底层的classloader所加载的类\",{\"1\":{\"715\":1}}],[\"顶光\",{\"1\":{\"76\":1}}],[\"源码分析\",{\"1\":{\"715\":1}}],[\"源文件\",{\"1\":{\"319\":1,\"320\":1}}],[\"卸载数量\",{\"1\":{\"727\":1}}],[\"卸载\",{\"1\":{\"712\":1}}],[\"验证\",{\"1\":{\"712\":1,\"713\":1}}],[\"准备阶段\",{\"1\":{\"942\":2}}],[\"准备\",{\"1\":{\"712\":2,\"713\":1}}],[\"准确的聚合操作\",{\"1\":{\"567\":1}}],[\"停顿产生时整个应用程序线程都会被暂停\",{\"1\":{\"710\":1}}],[\"停车3秒后离开车位\",{\"1\":{\"666\":1}}],[\"染色指针和内存多重映射等技术来实现可并发的标记\",{\"1\":{\"709\":1}}],[\"暂时\",{\"1\":{\"709\":1}}],[\"暂时时间非常短\",{\"1\":{\"707\":1}}],[\"暂停一切正常的工作\",{\"1\":{\"693\":1}}],[\"暂停几秒钟线程\",{\"1\":{\"671\":5,\"822\":1}}],[\"暂停\",{\"1\":{\"460\":1}}],[\"吞吐量优先\",{\"1\":{\"704\":1}}],[\"串行回收\",{\"1\":{\"702\":1,\"723\":1}}],[\"串行垃圾回收器\",{\"0\":{\"696\":1},\"1\":{\"696\":1}}],[\"独立回收\",{\"1\":{\"694\":1}}],[\"独占性\",{\"1\":{\"839\":1}}],[\"独占锁\",{\"1\":{\"660\":1,\"669\":1,\"775\":1}}],[\"独占父元素的一行\",{\"1\":{\"378\":1}}],[\"独占一行\",{\"1\":{\"378\":1}}],[\"造成系统吞吐量的下降\",{\"1\":{\"693\":1}}],[\"增量收集算法通过对线程间冲突的妥善处理\",{\"1\":{\"693\":1}}],[\"增量收集算法的基础仍是传统的标记\",{\"1\":{\"693\":1}}],[\"增量收集算法\",{\"0\":{\"693\":1}}],[\"增加消费者数量\",{\"1\":{\"981\":1}}],[\"增加消费者资源\",{\"1\":{\"981\":1}}],[\"增加过期时间\",{\"1\":{\"840\":1}}],[\"增加某个元素的分数\",{\"1\":{\"821\":1}}],[\"增加商品数量\",{\"1\":{\"820\":1}}],[\"增加商品\",{\"1\":{\"820\":1}}],[\"增加指定的整数\",{\"1\":{\"817\":1}}],[\"增加机器\",{\"1\":{\"736\":1}}],[\"增加了安全问题\",{\"1\":{\"585\":1}}],[\"增加内存可以提升查询性能和索引速度\",{\"1\":{\"566\":1}}],[\"增加内存\",{\"1\":{\"566\":1}}],[\"增加饱和是从饱和偏低的开始增加\",{\"1\":{\"288\":1}}],[\"增加黄色等同于减少蓝色\",{\"1\":{\"288\":1}}],[\"增加绿色等同于减少洋红色\",{\"1\":{\"288\":1}}],[\"增加红色等同于减少青色\",{\"1\":{\"288\":1}}],[\"增加氛围\",{\"1\":{\"237\":1}}],[\"增加镜头数量\",{\"1\":{\"191\":1}}],[\"效率不高\",{\"1\":{\"691\":1}}],[\"效果等同于setnx\",{\"1\":{\"817\":1}}],[\"效果和align\",{\"1\":{\"448\":1}}],[\"效果和stretch一样\",{\"1\":{\"445\":1}}],[\"效果\",{\"0\":{\"294\":1},\"1\":{\"463\":1}}],[\"效果图\",{\"1\":{\"34\":1,\"436\":1}}],[\"碎片\",{\"1\":{\"690\":1}}],[\"年轻代和老年代比例\",{\"1\":{\"738\":1}}],[\"年轻代垃圾回收只会回收eden区和survivor区\",{\"1\":{\"708\":1}}],[\"年轻代gc\",{\"1\":{\"708\":1}}],[\"年轻代\",{\"1\":{\"690\":1}}],[\"年龄\",{\"1\":{\"14\":1}}],[\"垃圾回收相关的\",{\"1\":{\"727\":1}}],[\"垃圾回收过程\",{\"1\":{\"708\":1}}],[\"垃圾回收器选择g1\",{\"1\":{\"738\":1}}],[\"垃圾回收器相关\",{\"0\":{\"723\":1}}],[\"垃圾回收器是在java7\",{\"1\":{\"708\":1}}],[\"垃圾回收器分类\",{\"0\":{\"695\":1}}],[\"垃圾收集\",{\"1\":{\"727\":1}}],[\"垃圾收集经常造成stw的gc又跟不上实际的需求\",{\"1\":{\"708\":1}}],[\"垃圾收集器落地实现\",{\"0\":{\"701\":1}}],[\"垃圾收集线程只收集一小片区域的内存空间\",{\"1\":{\"693\":1}}],[\"垃圾对象多的前提下的\",{\"1\":{\"691\":1}}],[\"垃圾清除阶段算法\",{\"0\":{\"688\":1}}],[\"垃圾判别阶段算法\",{\"0\":{\"685\":1}}],[\"呢\",{\"1\":{\"687\":1}}],[\"区\",{\"1\":{\"683\":1}}],[\"区别\",{\"0\":{\"630\":1},\"1\":{\"605\":1,\"653\":1}}],[\"幸存者1区\",{\"1\":{\"683\":1}}],[\"幸存者0区\",{\"1\":{\"683\":1}}],[\"幸福\",{\"1\":{\"93\":1}}],[\"伊甸区\",{\"1\":{\"683\":1}}],[\"养老区\",{\"1\":{\"683\":1}}],[\"堆溢出\",{\"1\":{\"737\":1}}],[\"堆配置信息\",{\"1\":{\"729\":1}}],[\"堆空间越大\",{\"1\":{\"694\":1}}],[\"堆从gc的角度还可以细分为\",{\"1\":{\"683\":1}}],[\"堆内存逻辑上分为三部分\",{\"1\":{\"683\":1}}],[\"堆内存的大小是可以调节的\",{\"1\":{\"683\":1}}],[\"堆分为三部分\",{\"1\":{\"683\":1}}],[\"堆\",{\"0\":{\"683\":1,\"721\":1}}],[\"堆管存储\",{\"1\":{\"682\":1}}],[\"堆结构\",{\"1\":{\"562\":1}}],[\"供各线程共享的运行时内存区域\",{\"1\":{\"681\":1}}],[\"供应商特点扩展\",{\"1\":{\"464\":1}}],[\"送到启动类加载中\",{\"1\":{\"679\":1}}],[\"他不会自己去加载这个类\",{\"1\":{\"679\":1}}],[\"他们会随着竞争激烈而逐渐升级\",{\"1\":{\"661\":1}}],[\"他们同时都想申请对方的资源\",{\"1\":{\"652\":1}}],[\"他们也压根没有解释\",{\"1\":{\"465\":1}}],[\"往上捅\",{\"1\":{\"679\":1}}],[\"往下看15\",{\"1\":{\"171\":1}}],[\"至于它是否可以运行\",{\"1\":{\"679\":1}}],[\"拥有崩溃恢复能力\",{\"1\":{\"799\":1}}],[\"拥有了无锁\",{\"1\":{\"672\":1}}],[\"拥塞控制机制\",{\"1\":{\"550\":1}}],[\"响应码\",{\"1\":{\"977\":1}}],[\"响应周期\",{\"1\":{\"895\":1}}],[\"响应客户端\",{\"1\":{\"895\":1}}],[\"响应时间缓慢\",{\"1\":{\"672\":1}}],[\"响应构建与返回\",{\"1\":{\"562\":1}}],[\"追求吞吐量\",{\"1\":{\"672\":1}}],[\"追求响应时间\",{\"1\":{\"672\":1}}],[\"追踪记录栈顶元素\",{\"1\":{\"522\":1}}],[\"竞争的线程不会阻塞\",{\"1\":{\"672\":1}}],[\"唤醒处于阻塞状态的指定线程\",{\"1\":{\"671\":1}}],[\"报告心跳\",{\"1\":{\"970\":1}}],[\"报错原因\",{\"1\":{\"737\":1}}],[\"报错信息\",{\"1\":{\"737\":3}}],[\"报错\",{\"1\":{\"671\":1}}],[\"报错不走下一步\",{\"1\":{\"670\":1}}],[\"报文后\",{\"1\":{\"550\":1}}],[\"获得结果和触发计算\",{\"1\":{\"670\":1}}],[\"获取到的数据为\",{\"1\":{\"915\":1}}],[\"获取经纬度坐标\",{\"1\":{\"824\":1}}],[\"获取有序集合中指定范围内的成员\",{\"1\":{\"821\":1}}],[\"获取元素的排名\",{\"1\":{\"821\":1}}],[\"获取某个key内的全部数量\",{\"1\":{\"820\":1}}],[\"获取所有字段值\",{\"1\":{\"820\":1}}],[\"获取集合中的元素总数\",{\"1\":{\"819\":1}}],[\"获取列表中元素的个数\",{\"1\":{\"818\":1}}],[\"获取字符串长度\",{\"1\":{\"817\":1}}],[\"获取执行计划相关信息\",{\"1\":{\"796\":1}}],[\"获取占用cpu高的线程的详细调用栈\",{\"1\":{\"738\":1}}],[\"获取结果\",{\"1\":{\"670\":1}}],[\"获取一个许可\",{\"1\":{\"666\":1}}],[\"获取代理对象工厂类\",{\"1\":{\"588\":1}}],[\"获取\",{\"1\":{\"586\":1}}],[\"获取实际文档内容\",{\"1\":{\"562\":1}}],[\"获取阶段\",{\"1\":{\"562\":1}}],[\"获取index索引位置的元素\",{\"1\":{\"513\":1,\"516\":1,\"539\":1}}],[\"获取数组的容量\",{\"1\":{\"513\":1,\"516\":1,\"539\":1}}],[\"获取数组中的元素的个数\",{\"1\":{\"513\":1,\"516\":1,\"539\":1}}],[\"获取栈的大小\",{\"1\":{\"512\":1}}],[\"获取栈顶元素都是o\",{\"1\":{\"522\":1}}],[\"获取栈顶元素时间复杂度都是o\",{\"1\":{\"522\":1}}],[\"获取栈顶元素\",{\"1\":{\"512\":1,\"522\":1}}],[\"获取链表的第index个元素的位置\",{\"1\":{\"504\":1}}],[\"获取链表中的元素个数\",{\"1\":{\"504\":1}}],[\"异步的讨论对象是被调用者\",{\"1\":{\"865\":1}}],[\"异步调用要想获得结果一般通过回调\",{\"1\":{\"865\":1}}],[\"异步\",{\"1\":{\"865\":1}}],[\"异步删除\",{\"1\":{\"848\":1}}],[\"异步简洁版\",{\"1\":{\"670\":1}}],[\"异常问题\",{\"1\":{\"849\":1}}],[\"异常处理\",{\"1\":{\"680\":1}}],[\"异常2\",{\"1\":{\"671\":1}}],[\"异常情况2\",{\"1\":{\"671\":1}}],[\"异常展示1\",{\"1\":{\"671\":1}}],[\"异常执行版\",{\"1\":{\"670\":1}}],[\"异常\",{\"0\":{\"571\":1},\"1\":{\"670\":1,\"671\":1}}],[\"耗时等信息\",{\"1\":{\"727\":1}}],[\"耗时3秒\",{\"1\":{\"670\":1}}],[\"耗时1秒钟\",{\"1\":{\"670\":1}}],[\"耗时1秒\",{\"1\":{\"670\":1}}],[\"核心思想\",{\"1\":{\"934\":1,\"942\":1}}],[\"核心的中央处理器\",{\"1\":{\"894\":1}}],[\"核心的静态方法\",{\"1\":{\"670\":1}}],[\"核心数满了\",{\"1\":{\"664\":1}}],[\"核心数\",{\"1\":{\"664\":2}}],[\"拟要写入的新值\",{\"1\":{\"669\":1}}],[\"预提交阶段\",{\"1\":{\"942\":1}}],[\"预计要读取的行数\",{\"1\":{\"796\":1}}],[\"预期值\",{\"1\":{\"669\":1}}],[\"预聚合\",{\"1\":{\"567\":1}}],[\"涉及三个操作数\",{\"1\":{\"669\":1}}],[\"颗龙珠\",{\"1\":{\"668\":1}}],[\"颗粒\",{\"1\":{\"294\":1}}],[\"召唤神龙\",{\"1\":{\"668\":1}}],[\"离开教室\",{\"1\":{\"667\":2}}],[\"抢到车位\",{\"1\":{\"666\":1}}],[\"抢车位\",{\"1\":{\"666\":1}}],[\"信号量打满也会导致服务降级\",{\"1\":{\"956\":1}}],[\"信号量主要用于两个目的\",{\"1\":{\"666\":1}}],[\"信息传递\",{\"1\":{\"209\":1}}],[\"抛出异常来拒绝新任务的处理\",{\"1\":{\"664\":1}}],[\"拒绝策略\",{\"1\":{\"664\":1}}],[\"任务唯一标识与执行记录\",{\"1\":{\"975\":1}}],[\"任务规模\",{\"1\":{\"974\":1}}],[\"任务a执行完执行b\",{\"1\":{\"670\":1}}],[\"任务\",{\"1\":{\"670\":2}}],[\"任务队列\",{\"1\":{\"664\":1}}],[\"任何时刻对\",{\"1\":{\"933\":1}}],[\"任何时刻只能有且仅有一个线程持有\",{\"1\":{\"839\":1}}],[\"任何选择器都可以进行复用\",{\"1\":{\"469\":1}}],[\"任何一种照片都包含了情绪表达\",{\"1\":{\"184\":1}}],[\"池化技术思想\",{\"1\":{\"664\":1}}],[\"弱引用就万事大吉了么\",{\"1\":{\"663\":1}}],[\"弱引用\",{\"1\":{\"663\":1}}],[\"弱化缺点\",{\"1\":{\"254\":1}}],[\"弱化缺陷\",{\"1\":{\"172\":1,\"173\":1}}],[\"弱化了人的五官在画面中的重要程度\",{\"1\":{\"184\":1}}],[\"弱化摆拍感技巧\",{\"0\":{\"176\":1}}],[\"弱化镜头存在\",{\"1\":{\"153\":1}}],[\"依旧有消息重复消费的风险\",{\"1\":{\"984\":1}}],[\"依旧可以出片\",{\"1\":{\"35\":1}}],[\"依赖mysql数据库作为持久化存储\",{\"1\":{\"974\":1}}],[\"依赖机器id\",{\"1\":{\"938\":1}}],[\"依赖cglib\",{\"1\":{\"892\":1}}],[\"依赖注入有两种主要形式\",{\"1\":{\"884\":1}}],[\"依赖注入\",{\"1\":{\"884\":2}}],[\"依赖于有序的数据\",{\"1\":{\"793\":2}}],[\"依次放到文件事件分派器\",{\"1\":{\"866\":1}}],[\"依次递归\",{\"1\":{\"715\":1}}],[\"依次反复\",{\"1\":{\"693\":1}}],[\"依次是无锁\",{\"1\":{\"661\":1}}],[\"访问数\",{\"1\":{\"817\":1}}],[\"访问方法是system\",{\"1\":{\"796\":1}}],[\"访问标识\",{\"1\":{\"661\":1}}],[\"访问任意位置的元素平均需要o\",{\"1\":{\"637\":1}}],[\"共同好友\",{\"1\":{\"819\":1}}],[\"共同确保事务的持久性\",{\"1\":{\"802\":1}}],[\"共同点\",{\"1\":{\"605\":1,\"653\":1}}],[\"共输出10次\",{\"1\":{\"727\":1}}],[\"共享资源每次只给一个线程使用\",{\"1\":{\"669\":1}}],[\"共享锁\",{\"0\":{\"786\":1},\"1\":{\"660\":1,\"669\":1,\"775\":1}}],[\"锁定机制\",{\"1\":{\"802\":1}}],[\"锁定一个范围\",{\"1\":{\"785\":2}}],[\"锁\",{\"0\":{\"669\":1},\"1\":{\"672\":1}}],[\"锁绑定多个条件condition\",{\"1\":{\"662\":1}}],[\"锁可以升级但不可降级\",{\"1\":{\"661\":1}}],[\"锁的四种状态\",{\"1\":{\"661\":1}}],[\"锁粗化\",{\"1\":{\"661\":1}}],[\"锁消除\",{\"1\":{\"661\":1}}],[\"锁指定对象\",{\"1\":{\"661\":1}}],[\"锁当前类\",{\"1\":{\"661\":1}}],[\"锁当前对象实例\",{\"1\":{\"661\":1}}],[\"锁被释放后\",{\"1\":{\"660\":2}}],[\"锁骨\",{\"1\":{\"43\":1,\"191\":1}}],[\"乐观锁会存在aba问题\",{\"1\":{\"669\":1}}],[\"乐观锁\",{\"1\":{\"660\":1,\"669\":1}}],[\"乐观并发控制\",{\"1\":{\"565\":1}}],[\"认为共享资源每次被访问的时候不会出现问题\",{\"1\":{\"660\":1,\"669\":1}}],[\"认为共享资源每次被访问的时候就会出现问题\",{\"1\":{\"660\":1}}],[\"认识链表\",{\"0\":{\"503\":1}}],[\"认识css\",{\"1\":{\"457\":1}}],[\"认识transition动画\",{\"1\":{\"456\":1}}],[\"认识flexbox\",{\"1\":{\"435\":1}}],[\"认识flex布局\",{\"0\":{\"435\":1}}],[\"认识浮动\",{\"0\":{\"429\":1}}],[\"认识position属性\",{\"1\":{\"422\":1}}],[\"认识元素的定位\",{\"1\":{\"422\":1}}],[\"认识emmet\",{\"0\":{\"413\":1}}],[\"认识盒子模型\",{\"0\":{\"383\":1}}],[\"认识自然光\",{\"0\":{\"80\":1}}],[\"悲观锁\",{\"1\":{\"660\":1,\"669\":1}}],[\"悲伤\",{\"1\":{\"150\":1}}],[\"读到脏数据\",{\"1\":{\"847\":1}}],[\"读取的超时时间\",{\"1\":{\"952\":1}}],[\"读取指定properties文件\",{\"1\":{\"920\":1}}],[\"读取比较简单的配置信息\",{\"1\":{\"918\":1}}],[\"读取配置文件\",{\"0\":{\"917\":1}}],[\"读取大key可以采用分页或流式读取的方法\",{\"1\":{\"875\":1}}],[\"读取到的是缓存旧值\",{\"1\":{\"849\":1}}],[\"读取原则\",{\"1\":{\"797\":1}}],[\"读取操作不会因此去等待记录上x锁的释放\",{\"1\":{\"788\":1}}],[\"读写缓存\",{\"1\":{\"845\":1}}],[\"读写并发\",{\"1\":{\"797\":1}}],[\"读写在同一节点上的优化\",{\"1\":{\"565\":1}}],[\"读读并发\",{\"1\":{\"797\":1}}],[\"读已提交\",{\"0\":{\"779\":1}}],[\"读未提交\",{\"0\":{\"778\":1}}],[\"读锁\",{\"1\":{\"660\":1,\"669\":1,\"786\":1,\"802\":1}}],[\"读\",{\"1\":{\"659\":1}}],[\"读数据时加入屏障\",{\"1\":{\"659\":1}}],[\"阻塞与非阻塞的理解\",{\"1\":{\"865\":1}}],[\"阻塞\",{\"1\":{\"865\":2}}],[\"阻塞当前线程或者阻塞传入的具体线程\",{\"1\":{\"671\":1}}],[\"阻塞队列满了\",{\"1\":{\"664\":1}}],[\"阻塞队列待着\",{\"1\":{\"664\":1}}],[\"阻塞状态\",{\"1\":{\"651\":1}}],[\"阻止屏障两边的指令重排序\",{\"1\":{\"659\":1}}],[\"域的读\",{\"1\":{\"659\":1}}],[\"域的写\",{\"1\":{\"659\":1}}],[\"于是b先查一级缓存\",{\"1\":{\"925\":1}}],[\"于是a将自己放到三级缓存里面\",{\"1\":{\"925\":1}}],[\"于是决定创建自己的知识博客库\",{\"1\":{\"2\":1}}],[\"于任意后续对这个\",{\"1\":{\"659\":1}}],[\"屏障拦截的线程才能干活\",{\"1\":{\"668\":1}}],[\"屏障才会开门\",{\"1\":{\"668\":1}}],[\"屏障指令等\",{\"1\":{\"659\":1}}],[\"屏幕尺寸\",{\"1\":{\"472\":1}}],[\"屏幕出厂以后就不会变化了\",{\"1\":{\"468\":1}}],[\"屏幕小于800显示橙色\",{\"1\":{\"466\":1}}],[\"问\",{\"1\":{\"658\":1}}],[\"问题原因\",{\"1\":{\"737\":1}}],[\"问题又限制我们必须使用队列这种数据结构\",{\"1\":{\"522\":1}}],[\"问题出在哪里\",{\"1\":{\"521\":1}}],[\"问题的规模n\",{\"1\":{\"484\":1}}],[\"问题二\",{\"1\":{\"472\":1}}],[\"问题一\",{\"1\":{\"472\":1}}],[\"问题\",{\"0\":{\"131\":1},\"1\":{\"564\":1,\"669\":1,\"690\":1,\"842\":1,\"868\":1}}],[\"既做到了一个线程处理多个客户端连接\",{\"1\":{\"867\":1}}],[\"既然要释放当前线程占有的对象锁并让其进入waiting状态\",{\"1\":{\"654\":1}}],[\"既保证了高性能写入\",{\"1\":{\"561\":1}}],[\"若nacos\",{\"1\":{\"971\":1}}],[\"若任何rm提交失败\",{\"1\":{\"968\":1}}],[\"若20240211已签到且0612已签到\",{\"1\":{\"823\":1}}],[\"若20240211已签到且0212未签到\",{\"1\":{\"823\":1}}],[\"若存在一个基于name的非聚集索引\",{\"1\":{\"798\":1}}],[\"若该记录被其他事务占用或当前版本对该事务不可见\",{\"1\":{\"797\":1}}],[\"若年轻代过大但老年代却常有空间剩余\",{\"1\":{\"738\":1}}],[\"若还加载不到\",{\"1\":{\"715\":1}}],[\"若加载不到\",{\"1\":{\"715\":1}}],[\"若仍然存活\",{\"1\":{\"684\":1}}],[\"若要中断一个线程\",{\"1\":{\"671\":1}}],[\"若干线程之间形成一种头尾相接的循环等待资源关系\",{\"1\":{\"652\":1}}],[\"若拉花馆\",{\"1\":{\"126\":1}}],[\"死都不收\",{\"1\":{\"663\":1}}],[\"死锁的四个必要条件\",{\"1\":{\"652\":1}}],[\"死锁\",{\"0\":{\"652\":1},\"1\":{\"669\":1}}],[\"死亡\",{\"1\":{\"17\":1,\"93\":2}}],[\"终止状态\",{\"1\":{\"651\":1}}],[\"阈值\",{\"1\":{\"644\":1}}],[\"序列号部分\",{\"1\":{\"938\":1}}],[\"序列号\",{\"1\":{\"644\":1}}],[\"序列化\",{\"1\":{\"584\":1}}],[\"序列化和反序列化\",{\"0\":{\"584\":1}}],[\"散列\",{\"0\":{\"820\":1}}],[\"散列表\",{\"1\":{\"638\":1}}],[\"散射光\",{\"1\":{\"79\":1}}],[\"待更新\",{\"0\":{\"635\":1}}],[\"举例\",{\"1\":{\"744\":2,\"796\":1,\"915\":1}}],[\"举例假设n=8\",{\"1\":{\"632\":1}}],[\"举一个简单的例子\",{\"1\":{\"669\":1}}],[\"举个现实的例子\",{\"1\":{\"552\":1}}],[\"容器不会直接实例化该\",{\"1\":{\"972\":1}}],[\"容器无法解决构造器级别的循环依赖\",{\"1\":{\"924\":1}}],[\"容器可以根据bean的类型\",{\"1\":{\"884\":1}}],[\"容器根据这些定义创建bean实例\",{\"1\":{\"884\":1}}],[\"容器会解析这些配置信息\",{\"1\":{\"884\":1}}],[\"容器初始化\",{\"1\":{\"884\":1}}],[\"容量大概是40多亿\",{\"1\":{\"818\":1}}],[\"容量大小\",{\"1\":{\"645\":2}}],[\"容量\",{\"1\":{\"644\":1}}],[\"容量变为原来的2n+1\",{\"1\":{\"628\":1}}],[\"容量变为原来的2倍\",{\"1\":{\"628\":1}}],[\"容易传输\",{\"1\":{\"872\":1}}],[\"容易导致oom\",{\"1\":{\"664\":1}}],[\"容易暴露人脸上的瑕疵\",{\"1\":{\"76\":1}}],[\"容易塑造具有层次感的画面\",{\"1\":{\"76\":1}}],[\"容易塑造故事感\",{\"1\":{\"64\":1}}],[\"唯一约束等\",{\"1\":{\"802\":1}}],[\"唯一索引\",{\"1\":{\"793\":1}}],[\"唯一\",{\"1\":{\"620\":2}}],[\"唯一一个经常使用的值\",{\"1\":{\"467\":1}}],[\"集成而是直接使用\",{\"1\":{\"970\":1}}],[\"集合中\",{\"1\":{\"822\":1}}],[\"集合运算\",{\"1\":{\"819\":1}}],[\"集合\",{\"0\":{\"819\":1}}],[\"集合底层框架结构\",{\"0\":{\"618\":1}}],[\"集齐7颗龙珠就能召唤神龙\",{\"1\":{\"668\":1}}],[\"集群健康检查与监控\",{\"1\":{\"566\":1}}],[\"集群状态\",{\"1\":{\"564\":1}}],[\"触发了分区rebalance\",{\"1\":{\"984\":1}}],[\"触发了编译器对字符串字面量的合并\",{\"1\":{\"610\":1}}],[\"触发刷新\",{\"1\":{\"972\":1}}],[\"触发bfc\",{\"1\":{\"387\":1}}],[\"顾名思义\",{\"1\":{\"604\":1}}],[\"名称或其他条件自动匹配和注入依赖\",{\"1\":{\"884\":1}}],[\"名称与类名相同\",{\"1\":{\"603\":1}}],[\"名字不能过于明显\",{\"1\":{\"126\":1}}],[\"属于a或者属于b的元素合并后的集合\",{\"1\":{\"819\":1}}],[\"属于a同时也属于b的共同拥有的元素构成的集合\",{\"1\":{\"819\":1}}],[\"属于a但不属于b的元素构成的集合\",{\"1\":{\"819\":1}}],[\"属于单个行记录上的锁\",{\"1\":{\"785\":1}}],[\"属于方法\",{\"1\":{\"600\":1}}],[\"属于类\",{\"1\":{\"600\":1}}],[\"属性值也会随之更新\",{\"1\":{\"972\":1}}],[\"属性值则可以是任何有效的css值\",{\"1\":{\"463\":1}}],[\"属性注入更新\",{\"1\":{\"972\":1}}],[\"属性外\",{\"1\":{\"963\":1}}],[\"属性指定了当资源被流控时的处理方法\",{\"1\":{\"963\":1}}],[\"属性指定了资源的名称\",{\"1\":{\"963\":1}}],[\"属性设置\",{\"1\":{\"890\":1}}],[\"属性来显式指定名称\",{\"1\":{\"888\":1}}],[\"属性不可再分\",{\"1\":{\"744\":1}}],[\"属性和联系的方法\",{\"1\":{\"743\":1}}],[\"属性名需要以两个减号\",{\"1\":{\"463\":1}}],[\"属性作用\",{\"1\":{\"460\":1}}],[\"属性的一个简写属性形式\",{\"1\":{\"457\":1}}],[\"属性允许对某一个元素进行某些形变\",{\"1\":{\"454\":1}}],[\"属性\",{\"1\":{\"414\":1,\"454\":1,\"743\":1}}],[\"属性选择器\",{\"0\":{\"369\":1},\"1\":{\"377\":1}}],[\"布谷鸟过滤器\",{\"1\":{\"833\":1}}],[\"布隆过滤器本质上是由长度为m的位向量或位列表\",{\"1\":{\"833\":1}}],[\"布隆过滤器可以添加元素\",{\"1\":{\"833\":1}}],[\"布隆过滤器是一种类似set的数据结构\",{\"1\":{\"833\":1}}],[\"布隆过滤器\",{\"0\":{\"833\":1},\"1\":{\"836\":1}}],[\"布控人员id\",{\"1\":{\"808\":1}}],[\"布尔型\",{\"1\":{\"598\":1}}],[\"布局视口的默认宽度是980px\",{\"1\":{\"470\":1}}],[\"布局视口\",{\"1\":{\"470\":1}}],[\"布局样式\",{\"1\":{\"431\":1}}],[\"浮点型\",{\"1\":{\"598\":1}}],[\"浮动的问题\",{\"0\":{\"432\":1}}],[\"浮动的案例\",{\"0\":{\"431\":1}}],[\"浮动的规则\",{\"0\":{\"430\":1}}],[\"浮动元素的父元素的高度是auto的\",{\"1\":{\"465\":1}}],[\"浮动元素的父元素触发bfc\",{\"1\":{\"465\":1}}],[\"浮动元素的左或者右边界不能超出包含块的左或者右边界\",{\"1\":{\"430\":1}}],[\"浮动元素\",{\"1\":{\"465\":1}}],[\"浮动元素不能与行内级内容层叠\",{\"1\":{\"430\":1}}],[\"浮动元素将向下移动\",{\"1\":{\"430\":1}}],[\"浮动元素之间不能层叠\",{\"1\":{\"430\":1}}],[\"浮动都会让元素脱离标准流\",{\"1\":{\"429\":1}}],[\"符号在前就先加\",{\"1\":{\"595\":1}}],[\"符合引用验证\",{\"1\":{\"712\":1}}],[\"符合在后就后加\",{\"1\":{\"595\":1}}],[\"符合一个选择器条件即可\",{\"1\":{\"372\":1}}],[\"符合故事情境\",{\"0\":{\"134\":1}}],[\"符合拍摄需求\",{\"1\":{\"121\":1}}],[\"符合拍摄主题及风格\",{\"1\":{\"121\":1}}],[\"口诀\",{\"1\":{\"595\":1,\"794\":1}}],[\"口红色\",{\"1\":{\"254\":1,\"260\":1}}],[\"口红不能涂满\",{\"1\":{\"173\":1}}],[\"口红颜色\",{\"1\":{\"124\":1}}],[\"实体\",{\"1\":{\"743\":1}}],[\"实体联系图\",{\"1\":{\"743\":1}}],[\"实时查看和调整虚拟机各项参数\",{\"1\":{\"728\":1}}],[\"实例\",{\"1\":{\"926\":1}}],[\"实例化\",{\"1\":{\"890\":1}}],[\"实例数据\",{\"1\":{\"672\":1}}],[\"实例方法interrupt\",{\"1\":{\"671\":1}}],[\"实际用到的索引\",{\"1\":{\"796\":1}}],[\"实际上是依赖于这个代理对象\",{\"1\":{\"972\":1}}],[\"实际上是在执行一个http请求\",{\"1\":{\"953\":1}}],[\"实际上是和\",{\"1\":{\"744\":1}}],[\"实际上是把之前的悲观锁\",{\"1\":{\"672\":1}}],[\"实际调用intvalue\",{\"1\":{\"599\":1}}],[\"实际调用valueof方法\",{\"1\":{\"599\":1}}],[\"实际使用\",{\"1\":{\"588\":1}}],[\"实现配置的热更新\",{\"1\":{\"972\":1}}],[\"实现限流的设计过程\",{\"1\":{\"949\":1}}],[\"实现限流逻辑\",{\"1\":{\"936\":1}}],[\"实现gatewayfilter接口\",{\"1\":{\"936\":1}}],[\"实现原理\",{\"1\":{\"884\":1}}],[\"实现在任意堆内存大小下都可以把垃圾收集的停顿时间限制在十毫秒以内的低延迟\",{\"1\":{\"709\":1}}],[\"实现在并发环境下的较高程度的读写一致性\",{\"1\":{\"565\":1}}],[\"实现简单\",{\"1\":{\"690\":1}}],[\"实现排队必然需要队列\",{\"1\":{\"665\":1}}],[\"实现的\",{\"1\":{\"629\":1}}],[\"实现发送短信的接口\",{\"1\":{\"588\":1}}],[\"实现了微服务架构中的服务注册与发现的核心功能\",{\"1\":{\"971\":1}}],[\"实现了某个接口\",{\"1\":{\"892\":1}}],[\"实现了对象的解耦和松散耦合的架构\",{\"1\":{\"884\":1}}],[\"实现了pollfd数组的重用\",{\"1\":{\"868\":1}}],[\"实现了在有限内存中估算海量数据基数的功能\",{\"1\":{\"822\":1}}],[\"实现了future和completionstage接口\",{\"1\":{\"670\":1}}],[\"实现了可见性\",{\"1\":{\"659\":1}}],[\"实现了\",{\"1\":{\"578\":1}}],[\"实现了近实时搜索\",{\"1\":{\"562\":1}}],[\"实现资源动态调度和弹性伸缩\",{\"1\":{\"566\":1}}],[\"实现可视化监控和报警\",{\"1\":{\"566\":1}}],[\"实现水平扩展\",{\"1\":{\"566\":1}}],[\"实现栈的方法\",{\"1\":{\"521\":1}}],[\"实现不浪费空间\",{\"1\":{\"520\":1}}],[\"实现\",{\"1\":{\"517\":1,\"520\":1,\"926\":1,\"936\":1}}],[\"实现获取下一个排列的函数\",{\"1\":{\"496\":1}}],[\"实现文字环绕的效果\",{\"1\":{\"429\":1}}],[\"例子\",{\"1\":{\"588\":1}}],[\"例如服务名称\",{\"1\":{\"977\":1}}],[\"例如发布一个\",{\"1\":{\"972\":1}}],[\"例如发送\",{\"1\":{\"970\":1}}],[\"例如通过tcp\",{\"1\":{\"971\":1}}],[\"例如\",{\"1\":{\"561\":1,\"681\":1,\"822\":1}}],[\"例如放在另一个元素的上面\",{\"1\":{\"422\":1}}],[\"例如文字如何相对它的块父元素对齐\",{\"1\":{\"358\":1}}],[\"例如树\",{\"1\":{\"218\":1}}],[\"泛型里面填上map对应的类型\",{\"1\":{\"633\":1}}],[\"泛型通配符\",{\"0\":{\"581\":1}}],[\"泛型字母解释\",{\"0\":{\"580\":1}}],[\"泛型加反射\",{\"1\":{\"579\":1}}],[\"泛型类\",{\"1\":{\"579\":1}}],[\"泛型接口\",{\"1\":{\"579\":1}}],[\"泛型方法\",{\"1\":{\"579\":2}}],[\"泛型集合\",{\"1\":{\"579\":1}}],[\"泛型作为\",{\"1\":{\"578\":1}}],[\"泛型可以在编译时对类型进行安全检测\",{\"1\":{\"578\":1}}],[\"泛型本质是为了将类型参数化\",{\"0\":{\"577\":1}}],[\"泛型\",{\"0\":{\"576\":1}}],[\"泛型版\",{\"0\":{\"528\":1},\"1\":{\"582\":1}}],[\"枚举作为数据存储标准写法\",{\"0\":{\"575\":1}}],[\"枚举\",{\"0\":{\"574\":1}}],[\"始终监控集群健康状况和性能指标\",{\"1\":{\"567\":1}}],[\"资源\",{\"1\":{\"967\":1}}],[\"资源管理器\",{\"1\":{\"967\":1}}],[\"资源有效利用以及系统的稳定性\",{\"1\":{\"567\":1}}],[\"资源限制\",{\"1\":{\"567\":1}}],[\"批量处理与脚本优化\",{\"1\":{\"567\":1}}],[\"度量是一个非常有效的聚合方式\",{\"1\":{\"567\":1}}],[\"良好的数据模型设计和数据生命周期管理也是关键环节\",{\"1\":{\"566\":1}}],[\"架构优化\",{\"1\":{\"566\":1}}],[\"旧索引可定期删除或归档\",{\"1\":{\"566\":1}}],[\"旧的translog会被截断\",{\"1\":{\"561\":1}}],[\"策略\",{\"1\":{\"566\":2}}],[\"策划是决定我们创作行为的指导方针\",{\"1\":{\"111\":1}}],[\"尤其是需要高性能和高度弹性的场景\",{\"1\":{\"974\":1}}],[\"尤其是在大数据量下\",{\"1\":{\"567\":1}}],[\"尤其是对于复杂查询和聚合操作\",{\"1\":{\"566\":1}}],[\"尤其在网络分区等极端情况下\",{\"1\":{\"565\":1}}],[\"升级cpu\",{\"1\":{\"566\":1}}],[\"存在误判\",{\"1\":{\"833\":1}}],[\"存在循环依赖问题\",{\"1\":{\"686\":1}}],[\"存在被引用\",{\"1\":{\"683\":1}}],[\"存在竞争时升级为轻量级锁\",{\"1\":{\"672\":1}}],[\"存在兼容性\",{\"1\":{\"431\":1}}],[\"存放可以生成bean的工厂\",{\"1\":{\"925\":1}}],[\"存放早期暴露出来的bean\",{\"1\":{\"925\":1}}],[\"存放已经经历\",{\"1\":{\"925\":1}}],[\"存放私有的数据\",{\"1\":{\"663\":1}}],[\"存放元素的个数\",{\"1\":{\"644\":1}}],[\"存放具体元素的集\",{\"1\":{\"644\":1}}],[\"存储的元素都是整数类型\",{\"1\":{\"855\":1}}],[\"存储了多少元素\",{\"1\":{\"822\":1}}],[\"存储一个称为\",{\"1\":{\"822\":1}}],[\"存储桶结构\",{\"1\":{\"822\":1}}],[\"存储空间占用\",{\"1\":{\"795\":1}}],[\"存储元素的数组\",{\"1\":{\"644\":1}}],[\"存储压力增大等问题\",{\"1\":{\"566\":1}}],[\"部署规模较小\",{\"1\":{\"974\":1}}],[\"部署\",{\"0\":{\"566\":1}}],[\"部分并且content\",{\"1\":{\"916\":1}}],[\"部分工作可以和应用程序同时执行\",{\"1\":{\"708\":1}}],[\"部分\",{\"1\":{\"562\":1}}],[\"部分成片\",{\"1\":{\"127\":1}}],[\"综合判断造成cpu飙升的原因\",{\"1\":{\"738\":1}}],[\"综合练习\",{\"1\":{\"275\":1}}],[\"综上所述\",{\"1\":{\"565\":1,\"567\":1}}],[\"级别可能会显著降低写操作的性能\",{\"1\":{\"565\":1}}],[\"然而\",{\"1\":{\"565\":1}}],[\"然后follower副本才能从leader副本中拉取消息进行同步\",{\"1\":{\"982\":1}}],[\"然后调用服务降级的方法并返回友好提示\",{\"1\":{\"957\":1}}],[\"然后通过http客户端发送请求\",{\"1\":{\"953\":1}}],[\"然后完成创建\",{\"1\":{\"925\":1}}],[\"然后回来接着创建a\",{\"1\":{\"925\":1}}],[\"然后再计算调用结果\",{\"1\":{\"865\":1}}],[\"然后再写入文件中\",{\"1\":{\"861\":1}}],[\"然后再次进行删除或更新\",{\"1\":{\"849\":1}}],[\"然后再在协调节点上聚合结果\",{\"1\":{\"567\":1}}],[\"然后写数据的休眠时间则在读数据业务逻辑的耗时基础上加百毫秒即可\",{\"1\":{\"848\":1}}],[\"然后做缓存\",{\"1\":{\"848\":1}}],[\"然后对位数组长度进行取模运算得到一个位置\",{\"1\":{\"833\":1}}],[\"然后对变量进行操作\",{\"1\":{\"657\":1}}],[\"然后得到0x7bcf\",{\"1\":{\"738\":2}}],[\"然后清除整个区域\",{\"1\":{\"690\":1}}],[\"然后在堆空间创建\",{\"1\":{\"610\":1}}],[\"然后在协调节点汇总这些统计数据\",{\"1\":{\"562\":1}}],[\"然后a再+1\",{\"1\":{\"595\":1}}],[\"然后返回给客户端\",{\"1\":{\"562\":1}}],[\"然后执行在lucene索引之上\",{\"1\":{\"562\":1}}],[\"然后根据索引的分片分配规则确定需要搜索哪些主分片和副本分片\",{\"1\":{\"562\":1}}],[\"然后客户端和服务器端都进入established\",{\"1\":{\"552\":1}}],[\"然后客户端进入time\",{\"1\":{\"552\":1}}],[\"然后客户端进入\",{\"1\":{\"552\":2}}],[\"然后服务端进入\",{\"1\":{\"552\":3}}],[\"然后\",{\"1\":{\"497\":1,\"984\":1}}],[\"然后利用css的背景定位来显示对应的图片部分\",{\"1\":{\"419\":1}}],[\"然后用画笔工具将暗处涂亮\",{\"1\":{\"262\":1}}],[\"然后用画笔工具在黑眼圈上涂抹\",{\"1\":{\"255\":1}}],[\"然后将不透明度和流量调整到10\",{\"1\":{\"255\":1}}],[\"然后图像\",{\"1\":{\"247\":1}}],[\"然后从侧面+低机位拍摄\",{\"1\":{\"234\":1}}],[\"达到一定的阈值\",{\"1\":{\"564\":1}}],[\"节省大量创建新类的时间\",{\"1\":{\"604\":1}}],[\"节点少的情况下\",{\"1\":{\"872\":1}}],[\"节点指的是quicklist双向链表的节点\",{\"1\":{\"854\":1}}],[\"节点所走过的路径称为引用链\",{\"1\":{\"687\":1}}],[\"节点资源使用情况和索引性能指标\",{\"1\":{\"566\":1}}],[\"节点资格评估\",{\"1\":{\"564\":1}}],[\"节点们通过一种基于投票的机制\",{\"1\":{\"564\":1}}],[\"节点之间通过ping消息进行心跳检测\",{\"1\":{\"564\":1}}],[\"节日文化\",{\"1\":{\"29\":1}}],[\"倒排索引为了节省存储空间和提高查找效率\",{\"1\":{\"563\":1}}],[\"倒排列表记录了所有包含该词项的文档id及其相关信息\",{\"1\":{\"563\":1}}],[\"倒排列表\",{\"1\":{\"563\":1}}],[\"倒置构图\",{\"0\":{\"60\":1}}],[\"词典\",{\"1\":{\"563\":1}}],[\"词项在文档中的偏移量\",{\"1\":{\"563\":1}}],[\"词项\",{\"1\":{\"563\":1}}],[\"缓冲池大小\",{\"1\":{\"804\":1}}],[\"缓冲区和缓存等\",{\"1\":{\"330\":1}}],[\"缓存缺少\",{\"1\":{\"848\":1}}],[\"缓存一致性几种更新策略\",{\"0\":{\"846\":1}}],[\"缓存和数据库中的数据一致\",{\"1\":{\"845\":1}}],[\"缓存操作分类\",{\"0\":{\"845\":1}}],[\"缓存双写一致性\",{\"0\":{\"844\":1}}],[\"缓存击穿\",{\"0\":{\"837\":1}}],[\"缓存穿透\",{\"0\":{\"836\":1}}],[\"缓存雪崩\",{\"0\":{\"835\":1}}],[\"缓存雪崩+缓存击穿+缓存穿透\",{\"0\":{\"834\":1}}],[\"缓存淘汰策略\",{\"0\":{\"832\":1}}],[\"缓存\",{\"1\":{\"815\":1,\"817\":1}}],[\"缓存策略\",{\"1\":{\"567\":1}}],[\"缓存机制以及高效的索引结构\",{\"1\":{\"562\":1}}],[\"含文档id和评分\",{\"1\":{\"562\":1}}],[\"含色成分越高\",{\"1\":{\"92\":1}}],[\"协调者或参与者会中断事务\",{\"1\":{\"942\":1}}],[\"协调者在发出\",{\"1\":{\"942\":1}}],[\"协调节点收到完整文档后\",{\"1\":{\"562\":1}}],[\"协调节点再向对应的分片发起请求以获取完整的文档内容\",{\"1\":{\"562\":1}}],[\"协调节点将最终的搜索结果\",{\"1\":{\"562\":1}}],[\"协调节点将这些初步结果合并成全局结果集\",{\"1\":{\"562\":1}}],[\"协调节点将搜索请求广播到涉及到的所有相关分片\",{\"1\":{\"562\":1}}],[\"协调节点\",{\"1\":{\"562\":1}}],[\"协议\",{\"1\":{\"551\":1}}],[\"协议的数据包\",{\"1\":{\"970\":1}}],[\"协议的\",{\"1\":{\"551\":1}}],[\"搜索请求提交\",{\"1\":{\"562\":1}}],[\"搜索引擎优化\",{\"1\":{\"346\":1}}],[\"旨在从分布式索引集群中快速有效地找到匹配用户查询的文档\",{\"1\":{\"562\":1}}],[\"详细描述一下elasticsearch搜索的过程\",{\"0\":{\"562\":1}}],[\"详细描述一下elasticsearch索引文档的过程\",{\"0\":{\"561\":1}}],[\"又减少了系统调用的开销\",{\"1\":{\"867\":1}}],[\"又称二级索引\",{\"1\":{\"798\":1}}],[\"又称写锁\",{\"1\":{\"775\":1}}],[\"又称读锁\",{\"1\":{\"775\":1}}],[\"又确保了数据的安全性和查询效率\",{\"1\":{\"561\":1}}],[\"又不希望父元素脱标\",{\"1\":{\"425\":1}}],[\"段管理和副本复制等多种手段\",{\"1\":{\"561\":1}}],[\"段合并\",{\"1\":{\"561\":1}}],[\"周期性刷新\",{\"1\":{\"561\":1}}],[\"周围的环境相对不重要\",{\"1\":{\"40\":1}}],[\"索引字段的数据应该尽量不为null\",{\"1\":{\"794\":1}}],[\"索引结构和数据分开存放的索引\",{\"1\":{\"793\":1}}],[\"索引结构和数据一起存放的索引\",{\"1\":{\"793\":1}}],[\"索引类型总结\",{\"0\":{\"793\":1}}],[\"索引查询都会比全表扫描要快的\",{\"1\":{\"792\":1}}],[\"索引一定能提高查询性能吗\",{\"1\":{\"792\":1}}],[\"索引需要使用物理文件存储\",{\"1\":{\"792\":1}}],[\"索引的优缺点\",{\"0\":{\"792\":1}}],[\"索引是一种用于快速查询和检索数据的数据结构\",{\"1\":{\"791\":1}}],[\"索引是从0算起的\",{\"1\":{\"487\":1}}],[\"索引介绍\",{\"0\":{\"791\":1}}],[\"索引优化与分割\",{\"1\":{\"567\":1}}],[\"索引与分片优化\",{\"1\":{\"566\":1}}],[\"索引配置的分片数量和算法\",{\"1\":{\"561\":1}}],[\"索引请求\",{\"1\":{\"561\":1}}],[\"kafka重试机制\",{\"0\":{\"985\":1}}],[\"kafka侧\",{\"1\":{\"984\":1}}],[\"kafka出现消息重复消费的原因\",{\"1\":{\"984\":1}}],[\"kafka通过偏移量来保证消息在分区内的顺序性\",{\"1\":{\"983\":1}}],[\"kafka只能保证分区中的消息有序\",{\"1\":{\"983\":1}}],[\"kafka为分区引入了多副本机制\",{\"1\":{\"982\":1}}],[\"kafka丢失的情况\",{\"1\":{\"982\":1}}],[\"kafkatemplate\",{\"1\":{\"982\":1}}],[\"kafka消息堆积了如何处理\",{\"0\":{\"981\":1}}],[\"kafka\",{\"0\":{\"980\":1,\"982\":1,\"983\":1,\"984\":1},\"1\":{\"985\":1}}],[\"koushuangbwcx\",{\"1\":{\"919\":1}}],[\"klassid=123456\",{\"1\":{\"915\":1}}],[\"klassid\",{\"1\":{\"915\":3}}],[\"klasses\",{\"1\":{\"915\":2}}],[\"kb\",{\"1\":{\"854\":1}}],[\"kilometers\",{\"1\":{\"824\":3}}],[\"km\",{\"1\":{\"824\":1}}],[\"k2\",{\"1\":{\"823\":4}}],[\"keepalivetime\",{\"1\":{\"664\":2}}],[\"ketset遍历\",{\"1\":{\"633\":1}}],[\"ketset\",{\"1\":{\"633\":1}}],[\"key正好失效了\",{\"1\":{\"837\":1}}],[\"key2\",{\"1\":{\"822\":1}}],[\"key1\",{\"1\":{\"822\":1}}],[\"key在多少毫秒之后过期\",{\"1\":{\"817\":1}}],[\"key在多少秒之后过期\",{\"1\":{\"817\":1}}],[\"keys\",{\"1\":{\"796\":2}}],[\"keyset\",{\"1\":{\"633\":1}}],[\"key是无序\",{\"1\":{\"617\":1}}],[\"key\",{\"1\":{\"580\":1,\"617\":1,\"633\":5,\"640\":1,\"663\":3,\"751\":2,\"785\":1,\"793\":2,\"796\":4,\"807\":2,\"817\":9,\"818\":4,\"819\":20,\"820\":5,\"821\":5,\"822\":3,\"823\":2,\"824\":1,\"840\":1,\"842\":1,\"936\":1}}],[\"keyword\",{\"1\":{\"557\":8}}],[\"keyframes\",{\"1\":{\"457\":1}}],[\"keyframes来定义多个变化状态\",{\"1\":{\"457\":1}}],[\"k\",{\"1\":{\"557\":1,\"580\":1,\"645\":1}}],[\"随机法\",{\"1\":{\"944\":1}}],[\"随机退避\",{\"1\":{\"837\":1}}],[\"随机取出\",{\"1\":{\"819\":1}}],[\"随机去除一个或多个\",{\"1\":{\"819\":1}}],[\"随机抽奖3个人\",{\"1\":{\"819\":1}}],[\"随机抽奖2个人\",{\"1\":{\"819\":1}}],[\"随机访问较慢\",{\"1\":{\"637\":1}}],[\"随机访问\",{\"1\":{\"637\":1}}],[\"随着数据量增长\",{\"1\":{\"566\":1}}],[\"随着elasticsearch索引数据量的增长\",{\"1\":{\"566\":1}}],[\"随着时间和刷新次数的增加\",{\"1\":{\"561\":1}}],[\"随后客户端也可以关闭连接了\",{\"1\":{\"552\":1}}],[\"随时发现阳光照射到各种环境后产生的美妙的光影的变化\",{\"1\":{\"225\":1}}],[\"悬挂\",{\"1\":{\"552\":1}}],[\"悬疑\",{\"1\":{\"187\":1}}],[\"说是标记的垃圾对象\",{\"1\":{\"689\":1}}],[\"说明极有可能存在的\",{\"1\":{\"833\":1}}],[\"说明年轻代可以适当减小\",{\"1\":{\"738\":1}}],[\"说明\",{\"1\":{\"727\":1,\"728\":1,\"738\":1}}],[\"说明已经有其它线程更新了\",{\"1\":{\"669\":1}}],[\"说明我们的循环队列\",{\"1\":{\"519\":1}}],[\"说到通讯\",{\"1\":{\"552\":1}}],[\"状态\",{\"1\":{\"552\":8}}],[\"客户端会通过某种机制\",{\"1\":{\"972\":1}}],[\"客户端会接收到通知\",{\"1\":{\"972\":1}}],[\"客户端可以直接通过dns协议获取服务实例的ip地址和端口\",{\"1\":{\"971\":1}}],[\"客户端版本文档进行准确配置\",{\"1\":{\"970\":1}}],[\"客户端心跳\",{\"1\":{\"970\":1}}],[\"客户端必须指定要修改的文档版本号\",{\"1\":{\"565\":1}}],[\"客户端通过elasticsearch的http\",{\"1\":{\"562\":1}}],[\"客户端对服务器的fin的确认\",{\"1\":{\"552\":1}}],[\"客户端进入\",{\"1\":{\"552\":1}}],[\"客户端发送请求\",{\"1\":{\"895\":1}}],[\"客户端发送\",{\"1\":{\"552\":1}}],[\"客户端发送一个\",{\"1\":{\"552\":1}}],[\"客户端发送带有\",{\"1\":{\"552\":2}}],[\"客户端\",{\"1\":{\"552\":1,\"561\":1,\"895\":1,\"953\":1,\"970\":2,\"972\":1}}],[\"客人不知道该怎么拍\",{\"1\":{\"131\":1}}],[\"支持任务分片和作业失败的转移执行\",{\"1\":{\"974\":1}}],[\"支持任务失败后的报警功能\",{\"1\":{\"974\":1}}],[\"支持限流吗\",{\"0\":{\"936\":1}}],[\"支持ap和cp\",{\"1\":{\"933\":1}}],[\"支持在构造函数\",{\"1\":{\"888\":1}}],[\"支持\",{\"1\":{\"877\":1,\"936\":1}}],[\"支持合并多个相同结构的\",{\"1\":{\"822\":1}}],[\"支持通过索引快速访问\",{\"1\":{\"637\":1}}],[\"支持一对一\",{\"1\":{\"550\":1}}],[\"支持选择器嵌套\",{\"1\":{\"469\":1}}],[\"～\",{\"1\":{\"550\":1}}],[\"首部开销\",{\"1\":{\"550\":1}}],[\"首先会对元素进行哈希运算\",{\"1\":{\"822\":1}}],[\"首先会将文档存储在内存缓冲区\",{\"1\":{\"561\":1}}],[\"首先查看java进程id\",{\"1\":{\"738\":1}}],[\"首先\",{\"1\":{\"494\":1,\"522\":1,\"610\":1}}],[\"首先非常荣幸能够参加贵公司面试\",{\"1\":{\"308\":1}}],[\"服务发现\",{\"1\":{\"971\":1}}],[\"服务实例会维持一个心跳机制\",{\"1\":{\"971\":1}}],[\"服务实例会向nacos\",{\"1\":{\"971\":1}}],[\"服务心跳\",{\"1\":{\"971\":1}}],[\"服务将被视为不健康\",{\"1\":{\"970\":1}}],[\"服务等事务内资源\",{\"1\":{\"967\":1}}],[\"服务的降级\",{\"1\":{\"957\":1}}],[\"服务的熔断和限流\",{\"1\":{\"931\":1}}],[\"服务熔断\",{\"0\":{\"957\":1}}],[\"服务熔断触发服务降级\",{\"1\":{\"956\":1}}],[\"服务降级\",{\"0\":{\"956\":1},\"1\":{\"960\":1}}],[\"服务限流\",{\"0\":{\"945\":1,\"958\":1}}],[\"服务注册\",{\"1\":{\"971\":1}}],[\"服务注册中心地址\",{\"1\":{\"970\":1}}],[\"服务注册和配置中心\",{\"1\":{\"931\":1}}],[\"服务注册发现\",{\"1\":{\"931\":1}}],[\"服务调用\",{\"1\":{\"931\":1}}],[\"服务请求者\",{\"1\":{\"865\":1}}],[\"服务提供者\",{\"1\":{\"865\":1}}],[\"服务器拉取配置信息\",{\"1\":{\"972\":1}}],[\"服务器忙\",{\"1\":{\"956\":1}}],[\"服务器收到这个\",{\"1\":{\"552\":1}}],[\"服务器处理请求并返回http报文\",{\"1\":{\"547\":1}}],[\"服务端侧已经消费的数据没有成功提交offset\",{\"1\":{\"984\":1}}],[\"服务端会按照预设的时间间隔向服务实例发起探测请求\",{\"1\":{\"970\":1}}],[\"服务端探测\",{\"1\":{\"970\":1}}],[\"服务端在收到\",{\"1\":{\"552\":1}}],[\"服务端发送一个\",{\"1\":{\"552\":1}}],[\"服务端发送带有\",{\"1\":{\"552\":1}}],[\"服务端\",{\"1\":{\"552\":2}}],[\"服装+场地\",{\"1\":{\"265\":1}}],[\"服装设计\",{\"1\":{\"154\":1}}],[\"服装等\",{\"1\":{\"149\":1,\"162\":1}}],[\"服装本身具有情绪和身份属性\",{\"1\":{\"147\":1}}],[\"服装本身具有身份属性及年龄属性\",{\"1\":{\"109\":1}}],[\"服装尤其影响到人物摆姿\",{\"1\":{\"140\":1}}],[\"服装面料柔软\",{\"1\":{\"133\":1}}],[\"服装搭配\",{\"1\":{\"133\":1,\"136\":1}}],[\"服装搭配原则\",{\"1\":{\"125\":1}}],[\"服装问题\",{\"1\":{\"125\":1}}],[\"服装质感和色彩相近或统一\",{\"1\":{\"125\":1}}],[\"服装的质感一定程度上可以反映人的性格\",{\"1\":{\"125\":1}}],[\"服装的质感\",{\"0\":{\"125\":1},\"1\":{\"125\":1}}],[\"服装的属性\",{\"0\":{\"109\":1}}],[\"服装色彩\",{\"1\":{\"259\":1}}],[\"服装色彩搭配\",{\"1\":{\"51\":1}}],[\"服装色和道具色的对比\",{\"1\":{\"97\":1}}],[\"服装色\",{\"1\":{\"95\":1,\"254\":1,\"260\":1}}],[\"服装选择要相对收腰\",{\"1\":{\"174\":1}}],[\"服装选择\",{\"1\":{\"87\":1}}],[\"服装文化\",{\"1\":{\"29\":1}}],[\"服装\",{\"0\":{\"118\":1},\"1\":{\"14\":1,\"19\":1,\"28\":1,\"95\":1,\"120\":1,\"122\":1,\"123\":1,\"127\":1,\"189\":1,\"254\":1}}],[\"总空间\",{\"1\":{\"727\":1}}],[\"总是假设最好的情况\",{\"1\":{\"669\":1}}],[\"总是2的幂次倍\",{\"1\":{\"644\":1}}],[\"总\",{\"1\":{\"625\":1}}],[\"总的来说\",{\"1\":{\"566\":1,\"693\":1,\"938\":1,\"971\":1,\"974\":1}}],[\"总之\",{\"1\":{\"564\":1}}],[\"总体分为以下几个过程\",{\"1\":{\"547\":1}}],[\"总结来说\",{\"1\":{\"561\":1,\"953\":1,\"972\":1,\"975\":1}}],[\"总结2\",{\"1\":{\"274\":1}}],[\"总结二\",{\"1\":{\"273\":1}}],[\"总结\",{\"0\":{\"35\":1,\"45\":1,\"74\":1,\"154\":1,\"203\":1,\"589\":1,\"829\":1},\"1\":{\"51\":1,\"76\":1,\"92\":1,\"147\":1,\"182\":1,\"224\":1,\"227\":1,\"228\":1,\"231\":1,\"233\":1,\"234\":1,\"235\":1,\"236\":1,\"237\":1,\"242\":1,\"273\":1,\"274\":1,\"387\":1,\"747\":1,\"765\":1,\"832\":1,\"852\":1,\"923\":1}}],[\"侦编码和误差纠正控制\",{\"1\":{\"544\":1}}],[\"维护\",{\"1\":{\"544\":1}}],[\"维护麻烦\",{\"1\":{\"433\":1}}],[\"领接表\",{\"1\":{\"539\":1}}],[\"领接矩阵\",{\"1\":{\"539\":1}}],[\"领口\",{\"1\":{\"191\":1}}],[\"哈希算法\",{\"1\":{\"944\":1}}],[\"哈希算法的执行效率要高效\",{\"1\":{\"638\":1}}],[\"哈希对象保存的键值对数量小于\",{\"1\":{\"853\":1}}],[\"哈希映射\",{\"1\":{\"822\":1}}],[\"哈希索引没有顺序性\",{\"1\":{\"793\":1}}],[\"哈希索引只支持等值查询\",{\"1\":{\"793\":1}}],[\"哈希表\",{\"0\":{\"491\":1,\"510\":1},\"1\":{\"539\":1}}],[\"哈夫曼树\",{\"1\":{\"539\":1}}],[\"贪心算法\",{\"0\":{\"534\":1}}],[\"剩下的再把最小的拿出来\",{\"1\":{\"526\":1}}],[\"剩下的\",{\"1\":{\"526\":1}}],[\"剩下的那一个元素\",{\"1\":{\"522\":1}}],[\"测试修改\",{\"1\":{\"808\":1}}],[\"测试姓名\",{\"1\":{\"807\":2}}],[\"测试表名\",{\"1\":{\"807\":2}}],[\"测试表表名称\",{\"1\":{\"751\":1}}],[\"测试内容2修改\",{\"1\":{\"753\":1}}],[\"测试内容2添加\",{\"1\":{\"753\":1}}],[\"测试内容\",{\"1\":{\"751\":1}}],[\"测试类\",{\"1\":{\"522\":1,\"523\":1}}],[\"测试结果\",{\"1\":{\"513\":1,\"516\":1}}],[\"入队\",{\"1\":{\"522\":1}}],[\"入栈的操作\",{\"1\":{\"682\":1}}],[\"入栈\",{\"1\":{\"512\":1,\"522\":4}}],[\"赋值\",{\"1\":{\"522\":1}}],[\"赋值给q\",{\"1\":{\"522\":1}}],[\"覆盖key\",{\"1\":{\"817\":1}}],[\"覆盖索引即需要查询的字段正好是索引的字段\",{\"1\":{\"793\":1}}],[\"覆盖索引\",{\"1\":{\"793\":1}}],[\"覆盖\",{\"1\":{\"522\":1}}],[\"覆盖flex\",{\"1\":{\"448\":1}}],[\"里面保持了当前对本事务不可见的其他活跃事务\",{\"1\":{\"797\":1}}],[\"里面默认的任务队列是integer\",{\"1\":{\"664\":1}}],[\"里面的代码一定会执行吗\",{\"0\":{\"572\":1}}],[\"里面的直接子元素叫做flex\",{\"1\":{\"436\":1}}],[\"里的数据就是原始的数据\",{\"1\":{\"522\":1}}],[\"里只剩下一个元素\",{\"1\":{\"522\":1}}],[\"qps请求数量等\",{\"1\":{\"956\":1}}],[\"qualifier\",{\"1\":{\"888\":1}}],[\"quorum\",{\"1\":{\"564\":2}}],[\"quicklist\",{\"1\":{\"854\":1}}],[\"quic\",{\"1\":{\"551\":1}}],[\"queryinterface3\",{\"1\":{\"670\":4}}],[\"queryinterface2\",{\"1\":{\"670\":4}}],[\"queryinterface1\",{\"1\":{\"670\":4}}],[\"queryasync\",{\"1\":{\"670\":2}}],[\"querysimpleasync\",{\"1\":{\"670\":2}}],[\"querysync\",{\"1\":{\"670\":2}}],[\"queryselector\",{\"1\":{\"461\":1}}],[\"query\",{\"1\":{\"558\":1,\"559\":1,\"562\":1}}],[\"queuearray\",{\"1\":{\"523\":3}}],[\"queue<integer>\",{\"1\":{\"522\":7}}],[\"queue<e>\",{\"1\":{\"506\":2,\"517\":2}}],[\"queue接口\",{\"1\":{\"516\":1}}],[\"queue\",{\"0\":{\"617\":1},\"1\":{\"506\":7,\"516\":5,\"517\":5,\"518\":9,\"519\":9,\"520\":5,\"522\":5,\"616\":1,\"617\":1}}],[\"q中剩下的最后一个元素就是栈顶元素\",{\"1\":{\"522\":1}}],[\"q\",{\"1\":{\"522\":52}}],[\"q2\",{\"1\":{\"522\":13}}],[\"显式创建的对象\",{\"1\":{\"611\":1}}],[\"显卡\",{\"1\":{\"521\":2}}],[\"显示已经有多少人参与了\",{\"1\":{\"819\":1}}],[\"显示当前cpu占用最高的5个线程\",{\"1\":{\"738\":1}}],[\"显示当前目录及其子目录的磁盘使用情况\",{\"1\":{\"332\":2}}],[\"显示关于锁的附加信息\",{\"1\":{\"731\":1}}],[\"显示堆内存相关信息\",{\"1\":{\"729\":1}}],[\"显示各代的内存使用情况\",{\"1\":{\"727\":1}}],[\"显示程序的运行时间\",{\"1\":{\"727\":1}}],[\"显示jit编译器编译过的方法\",{\"1\":{\"727\":1}}],[\"显示与gc相关的堆信息\",{\"1\":{\"727\":1}}],[\"显示classloader的相关信息\",{\"1\":{\"727\":1}}],[\"显示的斜体\",{\"1\":{\"364\":1}}],[\"显示指定目录的磁盘使用情况\",{\"1\":{\"332\":1}}],[\"显示指定目录的磁盘空间利用情况\",{\"1\":{\"331\":1}}],[\"显示内存使用情况\",{\"1\":{\"330\":1}}],[\"显示前10个cpu占用率最高的进程\",{\"1\":{\"328\":1}}],[\"显示系统整体运行状况\",{\"1\":{\"328\":1}}],[\"电话铃声响起表示请求开始通话\",{\"1\":{\"552\":1}}],[\"电脑里有\",{\"1\":{\"521\":1}}],[\"电影网站\",{\"1\":{\"187\":1}}],[\"电影氛围感的构建\",{\"0\":{\"186\":1}}],[\"电影氛围感构建\",{\"0\":{\"183\":1}}],[\"电影感风格拍摄tips\",{\"0\":{\"191\":1}}],[\"电影感并非一种风格\",{\"1\":{\"187\":1}}],[\"电影感\",{\"1\":{\"114\":1,\"153\":1}}],[\"电影感的照片\",{\"1\":{\"81\":1}}],[\"电影\",{\"1\":{\"112\":1}}],[\"电影荧幕的宽高比通常为\",{\"1\":{\"48\":1}}],[\"电影清单\",{\"1\":{\"18\":1}}],[\"猫是一个动物\",{\"1\":{\"521\":1}}],[\"再通过decoder将http响应内容解码成java对象返回\",{\"1\":{\"953\":1}}],[\"再查三级缓存\",{\"1\":{\"925\":1}}],[\"再查二级缓存\",{\"1\":{\"925\":1}}],[\"再进入下层链表查找\",{\"1\":{\"857\":1}}],[\"再进行一次内存碎片整理\",{\"1\":{\"691\":1}}],[\"再删除缓存\",{\"0\":{\"849\":1}}],[\"再次读取mysql时\",{\"1\":{\"848\":1}}],[\"再次点开滤镜\",{\"1\":{\"6\":1}}],[\"再更新数据库\",{\"0\":{\"848\":1}}],[\"再把位数组的这几个位置都置为1就完成了add操作\",{\"1\":{\"833\":1}}],[\"再把最新的拿出来\",{\"1\":{\"526\":1}}],[\"再遍历被驱动表进行查询\",{\"1\":{\"796\":1}}],[\"再对临时表中的数据进行过滤\",{\"1\":{\"747\":1}}],[\"再将变量写回主内存\",{\"1\":{\"657\":1}}],[\"再赋值给b\",{\"1\":{\"595\":1}}],[\"再来看看为什么使用\",{\"1\":{\"521\":1}}],[\"应尽可能优化脚本逻辑\",{\"1\":{\"567\":1}}],[\"应该被添加到\",{\"1\":{\"926\":1}}],[\"应该被考虑建立索引\",{\"1\":{\"794\":1}}],[\"应该分配给下一个事务的id值\",{\"1\":{\"797\":1}}],[\"应该是这样的\",{\"1\":{\"521\":1}}],[\"应该是组合关系\",{\"1\":{\"521\":1}}],[\"应该由\",{\"1\":{\"521\":1}}],[\"应用中的\",{\"1\":{\"970\":1}}],[\"应用正常执行本地\",{\"1\":{\"968\":1}}],[\"应用案例\",{\"1\":{\"824\":1}}],[\"应用长时间运行\",{\"1\":{\"737\":1}}],[\"应用程序便处于启动完成并等待处理请求的状态\",{\"1\":{\"926\":1}}],[\"应用程序的启动始于\",{\"1\":{\"926\":1}}],[\"应用程序只需要在一个阻塞对象上等待\",{\"1\":{\"866\":1}}],[\"应用程序可能需要加载自己的特定版本的类库而不使用父类加载器提供的版本\",{\"1\":{\"716\":1}}],[\"应用程序类加载器\",{\"1\":{\"714\":1}}],[\"应用程序加载器\",{\"1\":{\"679\":1}}],[\"应用程序之间的会话\",{\"1\":{\"544\":1}}],[\"应用层\",{\"1\":{\"544\":1,\"545\":1}}],[\"应用在flex\",{\"1\":{\"440\":2}}],[\"应用场景\",{\"1\":{\"365\":1,\"663\":1,\"817\":1,\"818\":1,\"819\":1,\"820\":1,\"821\":1,\"822\":1,\"823\":1}}],[\"奇数从队首加入\",{\"1\":{\"520\":1}}],[\"偶数从队尾加入\",{\"1\":{\"520\":1}}],[\"偶尔遇到\",{\"1\":{\"275\":1}}],[\"起来了\",{\"1\":{\"519\":1}}],[\"起因\",{\"1\":{\"190\":1}}],[\"循环依赖\",{\"0\":{\"924\":1}}],[\"循环等待条件\",{\"1\":{\"652\":1}}],[\"循环\",{\"1\":{\"519\":1,\"680\":1}}],[\"循环队列另外一种实现方式二\",{\"0\":{\"519\":1}}],[\"循环队列另一种实现方式\",{\"0\":{\"518\":1}}],[\"循环队列\",{\"0\":{\"517\":1}}],[\"添加\",{\"1\":{\"833\":1}}],[\"添加到指定的\",{\"1\":{\"824\":1}}],[\"添加到结果列表中\",{\"1\":{\"494\":1}}],[\"添加合适索引\",{\"1\":{\"796\":1}}],[\"添加索引\",{\"0\":{\"758\":1}}],[\"添加列\",{\"0\":{\"754\":1}}],[\"添加参数\",{\"1\":{\"737\":1}}],[\"添加元素时\",{\"1\":{\"822\":1}}],[\"添加元素是队列尾元素\",{\"1\":{\"516\":1}}],[\"添加元素\",{\"1\":{\"515\":1,\"819\":1,\"821\":1}}],[\"队首\",{\"1\":{\"515\":1}}],[\"队首元素\",{\"1\":{\"506\":1}}],[\"队尾\",{\"1\":{\"515\":1}}],[\"队列\",{\"1\":{\"539\":1,\"818\":1}}],[\"队列实现栈\",{\"1\":{\"522\":1}}],[\"队列中的元素个数为\",{\"1\":{\"519\":1}}],[\"队列中的元素个数就是tail\",{\"1\":{\"519\":1}}],[\"队列满\",{\"1\":{\"517\":2}}],[\"队列为空\",{\"1\":{\"517\":1}}],[\"队列的实现\",{\"0\":{\"516\":1}}],[\"队列是一种先进先出的数据结构\",{\"1\":{\"515\":1}}],[\"队列只能从一端\",{\"1\":{\"515\":1}}],[\"队列对应的操作是数组的子集\",{\"1\":{\"515\":1}}],[\"队列也是一种线性结构\",{\"1\":{\"515\":1}}],[\"队列介绍\",{\"0\":{\"515\":1}}],[\"括号匹配\",{\"1\":{\"514\":1}}],[\"编排数据库\",{\"1\":{\"967\":1}}],[\"编码\",{\"1\":{\"953\":1}}],[\"编码格式\",{\"1\":{\"854\":1,\"855\":1,\"856\":1}}],[\"编写相应的补救逻辑\",{\"1\":{\"879\":1}}],[\"编写html注意事项\",{\"1\":{\"379\":1}}],[\"编解码\",{\"1\":{\"544\":1}}],[\"编译器会在编译期间将其优化合并为一个字符串字面量\",{\"1\":{\"611\":1}}],[\"编译器\",{\"1\":{\"514\":1}}],[\"编辑器\",{\"1\":{\"514\":1}}],[\"接着另外一个并发事务插入了一些数据\",{\"1\":{\"772\":1}}],[\"接着切换到应用程序线程\",{\"1\":{\"693\":1}}],[\"接着\",{\"1\":{\"610\":1}}],[\"接收到响应后\",{\"1\":{\"953\":1}}],[\"接收到数据之后会自动将数据绑定到\",{\"1\":{\"916\":1}}],[\"接收到请求的节点作为协调节点\",{\"1\":{\"562\":1}}],[\"接收任务的处理结果\",{\"1\":{\"670\":1}}],[\"接收正常\",{\"1\":{\"552\":6}}],[\"接电话说您好\",{\"1\":{\"552\":1}}],[\"接口的bean\",{\"1\":{\"926\":1}}],[\"接口的方法定义\",{\"1\":{\"579\":2}}],[\"接口进行加载\",{\"1\":{\"715\":2}}],[\"接口中体现\",{\"1\":{\"715\":1}}],[\"接口都是\",{\"1\":{\"625\":1}}],[\"接口和\",{\"1\":{\"625\":1}}],[\"接口和抽象类的区别\",{\"0\":{\"605\":1}}],[\"接口泛型需要写在void前面\",{\"1\":{\"528\":1}}],[\"接口提供\",{\"1\":{\"521\":1}}],[\"接口\",{\"1\":{\"513\":1,\"517\":1,\"712\":1,\"715\":1,\"972\":1}}],[\"接近16\",{\"1\":{\"191\":1}}],[\"出自大众点评\",{\"1\":{\"974\":1}}],[\"出问题\",{\"1\":{\"942\":1}}],[\"出异常的话\",{\"1\":{\"840\":1}}],[\"出一个删一个\",{\"1\":{\"819\":1}}],[\"出现这种异常\",{\"1\":{\"737\":1}}],[\"出现最多的就是你现阶段喜欢的风格\",{\"1\":{\"25\":1}}],[\"出栈\",{\"1\":{\"512\":1,\"522\":4}}],[\"栈大小\",{\"1\":{\"738\":1}}],[\"栈帧中的局部变量表\",{\"1\":{\"687\":1}}],[\"栈帧数据\",{\"1\":{\"682\":1}}],[\"栈报的错误\",{\"1\":{\"682\":1}}],[\"栈操作\",{\"1\":{\"682\":1}}],[\"栈存储什么\",{\"1\":{\"682\":1}}],[\"栈也叫栈内存\",{\"1\":{\"682\":1}}],[\"栈也是一种线性结构\",{\"1\":{\"512\":1}}],[\"栈管运行\",{\"1\":{\"682\":1}}],[\"栈\",{\"0\":{\"682\":1,\"720\":1},\"1\":{\"539\":1}}],[\"栈顶元素\",{\"1\":{\"522\":1}}],[\"栈的应用\",{\"0\":{\"514\":1}}],[\"栈的实现\",{\"0\":{\"513\":1},\"1\":{\"512\":1}}],[\"栈的介绍\",{\"0\":{\"512\":1}}],[\"栈是一种后进先出的结构\",{\"1\":{\"512\":1}}],[\"栈对应的操作是数组的子集\",{\"1\":{\"512\":1}}],[\"栈和队列\",{\"0\":{\"511\":1}}],[\"力扣\",{\"1\":{\"514\":1}}],[\"力扣题目\",{\"0\":{\"507\":1}}],[\"力量\",{\"1\":{\"279\":2}}],[\"力量性\",{\"1\":{\"64\":1}}],[\"性能监控和诊断\",{\"1\":{\"977\":1}}],[\"性能问题\",{\"1\":{\"942\":1}}],[\"性能下降怎么办\",{\"1\":{\"848\":1}}],[\"性能非常高\",{\"1\":{\"814\":1}}],[\"性能调优案例\",{\"0\":{\"738\":1}}],[\"性能调优\",{\"0\":{\"734\":1}}],[\"性能\",{\"1\":{\"630\":1}}],[\"性能测试\",{\"1\":{\"505\":1}}],[\"性格\",{\"1\":{\"40\":1}}],[\"丧失了随机访问的能力\",{\"1\":{\"503\":1}}],[\"辅助索引\",{\"1\":{\"798\":1}}],[\"辅助组成其他数据结构\",{\"1\":{\"502\":1}}],[\"辅导\",{\"1\":{\"299\":1}}],[\"真正有效的字符串数据\",{\"1\":{\"852\":1}}],[\"真正的动态\",{\"1\":{\"503\":1}}],[\"真正的动态数据结构\",{\"1\":{\"502\":1}}],[\"真实感\",{\"1\":{\"276\":1}}],[\"链表在内存中一般是不连续的\",{\"1\":{\"853\":1}}],[\"链表不支持直接通过索引快速访问元素\",{\"1\":{\"637\":1}}],[\"链表的大小可以根据需要动态增长和缩减\",{\"1\":{\"637\":1}}],[\"链表的增删改查\",{\"0\":{\"504\":1}}],[\"链表长度大于8\",{\"1\":{\"628\":1,\"631\":1}}],[\"链表\",{\"0\":{\"501\":1},\"1\":{\"502\":1,\"539\":1,\"637\":1}}],[\"字段和参数上使用\",{\"1\":{\"888\":1}}],[\"字段和方法的符号引用转为直接引用\",{\"1\":{\"712\":1}}],[\"字段和方法数据\",{\"1\":{\"681\":1}}],[\"字段\",{\"1\":{\"712\":1}}],[\"字段数据缓存\",{\"1\":{\"566\":1}}],[\"字面意思\",{\"1\":{\"665\":1,\"668\":1}}],[\"字符集\",{\"0\":{\"762\":1}}],[\"字符串最大字节长度\",{\"1\":{\"852\":1}}],[\"字符串\",{\"0\":{\"817\":1}}],[\"字符串连接操作\",{\"1\":{\"610\":1}}],[\"字符串常量池\",{\"0\":{\"609\":1}}],[\"字符串问题\",{\"0\":{\"499\":1}}],[\"字符型\",{\"1\":{\"598\":1}}],[\"字节码验证\",{\"1\":{\"712\":1}}],[\"字节码解释器通过改变这个\",{\"1\":{\"680\":1}}],[\"字节码内容加载到内存中\",{\"1\":{\"679\":1}}],[\"字节码转换为本地机器代码\",{\"1\":{\"594\":1}}],[\"字节\",{\"1\":{\"550\":2}}],[\"字体图标的使用\",{\"1\":{\"418\":1}}],[\"字体图标的好处\",{\"1\":{\"418\":1}}],[\"字体本身支持斜体时\",{\"1\":{\"364\":1}}],[\"翻转i之后的元素\",{\"1\":{\"497\":1}}],[\"翻车的照片需要进行总结\",{\"1\":{\"266\":1}}],[\"查看上述命令\",{\"1\":{\"853\":1}}],[\"查看编码\",{\"1\":{\"851\":1}}],[\"查看类型\",{\"1\":{\"851\":1}}],[\"查看类型和编码命令\",{\"0\":{\"851\":1}}],[\"查看对应的位置是否都为1\",{\"1\":{\"833\":1}}],[\"查看redis最大内存\",{\"1\":{\"831\":1}}],[\"查看我自己订阅的全部文章\",{\"1\":{\"818\":1}}],[\"查看列表\",{\"1\":{\"818\":1}}],[\"查看线程栈信息\",{\"1\":{\"738\":1}}],[\"查看特定线程号的详细信息\",{\"1\":{\"738\":1}}],[\"查看cpu使用情况\",{\"1\":{\"738\":1}}],[\"查看某个java进程的具体参数的值\",{\"1\":{\"728\":1}}],[\"查看某个服务的初始堆内存和最大堆内存的大小\",{\"1\":{\"721\":1}}],[\"查看曾经赋值的参数\",{\"1\":{\"728\":1}}],[\"查看\",{\"1\":{\"728\":1}}],[\"查看所有java进程\",{\"1\":{\"726\":1}}],[\"查看默认垃圾回收器\",{\"1\":{\"723\":1}}],[\"查询一条记录\",{\"1\":{\"836\":1}}],[\"查询某个key是否存在时\",{\"1\":{\"833\":1}}],[\"查询效率非常高\",{\"1\":{\"796\":1}}],[\"查询遍历了整棵索引树\",{\"1\":{\"796\":1}}],[\"查询结果可能找到多个符合条件的行\",{\"1\":{\"796\":1}}],[\"查询执行的类型\",{\"1\":{\"796\":1}}],[\"查询的结果\",{\"1\":{\"796\":1}}],[\"查询的序列标识符\",{\"1\":{\"796\":1}}],[\"查询中如果包含子查询或其他部分\",{\"1\":{\"796\":1}}],[\"查询语句\",{\"1\":{\"796\":1}}],[\"查询速度非常快\",{\"1\":{\"793\":1}}],[\"查询过程更复杂\",{\"1\":{\"793\":1}}],[\"查询null值时\",{\"1\":{\"764\":1}}],[\"查询间隔\",{\"1\":{\"727\":1}}],[\"查询调优\",{\"1\":{\"566\":1}}],[\"查询优化\",{\"1\":{\"566\":1}}],[\"查询请求经过分析\",{\"1\":{\"562\":1}}],[\"查询阶段\",{\"1\":{\"562\":1}}],[\"查询条件\",{\"1\":{\"562\":1}}],[\"查询字段不为空的数据\",{\"0\":{\"559\":1}}],[\"查找当前哪个线程占用cpu最高\",{\"1\":{\"738\":1}}],[\"查找刚刚转换16进制id是否存在\",{\"1\":{\"738\":1}}],[\"查找数组中元素e所在的索引\",{\"1\":{\"513\":1,\"516\":1,\"539\":1}}],[\"查找数组中是否有元素e\",{\"1\":{\"513\":1,\"516\":1,\"539\":1}}],[\"查找比5大\",{\"1\":{\"497\":1}}],[\"查文档\",{\"1\":{\"456\":1}}],[\"则不再进行重试\",{\"1\":{\"985\":1}}],[\"则不会再执行该任务\",{\"1\":{\"975\":1}}],[\"则认为该实例已下线\",{\"1\":{\"971\":1}}],[\"则需要参考对应的\",{\"1\":{\"970\":1}}],[\"则需要用户去手动释放锁若没有主动释放锁\",{\"1\":{\"662\":1}}],[\"则服务端会认为该实例不健康\",{\"1\":{\"970\":1}}],[\"则服务器将无法确认客户端是否已经接收到其发送的fin消息\",{\"1\":{\"552\":1}}],[\"则tc通知所有rm回滚\",{\"1\":{\"968\":1}}],[\"则拒绝该请求或者将请求放入队列中等待令牌\",{\"1\":{\"949\":1}}],[\"则允许处理该请求\",{\"1\":{\"949\":1}}],[\"则进行第二阶段的资源提交\",{\"1\":{\"942\":1}}],[\"则在嵌套事务内执行\",{\"1\":{\"898\":1}}],[\"则抛出异常\",{\"1\":{\"898\":2}}],[\"则以非事务的方式执行\",{\"1\":{\"898\":1}}],[\"则创建一个新的事务\",{\"1\":{\"898\":2}}],[\"则加入该事务\",{\"1\":{\"898\":3}}],[\"则整个事务会取消执行\",{\"1\":{\"878\":1}}],[\"则刷新过期时间\",{\"1\":{\"842\":1}}],[\"则连续签到天数为2\",{\"1\":{\"823\":1}}],[\"则连续签到天数为1\",{\"1\":{\"823\":1}}],[\"则考虑分库分表\",{\"1\":{\"804\":1}}],[\"则可以通过undo\",{\"1\":{\"797\":1}}],[\"则为空\",{\"1\":{\"797\":1}}],[\"则表示未用到索引\",{\"1\":{\"796\":1}}],[\"则表示没有可能用到的索引\",{\"1\":{\"796\":1}}],[\"则该值可以为null\",{\"1\":{\"796\":1}}],[\"则年轻代可以适当增大\",{\"1\":{\"738\":1}}],[\"则调用findclass\",{\"1\":{\"715\":1}}],[\"则调用findbootstrapclassornull\",{\"1\":{\"715\":1}}],[\"则调用parent\",{\"1\":{\"715\":1}}],[\"则分析结果的准确性无法保证\",{\"1\":{\"710\":1}}],[\"则将当前事务挂起\",{\"1\":{\"898\":2}}],[\"则将其回收\",{\"1\":{\"689\":1}}],[\"则将数字重新排列成最小的排列\",{\"1\":{\"496\":1}}],[\"则证明此对象是不可用的\",{\"1\":{\"687\":1}}],[\"则会被标记为不健康或下线\",{\"1\":{\"970\":1}}],[\"则会被晋升到老年代\",{\"1\":{\"684\":1}}],[\"则会丢弃该任务\",{\"1\":{\"664\":1}}],[\"则由execution\",{\"1\":{\"679\":1}}],[\"则使用我们自定义的或者特别指定的线程池执行异步代码\",{\"1\":{\"670\":1}}],[\"则说明被其他线程修改\",{\"1\":{\"669\":1}}],[\"则说明没被其他线程修改\",{\"1\":{\"669\":1}}],[\"则当前线程放弃更新\",{\"1\":{\"669\":1}}],[\"则只会出现一个monitorenter\",{\"1\":{\"661\":1}}],[\"则是object类的本地方法\",{\"1\":{\"653\":1}}],[\"则要求所有分片\",{\"1\":{\"565\":1}}],[\"则更新或删除操作会失败\",{\"1\":{\"565\":1}}],[\"则赋值最小索引\",{\"1\":{\"527\":1}}],[\"则返回\",{\"1\":{\"513\":1,\"516\":1,\"539\":1}}],[\"则直接替换5和7的位置即可\",{\"1\":{\"497\":1}}],[\"则\",{\"1\":{\"497\":1}}],[\"→\",{\"1\":{\"496\":3}}],[\"略过最后两个元素\",{\"1\":{\"494\":1}}],[\"继续执行循环下面的语句\",{\"1\":{\"597\":1}}],[\"继续下一次循环\",{\"1\":{\"597\":1}}],[\"继续寻找满足条件的三元组\",{\"1\":{\"494\":1}}],[\"继续遍历\",{\"1\":{\"494\":1}}],[\"继承是使用已存在的类的定义作为基础建立新类的技术\",{\"1\":{\"604\":1}}],[\"继承关系描述的是\",{\"1\":{\"521\":1}}],[\"继承\",{\"1\":{\"469\":1,\"604\":1}}],[\"遍历的时候又置位回零\",{\"1\":{\"868\":1}}],[\"遍历相对比较慢\",{\"1\":{\"853\":1}}],[\"遍历集合中的所有元素\",{\"1\":{\"819\":1}}],[\"遍历排序后的数组\",{\"1\":{\"494\":1}}],[\"遍历数组\",{\"1\":{\"494\":2}}],[\"遍历数组元素\",{\"1\":{\"491\":1}}],[\"排他锁\",{\"0\":{\"787\":1},\"1\":{\"775\":1}}],[\"排查大key\",{\"0\":{\"874\":1}}],[\"排查思路\",{\"1\":{\"738\":1}}],[\"排查问题\",{\"0\":{\"735\":1}}],[\"排序\",{\"1\":{\"625\":1}}],[\"排序信息以及任何聚合结果打包成json格式的响应\",{\"1\":{\"562\":1}}],[\"排序规则\",{\"1\":{\"562\":1}}],[\"排序算法\",{\"0\":{\"524\":1}}],[\"排序后的数组\",{\"1\":{\"494\":1}}],[\"排序的时间复杂度为o\",{\"1\":{\"494\":1}}],[\"排除法\",{\"1\":{\"120\":1}}],[\"排除到只剩下主体和干净的背景\",{\"1\":{\"51\":1}}],[\"排除杂乱无章的环境\",{\"1\":{\"51\":1}}],[\"排除没有相似性物体\",{\"1\":{\"51\":1}}],[\"排除与主题无关的事物\",{\"1\":{\"51\":1}}],[\"排除不好看的\",{\"1\":{\"51\":1}}],[\"排除\",{\"1\":{\"51\":1}}],[\"满足\",{\"1\":{\"497\":1}}],[\"满足nums\",{\"1\":{\"497\":1}}],[\"满足要求的三元组集合为\",{\"1\":{\"493\":1}}],[\"满足日常风光\",{\"1\":{\"277\":1}}],[\"满足日常人像\",{\"1\":{\"277\":1}}],[\"返回50条\",{\"1\":{\"824\":2}}],[\"返回与中心的距离不超过给定最大距离的所有位置元素\",{\"1\":{\"824\":1}}],[\"返回两个给定位置之间的距离\",{\"1\":{\"824\":1}}],[\"返回两个数的索引\",{\"1\":{\"491\":1}}],[\"返回右表中的所有行\",{\"1\":{\"748\":1}}],[\"返回左表中的所有行\",{\"1\":{\"748\":1}}],[\"返回当前值并清零置false\",{\"1\":{\"671\":1}}],[\"返回当前线程的中断状态\",{\"1\":{\"671\":2}}],[\"返回给协调节点\",{\"1\":{\"562\":1}}],[\"返回栈顶元素\",{\"1\":{\"522\":1}}],[\"返回栈中元素的数量\",{\"1\":{\"522\":2}}],[\"返回\",{\"1\":{\"507\":1}}],[\"返回删除的元素\",{\"1\":{\"504\":1,\"513\":1,\"516\":1,\"539\":1}}],[\"返回包含满足条件的三元组的结果列表\",{\"1\":{\"494\":1}}],[\"返回找到的所有满足条件的三个数的组合\",{\"1\":{\"494\":1}}],[\"返回结果\",{\"1\":{\"494\":1}}],[\"返回空数组\",{\"1\":{\"491\":1}}],[\"返图6张以上\",{\"1\":{\"122\":1}}],[\"检测是否有变更\",{\"1\":{\"972\":1}}],[\"检测是否存在与当前元素配对的差值\",{\"1\":{\"491\":1}}],[\"检查当前使用异常线程的pid\",{\"1\":{\"738\":1}}],[\"检查项目中是否有大量的死循环或有使用大内存的代码\",{\"1\":{\"737\":1}}],[\"检查代码中是否存在大量的反射操作\",{\"1\":{\"737\":1}}],[\"检查是否永久代空间或者元空间设置的过小\",{\"1\":{\"737\":1}}],[\"检查是否存在内存泄漏\",{\"1\":{\"737\":1}}],[\"检查是否存在内存泄漏的问题\",{\"1\":{\"737\":1}}],[\"检查是否存在大对象分配\",{\"1\":{\"737\":1}}],[\"检查\",{\"1\":{\"299\":1}}],[\"示例\",{\"1\":{\"489\":1,\"493\":1,\"507\":1,\"514\":3,\"587\":1}}],[\"你不能把别人的锁删除了\",{\"1\":{\"840\":1}}],[\"你不能重复利用这个数组中同样的元素\",{\"1\":{\"489\":1}}],[\"你需要手动调用该线程的interrupt方法\",{\"1\":{\"671\":1}}],[\"你突然被紧急的事情打断\",{\"1\":{\"552\":1}}],[\"你打我电话\",{\"1\":{\"552\":1}}],[\"你可以假设每种输入只会对应一个答案\",{\"1\":{\"489\":1}}],[\"题目说明\",{\"0\":{\"493\":1,\"496\":1}}],[\"题目\",{\"0\":{\"489\":1},\"1\":{\"507\":1,\"514\":1,\"599\":1,\"623\":1}}],[\"越大\",{\"1\":{\"484\":1}}],[\"越具有画面张力\",{\"1\":{\"205\":1}}],[\"输出整个堆空间的详细信息\",{\"1\":{\"729\":1}}],[\"输出全部的参数\",{\"1\":{\"728\":1}}],[\"输出全部的参数和系统熟悉\",{\"1\":{\"728\":1}}],[\"输出对应名称的参数\",{\"1\":{\"728\":1}}],[\"输出一次垃圾回收相关的数据\",{\"1\":{\"727\":1}}],[\"输出多少行数据后输出一个表头信息\",{\"1\":{\"727\":1}}],[\"输出传递给\",{\"1\":{\"726\":1}}],[\"输出虚拟机进程启动时\",{\"1\":{\"726\":1}}],[\"输出主类的全名\",{\"1\":{\"726\":1}}],[\"输出a的值\",{\"1\":{\"595\":1}}],[\"输出a+1的值\",{\"1\":{\"595\":1}}],[\"输出\",{\"1\":{\"514\":3,\"587\":1,\"670\":2,\"726\":1,\"823\":1}}],[\"输出项\",{\"1\":{\"482\":1}}],[\"输入参数和输出参数以及方法内的变量\",{\"1\":{\"682\":1}}],[\"输入数据的微小变化会得到完全不同的hash值\",{\"1\":{\"638\":1}}],[\"输入\",{\"1\":{\"514\":3}}],[\"输入位于左侧列\",{\"1\":{\"496\":1}}],[\"输入项\",{\"1\":{\"482\":1}}],[\"输入框的占位文字\",{\"1\":{\"461\":1}}],[\"确保跨进程\",{\"1\":{\"977\":1}}],[\"确保了任务的幂等性\",{\"1\":{\"975\":1}}],[\"确保了在各种异常情况下集群依然能够正常运行\",{\"1\":{\"564\":1}}],[\"确保无论何时只有一个执行器成功领到任务并执行\",{\"1\":{\"975\":1}}],[\"确保应用在运行时能响应外部配置的变化\",{\"1\":{\"972\":1}}],[\"确保所有分支事务要么全部提交\",{\"1\":{\"968\":1}}],[\"确保事务可以完全隔离\",{\"1\":{\"899\":1}}],[\"确保在事务执行期间多次读取相同数据时\",{\"1\":{\"899\":1}}],[\"确保在事务执行前数据未发生变化\",{\"1\":{\"879\":1}}],[\"确保在正确的作用域范围内创建和管理bean\",{\"1\":{\"884\":1}}],[\"确保即使在系统崩溃的情况下也能恢复数据至一致状态\",{\"1\":{\"802\":1}}],[\"确保一个类的全局唯一性\",{\"1\":{\"715\":1}}],[\"确保系统的稳定\",{\"1\":{\"566\":1}}],[\"确保文档在成为可搜索状态之前\",{\"1\":{\"561\":1}}],[\"确保数据冗余和高可用性\",{\"1\":{\"561\":1}}],[\"确保数据安全地刷新到磁盘上\",{\"1\":{\"561\":1}}],[\"确保数据能够高效地存储并实现高可用性及可检索性\",{\"1\":{\"561\":1}}],[\"确认了\",{\"1\":{\"552\":4}}],[\"确认了对方发送正常\",{\"1\":{\"552\":1}}],[\"确切性\",{\"1\":{\"482\":1}}],[\"确定会有aba问题\",{\"1\":{\"658\":1}}],[\"确定动作的同时\",{\"1\":{\"151\":1}}],[\"确定美姿\",{\"0\":{\"150\":1}}],[\"确定美姿的基本方法\",{\"0\":{\"139\":1}}],[\"确定构图及视点后\",{\"1\":{\"148\":1}}],[\"确定构图和视点\",{\"0\":{\"148\":1}}],[\"确定风格及人物情绪\",{\"0\":{\"140\":1}}],[\"确定拍摄机位及构图\",{\"1\":{\"120\":1}}],[\"确定了创作主题及风格\",{\"1\":{\"114\":1}}],[\"故障转移\",{\"1\":{\"871\":1}}],[\"故宫\",{\"1\":{\"824\":3}}],[\"故名思意\",{\"1\":{\"480\":1}}],[\"故事感\",{\"1\":{\"187\":1}}],[\"故事\",{\"1\":{\"23\":1}}],[\"故事结构\",{\"1\":{\"18\":1}}],[\"算法由此诞生\",{\"1\":{\"691\":1}}],[\"算法思路\",{\"0\":{\"526\":1,\"530\":1},\"1\":{\"526\":1}}],[\"算法需要将给定数字序列重新排列成字典序中下一个更大的排列\",{\"1\":{\"496\":1}}],[\"算法执行的时间的增长率与f\",{\"1\":{\"484\":1}}],[\"算法复杂度\",{\"0\":{\"483\":1}}],[\"算法必须在能在执行有限个步骤之后终止\",{\"1\":{\"482\":1}}],[\"算法的诞生\",{\"1\":{\"693\":1}}],[\"算法的字段基数估计\",{\"1\":{\"567\":1}}],[\"算法的空间复杂度\",{\"1\":{\"485\":1}}],[\"算法的时间复杂度也因此记做\",{\"1\":{\"484\":1}}],[\"算法的时间复杂度\",{\"1\":{\"484\":1}}],[\"算法的每一步骤必须有确切的定义\",{\"1\":{\"482\":1}}],[\"算法的特征\",{\"0\":{\"482\":1}}],[\"算法的基本概念\",{\"0\":{\"479\":1}}],[\"算法\",{\"1\":{\"480\":1,\"691\":1,\"811\":1},\"2\":{\"540\":1}}],[\"算法简介\",{\"0\":{\"478\":1}}],[\"算术运算符可以对任何数字\",{\"1\":{\"469\":1}}],[\"麻烦\",{\"1\":{\"472\":1}}],[\"转换和优化\",{\"1\":{\"562\":1}}],[\"转化成rem单位\",{\"1\":{\"472\":1}}],[\"转圈\",{\"1\":{\"150\":1}}],[\"针对每个操作\",{\"1\":{\"942\":1}}],[\"针对索引字段加的锁\",{\"1\":{\"785\":1}}],[\"针对不同存活特性采用不同的垃圾回收算法\",{\"1\":{\"692\":1}}],[\"针对不同的屏幕\",{\"1\":{\"472\":1}}],[\"针对elasticsearch数据量增多的问题\",{\"1\":{\"566\":1}}],[\"针对这种情况\",{\"1\":{\"566\":1}}],[\"针织衫\",{\"1\":{\"125\":1}}],[\"描述了查询是如何执行的\",{\"1\":{\"796\":1}}],[\"描述\",{\"1\":{\"470\":1}}],[\"理论中的数据不一致\",{\"1\":{\"934\":1}}],[\"理论中分区容错性\",{\"1\":{\"933\":1}}],[\"理想视口\",{\"1\":{\"470\":1}}],[\"理解为我爸是李刚\",{\"1\":{\"679\":1}}],[\"理解浏览器前缀\",{\"0\":{\"464\":1}}],[\"理解\",{\"0\":{\"371\":1},\"1\":{\"668\":1}}],[\"到\",{\"1\":{\"714\":1}}],[\"到页面展示到底发生了什么\",{\"0\":{\"547\":1}}],[\"到底怎么了\",{\"1\":{\"521\":1}}],[\"到用户的可见区域中\",{\"1\":{\"470\":1}}],[\"到在它之前的浮动元素下面\",{\"1\":{\"433\":1}}],[\"称作渐进时间复杂度\",{\"1\":{\"484\":1}}],[\"称之为布局视口\",{\"1\":{\"470\":1}}],[\"称为纯色\",{\"1\":{\"92\":1}}],[\"插入和删除效率高\",{\"1\":{\"637\":1}}],[\"插入和删除元素时可能需要移动大量元素\",{\"1\":{\"637\":1}}],[\"插入和删除操作成本高\",{\"1\":{\"637\":1}}],[\"插入和删除\",{\"1\":{\"622\":1}}],[\"插入和删除是否受元素位置影响\",{\"1\":{\"622\":1}}],[\"插入排序\",{\"1\":{\"530\":1}}],[\"插入排序类似生活中把牌按顺序排列\",{\"1\":{\"530\":1}}],[\"插入排序法\",{\"0\":{\"529\":1}}],[\"插值语法\",{\"1\":{\"469\":1}}],[\"插件\",{\"1\":{\"254\":1}}],[\"函数的参数\",{\"1\":{\"726\":1}}],[\"函数\",{\"1\":{\"469\":1,\"794\":1}}],[\"函数通常将高斯模糊应用于输出图片或者元素\",{\"1\":{\"463\":1}}],[\"完全服从acid的隔离级别\",{\"1\":{\"781\":1}}],[\"完全兼容css的\",{\"1\":{\"469\":1}}],[\"完成一次请求\",{\"1\":{\"895\":1}}],[\"完成属性的各种赋值\",{\"1\":{\"890\":1}}],[\"完成\",{\"1\":{\"552\":1,\"670\":2}}],[\"完整性\",{\"1\":{\"657\":1}}],[\"完整示例代码\",{\"1\":{\"453\":1}}],[\"完整描述的修辞手法\",{\"1\":{\"45\":1}}],[\"运行期间生成了大量的代理类\",{\"1\":{\"737\":1}}],[\"运行高效\",{\"1\":{\"690\":1}}],[\"运行时常量池\",{\"1\":{\"681\":1}}],[\"运行时创建接口的代理实例\",{\"1\":{\"589\":1}}],[\"运行状态\",{\"1\":{\"651\":1}}],[\"运维自动化等多种手段\",{\"1\":{\"566\":1}}],[\"运维自动化\",{\"1\":{\"566\":1}}],[\"运算符连接得到的\",{\"1\":{\"611\":1}}],[\"运算\",{\"1\":{\"469\":1}}],[\"运动\",{\"1\":{\"277\":1}}],[\"运动镜头本身具有律动感\",{\"1\":{\"162\":1,\"163\":1}}],[\"运动模糊\",{\"0\":{\"70\":1}}],[\"嵌套\",{\"1\":{\"469\":2}}],[\"受系统时钟影响\",{\"1\":{\"842\":1}}],[\"受检查异常\",{\"1\":{\"571\":1}}],[\"受less影响\",{\"1\":{\"469\":1}}],[\"受光线的影响\",{\"1\":{\"90\":1}}],[\"毕竟逻辑像素才是面向我们开发者\",{\"1\":{\"468\":1}}],[\"操作名\",{\"1\":{\"977\":1}}],[\"操作类型\",{\"1\":{\"977\":1}}],[\"操作失败\",{\"1\":{\"669\":1}}],[\"操作完成后\",{\"1\":{\"657\":1}}],[\"操作对应的对象而非当前的线程\",{\"1\":{\"654\":1}}],[\"操作\",{\"1\":{\"590\":2,\"878\":1}}],[\"操作系统通知应用程序\",{\"1\":{\"866\":1}}],[\"操作系统\",{\"1\":{\"514\":1}}],[\"操作系统为开发者进行抽象\",{\"1\":{\"468\":1}}],[\"操作符两边都是\",{\"1\":{\"610\":1}}],[\"操作符\",{\"1\":{\"469\":1}}],[\"操作步骤\",{\"1\":{\"6\":1,\"262\":1}}],[\"逻辑像素\",{\"1\":{\"468\":1}}],[\"逻辑运算符\",{\"1\":{\"466\":1}}],[\"指被调用方先返回应答让调用者先回去\",{\"1\":{\"865\":1}}],[\"指令\",{\"1\":{\"661\":1}}],[\"指的是对象创建的权力\",{\"1\":{\"884\":1}}],[\"指的是复用同一个线程\",{\"1\":{\"869\":1}}],[\"指的是多个网络连接\",{\"1\":{\"869\":1}}],[\"指的是查询从索引的最左前列开始并且不跳过索引中的列\",{\"1\":{\"794\":1}}],[\"指的是gc事件发生过程中\",{\"1\":{\"710\":1}}],[\"指的是线程可以再次获取自己内部锁\",{\"1\":{\"660\":1}}],[\"指的就是设备像素\",{\"1\":{\"468\":1}}],[\"指向该行的undo\",{\"1\":{\"797\":1}}],[\"指向方法区中的方法字节码\",{\"1\":{\"680\":1}}],[\"指向常量池中的对象\",{\"1\":{\"611\":1}}],[\"指向同一对象\",{\"1\":{\"611\":1}}],[\"指向不同对象\",{\"1\":{\"611\":1}}],[\"指向的是队尾元素的下一个位置\",{\"1\":{\"520\":1}}],[\"指跳出整个循环体\",{\"1\":{\"597\":1}}],[\"指跳出当前的这一次循环\",{\"1\":{\"597\":1}}],[\"指解决一个问题具体的步骤和方法\",{\"1\":{\"480\":1}}],[\"指定\",{\"1\":{\"645\":2}}],[\"指定位置插入add\",{\"1\":{\"622\":1}}],[\"指定方向\",{\"1\":{\"457\":1}}],[\"指定动画执行的次数\",{\"1\":{\"457\":1}}],[\"指定动画的持续时间\",{\"1\":{\"457\":1}}],[\"指定动画的变化曲线\",{\"1\":{\"456\":1,\"457\":1}}],[\"指定延迟的执行时间\",{\"1\":{\"457\":1}}],[\"指定执行哪一个关键帧动画\",{\"1\":{\"457\":1}}],[\"指定过渡动画执行之前的等待时间\",{\"1\":{\"456\":1}}],[\"指定过渡动画所需的时间\",{\"1\":{\"456\":1}}],[\"指定应用过渡属性的名称\",{\"1\":{\"456\":1}}],[\"指定的可以直接下载的字体\",{\"1\":{\"362\":1}}],[\"指定链接类型\",{\"1\":{\"351\":1}}],[\"逗号分割\",{\"1\":{\"579\":1}}],[\"逗号\",{\"1\":{\"466\":1}}],[\"媒体类型是可选的\",{\"1\":{\"466\":1}}],[\"媒体类型\",{\"1\":{\"466\":1}}],[\"媒体查询是一种提供给开发者争对不同设备需求进行定制化开发的一个接口\",{\"1\":{\"466\":1}}],[\"媒体查询\",{\"0\":{\"466\":1},\"1\":{\"466\":1}}],[\"根本原因\",{\"1\":{\"984\":1}}],[\"根元素\",{\"1\":{\"465\":1}}],[\"根据某些版本或特定场景的配置项\",{\"1\":{\"970\":1}}],[\"根据所有分支事务的状态作出全局提交或回滚的决定\",{\"1\":{\"968\":1}}],[\"根据第一阶段的结果决定是执行confirm还是cancel\",{\"1\":{\"942\":1}}],[\"根据扫描到的内容来决定是否需要自动配置某个组件\",{\"1\":{\"923\":1}}],[\"根据类路径中是否存在某个类\",{\"1\":{\"923\":1}}],[\"根据类型进行匹配\",{\"1\":{\"888\":1}}],[\"根据项目的依赖和配置来自动配置应用程序的各种组件\",{\"1\":{\"923\":1}}],[\"根据handlermapping\",{\"1\":{\"894\":1}}],[\"根据url去匹配查找能处理的handler\",{\"1\":{\"894\":1}}],[\"根据名称进行匹配\",{\"1\":{\"888\":1}}],[\"根据哈希值映射到的桶位置\",{\"1\":{\"822\":1}}],[\"根据索引看看是否可以优化\",{\"1\":{\"803\":1}}],[\"根据主键再回表查数据\",{\"1\":{\"793\":1}}],[\"根据进程\",{\"1\":{\"738\":1}}],[\"根据业务背景选择垃圾回收器\",{\"1\":{\"736\":1}}],[\"根据业务需求和资源状况\",{\"1\":{\"566\":1}}],[\"根据目标的停顿时间\",{\"1\":{\"694\":1}}],[\"根据对象的存活周期将堆内存分为新生代和老年代\",{\"1\":{\"692\":1}}],[\"根据带的异常参数可以进一步处理\",{\"1\":{\"670\":1}}],[\"根据负载适当增加硬件资源\",{\"1\":{\"567\":1}}],[\"根据实际情况调整此参数\",{\"1\":{\"738\":1}}],[\"根据实际业务需求和可用性要求\",{\"1\":{\"566\":1}}],[\"根据实际拍摄场地及主题风格确定拍摄脚本\",{\"1\":{\"120\":1}}],[\"根据初步结果集中的文档id列表\",{\"1\":{\"562\":1}}],[\"根据三数之和与0的关系\",{\"1\":{\"494\":1}}],[\"根据双指针所指的三个数之和与目标和比较的结果\",{\"1\":{\"494\":1}}],[\"根据权重可以判断出优先级\",{\"1\":{\"377\":1}}],[\"根据元素选择\",{\"1\":{\"279\":1}}],[\"根据不同的风格进行面部修饰\",{\"1\":{\"254\":1}}],[\"根据不同的风格确定不同的妆造\",{\"1\":{\"124\":1}}],[\"根据具体拍摄选择\",{\"1\":{\"159\":1}}],[\"根据拍摄主题和风格确定道具\",{\"1\":{\"126\":1}}],[\"根据拍摄状态及发型等判断人物性格\",{\"1\":{\"123\":1}}],[\"根据风格的不同可选择直发\",{\"1\":{\"124\":1}}],[\"根据风格确定服装\",{\"1\":{\"109\":1}}],[\"整理算法\",{\"1\":{\"692\":1}}],[\"整理了哪些情况会有bfc\",{\"1\":{\"465\":1}}],[\"整数型\",{\"1\":{\"598\":1}}],[\"整体图\",{\"0\":{\"677\":1}}],[\"整体元素个数就是\",{\"1\":{\"519\":1}}],[\"整体可以分为两类\",{\"1\":{\"467\":1}}],[\"整体变暗\",{\"1\":{\"288\":1}}],[\"整体变亮\",{\"1\":{\"288\":1}}],[\"整体清晰\",{\"1\":{\"274\":2}}],[\"整体色调偏好\",{\"1\":{\"260\":1}}],[\"整体思路\",{\"1\":{\"255\":1}}],[\"整体拍摄思路是由远到近拍摄不同焦段不同构图\",{\"1\":{\"242\":1}}],[\"整体基调\",{\"1\":{\"18\":1,\"127\":1,\"187\":1,\"188\":1}}],[\"格式的数据\",{\"1\":{\"916\":1}}],[\"格式分类\",{\"1\":{\"801\":1}}],[\"格式检查\",{\"1\":{\"712\":1}}],[\"格式化上下文\",{\"1\":{\"465\":1}}],[\"格式是\",{\"1\":{\"373\":1}}],[\"颜色或变量进行运算\",{\"1\":{\"469\":1}}],[\"颜色渐变函数\",{\"1\":{\"463\":1}}],[\"颜色的丰富程度\",{\"1\":{\"279\":1}}],[\"偏移量表示当前消费到的分区的所在位置\",{\"1\":{\"982\":1}}],[\"偏向锁\",{\"1\":{\"661\":1,\"672\":2}}],[\"偏向一侧时更为自然\",{\"1\":{\"156\":1}}],[\"偏差值越大\",{\"1\":{\"463\":1}}],[\"毛玻璃\",{\"1\":{\"463\":1}}],[\"毛边感\",{\"1\":{\"78\":1}}],[\"溢出那行的结尾处用省略号显示\",{\"1\":{\"462\":1}}],[\"溢出的内容直接裁剪掉\",{\"1\":{\"462\":1}}],[\"允许消息延时的场景\",{\"1\":{\"984\":1}}],[\"允许消费者一次性从broker拉取更多消息\",{\"1\":{\"981\":1}}],[\"允许一定的突发流量\",{\"1\":{\"936\":1}}],[\"允许一个事务读取另一个事务未提交的数据修改\",{\"1\":{\"899\":1}}],[\"允许系统中的数据存在中间状态\",{\"1\":{\"934\":1}}],[\"允许损失部分可用性\",{\"1\":{\"934\":1}}],[\"允许开发者通过实现该接口来提供bean的实例的创建逻辑\",{\"1\":{\"927\":1}}],[\"允许在\",{\"1\":{\"902\":1}}],[\"允许重复\",{\"1\":{\"819\":1}}],[\"允许读取并发事务已经提交的数据\",{\"1\":{\"779\":1}}],[\"允许读取尚未提交的数据变更\",{\"1\":{\"778\":1}}],[\"允许多个事务同时获取\",{\"1\":{\"775\":1,\"786\":1}}],[\"允许垃圾收集线程以分阶段的方式完成标记\",{\"1\":{\"693\":1}}],[\"允许用户构造复杂的搜索和分析场景\",{\"1\":{\"562\":1}}],[\"允许单词超屏时自动换行\",{\"1\":{\"462\":1}}],[\"允许文本和内联元素环绕它\",{\"1\":{\"429\":1}}],[\"合并等复杂操作\",{\"1\":{\"857\":1}}],[\"合并后的\",{\"1\":{\"822\":1}}],[\"合并操作\",{\"1\":{\"822\":1}}],[\"合并key至新key\",{\"1\":{\"822\":1}}],[\"合并所有连续的空白\",{\"1\":{\"462\":2}}],[\"合理配置堆内存\",{\"1\":{\"738\":1}}],[\"合理设置线程池线程数量\",{\"1\":{\"736\":1}}],[\"合理设置分片数\",{\"1\":{\"566\":1}}],[\"合理并符合规范的\",{\"1\":{\"712\":1}}],[\"合理的分片策略可以帮助均匀分布负载\",{\"1\":{\"567\":1}}],[\"合理规划存储容量是必要的\",{\"1\":{\"566\":1}}],[\"合作化妆师\",{\"1\":{\"124\":1}}],[\"合作久了多尝试换风格拍摄\",{\"1\":{\"123\":1}}],[\"换行符\",{\"1\":{\"462\":1}}],[\"恢复播放\",{\"1\":{\"460\":1}}],[\"尾部元素\",{\"1\":{\"459\":1}}],[\"意味着什么\",{\"1\":{\"919\":1}}],[\"意味着至少一个分片成功即可返回结果\",{\"1\":{\"565\":1}}],[\"意味着同baseline一样\",{\"1\":{\"458\":1}}],[\"意境上的审美\",{\"1\":{\"37\":1}}],[\"才创建key\",{\"1\":{\"817\":1}}],[\"才会由系统类加载器或自定义的类加载器进行加载\",{\"1\":{\"715\":1}}],[\"才会逐渐取得进步\",{\"1\":{\"27\":1}}],[\"才自己去加载\",{\"1\":{\"715\":1}}],[\"才能进行master选举\",{\"1\":{\"564\":1}}],[\"才算包裹这个line\",{\"1\":{\"458\":1}}],[\"那这个元素一定不会在集合中\",{\"1\":{\"833\":1}}],[\"那这个计数器是空的\",{\"1\":{\"680\":1}}],[\"那一个int类型就可以搞定一个月\",{\"1\":{\"823\":1}}],[\"那其他事务不能再对这条记录加任何类型的锁\",{\"1\":{\"775\":1}}],[\"那就在常量池创建一个指向该字符串对象的引用并返回\",{\"1\":{\"611\":1}}],[\"那行高为什么可以撑起div的高度呢\",{\"1\":{\"458\":1}}],[\"那么elastic\",{\"1\":{\"974\":1}}],[\"那么xxl\",{\"1\":{\"974\":1}}],[\"那么认为该实例是健康的\",{\"1\":{\"970\":1}}],[\"那么即使协调者通过选举协议产生了新的协调者\",{\"1\":{\"942\":1}}],[\"那么spring\",{\"1\":{\"892\":1}}],[\"那么我们可以在第一个查询数据的请求上使用一个\",{\"1\":{\"848\":1}}],[\"那么我们来思考\",{\"1\":{\"473\":1}}],[\"那么数据库需要借助索引中存储的主键值\",{\"1\":{\"798\":1}}],[\"那么具体应该读取哪个快照呢\",{\"1\":{\"797\":1}}],[\"那么直接根据该索引\",{\"1\":{\"793\":1}}],[\"那么其他信息\",{\"1\":{\"744\":1}}],[\"那么可能需要增大老年代的空间\",{\"1\":{\"738\":1}}],[\"那么g1收集器就会对该region进行回收\",{\"1\":{\"708\":1}}],[\"那么垃圾收集器就是内存回收的具体实现\",{\"1\":{\"701\":1}}],[\"那么使用轻量级锁自旋带来的性能消耗就比使用重量级锁更严重\",{\"1\":{\"672\":1}}],[\"那么第一个操作的执行结果将对第二个操作可见\",{\"1\":{\"657\":1}}],[\"那么这种重排序并不非法\",{\"1\":{\"657\":1}}],[\"那么这两个操作之间必须存在happens\",{\"1\":{\"657\":1}}],[\"那么这个东西有什么用\",{\"1\":{\"465\":1}}],[\"那么这个块级元素的margin\",{\"1\":{\"387\":2}}],[\"那么会先在字符串常量池创建\",{\"1\":{\"610\":1}}],[\"那么自己封装的入栈操作\",{\"1\":{\"522\":1}}],[\"那么就可以让垃圾收集线程和应用程序线程交替执行\",{\"1\":{\"693\":1}}],[\"那么就确定了前两个数字1\",{\"1\":{\"497\":1}}],[\"那么就一定可以找到它的下一个排列\",{\"1\":{\"497\":1}}],[\"那么如果我们需要在不同的屏幕下有不同的尺寸\",{\"1\":{\"472\":1}}],[\"那么如何通过配置文件修改呢\",{\"1\":{\"970\":1}}],[\"那么如何解决父元素高度坍塌问题呢\",{\"1\":{\"432\":1}}],[\"那么如何防止出现传递问题\",{\"1\":{\"387\":1}}],[\"那么如何知道权重呢\",{\"1\":{\"377\":1}}],[\"那么显示在可见区域的这个视口\",{\"1\":{\"470\":1}}],[\"那么右侧有一部分区域就会无法显示\",{\"1\":{\"470\":1}}],[\"那么像素到底是什么\",{\"1\":{\"468\":1}}],[\"那么bfc在哪里\",{\"1\":{\"465\":1}}],[\"那么\",{\"1\":{\"458\":1,\"744\":1,\"849\":1}}],[\"那么参考的是自身的高度\",{\"1\":{\"454\":1}}],[\"那么参考的是自身的宽度\",{\"1\":{\"454\":1}}],[\"那么多个样式覆盖上去\",{\"1\":{\"377\":1}}],[\"那么属性会被一层层覆盖上去\",{\"1\":{\"377\":1}}],[\"那么优先使用后代元素自己的属性\",{\"1\":{\"376\":1}}],[\"那么在该元素上设置后\",{\"1\":{\"376\":1}}],[\"撑起来了div的高度\",{\"1\":{\"458\":1}}],[\"延迟等\",{\"1\":{\"871\":1}}],[\"延迟双删中的等待时间就不好设置\",{\"1\":{\"849\":1}}],[\"延迟一段时间再次进行删除\",{\"1\":{\"848\":1}}],[\"延迟\",{\"1\":{\"457\":1}}],[\"延伸半径\",{\"1\":{\"390\":1}}],[\"延伸下巴长度\",{\"1\":{\"168\":1}}],[\"何时开始\",{\"1\":{\"456\":1}}],[\"哪些情况会发生降级\",{\"1\":{\"956\":1}}],[\"哪些操作会加行级锁\",{\"0\":{\"789\":1}}],[\"哪些操作会加表级锁\",{\"0\":{\"789\":1}}],[\"哪些对象可以作为\",{\"1\":{\"687\":1}}],[\"哪些css属性可以做动画呢\",{\"1\":{\"456\":1}}],[\"哪些属性发现动画效果\",{\"1\":{\"456\":1}}],[\"哪一个生效呢\",{\"1\":{\"377\":1}}],[\"兼容所有类型\",{\"0\":{\"582\":1}}],[\"兼容所有数据类型\",{\"0\":{\"528\":1}}],[\"兼容css语法\",{\"1\":{\"469\":1}}],[\"兼容性差一点点\",{\"1\":{\"455\":1}}],[\"兼顾数据和写入性能\",{\"1\":{\"861\":1}}],[\"兼顾不同的光线\",{\"1\":{\"225\":1}}],[\"兼顾一部分环境\",{\"1\":{\"40\":1}}],[\"弊端\",{\"1\":{\"455\":2,\"715\":1}}],[\"回滚决策\",{\"1\":{\"968\":1}}],[\"回滚\",{\"1\":{\"967\":1}}],[\"回滚分布式事务\",{\"1\":{\"967\":1}}],[\"回滚日志\",{\"1\":{\"802\":1}}],[\"回滚日志保证事物的原子性\",{\"1\":{\"799\":1}}],[\"回滚指针\",{\"1\":{\"797\":2}}],[\"回到聚集索引\",{\"1\":{\"798\":1}}],[\"回到没有执行动画的位置\",{\"1\":{\"457\":1}}],[\"回表\",{\"1\":{\"793\":1,\"798\":1}}],[\"回溯算法\",{\"0\":{\"536\":1}}],[\"回顾让元素水平居中\",{\"1\":{\"455\":1}}],[\"回避\",{\"1\":{\"93\":1}}],[\"位图\",{\"0\":{\"823\":1}}],[\"位图索引等方式加速对大量文档的遍历\",{\"1\":{\"563\":1}}],[\"位置名称\",{\"1\":{\"824\":1}}],[\"位置信息\",{\"1\":{\"563\":1}}],[\"位置\",{\"1\":{\"520\":1}}],[\"位置添加新的元素e\",{\"1\":{\"504\":1}}],[\"位置关系\",{\"1\":{\"34\":2}}],[\"位移运算符\",{\"0\":{\"596\":1}}],[\"位移\",{\"1\":{\"454\":1}}],[\"倾斜\",{\"1\":{\"454\":3}}],[\"倾斜或平移等\",{\"1\":{\"454\":1}}],[\"给数据库带来压力\",{\"1\":{\"849\":1}}],[\"给缓存设置过期时间\",{\"1\":{\"846\":1}}],[\"给对象添加一个引用计数器\",{\"1\":{\"686\":1}}],[\"给当前对象实例加锁\",{\"1\":{\"661\":1}}],[\"给定数组\",{\"1\":{\"493\":1}}],[\"给定一个数组和目录值要求返回对应下标\",{\"0\":{\"582\":1}}],[\"给定一个只包括\",{\"1\":{\"514\":1}}],[\"给定一个包含\",{\"1\":{\"493\":1}}],[\"给定一个整数数组\",{\"1\":{\"489\":1}}],[\"给定\",{\"1\":{\"489\":1}}],[\"给i元素设置和item相同的width\",{\"1\":{\"453\":1}}],[\"给里面div盒子后面增加i元素\",{\"1\":{\"453\":1}}],[\"给父元素增加\",{\"1\":{\"433\":1}}],[\"给父元素设置固定高度\",{\"1\":{\"433\":1}}],[\"给父元素设置border\",{\"1\":{\"387\":1}}],[\"给父元素设置padding\",{\"1\":{\"387\":1}}],[\"关闭自动提交\",{\"1\":{\"984\":2}}],[\"关联\",{\"1\":{\"964\":1}}],[\"关键在于评估自身项目的技术栈\",{\"1\":{\"974\":1}}],[\"关键字对应的查询类型\",{\"1\":{\"796\":1}}],[\"关键字none\",{\"1\":{\"452\":1}}],[\"关键帧使用percentage来指定动画发生的时间点\",{\"1\":{\"457\":1}}],[\"关于修片\",{\"1\":{\"122\":1}}],[\"关于本站\",{\"1\":{\"3\":1}}],[\"关于\",{\"0\":{\"3\":1}}],[\"关于我\",{\"0\":{\"2\":1},\"1\":{\"3\":1}}],[\"遵从flex\",{\"1\":{\"448\":1}}],[\"遵循人的骨骼结构\",{\"1\":{\"254\":1}}],[\"遵循人体结构\",{\"1\":{\"133\":1}}],[\"遵循正常生活行为方式\",{\"1\":{\"133\":1}}],[\"之所以长度取2的幂次方\",{\"1\":{\"632\":1}}],[\"之后出现的select\",{\"1\":{\"796\":1}}],[\"之后每次扩容\",{\"1\":{\"628\":2}}],[\"之后\",{\"1\":{\"520\":1,\"859\":3,\"926\":1}}],[\"之间的距离\",{\"1\":{\"444\":1}}],[\"之间的距离是flex\",{\"1\":{\"444\":1}}],[\"之间的距离相等\",{\"1\":{\"444\":1,\"446\":1}}],[\"之前是基于\",{\"1\":{\"551\":1}}],[\"之前的距离相等\",{\"1\":{\"444\":1}}],[\"之前命名的图层\",{\"1\":{\"256\":1}}],[\"居中对齐\",{\"1\":{\"444\":1,\"445\":1,\"446\":1}}],[\"居中构图\",{\"0\":{\"53\":1}}],[\"弹性元素\",{\"1\":{\"465\":1}}],[\"弹性布局\",{\"1\":{\"435\":1}}],[\"弹性盒子是一种用于按行或按列布局元素的一维布局方法\",{\"1\":{\"435\":1}}],[\"收缩以适应更小的空间\",{\"1\":{\"435\":1}}],[\"收集过程分为四个阶段\",{\"1\":{\"707\":1}}],[\"收集器\",{\"0\":{\"702\":1,\"703\":1,\"704\":1,\"705\":1,\"706\":1,\"707\":1,\"708\":1,\"709\":1}}],[\"收集器和垃圾分代之间的关系\",{\"0\":{\"699\":1}}],[\"收集到第\",{\"1\":{\"668\":1}}],[\"收集1000张自己喜欢的照片\",{\"0\":{\"25\":1}}],[\"收集同一风格不同作者的作品\",{\"0\":{\"21\":1}}],[\"扩到线程池所能达到的最高极限\",{\"1\":{\"664\":1}}],[\"扩展现有的topic分区\",{\"1\":{\"981\":1}}],[\"扩展性需求以及团队对相关技术的熟悉程度等因素\",{\"1\":{\"974\":1}}],[\"扩展性不好\",{\"1\":{\"433\":1}}],[\"扩展类加载器\",{\"1\":{\"679\":1,\"714\":1}}],[\"扩展\",{\"1\":{\"610\":1,\"667\":1,\"833\":1}}],[\"扩容通常是扩大原来数量的2倍\",{\"1\":{\"643\":1}}],[\"扩容触发条件\",{\"1\":{\"643\":1}}],[\"扩容原理\",{\"0\":{\"643\":1}}],[\"扩容的大小为原大小的1\",{\"1\":{\"623\":1}}],[\"扩容机制\",{\"1\":{\"623\":1}}],[\"扩容核心代码\",{\"1\":{\"623\":1}}],[\"扩容磁盘空间\",{\"1\":{\"566\":1}}],[\"扩容\",{\"1\":{\"513\":1,\"516\":1,\"628\":1,\"664\":1}}],[\"扩充构图法\",{\"1\":{\"278\":1}}],[\"变成了链表\",{\"1\":{\"793\":1}}],[\"变成了脱标元素\",{\"1\":{\"432\":1}}],[\"变成在一定条件下使用偏向锁以及使用轻量级\",{\"1\":{\"672\":1}}],[\"变量值\",{\"1\":{\"469\":1}}],[\"变量名\",{\"1\":{\"469\":1}}],[\"变量\",{\"1\":{\"469\":1}}],[\"变化姿势\",{\"0\":{\"179\":1}}],[\"公平锁\",{\"1\":{\"660\":1,\"669\":1}}],[\"公共的class\",{\"1\":{\"431\":2}}],[\"公园\",{\"1\":{\"121\":1}}],[\"百度页面展示练习\",{\"1\":{\"431\":1}}],[\"百分比设置\",{\"1\":{\"471\":1}}],[\"百分比\",{\"1\":{\"361\":1,\"400\":1,\"454\":1}}],[\"还没没有\",{\"1\":{\"925\":1}}],[\"还没学习\",{\"1\":{\"430\":1}}],[\"还存在select中原来的问题\",{\"1\":{\"868\":1}}],[\"还存活的对象年龄+1\",{\"1\":{\"721\":1}}],[\"还可以考虑\",{\"1\":{\"738\":1}}],[\"还是时间存在于我们之中\",{\"1\":{\"919\":1}}],[\"还是无法找到一块足够大的内存容纳当前对象\",{\"1\":{\"737\":1}}],[\"还是flexible的源码\",{\"1\":{\"473\":1}}],[\"还要整理所有存活对象的引用地址\",{\"1\":{\"691\":1}}],[\"还得设置具体的宽高值\",{\"1\":{\"425\":1}}],[\"删除会导致误判率增加\",{\"1\":{\"833\":1}}],[\"删除马上要过期的key\",{\"1\":{\"832\":1}}],[\"删除一个key\",{\"1\":{\"820\":1}}],[\"删除元素\",{\"1\":{\"819\":1}}],[\"删除索引\",{\"0\":{\"760\":1}}],[\"删除列\",{\"0\":{\"756\":1}}],[\"删除表里面的数据\",{\"1\":{\"745\":1}}],[\"删除\",{\"1\":{\"564\":1}}],[\"删除链表中等于给定值val的所有元素\",{\"1\":{\"507\":1}}],[\"删除链表中的元素\",{\"0\":{\"507\":1}}],[\"删除第一个元素\",{\"1\":{\"504\":1}}],[\"删除换行符\",{\"1\":{\"430\":1}}],[\"删除色差\",{\"1\":{\"293\":1}}],[\"间断性地还执行了应用程序代码\",{\"1\":{\"693\":1}}],[\"间隙锁\",{\"1\":{\"785\":1}}],[\"间隙\",{\"1\":{\"430\":1}}],[\"间接的后代\",{\"1\":{\"370\":1}}],[\"朝着向左或者向右方向移动\",{\"1\":{\"430\":1}}],[\"朝天\",{\"1\":{\"172\":1}}],[\"脱离标准流\",{\"1\":{\"430\":1,\"455\":1}}],[\"脱标元素内部默认还是按照标准流布局\",{\"1\":{\"425\":1}}],[\"脱标\",{\"1\":{\"424\":1,\"425\":1}}],[\"向\",{\"1\":{\"967\":2,\"968\":1,\"970\":1}}],[\"向布隆过滤器添加数据时\",{\"1\":{\"833\":1}}],[\"向指定集合添加一个元素\",{\"1\":{\"819\":1}}],[\"向列表右边添加元素\",{\"1\":{\"818\":1}}],[\"向列表左边添加元素\",{\"1\":{\"818\":1}}],[\"向链表中插入或删除一个节点只需改变相应的指针\",{\"1\":{\"637\":1}}],[\"向所有元素后添加一个新元素\",{\"1\":{\"513\":1,\"516\":1,\"539\":1}}],[\"向右浮动\",{\"1\":{\"429\":1}}],[\"向左浮动\",{\"1\":{\"429\":1}}],[\"向上的\",{\"1\":{\"121\":1}}],[\"写请求可以删除读请求造成的缓存脏数据\",{\"1\":{\"848\":1}}],[\"写缓存时也同步写数据库\",{\"1\":{\"845\":1}}],[\"写写并发\",{\"1\":{\"797\":1}}],[\"写操作性能下降\",{\"1\":{\"795\":1}}],[\"写锁\",{\"1\":{\"660\":1,\"669\":1,\"787\":1,\"802\":1}}],[\"写\",{\"1\":{\"659\":1}}],[\"写数据时加入屏障\",{\"1\":{\"659\":1}}],[\"写在后面的那个元素层叠在上面\",{\"1\":{\"427\":1}}],[\"写好拍摄策划\",{\"1\":{\"128\":1}}],[\"层叠在越上面\",{\"1\":{\"427\":1}}],[\"层次丰富\",{\"1\":{\"84\":1}}],[\"层次感\",{\"1\":{\"53\":1,\"279\":1}}],[\"负载均衡算法\",{\"0\":{\"944\":1}}],[\"负载均衡\",{\"0\":{\"943\":1},\"1\":{\"931\":1,\"953\":1}}],[\"负载因子\",{\"1\":{\"644\":2,\"645\":1}}],[\"负责单机事务的提交和回滚\",{\"1\":{\"968\":1}}],[\"负责开启全局事务并将本地事务转换为全局事务\",{\"1\":{\"968\":1}}],[\"负责管理分支事务的生命周期\",{\"1\":{\"967\":1}}],[\"负责全局事务的发起\",{\"1\":{\"967\":1}}],[\"负责全局事务的协调和管理\",{\"1\":{\"967\":1}}],[\"负责接收请求\",{\"1\":{\"894\":1}}],[\"负责创建\",{\"1\":{\"884\":1}}],[\"负责加载当前应用\",{\"1\":{\"714\":1}}],[\"负责加载class文件\",{\"1\":{\"679\":1}}],[\"负责整个搜索请求的执行\",{\"1\":{\"562\":1}}],[\"负数为逆时针\",{\"1\":{\"454\":2}}],[\"负整数\",{\"1\":{\"427\":1}}],[\"负面的黑色情绪\",{\"1\":{\"127\":1}}],[\"仅在web应用中可用\",{\"1\":{\"884\":1}}],[\"仅包含0或1位值的列表\",{\"1\":{\"833\":1}}],[\"仅对相关的记录上锁\",{\"1\":{\"775\":1}}],[\"仅对定位元素有效\",{\"1\":{\"427\":1}}],[\"仅仅是设置线程的中断状态为true\",{\"1\":{\"671\":1}}],[\"仅显示当前目录的总大小\",{\"1\":{\"332\":1}}],[\"练习\",{\"1\":{\"425\":1}}],[\"父类的static块优先级高于子类\",{\"1\":{\"712\":1}}],[\"父类\",{\"1\":{\"571\":1}}],[\"父元素\",{\"1\":{\"463\":1}}],[\"父元素display\",{\"1\":{\"455\":1}}],[\"父元素计算总高度时\",{\"1\":{\"432\":1}}],[\"父元素会消失\",{\"1\":{\"425\":1}}],[\"父元素如果没有内容\",{\"1\":{\"425\":1}}],[\"父元素设置position\",{\"1\":{\"425\":1}}],[\"父盒子会跟着向下移动\",{\"1\":{\"387\":1}}],[\"粘性定位\",{\"0\":{\"426\":1},\"1\":{\"422\":1}}],[\"固定窗口其实就是时间窗口\",{\"1\":{\"946\":1}}],[\"固定窗口计数器算法规定了单位时间处理的请求数量\",{\"1\":{\"946\":1}}],[\"固定窗口计数器算法\",{\"0\":{\"946\":1}}],[\"固定数线程\",{\"1\":{\"664\":1}}],[\"固定不动\",{\"1\":{\"424\":1}}],[\"固定定位\",{\"0\":{\"424\":1},\"1\":{\"422\":1}}],[\"固有色的调整\",{\"1\":{\"290\":1}}],[\"固有色\",{\"1\":{\"87\":2}}],[\"绝对长度单位\",{\"1\":{\"467\":1}}],[\"绝对\",{\"1\":{\"426\":2}}],[\"绝对定位元素\",{\"1\":{\"465\":1}}],[\"绝对定位元素的实际占用高度\",{\"1\":{\"425\":1}}],[\"绝对定位元素的实际占用宽度\",{\"1\":{\"425\":1}}],[\"绝对定位元素的特点\",{\"1\":{\"425\":1}}],[\"绝对定位\",{\"0\":{\"425\":1},\"1\":{\"422\":1,\"429\":1,\"455\":2}}],[\"绝大多数情况下\",{\"1\":{\"425\":1}}],[\"绝大多数衬衫\",{\"1\":{\"125\":1}}],[\"拷贝到项目中\",{\"1\":{\"418\":1}}],[\"登录阿里icons\",{\"1\":{\"418\":1}}],[\"数据\",{\"1\":{\"977\":1}}],[\"数据存储与同步策略以及服务健康监测机制\",{\"1\":{\"971\":1}}],[\"数据存储在节点\",{\"1\":{\"503\":1}}],[\"数据同步\",{\"1\":{\"971\":1}}],[\"数据不一致问题依然存在\",{\"1\":{\"942\":1}}],[\"数据一致性问题\",{\"1\":{\"942\":1}}],[\"数据双写一致性问题\",{\"0\":{\"843\":1}}],[\"数据冗余\",{\"1\":{\"804\":1}}],[\"数据保持一致\",{\"1\":{\"767\":1}}],[\"数据库原子操作\",{\"1\":{\"975\":1}}],[\"数据库中的值要是最新的值\",{\"1\":{\"844\":1}}],[\"数据库参数调优\",{\"1\":{\"804\":1}}],[\"数据库就需要根据索引中查找到的主键id值\",{\"1\":{\"798\":1}}],[\"数据库操作\",{\"1\":{\"797\":1}}],[\"数据库三大范式\",{\"0\":{\"744\":1}}],[\"数据库\",{\"0\":{\"741\":1}}],[\"数据库连接\",{\"1\":{\"663\":1}}],[\"数据库session\",{\"1\":{\"663\":1}}],[\"数据操作\",{\"1\":{\"590\":1}}],[\"数据分片策略也很重要\",{\"1\":{\"567\":1}}],[\"数据复制和分片技术以及一致性级别的调整\",{\"1\":{\"565\":1}}],[\"数据传送结束后要释放连接\",{\"1\":{\"550\":1}}],[\"数据链路层\",{\"1\":{\"544\":1}}],[\"数据处理\",{\"1\":{\"544\":1}}],[\"数据结构重新设计\",{\"1\":{\"875\":1}}],[\"数据结构底层实现主要依赖于概率算法\",{\"1\":{\"822\":1}}],[\"数据结构\",{\"2\":{\"541\":1}}],[\"数据结构基础\",{\"0\":{\"538\":1,\"539\":1}}],[\"数据结构和算法\",{\"0\":{\"477\":1}}],[\"数组没有1024的限制\",{\"1\":{\"868\":1}}],[\"数组中的每个元素代表一个桶\",{\"1\":{\"822\":1}}],[\"数组的大小通常不容易改变\",{\"1\":{\"637\":1}}],[\"数组和链表的优缺点\",{\"0\":{\"637\":1}}],[\"数组+链表+红黑树\",{\"1\":{\"631\":1}}],[\"数组+链表\",{\"1\":{\"631\":1}}],[\"数组+链表组成\",{\"1\":{\"621\":1}}],[\"数组长度大于64\",{\"1\":{\"628\":1}}],[\"数组容量从45扩容到67\",{\"1\":{\"623\":1}}],[\"数组越界\",{\"1\":{\"571\":1}}],[\"数组元素的个数\",{\"1\":{\"513\":1,\"516\":1,\"539\":1}}],[\"数组结束\",{\"1\":{\"497\":1}}],[\"数组\",{\"1\":{\"487\":1,\"539\":1,\"619\":2,\"634\":1,\"637\":1}}],[\"数组问题讲解\",{\"0\":{\"487\":1}}],[\"数字\",{\"1\":{\"414\":1,\"454\":2,\"819\":2}}],[\"数值增减\",{\"1\":{\"817\":1}}],[\"数值\",{\"1\":{\"292\":1}}],[\"数值大\",{\"1\":{\"273\":1}}],[\"数值小\",{\"1\":{\"273\":1,\"274\":1}}],[\"数值调到1\",{\"1\":{\"6\":1}}],[\"$$\",{\"1\":{\"753\":4}}],[\"$i\",{\"1\":{\"557\":3}}],[\"$\",{\"1\":{\"414\":1,\"557\":3,\"918\":2,\"920\":1}}],[\"兄弟\",{\"1\":{\"414\":1}}],[\"兄弟选择器\",{\"0\":{\"371\":1}}],[\"子线程执行\",{\"1\":{\"860\":1}}],[\"子句进行条件过滤\",{\"1\":{\"796\":1}}],[\"子查询中的第一个select\",{\"1\":{\"796\":1}}],[\"子查询等复杂的查询\",{\"1\":{\"796\":1}}],[\"子弹夹\",{\"1\":{\"682\":1}}],[\"子弹撞击等高速抓拍\",{\"1\":{\"273\":1}}],[\"子类加载器才会尝试自己去加载\",{\"1\":{\"679\":1}}],[\"子类拥有父类对象所有的属性和方法\",{\"1\":{\"604\":1}}],[\"子元素设置absolute\",{\"1\":{\"425\":1}}],[\"子元素设置positive\",{\"1\":{\"425\":1}}],[\"子元素的绝对定位都是相对于父元素进行定位\",{\"1\":{\"425\":1}}],[\"子绝父相\",{\"1\":{\"425\":1}}],[\"子代\",{\"1\":{\"414\":1}}],[\"普通的双向链表会有两个指针\",{\"1\":{\"853\":1}}],[\"普通属性\",{\"1\":{\"414\":1}}],[\"普通按钮\",{\"1\":{\"410\":1}}],[\"普通兄弟选择器\",{\"1\":{\"371\":1}}],[\"跨服务的调用能够形成完整的调用链\",{\"1\":{\"977\":1}}],[\"跨度\",{\"1\":{\"977\":1}}],[\"跨帧\",{\"1\":{\"460\":1}}],[\"跨行合并\",{\"1\":{\"409\":1}}],[\"跨列合并\",{\"1\":{\"409\":1}}],[\"虽然它们的内容都是\",{\"1\":{\"611\":1}}],[\"虽然副本可以提高可用性\",{\"1\":{\"566\":1}}],[\"虽然我们可以通过重置来解决\",{\"1\":{\"406\":1}}],[\"虽然元素不可见\",{\"1\":{\"380\":1}}],[\"知乎\",{\"1\":{\"406\":1}}],[\"知人善任\",{\"1\":{\"299\":1}}],[\"汽车之家\",{\"1\":{\"406\":1}}],[\"事前检查\",{\"1\":{\"879\":1}}],[\"事务提交与回滚\",{\"1\":{\"968\":1}}],[\"事务上下文和undo\",{\"1\":{\"968\":1}}],[\"事务二阶段结束\",{\"1\":{\"967\":1}}],[\"事务一阶段结束\",{\"1\":{\"967\":1}}],[\"事务管理器\",{\"1\":{\"967\":1}}],[\"事务\",{\"0\":{\"897\":1}}],[\"事务特性\",{\"1\":{\"802\":1}}],[\"事务id大的事务应该能看到事务id小的事务的变更结果\",{\"1\":{\"797\":1}}],[\"事务在修改记录的时候获取排他锁\",{\"1\":{\"775\":1,\"787\":1}}],[\"事务在读取记录的时候获取共享锁\",{\"1\":{\"775\":1}}],[\"事务的特性\",{\"0\":{\"767\":1}}],[\"事物的回滚\",{\"1\":{\"942\":1}}],[\"事物的提交\",{\"1\":{\"942\":1}}],[\"事物日志的大小\",{\"1\":{\"804\":1}}],[\"事物是最小的执行单位\",{\"1\":{\"767\":1}}],[\"事物管理\",{\"1\":{\"663\":1}}],[\"事实上\",{\"1\":{\"465\":1}}],[\"事实上现在很多的网站对于列表元素没用很强烈的偏好\",{\"1\":{\"406\":1}}],[\"事实上现在很多的列表功能采用了不同的方案来实现\",{\"1\":{\"406\":1}}],[\"事件到\",{\"1\":{\"972\":1}}],[\"事件驱动模型\",{\"1\":{\"900\":1}}],[\"事件分派器将事件分发给事件处理器\",{\"1\":{\"866\":1}}],[\"事件\",{\"1\":{\"19\":1}}],[\"顺序任何\",{\"1\":{\"443\":1}}],[\"顺序\",{\"1\":{\"404\":1}}],[\"顺光拍摄由远到近\",{\"1\":{\"238\":1}}],[\"顺光拍摄脸部明亮受光均匀\",{\"1\":{\"76\":1}}],[\"顺光侧顺光都不适合拍摄\",{\"1\":{\"235\":1}}],[\"顺光\",{\"1\":{\"76\":1,\"241\":1}}],[\"语义检查\",{\"1\":{\"712\":1}}],[\"语句的顺序\",{\"1\":{\"796\":1}}],[\"语句可以直接写在try后面\",{\"1\":{\"573\":1}}],[\"语句改造上面的代码\",{\"1\":{\"573\":1}}],[\"语法分析\",{\"1\":{\"803\":1}}],[\"语法七\",{\"1\":{\"469\":1}}],[\"语法六\",{\"1\":{\"469\":1}}],[\"语法五\",{\"1\":{\"469\":1}}],[\"语法四\",{\"1\":{\"469\":1}}],[\"语法三\",{\"1\":{\"469\":1}}],[\"语法二\",{\"1\":{\"469\":1}}],[\"语法一\",{\"1\":{\"469\":1}}],[\"语法\",{\"1\":{\"403\":1,\"469\":2}}],[\"语言伪类\",{\"1\":{\"373\":1}}],[\"网关\",{\"1\":{\"931\":1}}],[\"网站uv统计\",{\"1\":{\"819\":1}}],[\"网站常用背景色\",{\"0\":{\"394\":1}}],[\"网络i\",{\"1\":{\"864\":1}}],[\"网络接口层\",{\"1\":{\"545\":1}}],[\"网络层\",{\"1\":{\"544\":1,\"545\":1}}],[\"网络\",{\"0\":{\"543\":1}}],[\"网上很多说法\",{\"1\":{\"465\":1}}],[\"网格元素\",{\"1\":{\"465\":1}}],[\"网易云歌单\",{\"0\":{\"312\":1},\"1\":{\"311\":1}}],[\"yml\",{\"1\":{\"926\":1,\"970\":1}}],[\"yml配置文件中设置了node\",{\"1\":{\"564\":1}}],[\"young\",{\"1\":{\"683\":2}}],[\"yourapplication\",{\"1\":{\"721\":1}}],[\"your\",{\"1\":{\"522\":2,\"565\":1,\"724\":1}}],[\"yes\",{\"1\":{\"575\":1,\"861\":1}}],[\"yes或者no\",{\"1\":{\"470\":1}}],[\"yyyymmdd\",{\"1\":{\"663\":1}}],[\"yyyy\",{\"1\":{\"557\":1}}],[\"y\",{\"1\":{\"390\":1,\"399\":1,\"454\":5,\"670\":2}}],[\"盒子的最终宽度\",{\"1\":{\"472\":1}}],[\"盒子的设置宽度\",{\"1\":{\"472\":1}}],[\"盒子阴影\",{\"0\":{\"390\":1}}],[\"盒子和文字阴影\",{\"0\":{\"389\":1}}],[\"永久代等的容量\",{\"1\":{\"727\":1}}],[\"永久区\",{\"1\":{\"683\":1}}],[\"永远不会collapse\",{\"1\":{\"387\":1}}],[\"永诺yn300air\",{\"1\":{\"85\":1}}],[\"怎么解决呢\",{\"1\":{\"387\":1}}],[\"怎么和人物产生互动\",{\"1\":{\"120\":1}}],[\"沿着顺时针转动\",{\"1\":{\"385\":1}}],[\"移动过程中\",{\"1\":{\"691\":1}}],[\"移动左指针或右指针\",{\"1\":{\"494\":1}}],[\"移动端适配vm方案\",{\"0\":{\"473\":1}}],[\"移动端适配方案\",{\"0\":{\"471\":1}}],[\"移动端适配时\",{\"1\":{\"384\":1}}],[\"移动滑块最暗部改变最多\",{\"1\":{\"288\":1}}],[\"移动滑块最亮部改变最多\",{\"1\":{\"288\":1}}],[\"因此它可以监听到\",{\"1\":{\"972\":1}}],[\"因此它与\",{\"1\":{\"611\":1}}],[\"因此这条记录对当前事务就应该是可见的\",{\"1\":{\"797\":1}}],[\"因此b+树比b树更矮更胖\",{\"1\":{\"793\":1}}],[\"因此要保证每一个应用程序的类库都是独立\",{\"1\":{\"716\":1}}],[\"因此所有的加载请求都应该传\",{\"1\":{\"679\":1}}],[\"因此重排序时\",{\"1\":{\"659\":1}}],[\"因此一定会存在不同的输入被映射成相同输出的情况\",{\"1\":{\"638\":1}}],[\"因此结果为\",{\"1\":{\"611\":2}}],[\"因此在执行此操作时\",{\"1\":{\"610\":1}}],[\"因此在一段时间里面它成为网页多列布局的最常用工具\",{\"1\":{\"429\":1}}],[\"因此大多数情况下\",{\"1\":{\"565\":1}}],[\"因此\",{\"1\":{\"521\":2,\"611\":1,\"691\":2,\"708\":1}}],[\"因此将右指针向左移动\",{\"1\":{\"494\":1}}],[\"因此将左指针向右移动\",{\"1\":{\"494\":1}}],[\"因为桶容量是不变的\",{\"1\":{\"948\":1}}],[\"因为构造器注入必须在实例化阶段完成\",{\"1\":{\"924\":1}}],[\"因为构造方法本身就属于线程安全\",{\"1\":{\"661\":1}}],[\"因为redis每秒都会发送一定数量的心跳包\",{\"1\":{\"872\":1}}],[\"因为它没有节点分裂\",{\"1\":{\"857\":1}}],[\"因为它不具备顺序性\",{\"1\":{\"793\":1}}],[\"因为二级索引的叶子节点存放的是主键\",{\"1\":{\"793\":1}}],[\"因为数据分布在整个树的各个层级\",{\"1\":{\"793\":1}}],[\"因为这些1可能是因为其他的key存在导致的\",{\"1\":{\"833\":1}}],[\"因为这会导致与书籍直接相关的信息之外的冗余\",{\"1\":{\"744\":1}}],[\"因为这俩个时间点十分重要\",{\"1\":{\"457\":1}}],[\"因为用户线程的执行\",{\"1\":{\"707\":1}}],[\"因为线程切换和上下文转换的消耗\",{\"1\":{\"693\":1}}],[\"因为线程安全问题\",{\"1\":{\"628\":1}}],[\"因为sleep\",{\"1\":{\"655\":1}}],[\"因为两个相等的对象的\",{\"1\":{\"607\":1}}],[\"因为一个类即使没有声明构造方法也会有默认的不带参数的构造方法\",{\"1\":{\"602\":1}}],[\"因为其i\",{\"1\":{\"566\":1}}],[\"因为服务器收到客户端断开连接的请求时\",{\"1\":{\"552\":1}}],[\"因为是双端队列\",{\"1\":{\"520\":1}}],[\"因为left=i+1\",{\"1\":{\"494\":1}}],[\"因为我们需要至少三个元素来形成一个三元组\",{\"1\":{\"494\":1}}],[\"因为我们的布局视口和视觉视口是同一个\",{\"1\":{\"470\":1}}],[\"因为\",{\"1\":{\"489\":1,\"520\":1,\"611\":1}}],[\"因为不依赖font\",{\"1\":{\"473\":1}}],[\"因为盒子有四边\",{\"1\":{\"383\":1}}],[\"因拍摄场地\",{\"1\":{\"122\":1}}],[\"边框样式\",{\"1\":{\"386\":1}}],[\"边框颜色\",{\"1\":{\"386\":1}}],[\"边框宽度\",{\"1\":{\"386\":1}}],[\"边框具备颜色color\",{\"1\":{\"386\":1}}],[\"边框具备样式style\",{\"1\":{\"386\":1}}],[\"边框具备宽度width\",{\"1\":{\"386\":1}}],[\"边框相对与content\",{\"1\":{\"386\":1}}],[\"边框\",{\"0\":{\"386\":1},\"1\":{\"383\":1,\"392\":1}}],[\"答\",{\"1\":{\"379\":1,\"387\":1,\"433\":1,\"521\":3,\"572\":1,\"602\":1,\"603\":1,\"607\":1,\"610\":2,\"632\":1,\"655\":1,\"656\":1,\"658\":1,\"661\":2,\"842\":1}}],[\"答案0次\",{\"1\":{\"623\":1}}],[\"答案中不可以包含重复的三元组\",{\"1\":{\"493\":1}}],[\"答案就是baseline对齐\",{\"1\":{\"458\":1}}],[\"答案\",{\"1\":{\"365\":1,\"453\":1,\"599\":1}}],[\"能解决\",{\"1\":{\"871\":1}}],[\"能很好地反映出真实基数\",{\"1\":{\"822\":1}}],[\"能干活的\",{\"1\":{\"664\":1}}],[\"能干嘛\",{\"1\":{\"659\":1,\"823\":1}}],[\"能让网页更加美观\",{\"1\":{\"403\":1}}],[\"能修改元素的显示类型\",{\"1\":{\"379\":1}}],[\"能够使得应用在无需重启的情况下\",{\"1\":{\"972\":1}}],[\"能够实现客户端负载均衡\",{\"1\":{\"953\":1}}],[\"能够将与业务无关\",{\"1\":{\"892\":1}}],[\"能够通知程序进行相应的读写操作\",{\"1\":{\"866\":1}}],[\"能够估计所有输入\",{\"1\":{\"822\":1}}],[\"能够在保持相对准确的同时大幅减少内存占用\",{\"1\":{\"567\":1}}],[\"能够体现景物的高大和深度\",{\"1\":{\"218\":1}}],[\"能够表现出宽阔稳定\",{\"1\":{\"217\":1}}],[\"没人知道事务是否被已经提交\",{\"1\":{\"942\":1}}],[\"没办法保证解锁\",{\"1\":{\"840\":1}}],[\"没用countdownlatch之前\",{\"1\":{\"667\":1}}],[\"没必要独占一行\",{\"1\":{\"378\":1}}],[\"没有释放锁\",{\"1\":{\"840\":1}}],[\"没有问题\",{\"1\":{\"797\":1}}],[\"没有重启\",{\"1\":{\"737\":1}}],[\"没有标记和清除过程\",{\"1\":{\"690\":1}}],[\"没有任何响应\",{\"1\":{\"710\":1}}],[\"没有任何引用链相连的话\",{\"1\":{\"687\":1}}],[\"没有任何指针显示在元素上面\",{\"1\":{\"420\":1}}],[\"没有指定executor的方法\",{\"1\":{\"670\":1}}],[\"没有被外部强引用的情况下\",{\"1\":{\"663\":1}}],[\"没有返回值是指没有return\",{\"1\":{\"603\":1}}],[\"没有返回值\",{\"1\":{\"603\":1}}],[\"没有专门的作用域和嵌套\",{\"1\":{\"469\":1}}],[\"没有\",{\"1\":{\"458\":1,\"662\":1,\"925\":1}}],[\"没有高度\",{\"1\":{\"458\":1}}],[\"没有内容\",{\"1\":{\"458\":1}}],[\"没有遮挡的桥洞进行画框构图拍摄\",{\"1\":{\"240\":1}}],[\"没有杂乱\",{\"1\":{\"240\":1}}],[\"没有刘海避免拍摄太多侧面后期液化\",{\"1\":{\"171\":1}}],[\"没有刘海避免拍太多正脸\",{\"1\":{\"171\":1}}],[\"没有明显的高光和阴影\",{\"1\":{\"83\":1}}],[\"没有明显的明暗交接\",{\"1\":{\"79\":1}}],[\"块级元素的布局属于blcok\",{\"1\":{\"465\":1}}],[\"块级元素的文字内容\",{\"1\":{\"430\":1}}],[\"块级元素的特征在同一行显示\",{\"1\":{\"379\":1}}],[\"块级元素\",{\"1\":{\"378\":2,\"379\":1,\"387\":1,\"455\":1}}],[\"块级元素无法居中\",{\"1\":{\"358\":1}}],[\"先在关键节点上查找\",{\"1\":{\"857\":1}}],[\"先在当前加载器的缓存中查找有无目标类\",{\"1\":{\"715\":1}}],[\"先删除缓存值再更新数据库\",{\"1\":{\"849\":1}}],[\"先删除缓存\",{\"0\":{\"848\":1}}],[\"先更新数据库\",{\"0\":{\"847\":1,\"849\":1}}],[\"先redis后数据库都查询不到该条记录\",{\"1\":{\"836\":1}}],[\"先把这个key通过相同的多个hash函数进行运算\",{\"1\":{\"833\":1}}],[\"先把最小得拿出来\",{\"1\":{\"526\":1}}],[\"先进后出\",{\"1\":{\"682\":1}}],[\"先signal后await\",{\"1\":{\"671\":1}}],[\"先wait后notify才ok\",{\"1\":{\"671\":1}}],[\"先完成的先等着\",{\"1\":{\"670\":1}}],[\"先完成结构\",{\"1\":{\"404\":1}}],[\"先说说futuretask的弊端\",{\"1\":{\"670\":1}}],[\"先申请的线程先得到锁\",{\"1\":{\"660\":1}}],[\"先赋值给b\",{\"1\":{\"595\":1}}],[\"先到先得\",{\"1\":{\"515\":1}}],[\"先排除例外\",{\"1\":{\"497\":1}}],[\"先整体\",{\"1\":{\"404\":1}}],[\"先后顺序\",{\"1\":{\"377\":1}}],[\"先将高频关闭\",{\"1\":{\"256\":1}}],[\"判断故障\",{\"1\":{\"871\":1}}],[\"判断是否存在\",{\"1\":{\"833\":1}}],[\"判断某个朋友是否对楼主点赞过\",{\"1\":{\"819\":1}}],[\"判断元素是否在集合中\",{\"1\":{\"819\":1}}],[\"判断当前加载器的父加载器是否为空\",{\"1\":{\"715\":1}}],[\"判断当前线程是否被中断\",{\"1\":{\"671\":1}}],[\"判断线程是否被中断\",{\"1\":{\"671\":1}}],[\"判断字符串是否有效\",{\"1\":{\"514\":1}}],[\"判断返回数组是否为空\",{\"1\":{\"513\":1,\"516\":1,\"539\":1}}],[\"判断栈是否为空\",{\"1\":{\"512\":1,\"522\":1}}],[\"判断\",{\"1\":{\"493\":1}}],[\"判断二\",{\"1\":{\"377\":1}}],[\"判断一\",{\"1\":{\"377\":1}}],[\"权限控制\",{\"1\":{\"892\":1}}],[\"权限验证\",{\"1\":{\"803\":1}}],[\"权重等信息\",{\"1\":{\"970\":1}}],[\"权重如下\",{\"1\":{\"377\":1}}],[\"权重相同时\",{\"1\":{\"377\":1}}],[\"权重大的生效\",{\"1\":{\"377\":1}}],[\"权威\",{\"1\":{\"93\":1}}],[\"伪类\",{\"1\":{\"377\":1}}],[\"伪类选择器\",{\"0\":{\"373\":1}}],[\"伪元素\",{\"0\":{\"374\":1}}],[\"否定伪类\",{\"1\":{\"373\":1}}],[\"否则拒绝请求或者将请求放入队列中等待\",{\"1\":{\"949\":1}}],[\"否则事物协调者回滚资源\",{\"1\":{\"942\":1}}],[\"否则使用ziplist\",{\"1\":{\"856\":1}}],[\"否则\",{\"1\":{\"708\":1}}],[\"否则将\",{\"1\":{\"611\":1}}],[\"否则搜索请求会等待直到所有分片都准备好\",{\"1\":{\"565\":1}}],[\"否则会显得头过大\",{\"1\":{\"175\":1}}],[\"否则后期液化难度高\",{\"1\":{\"174\":1}}],[\"否则离墙太近不透气\",{\"1\":{\"68\":1}}],[\"计数器的值来选取下一条需要执行的字节码指令\",{\"1\":{\"680\":1}}],[\"计数器的值就\",{\"1\":{\"667\":1}}],[\"计数器的初始值是线程的数量\",{\"1\":{\"667\":1}}],[\"计数时只计算同种类型的元素\",{\"1\":{\"373\":1}}],[\"计算完最终结果后再通知并返回给调用方\",{\"1\":{\"865\":1}}],[\"计算对应的二进制串中最长的连续零的个数\",{\"1\":{\"822\":1}}],[\"计算结果存在依赖关系\",{\"1\":{\"670\":1}}],[\"计算结果为1\",{\"1\":{\"632\":1}}],[\"计算结束\",{\"1\":{\"670\":1}}],[\"计算key的hash值\",{\"1\":{\"640\":1}}],[\"计算出文档应该被路由至哪个特定的主分片\",{\"1\":{\"561\":1}}],[\"计算机基础\",{\"0\":{\"542\":1},\"1\":{\"811\":1},\"2\":{\"553\":1,\"554\":1}}],[\"计算机算法是问题规模n\",{\"1\":{\"484\":1}}],[\"计算删除掉队尾元素以后\",{\"1\":{\"520\":1}}],[\"计算\",{\"1\":{\"469\":1}}],[\"计算支持加减乘除的运算\",{\"1\":{\"463\":1}}],[\"计算css值\",{\"1\":{\"463\":1}}],[\"计划\",{\"1\":{\"299\":1}}],[\"跟踪上下文传递\",{\"1\":{\"977\":1}}],[\"跟踪特定类的方法调用\",{\"1\":{\"738\":1}}],[\"跟踪方法调用\",{\"1\":{\"738\":1}}],[\"跟\",{\"1\":{\"373\":2}}],[\"鼠标在链接上长按住未松开\",{\"1\":{\"373\":1}}],[\"鼠标挪动到链接上\",{\"1\":{\"373\":1}}],[\"鼠标往上或往下滑\",{\"1\":{\"290\":1}}],[\"已用的字节长度\",{\"1\":{\"852\":1}}],[\"已用空间\",{\"1\":{\"727\":1}}],[\"已删除\",{\"1\":{\"575\":1}}],[\"已经有链表了\",{\"1\":{\"853\":1}}],[\"已经存在于常量池中\",{\"1\":{\"611\":1}}],[\"已经排好序的\",{\"1\":{\"530\":1}}],[\"已经全面兼容css的scss\",{\"1\":{\"469\":1}}],[\"已知数据\",{\"1\":{\"530\":1}}],[\"已访问的链接\",{\"1\":{\"373\":1}}],[\"已地平线和水平线构图为基准\",{\"1\":{\"217\":1}}],[\"未免有些太大了\",{\"1\":{\"872\":1}}],[\"未提交的事务中最小的事务id\",{\"1\":{\"797\":1}}],[\"未使用completablefuture前的代码\",{\"1\":{\"670\":1}}],[\"未删除\",{\"1\":{\"575\":1}}],[\"未排序的\",{\"1\":{\"530\":1}}],[\"未被任何浏览器使用\",{\"1\":{\"470\":1}}],[\"未设置width\",{\"1\":{\"384\":1}}],[\"未访问的链接\",{\"1\":{\"373\":1}}],[\"未完待续\",{\"1\":{\"2\":1}}],[\"号分割\",{\"1\":{\"372\":1}}],[\"~\",{\"1\":{\"371\":2}}],[\"类来实现\",{\"1\":{\"926\":1}}],[\"类装载所消耗的时间等\",{\"1\":{\"727\":1}}],[\"类模板对象\",{\"1\":{\"712\":1}}],[\"类加载与虚拟机信息\",{\"1\":{\"732\":1}}],[\"类加载相关的\",{\"1\":{\"727\":1}}],[\"类加载过程\",{\"0\":{\"711\":1,\"713\":1}}],[\"类加载器的主要作用就是加载\",{\"1\":{\"714\":1}}],[\"类加载器读取了类文件后\",{\"1\":{\"683\":1}}],[\"类加载器\",{\"0\":{\"679\":1,\"714\":1}}],[\"类就是用来解决aba问题\",{\"1\":{\"669\":1}}],[\"类的装载\",{\"1\":{\"727\":1}}],[\"类的字节码\",{\"1\":{\"714\":1}}],[\"类的生命周期\",{\"0\":{\"712\":1}}],[\"类的构造方法\",{\"0\":{\"645\":1}}],[\"类的属性\",{\"0\":{\"644\":1}}],[\"类重写了equals\",{\"1\":{\"606\":1}}],[\"类没有重写equals\",{\"1\":{\"606\":1}}],[\"类\",{\"1\":{\"586\":1,\"661\":2,\"925\":1,\"972\":1}}],[\"类型转换\",{\"1\":{\"794\":1}}],[\"类型不能是text\",{\"0\":{\"559\":1}}],[\"类型\",{\"1\":{\"378\":1,\"728\":1}}],[\"类似保险丝达到最大服务访问后\",{\"1\":{\"957\":1}}],[\"类似发起select\",{\"1\":{\"869\":1}}],[\"类似map<string\",{\"1\":{\"820\":1}}],[\"类似资源类\",{\"1\":{\"671\":2}}],[\"类似\",{\"1\":{\"373\":1}}],[\"类名\",{\"1\":{\"368\":1}}],[\"类选择器\",{\"1\":{\"368\":1,\"377\":1}}],[\"默认超时时间可能是15秒或者30秒\",{\"1\":{\"970\":1}}],[\"默认httpclient修改为apache\",{\"1\":{\"954\":1}}],[\"默认选项\",{\"1\":{\"860\":1}}],[\"默认128\",{\"1\":{\"856\":1}}],[\"默认64\",{\"1\":{\"853\":1}}],[\"默认512\",{\"1\":{\"853\":1}}],[\"默认是30秒\",{\"1\":{\"842\":1}}],[\"默认模式\",{\"1\":{\"802\":1}}],[\"默认使用临键锁\",{\"1\":{\"785\":1}}],[\"默认并行垃圾收集器\",{\"1\":{\"700\":1}}],[\"默认非公平锁\",{\"1\":{\"662\":1}}],[\"默认构造函数\",{\"1\":{\"645\":1}}],[\"默认的行锁\",{\"1\":{\"785\":1}}],[\"默认的负载因子\",{\"1\":{\"644\":1}}],[\"默认的初始容量是16\",{\"1\":{\"644\":1}}],[\"默认的情绪风\",{\"1\":{\"184\":1}}],[\"默认30分钟\",{\"1\":{\"561\":1}}],[\"默认每秒一次\",{\"1\":{\"561\":1}}],[\"默认为1秒\",{\"1\":{\"565\":1}}],[\"默认为512mb\",{\"1\":{\"561\":1}}],[\"默认为\",{\"1\":{\"561\":1,\"854\":1}}],[\"默认为yes\",{\"1\":{\"470\":1}}],[\"默认数组的容量capation=10\",{\"1\":{\"513\":1,\"516\":1,\"539\":1}}],[\"默认\",{\"1\":{\"442\":1,\"565\":1,\"589\":1,\"884\":1,\"898\":1}}],[\"默认都是沿着main\",{\"1\":{\"441\":1}}],[\"默认情况下的layout\",{\"1\":{\"470\":1}}],[\"默认情况下\",{\"1\":{\"422\":2,\"470\":2,\"789\":1,\"953\":1}}],[\"默认get\",{\"1\":{\"410\":1}}],[\"默认样式等\",{\"1\":{\"406\":1}}],[\"默认值通常是1\",{\"1\":{\"738\":1}}],[\"默认值就是baseline\",{\"1\":{\"458\":1}}],[\"默认值是64\",{\"1\":{\"856\":1}}],[\"默认值是15\",{\"1\":{\"721\":1}}],[\"默认值是1\",{\"1\":{\"450\":1}}],[\"默认值是0\",{\"1\":{\"447\":1,\"449\":1,\"854\":1}}],[\"默认值\",{\"1\":{\"400\":1,\"422\":1,\"429\":1,\"433\":1,\"441\":1,\"444\":1,\"446\":1,\"448\":1,\"451\":1,\"458\":1}}],[\"默认显示在border的外面\",{\"1\":{\"388\":1}}],[\"默认auto\",{\"1\":{\"384\":1}}],[\"默认顺序\",{\"1\":{\"366\":1}}],[\"严禁一窝蜂的过来拥挤\",{\"1\":{\"958\":1}}],[\"严重导致打满mysql\",{\"1\":{\"849\":1}}],[\"严格定义\",{\"1\":{\"365\":1}}],[\"严肃\",{\"1\":{\"93\":1}}],[\"等同于\",{\"1\":{\"902\":1}}],[\"等对数据库操作的类\",{\"1\":{\"900\":1}}],[\"等出结果为止\",{\"1\":{\"865\":1}}],[\"等第一个线程查询到了数据\",{\"1\":{\"848\":1}}],[\"等ddl操作会隐式地对表加表级锁\",{\"1\":{\"789\":1}}],[\"等价于\",{\"1\":{\"720\":1,\"721\":2}}],[\"等价于比较这两个对象\",{\"1\":{\"606\":1}}],[\"等待垃圾回收的完成\",{\"1\":{\"693\":1}}],[\"等待被唤醒\",{\"1\":{\"671\":2}}],[\"等待其它分支任务\",{\"1\":{\"670\":1}}],[\"等待所有任务完成\",{\"1\":{\"667\":1}}],[\"等待一定的时间后count值还没变为0的话就会继续执行\",{\"1\":{\"667\":1}}],[\"等待是否可中断\",{\"1\":{\"662\":1}}],[\"等待状态\",{\"1\":{\"651\":1}}],[\"等待运行的状态\",{\"1\":{\"651\":1}}],[\"等待服务器的确认\",{\"1\":{\"552\":1}}],[\"等到数据发完之后再发\",{\"1\":{\"552\":1}}],[\"等\",{\"1\":{\"464\":1,\"563\":1,\"884\":1,\"963\":1}}],[\"等于height\",{\"1\":{\"365\":1}}],[\"等于700\",{\"1\":{\"363\":1}}],[\"等于400\",{\"1\":{\"363\":1}}],[\"等遮挡\",{\"1\":{\"136\":1}}],[\"浏览器解析渲染页面\",{\"1\":{\"547\":1}}],[\"浏览器视口viewport\",{\"0\":{\"470\":1}}],[\"浏览器为了防止后续会修改名字给新的属性添加了浏览器前缀\",{\"1\":{\"464\":1}}],[\"浏览器前缀\",{\"1\":{\"464\":1}}],[\"浏览器兼容性\",{\"1\":{\"433\":1}}],[\"浏览器根据上下文决定指针的显示样式\",{\"1\":{\"420\":1}}],[\"浏览器会选择列表中第一个该计算机上有安装的字体\",{\"1\":{\"362\":1}}],[\"浏览器渲染流程\",{\"0\":{\"353\":1}}],[\"决定分布式事务是提交还是回滚\",{\"1\":{\"967\":1}}],[\"决定新的master节点\",{\"1\":{\"564\":1}}],[\"决定数据在网络的游走路径\",{\"1\":{\"544\":1}}],[\"决定了多行flex\",{\"1\":{\"446\":1}}],[\"决定了flex\",{\"1\":{\"442\":1,\"444\":1,\"447\":1,\"449\":1,\"450\":1}}],[\"决定了main\",{\"1\":{\"441\":1}}],[\"决定了画面整体色彩趋势\",{\"1\":{\"95\":1}}],[\"决定背景图像的位置是在视口内固定\",{\"1\":{\"402\":1}}],[\"决定文字的大小\",{\"1\":{\"361\":1}}],[\"wuhan2020\",{\"1\":{\"919\":1}}],[\"watch是乐观锁机制\",{\"1\":{\"878\":1}}],[\"watch命令用于实现cas\",{\"1\":{\"878\":1}}],[\"watch等命令来实现事务\",{\"1\":{\"877\":1}}],[\"wal\",{\"1\":{\"802\":1}}],[\"wait和notify方法必须要在同步块或者方法里面\",{\"1\":{\"671\":1}}],[\"waiting\",{\"1\":{\"651\":2}}],[\"wait状态\",{\"1\":{\"552\":1}}],[\"wait\",{\"1\":{\"552\":3,\"653\":3,\"654\":1,\"671\":3,\"869\":1}}],[\"wget\",{\"1\":{\"738\":1}}],[\"world的发生\",{\"1\":{\"710\":1}}],[\"world\",{\"1\":{\"693\":1,\"707\":1,\"710\":1}}],[\"workqueue\",{\"1\":{\"664\":2}}],[\"worker\",{\"1\":{\"664\":1}}],[\"word\",{\"0\":{\"359\":1},\"1\":{\"359\":1}}],[\"wiring\",{\"1\":{\"884\":1}}],[\"withscores\",{\"1\":{\"821\":2}}],[\"withinitial\",{\"1\":{\"663\":1}}],[\"with\",{\"0\":{\"573\":1},\"1\":{\"567\":1,\"573\":1}}],[\"width的百分比相对于包含块\",{\"1\":{\"463\":1}}],[\"width是上面4个属性的简写属性\",{\"1\":{\"386\":1}}],[\"width=device\",{\"1\":{\"358\":1,\"387\":3,\"416\":1,\"423\":1,\"425\":2,\"431\":3,\"436\":1,\"441\":1,\"442\":1,\"453\":1}}],[\"width\",{\"1\":{\"349\":1,\"358\":2,\"374\":1,\"384\":5,\"386\":4,\"387\":9,\"392\":1,\"393\":1,\"416\":2,\"419\":1,\"423\":1,\"425\":7,\"431\":9,\"436\":1,\"441\":2,\"442\":3,\"452\":1,\"453\":5,\"456\":1,\"457\":1,\"460\":1,\"462\":1,\"463\":3,\"466\":4,\"469\":2,\"470\":3,\"472\":1}}],[\"writes\",{\"1\":{\"565\":1}}],[\"write\",{\"1\":{\"565\":1,\"802\":1}}],[\"wrap\",{\"0\":{\"442\":1},\"1\":{\"440\":1,\"442\":5,\"443\":3,\"453\":2}}],[\"wrapper\",{\"1\":{\"431\":2}}],[\"wd\",{\"1\":{\"410\":1}}],[\"www\",{\"1\":{\"410\":1,\"418\":1,\"419\":1}}],[\"weakreference<>\",{\"1\":{\"663\":1}}],[\"weakreference<myobject>\",{\"1\":{\"663\":1}}],[\"weakreference\",{\"1\":{\"663\":1}}],[\"web应用程序等\",{\"1\":{\"923\":1}}],[\"website\",{\"1\":{\"920\":2}}],[\"websocket\",{\"1\":{\"889\":1}}],[\"webapp私有的类加载器\",{\"1\":{\"716\":1}}],[\"webappclassloader\",{\"1\":{\"716\":1}}],[\"webapp不能访问其加载路径下的class\",{\"1\":{\"716\":1}}],[\"webp\",{\"1\":{\"425\":1}}],[\"web字体图标\",{\"0\":{\"418\":1}}],[\"web网络字体\",{\"0\":{\"417\":1}}],[\"webkit\",{\"1\":{\"396\":3,\"464\":2}}],[\"weight\",{\"0\":{\"363\":1},\"1\":{\"366\":2,\"376\":1}}],[\"where是对临时表进行筛选\",{\"1\":{\"747\":1}}],[\"where是在临时表生成后\",{\"1\":{\"747\":1}}],[\"where在group\",{\"1\":{\"746\":1}}],[\"where的区别\",{\"0\":{\"746\":1,\"747\":1}}],[\"where\",{\"1\":{\"745\":1,\"746\":2,\"753\":2,\"794\":2,\"796\":3,\"798\":1,\"807\":1}}],[\"whencompleteasync\",{\"1\":{\"670\":2}}],[\"whencomplete\",{\"1\":{\"670\":1}}],[\"whether\",{\"1\":{\"522\":2}}],[\"while\",{\"1\":{\"494\":3,\"497\":3,\"504\":2,\"506\":1,\"507\":4,\"509\":1,\"522\":3,\"523\":5,\"573\":1,\"671\":2}}],[\"white\",{\"0\":{\"462\":1},\"1\":{\"395\":1,\"462\":2,\"469\":1}}],[\"why\",{\"1\":{\"373\":2}}],[\"<count>\",{\"1\":{\"727\":2}}],[\"<vmid>\",{\"1\":{\"727\":1}}],[\"<video\",{\"1\":{\"460\":1}}],[\"<<\",{\"1\":{\"596\":1,\"644\":2}}],[\"<e>\",{\"1\":{\"528\":1,\"531\":1,\"579\":1,\"582\":1}}],[\"<e\",{\"1\":{\"528\":1,\"532\":1}}],[\"<arr\",{\"1\":{\"527\":1}}],[\"<0\",{\"1\":{\"504\":4,\"513\":4,\"516\":4,\"539\":4}}],[\"<=200\",{\"1\":{\"822\":1}}],[\"<=\",{\"1\":{\"497\":2,\"645\":1}}],[\"<interval>\",{\"1\":{\"727\":2}}],[\"<input\",{\"1\":{\"410\":5,\"461\":1}}],[\"<i><\",{\"1\":{\"453\":4}}],[\"<img\",{\"1\":{\"425\":1}}],[\"<i\",{\"1\":{\"419\":1}}],[\"<option>\",{\"1\":{\"727\":1}}],[\"<option\",{\"1\":{\"410\":3,\"461\":3}}],[\"<ol>\",{\"1\":{\"406\":1}}],[\"<label\",{\"1\":{\"410\":1}}],[\"<li\",{\"1\":{\"431\":11}}],[\"<li>c++<\",{\"1\":{\"406\":1}}],[\"<li>python<\",{\"1\":{\"406\":1}}],[\"<li>js<\",{\"1\":{\"406\":1}}],[\"<li>java<\",{\"1\":{\"406\":1}}],[\"<li>大话西游<\",{\"1\":{\"406\":1}}],[\"<li>兰闺喜事<\",{\"1\":{\"406\":1}}],[\"<li>盗梦空间<\",{\"1\":{\"406\":1}}],[\"<li>星际穿越<\",{\"1\":{\"406\":1}}],[\"<li>列表元素4<\",{\"1\":{\"373\":1}}],[\"<li>列表元素3<\",{\"1\":{\"373\":2}}],[\"<li>列表元素2<\",{\"1\":{\"373\":2}}],[\"<li>列表元素1<\",{\"1\":{\"373\":2}}],[\"<link\",{\"1\":{\"351\":2,\"466\":1,\"469\":1}}],[\"<bean\",{\"1\":{\"889\":1}}],[\"<button\",{\"1\":{\"410\":1}}],[\"<body>\",{\"1\":{\"358\":1,\"387\":3,\"416\":1,\"423\":1,\"425\":2,\"431\":3,\"436\":1,\"441\":1,\"442\":1,\"453\":1}}],[\"<form\",{\"1\":{\"410\":2}}],[\"<t>\",{\"1\":{\"579\":1}}],[\"<td>2\",{\"1\":{\"409\":2}}],[\"<td\",{\"1\":{\"409\":1}}],[\"<tr>\",{\"1\":{\"409\":2}}],[\"<table>\",{\"1\":{\"409\":1}}],[\"<title>document<\",{\"1\":{\"358\":1,\"387\":3,\"416\":1,\"423\":1,\"425\":2,\"431\":3,\"436\":1,\"441\":1,\"442\":1,\"453\":1}}],[\"<dt>阶段2<\",{\"1\":{\"406\":1}}],[\"<dt>阶段1<\",{\"1\":{\"406\":1}}],[\"<dd>框架实战<\",{\"1\":{\"406\":1}}],[\"<dd>css<\",{\"1\":{\"406\":2}}],[\"<dd>html<\",{\"1\":{\"406\":1}}],[\"<dl>\",{\"1\":{\"406\":2}}],[\"<div>\",{\"1\":{\"410\":1,\"423\":1}}],[\"<div>列表<\",{\"1\":{\"373\":1}}],[\"<div>我是div元素<\",{\"1\":{\"425\":1}}],[\"<div>我是div6<\",{\"1\":{\"373\":1}}],[\"<div>我是div5<\",{\"1\":{\"373\":1}}],[\"<div>我是div4<\",{\"1\":{\"373\":1}}],[\"<div>我是div3<\",{\"1\":{\"373\":1}}],[\"<div>我是div2<\",{\"1\":{\"373\":1}}],[\"<div>我是div1<\",{\"1\":{\"373\":1}}],[\"<div>我是列表一<\",{\"1\":{\"373\":1}}],[\"<div>嘻嘻<\",{\"1\":{\"371\":2}}],[\"<div>呵呵<\",{\"1\":{\"371\":2}}],[\"<div>嘿嘿<\",{\"1\":{\"371\":2}}],[\"<div\",{\"1\":{\"358\":2,\"369\":1,\"371\":2,\"372\":1,\"373\":5,\"374\":2,\"377\":1,\"387\":6,\"416\":1,\"425\":4,\"431\":23,\"436\":4,\"441\":4,\"442\":6,\"453\":24,\"461\":1,\"463\":3}}],[\"<script\",{\"1\":{\"469\":1}}],[\"<script>\",{\"1\":{\"461\":1}}],[\"<strong>我是strong元素<\",{\"1\":{\"425\":1}}],[\"<style>\",{\"1\":{\"358\":1,\"362\":1,\"369\":1,\"371\":2,\"373\":2,\"374\":1,\"377\":1,\"387\":3,\"416\":1,\"423\":1,\"425\":2,\"431\":3,\"436\":1,\"441\":1,\"442\":1,\"453\":1,\"463\":1,\"466\":2}}],[\"<span>我是span元素<\",{\"1\":{\"425\":1}}],[\"<span>我是span<\",{\"1\":{\"373\":1}}],[\"<select\",{\"1\":{\"410\":1,\"461\":1}}],[\"<ul>\",{\"1\":{\"373\":2,\"406\":1,\"431\":1}}],[\"<pid>\",{\"1\":{\"727\":2,\"729\":3}}],[\"<p>我是p元素<\",{\"1\":{\"373\":1}}],[\"<p\",{\"1\":{\"372\":1}}],[\"<meta\",{\"1\":{\"358\":2,\"387\":6,\"416\":2,\"423\":2,\"425\":4,\"431\":6,\"436\":2,\"441\":2,\"442\":2,\"453\":2}}],[\"<h1>前端开发<\",{\"1\":{\"406\":1}}],[\"<h2>常见编程语言<\",{\"1\":{\"406\":1}}],[\"<h2>电影排名<\",{\"1\":{\"406\":1}}],[\"<h2\",{\"1\":{\"369\":1}}],[\"<head>\",{\"1\":{\"358\":1,\"387\":3,\"416\":1,\"423\":1,\"425\":2,\"431\":3,\"436\":1,\"441\":1,\"442\":1,\"453\":1}}],[\"<html\",{\"1\":{\"358\":1,\"387\":3,\"416\":1,\"423\":1,\"425\":2,\"431\":3,\"436\":1,\"441\":1,\"442\":1,\"453\":1}}],[\"<\",{\"1\":{\"358\":6,\"362\":1,\"369\":1,\"371\":2,\"373\":10,\"374\":1,\"377\":1,\"387\":18,\"406\":5,\"409\":3,\"410\":5,\"416\":6,\"423\":6,\"425\":14,\"431\":21,\"433\":2,\"436\":6,\"441\":6,\"442\":6,\"453\":7,\"461\":2,\"463\":4,\"466\":2,\"494\":5,\"497\":1,\"504\":1,\"518\":3,\"519\":3,\"520\":3,\"522\":2,\"528\":1,\"531\":1,\"532\":1,\"581\":3,\"645\":1,\"664\":1,\"666\":1}}],[\"0以后默认开启\",{\"1\":{\"861\":1}}],[\"0版本后新增\",{\"1\":{\"859\":1}}],[\"024067\",{\"1\":{\"824\":2}}],[\"0x5555\",{\"1\":{\"738\":1}}],[\"03\",{\"1\":{\"558\":2}}],[\"01\",{\"1\":{\"558\":2,\"833\":1}}],[\"06\",{\"1\":{\"523\":1}}],[\"05\",{\"1\":{\"513\":1}}],[\"04\",{\"1\":{\"513\":1}}],[\"0之间的正数\",{\"1\":{\"470\":3}}],[\"0到10\",{\"1\":{\"470\":3}}],[\"0cm意味着同baseline一样\",{\"1\":{\"458\":1}}],[\"0f0\",{\"1\":{\"388\":1,\"425\":1,\"463\":1,\"469\":1}}],[\"0\",{\"1\":{\"358\":3,\"372\":1,\"377\":1,\"380\":6,\"387\":4,\"406\":4,\"416\":1,\"419\":1,\"423\":1,\"425\":19,\"426\":1,\"427\":1,\"431\":8,\"433\":1,\"436\":1,\"441\":1,\"442\":1,\"453\":1,\"454\":4,\"455\":8,\"456\":1,\"457\":8,\"458\":1,\"463\":3,\"489\":2,\"491\":1,\"493\":3,\"494\":5,\"497\":2,\"504\":8,\"505\":3,\"506\":3,\"507\":2,\"513\":8,\"514\":1,\"516\":8,\"517\":6,\"518\":9,\"519\":6,\"520\":17,\"522\":4,\"523\":3,\"528\":1,\"530\":2,\"531\":1,\"532\":2,\"539\":5,\"551\":2,\"557\":1,\"558\":1,\"575\":1,\"597\":2,\"606\":1,\"644\":1,\"645\":2,\"664\":1,\"666\":1,\"670\":3,\"683\":1,\"807\":1,\"818\":2,\"821\":1,\"822\":1,\"823\":3,\"824\":2,\"833\":1,\"985\":1}}],[\"00111\",{\"1\":{\"632\":1}}],[\"00001\",{\"1\":{\"632\":1}}],[\"000\",{\"1\":{\"469\":1}}],[\"00f\",{\"1\":{\"469\":1}}],[\"00左右\",{\"1\":{\"81\":1}}],[\"00\",{\"1\":{\"78\":2,\"81\":1,\"558\":3,\"796\":2}}],[\"官方推荐配置为整个堆大小的3\",{\"1\":{\"721\":1}}],[\"官方推荐的写法是这样的\",{\"1\":{\"521\":1}}],[\"官方文档术语叫做\",{\"1\":{\"464\":1}}],[\"官方解释\",{\"1\":{\"458\":1}}],[\"官方\",{\"1\":{\"358\":1}}],[\"官人理事官目标\",{\"1\":{\"299\":1}}],[\"两者都是优秀的产品\",{\"1\":{\"974\":1}}],[\"两者都可以\",{\"1\":{\"662\":1}}],[\"两者都可以暂停线程的执行\",{\"1\":{\"653\":1}}],[\"两阶段提交\",{\"1\":{\"942\":1}}],[\"两种注入方式对循环依赖的影响\",{\"1\":{\"924\":1}}],[\"两种依赖方式\",{\"1\":{\"924\":1}}],[\"两种编码格式\",{\"1\":{\"853\":1}}],[\"两种情况\",{\"1\":{\"664\":1}}],[\"两种一致性级别\",{\"1\":{\"565\":1}}],[\"两数之和\",{\"0\":{\"488\":1},\"1\":{\"490\":1}}],[\"两件事情\",{\"1\":{\"455\":1}}],[\"两端也有空隙\",{\"1\":{\"444\":1}}],[\"两端也有间距\",{\"1\":{\"444\":1}}],[\"两端的间距是items之间的间距一半\",{\"1\":{\"444\":1}}],[\"两端个放一个元素\",{\"1\":{\"444\":1}}],[\"两端对齐显示\",{\"1\":{\"358\":1}}],[\"两端对齐\",{\"1\":{\"358\":1,\"444\":1}}],[\"两个事务同时读取一个数据\",{\"1\":{\"770\":1}}],[\"两个survivor区\",{\"1\":{\"727\":1}}],[\"两个算法的弊端\",{\"1\":{\"691\":1}}],[\"两个completionstage任务都完成后\",{\"1\":{\"670\":1}}],[\"两个操作之间存在happens\",{\"1\":{\"657\":1}}],[\"两个及两个以上的作业在同一时刻执行\",{\"1\":{\"650\":1}}],[\"两个及两个以上的作业在同一时间段内执行\",{\"1\":{\"650\":1}}],[\"两个\",{\"1\":{\"610\":1}}],[\"两个队列\",{\"1\":{\"522\":3}}],[\"两个数\",{\"1\":{\"490\":1}}],[\"两个值\",{\"1\":{\"454\":2}}],[\"两个值时\",{\"1\":{\"454\":1}}],[\"两个值进行比较\",{\"1\":{\"387\":1}}],[\"两个重要概念\",{\"1\":{\"436\":1}}],[\"两个div盒子为父子关系\",{\"1\":{\"387\":1}}],[\"两个选择器以\",{\"1\":{\"372\":1}}],[\"两个选择器紧密连接\",{\"1\":{\"372\":1}}],[\"两行文字基线之间的距离\",{\"1\":{\"365\":1}}],[\"两缕头发之间不能有大面积留白\",{\"1\":{\"170\":1}}],[\"右移多少位相当于多少位\",{\"1\":{\"596\":1}}],[\"右移\",{\"1\":{\"596\":1}}],[\"右浮找右浮\",{\"1\":{\"430\":1}}],[\"右边距\",{\"1\":{\"387\":1}}],[\"右内边距\",{\"1\":{\"385\":1}}],[\"右对齐\",{\"1\":{\"358\":1}}],[\"右键\",{\"1\":{\"352\":1}}],[\"左移多少位相当于多少位乘以2\",{\"1\":{\"596\":1}}],[\"左移\",{\"1\":{\"596\":1}}],[\"左括号必须以正确的顺序闭合\",{\"1\":{\"514\":1}}],[\"左括号必须用相同类型的右括号闭合\",{\"1\":{\"514\":1}}],[\"左浮找左浮\",{\"1\":{\"430\":1}}],[\"左内边距\",{\"1\":{\"385\":1,\"387\":1}}],[\"左对齐\",{\"1\":{\"358\":1}}],[\"左右\",{\"1\":{\"255\":1,\"256\":1,\"273\":1,\"822\":3}}],[\"左右看\",{\"1\":{\"224\":1}}],[\"左右转\",{\"1\":{\"129\":1}}],[\"左右呈现的元素在视觉重量上势均力敌\",{\"1\":{\"51\":1}}],[\"作者名\",{\"1\":{\"744\":1}}],[\"作者国籍\",{\"1\":{\"744\":2}}],[\"作用域\",{\"1\":{\"469\":1}}],[\"作用\",{\"0\":{\"578\":1},\"1\":{\"355\":1,\"356\":1,\"357\":1,\"359\":1,\"361\":1,\"362\":1,\"363\":1,\"364\":1,\"365\":1,\"397\":1,\"398\":1,\"402\":1,\"427\":1,\"611\":1,\"661\":1,\"663\":1,\"666\":1,\"714\":1,\"797\":1}}],[\"作为配置中心时\",{\"1\":{\"972\":1}}],[\"作为阿里巴巴开源的一款集成了服务注册与发现\",{\"1\":{\"971\":1}}],[\"作为一个组合主键\",{\"1\":{\"744\":1}}],[\"作为它的线程池执行异步代码\",{\"1\":{\"670\":1}}],[\"作为网页内容的重要组成部分\",{\"1\":{\"403\":1}}],[\"作为前景\",{\"1\":{\"182\":1}}],[\"作为陪体放在环境中\",{\"1\":{\"182\":1}}],[\"uri\",{\"1\":{\"936\":1}}],[\"url前缀\",{\"1\":{\"549\":1}}],[\"url地址\",{\"1\":{\"460\":3}}],[\"url\",{\"0\":{\"547\":1},\"1\":{\"374\":1,\"398\":2,\"403\":2,\"417\":1,\"419\":1,\"466\":1,\"920\":2}}],[\"url可以是绝对的\",{\"1\":{\"351\":1}}],[\"u1\",{\"1\":{\"823\":8}}],[\"uid\",{\"1\":{\"820\":5}}],[\"using\",{\"1\":{\"712\":1,\"751\":2,\"796\":8}}],[\"usegcoverheadlimit\",{\"1\":{\"737\":1}}],[\"use\",{\"1\":{\"567\":1,\"890\":1}}],[\"userkeyresolver\",{\"1\":{\"936\":1}}],[\"userrepository\",{\"1\":{\"910\":1}}],[\"users\",{\"1\":{\"910\":1}}],[\"user\",{\"1\":{\"470\":1,\"546\":1,\"557\":1,\"754\":1,\"755\":1,\"756\":1,\"757\":2,\"758\":2,\"759\":2,\"760\":2,\"807\":1}}],[\"username\",{\"1\":{\"410\":2}}],[\"udp首部开销8\",{\"1\":{\"550\":1}}],[\"udp\",{\"1\":{\"546\":1,\"550\":6,\"551\":1}}],[\"util包下面\",{\"1\":{\"625\":1}}],[\"util\",{\"1\":{\"505\":1,\"514\":1,\"522\":8,\"523\":3,\"662\":1}}],[\"utf8mb4\",{\"1\":{\"751\":6}}],[\"utf\",{\"1\":{\"358\":1,\"387\":3,\"416\":1,\"423\":1,\"425\":2,\"431\":3,\"436\":1,\"441\":1,\"442\":1,\"453\":1}}],[\"uncommitted\",{\"1\":{\"778\":1,\"899\":3}}],[\"union\",{\"1\":{\"796\":4}}],[\"unique\",{\"1\":{\"759\":1,\"793\":1}}],[\"unit\",{\"1\":{\"558\":2,\"559\":1,\"662\":1,\"664\":2,\"667\":1,\"670\":1}}],[\"unsigned\",{\"1\":{\"751\":1}}],[\"unsafe类左右\",{\"1\":{\"590\":1}}],[\"unsafe类\",{\"0\":{\"590\":1}}],[\"unable\",{\"1\":{\"737\":1}}],[\"unloading\",{\"1\":{\"712\":1}}],[\"unlock\",{\"1\":{\"671\":5,\"842\":1}}],[\"unparrk\",{\"1\":{\"671\":1}}],[\"unpark\",{\"1\":{\"671\":3}}],[\"untreeify\",{\"1\":{\"644\":1}}],[\"undolog\",{\"1\":{\"797\":1,\"799\":1}}],[\"undo\",{\"1\":{\"776\":1,\"797\":1,\"802\":1,\"968\":1}}],[\"undo操作\",{\"1\":{\"514\":1}}],[\"underline\",{\"1\":{\"355\":1}}],[\"unordered\",{\"1\":{\"406\":1}}],[\"ul>li\",{\"1\":{\"414\":1}}],[\"ul>li5\",{\"1\":{\"414\":1}}],[\"ul>\",{\"1\":{\"373\":2,\"406\":1,\"431\":1}}],[\"ul\",{\"1\":{\"373\":4,\"404\":1,\"406\":3,\"431\":6}}],[\"upper\",{\"1\":{\"807\":1}}],[\"uppeercase\",{\"1\":{\"356\":1}}],[\"up\",{\"1\":{\"797\":1}}],[\"update可以显式获取行级锁\",{\"1\":{\"789\":1}}],[\"update\",{\"1\":{\"708\":1,\"751\":2,\"788\":1,\"789\":1,\"801\":1,\"808\":1}}],[\"uptime\",{\"0\":{\"329\":1},\"1\":{\"329\":1}}],[\"此算法消除了\",{\"1\":{\"691\":1}}],[\"此方法调用之后会清除当前线程的中断标志位的状态\",{\"1\":{\"671\":1}}],[\"此策略将丢弃最早的未处理的任务请求\",{\"1\":{\"664\":1}}],[\"此次线程b读到值还是原来的值\",{\"1\":{\"658\":1}}],[\"此关键属性值表示背景相对于视口固定\",{\"1\":{\"402\":1}}],[\"此关键属性值表示背景相对于元素的内容固定\",{\"1\":{\"402\":1}}],[\"此关键属性值表示背景相对于元素本身固定\",{\"1\":{\"402\":1}}],[\"此属性指定被链接资源的url\",{\"1\":{\"351\":1}}],[\"此外也可以被用来创建站点图标\",{\"1\":{\"351\":1}}],[\"此时b已经创建结束\",{\"1\":{\"925\":1}}],[\"此时b里面的a依然是创建中状态\",{\"1\":{\"925\":1}}],[\"此时bean已经初始化完成\",{\"1\":{\"890\":1}}],[\"此时b线程请求再次访问缓存时\",{\"1\":{\"848\":1}}],[\"此时用户线程stw\",{\"1\":{\"708\":1}}],[\"此时用户线程是暂停的\",{\"1\":{\"697\":1}}],[\"此时如果客户端等待\",{\"1\":{\"552\":1}}],[\"此时q2\",{\"1\":{\"522\":1}}],[\"此时\",{\"1\":{\"519\":2,\"522\":1,\"561\":1}}],[\"此时应注意眼睛看向物体的角度和方向\",{\"1\":{\"157\":1}}],[\"此时呈现静谧温柔的蓝色\",{\"1\":{\"81\":1}}],[\"此时拍摄侧逆光及逆光\",{\"1\":{\"81\":1}}],[\"此时的光线直射会形成明显的影子\",{\"1\":{\"81\":1}}],[\"此时光线较暗\",{\"1\":{\"81\":1}}],[\"此时光线较为柔和\",{\"1\":{\"81\":1}}],[\"此时光线相对较硬\",{\"1\":{\"81\":1}}],[\"此时光色偏橙黄色\",{\"1\":{\"81\":1}}],[\"此时和日落之后的二十分钟称为\",{\"1\":{\"81\":1}}],[\"额外起一个线程\",{\"1\":{\"842\":1}}],[\"额外知识补充\",{\"0\":{\"350\":1,\"415\":1}}],[\"额头扁平\",{\"1\":{\"171\":1}}],[\"额头过于饱满\",{\"1\":{\"171\":1}}],[\"额头和眼睛\",{\"0\":{\"171\":1}}],[\"额头\",{\"1\":{\"166\":1}}],[\"宽表\",{\"1\":{\"804\":1}}],[\"宽高小于定位参照对象的宽高\",{\"1\":{\"425\":1}}],[\"宽高默认由内容决定\",{\"1\":{\"425\":1}}],[\"宽度或者高度铺满元素\",{\"1\":{\"400\":1}}],[\"宽度都小于或等于max\",{\"1\":{\"384\":1}}],[\"宽度都大于或等于min\",{\"1\":{\"384\":1}}],[\"宽度设置\",{\"1\":{\"384\":1}}],[\"宽度\",{\"1\":{\"349\":1}}],[\"宽肩带遮挡\",{\"1\":{\"174\":1}}],[\"oap还负责对收集的数据进行聚合\",{\"1\":{\"977\":1}}],[\"oap服务器负责接收来自各服务探针的span数据\",{\"1\":{\"977\":1}}],[\"oap服务\",{\"1\":{\"977\":1}}],[\"okhttp\",{\"1\":{\"953\":1}}],[\"o多路复用\",{\"0\":{\"866\":1}}],[\"o多路复用模型\",{\"0\":{\"863\":1}}],[\"o线程将读取到的binlog\",{\"1\":{\"801\":1}}],[\"o线程连接主数据库\",{\"1\":{\"801\":1}}],[\"other\",{\"1\":{\"645\":1}}],[\"o2\",{\"1\":{\"625\":1}}],[\"o1\",{\"1\":{\"625\":1}}],[\"o性能更高\",{\"1\":{\"566\":1}}],[\"occ\",{\"1\":{\"565\":1}}],[\"osi\",{\"0\":{\"544\":1}}],[\"observability\",{\"1\":{\"977\":1}}],[\"objectfactory>\",{\"1\":{\"925\":1}}],[\"object>>\",{\"1\":{\"820\":1,\"982\":1}}],[\"objectlock\",{\"1\":{\"671\":13}}],[\"objectwaitandnotify\",{\"1\":{\"671\":1}}],[\"object\",{\"1\":{\"517\":2,\"518\":2,\"519\":2,\"520\":2,\"588\":8,\"619\":2,\"661\":1,\"663\":1,\"671\":6,\"851\":2}}],[\"oblique\",{\"1\":{\"364\":1}}],[\"on是生成一张临时表\",{\"1\":{\"747\":1}}],[\"on就是连接条件\",{\"1\":{\"747\":1}}],[\"on\",{\"0\":{\"747\":1},\"1\":{\"522\":2,\"748\":2,\"751\":1,\"757\":1,\"759\":1,\"807\":4,\"808\":3}}],[\"onto\",{\"1\":{\"522\":2}}],[\"only\",{\"1\":{\"466\":1,\"859\":1}}],[\"one\",{\"1\":{\"348\":1,\"371\":4,\"377\":2,\"565\":2}}],[\"o\",{\"1\":{\"464\":2,\"522\":8,\"586\":2,\"664\":1,\"853\":1,\"864\":2,\"866\":1,\"982\":1}}],[\"outofmemoryerror\",{\"1\":{\"683\":1,\"737\":4}}],[\"outofmemory\",{\"1\":{\"680\":1}}],[\"out\",{\"1\":{\"457\":1,\"505\":3,\"506\":2,\"507\":4,\"512\":1,\"513\":5,\"514\":1,\"515\":1,\"516\":5,\"517\":2,\"518\":2,\"519\":2,\"520\":3,\"522\":9,\"523\":4,\"528\":1,\"539\":2,\"566\":1,\"573\":1,\"579\":2,\"582\":1,\"587\":4,\"588\":3,\"597\":2,\"599\":1,\"606\":4,\"609\":1,\"611\":5,\"633\":6,\"661\":2,\"663\":11,\"666\":2,\"667\":9,\"668\":2,\"670\":31,\"671\":19,\"833\":2}}],[\"outline\",{\"0\":{\"388\":1},\"1\":{\"388\":2}}],[\"old\",{\"0\":{\"705\":1,\"706\":1},\"1\":{\"683\":1,\"684\":1,\"696\":1,\"697\":1}}],[\"oldcapacity\",{\"1\":{\"623\":2}}],[\"ol>\",{\"1\":{\"406\":1}}],[\"ol\",{\"1\":{\"406\":2}}],[\"ol中只能放li\",{\"1\":{\"406\":1}}],[\"org\",{\"1\":{\"936\":1}}],[\"oracle\",{\"0\":{\"805\":1}}],[\"orange\",{\"1\":{\"348\":1,\"377\":1,\"390\":1,\"391\":1,\"410\":1,\"416\":1,\"431\":1,\"456\":1,\"457\":1,\"463\":1,\"466\":1,\"469\":1,\"833\":1}}],[\"order\",{\"0\":{\"447\":1},\"1\":{\"440\":1,\"447\":3,\"817\":1}}],[\"ordered\",{\"1\":{\"406\":1,\"936\":1}}],[\"origin\",{\"1\":{\"403\":1,\"416\":1}}],[\"oriented\",{\"1\":{\"892\":1}}],[\"orient\",{\"1\":{\"396\":1}}],[\"overhead\",{\"1\":{\"737\":1}}],[\"over\",{\"1\":{\"671\":1}}],[\"override\",{\"1\":{\"504\":2,\"505\":6,\"506\":7,\"507\":1,\"513\":7,\"516\":7,\"517\":6,\"518\":6,\"519\":6,\"520\":1,\"539\":1,\"663\":1}}],[\"overflow不为visible的块元素\",{\"1\":{\"465\":1}}],[\"overflow生效的前提是overflow不为visible\",{\"1\":{\"462\":1}}],[\"overflow\",{\"0\":{\"462\":1},\"1\":{\"387\":1,\"395\":2,\"396\":1,\"462\":3,\"469\":2}}],[\"overflow属性\",{\"0\":{\"381\":1}}],[\"overline\",{\"1\":{\"355\":1}}],[\"openfeigin默认的超时时间是1秒钟\",{\"1\":{\"952\":1}}],[\"openfeigin\",{\"0\":{\"950\":1}}],[\"openfeign将会抛出超时异常\",{\"1\":{\"952\":1}}],[\"openfeign\",{\"1\":{\"931\":1}}],[\"operand\",{\"1\":{\"682\":1}}],[\"operations\",{\"1\":{\"469\":1}}],[\"opera等\",{\"1\":{\"464\":1}}],[\"opsforvalue\",{\"1\":{\"840\":1}}],[\"opsforgeo\",{\"1\":{\"824\":6}}],[\"opsforhyperloglog\",{\"1\":{\"822\":1}}],[\"opcount\",{\"1\":{\"505\":3}}],[\"optimistic\",{\"1\":{\"565\":1}}],[\"optimization\",{\"1\":{\"346\":1}}],[\"options\",{\"1\":{\"728\":2}}],[\"option参数\",{\"1\":{\"727\":1,\"731\":1}}],[\"option>\",{\"1\":{\"410\":3,\"461\":3}}],[\"option\",{\"1\":{\"410\":1,\"728\":1,\"729\":2,\"731\":1}}],[\"opacity设置透明度\",{\"1\":{\"380\":1}}],[\"opacity\",{\"1\":{\"380\":2}}],[\"odd\",{\"1\":{\"373\":1}}],[\"offset\",{\"1\":{\"390\":2,\"563\":1,\"823\":2,\"983\":1}}],[\"of\",{\"1\":{\"373\":4,\"522\":2,\"557\":2,\"884\":2}}],[\"标识符\",{\"1\":{\"796\":1}}],[\"标志后面跟着一个进程id\",{\"1\":{\"738\":1}}],[\"标志的数据包后进入\",{\"1\":{\"552\":1}}],[\"标志的数据包\",{\"1\":{\"552\":8}}],[\"标记与gc\",{\"1\":{\"707\":1}}],[\"标记压缩\",{\"0\":{\"691\":1}}],[\"标记所有被引用的对象\",{\"1\":{\"689\":1}}],[\"标记\",{\"1\":{\"689\":1,\"691\":5}}],[\"标记清除\",{\"0\":{\"689\":1}}],[\"标记是一个同步方法\",{\"1\":{\"661\":1}}],[\"标签选择器\",{\"1\":{\"348\":1}}],[\"标准没有bug写法\",{\"1\":{\"842\":1}}],[\"标准写法\",{\"1\":{\"807\":1}}],[\"标准版\",{\"0\":{\"527\":1},\"1\":{\"582\":1}}],[\"标准流布局\",{\"0\":{\"422\":1}}],[\"标准镜头\",{\"1\":{\"208\":1}}],[\"标准范式\",{\"1\":{\"12\":1}}],[\"且愿意接受更高的学习成本\",{\"1\":{\"974\":1}}],[\"且不会允许突发流量\",{\"1\":{\"949\":1}}],[\"且可以在分布式系统中生成\",{\"1\":{\"938\":1}}],[\"且20240211未签到\",{\"1\":{\"823\":1}}],[\"且表中只有一行记录的情况下\",{\"1\":{\"796\":1}}],[\"且成对出现使用\",{\"1\":{\"671\":1}}],[\"且将当前线程的中断状态设为false\",{\"1\":{\"671\":1}}],[\"且需要继承comparable\",{\"1\":{\"528\":1}}],[\"且后面的会覆盖前面的\",{\"1\":{\"347\":2}}],[\"且本身具有主观色彩\",{\"1\":{\"207\":1,\"208\":1}}],[\"eureka保证的是ap\",{\"1\":{\"933\":1}}],[\"eureka\",{\"1\":{\"931\":1,\"933\":1}}],[\"earlysingletonobjects\",{\"1\":{\"925\":1}}],[\"ease\",{\"1\":{\"456\":2,\"457\":1}}],[\"epoll是现在最先进的io多路复用器\",{\"1\":{\"869\":1}}],[\"epoll\",{\"0\":{\"869\":1},\"1\":{\"866\":1,\"869\":3}}],[\"everysec\",{\"1\":{\"861\":1}}],[\"events传输到从数据库的中继日志\",{\"1\":{\"801\":1}}],[\"events\",{\"1\":{\"801\":1}}],[\"eventually\",{\"1\":{\"934\":1}}],[\"eventual\",{\"1\":{\"565\":1}}],[\"evenly\",{\"1\":{\"444\":1,\"446\":1}}],[\"even\",{\"1\":{\"373\":1}}],[\"eq\",{\"1\":{\"796\":2}}],[\"equals\",{\"1\":{\"504\":1,\"575\":1,\"582\":1,\"606\":2,\"607\":2}}],[\"eden\",{\"1\":{\"683\":2}}],[\"e=1\",{\"1\":{\"669\":1}}],[\"error2\",{\"1\":{\"671\":4}}],[\"error1\",{\"1\":{\"671\":4}}],[\"error\",{\"1\":{\"571\":2,\"982\":1}}],[\"ex\",{\"1\":{\"817\":3,\"896\":2,\"982\":2}}],[\"explain\",{\"0\":{\"796\":1},\"1\":{\"796\":3}}],[\"exists\",{\"1\":{\"751\":1,\"753\":6}}],[\"exit\",{\"1\":{\"572\":1}}],[\"example\",{\"1\":{\"738\":2,\"936\":1}}],[\"exceeded\",{\"1\":{\"737\":1}}],[\"exceptionhandler\",{\"1\":{\"896\":3}}],[\"exceptionally\",{\"1\":{\"670\":3}}],[\"exception\",{\"1\":{\"571\":4,\"663\":2,\"666\":1,\"667\":1,\"671\":5}}],[\"exec来实现有条件的操作\",{\"1\":{\"879\":1}}],[\"exec命令前\",{\"1\":{\"878\":1}}],[\"exec\",{\"1\":{\"877\":1}}],[\"execution\",{\"1\":{\"960\":1}}],[\"executionexception\",{\"1\":{\"670\":1}}],[\"execute\",{\"1\":{\"664\":1,\"807\":3}}],[\"executorservice\",{\"1\":{\"664\":4}}],[\"executors\",{\"1\":{\"664\":7}}],[\"executor\",{\"1\":{\"664\":12,\"670\":4,\"975\":1}}],[\"exe命令\",{\"1\":{\"732\":1}}],[\"extra\",{\"1\":{\"796\":2}}],[\"ext\",{\"1\":{\"714\":2}}],[\"extensionclassloader\",{\"1\":{\"714\":1}}],[\"extension\",{\"1\":{\"679\":1}}],[\"extents\",{\"1\":{\"579\":1}}],[\"extends\",{\"1\":{\"528\":1,\"532\":1,\"581\":1,\"644\":1,\"645\":2}}],[\"extend\",{\"1\":{\"469\":1}}],[\"echo\",{\"1\":{\"557\":2}}],[\"es使用指南\",{\"2\":{\"568\":1}}],[\"es对于大数据量\",{\"0\":{\"567\":1}}],[\"es索引数据多了怎么办呢\",{\"0\":{\"566\":1}}],[\"es如何保证读写一致呢\",{\"0\":{\"565\":1}}],[\"es面试题\",{\"0\":{\"560\":1}}],[\"es常见操作\",{\"0\":{\"556\":1}}],[\"es\",{\"0\":{\"555\":1},\"1\":{\"811\":1},\"2\":{\"569\":1}}],[\"e\",{\"0\":{\"743\":1},\"1\":{\"503\":2,\"504\":39,\"505\":9,\"506\":22,\"512\":3,\"513\":17,\"516\":19,\"517\":13,\"518\":10,\"519\":10,\"520\":16,\"528\":3,\"531\":2,\"532\":2,\"539\":14,\"579\":2,\"580\":1,\"582\":2,\"622\":3,\"663\":14,\"666\":4,\"668\":4,\"669\":2,\"670\":30,\"671\":38,\"822\":2}}],[\"elastic\",{\"1\":{\"974\":4}}],[\"elasticsearch提供了多种优化机制和方法来实现高效\",{\"1\":{\"567\":1}}],[\"elasticsearch的设计目标更多地偏向于最终一致性\",{\"1\":{\"565\":1}}],[\"elasticsearch的倒排索引是什么\",{\"0\":{\"563\":1}}],[\"elasticsearch通过版本控制\",{\"1\":{\"565\":1}}],[\"elasticsearch通过主副分片机制确保数据冗余和高可用性\",{\"1\":{\"565\":1}}],[\"elasticsearch通过zen\",{\"1\":{\"564\":1}}],[\"elasticsearch有一个刷新间隔\",{\"1\":{\"565\":1}}],[\"elasticsearch使用版本号\",{\"1\":{\"565\":1}}],[\"elasticsearch在处理上亿量级的大数据聚合时\",{\"1\":{\"567\":1}}],[\"elasticsearch在查询和索引过程中大量依赖内存\",{\"1\":{\"566\":1}}],[\"elasticsearch在默认情况下提供了\",{\"1\":{\"565\":1}}],[\"elasticsearch在并发情况下保证读写一致性的主要手段包括以下几个方面\",{\"1\":{\"565\":1}}],[\"elasticsearch在索引文档时采用了一种混合策略\",{\"1\":{\"561\":1}}],[\"elasticsearch引入了一个discovery\",{\"1\":{\"564\":1}}],[\"elasticsearch采用了一个称为zen\",{\"1\":{\"564\":1}}],[\"elasticsearch是如何实现master选举的\",{\"0\":{\"564\":1}}],[\"elasticsearch还能基于这些信息进行复杂的相关性排序\",{\"1\":{\"563\":1}}],[\"elasticsearch还提供了丰富的查询dsl\",{\"1\":{\"562\":1}}],[\"elasticsearch还会将文档变更记录到事务日志\",{\"1\":{\"561\":1}}],[\"elasticsearch利用其分布式特性\",{\"1\":{\"562\":1}}],[\"elasticsearch搜索过程是一个分布式\",{\"1\":{\"562\":1}}],[\"elasticsearch后台会定期进行段合并操作\",{\"1\":{\"561\":1}}],[\"elasticsearch会查找倒排索引中与查询条件匹配的词项\",{\"1\":{\"563\":1}}],[\"elasticsearch会在分片级别计算各聚合统计量\",{\"1\":{\"562\":1}}],[\"elasticsearch会维护索引和搜索的一致性\",{\"1\":{\"561\":1}}],[\"elasticsearch会触发flush操作\",{\"1\":{\"561\":1}}],[\"elasticsearch会定期\",{\"1\":{\"561\":1}}],[\"elasticsearch根据文档id\",{\"1\":{\"561\":1}}],[\"elasticsearch索引文档的过程涉及多个步骤\",{\"1\":{\"561\":1}}],[\"else\",{\"1\":{\"494\":2,\"504\":1,\"506\":1,\"507\":2,\"514\":1,\"520\":2,\"531\":1}}],[\"element\",{\"1\":{\"468\":1,\"522\":8,\"523\":1,\"579\":2,\"580\":1,\"622\":1,\"822\":1}}],[\"ellipsis\",{\"1\":{\"395\":1,\"396\":1,\"462\":2,\"469\":4}}],[\"embedded\",{\"1\":{\"852\":1}}],[\"embstr\",{\"1\":{\"852\":2}}],[\"emp\",{\"1\":{\"796\":8}}],[\"empty\",{\"1\":{\"506\":1,\"517\":2,\"518\":2,\"519\":2,\"520\":4,\"522\":4,\"523\":1}}],[\"em\",{\"1\":{\"467\":1}}],[\"email\",{\"1\":{\"461\":1,\"919\":1}}],[\"emment\",{\"1\":{\"413\":1}}],[\"environment\",{\"1\":{\"926\":1}}],[\"enablefeiginclients\",{\"1\":{\"951\":1}}],[\"enableautoconfiguration开启自动装配\",{\"1\":{\"923\":1}}],[\"enableautoconfiguration注解来实现的\",{\"1\":{\"923\":1}}],[\"enableautoconfiguration\",{\"1\":{\"902\":2,\"923\":1,\"926\":1}}],[\"enabled\",{\"1\":{\"373\":1}}],[\"encoding\",{\"1\":{\"851\":1}}],[\"entries\",{\"1\":{\"853\":2,\"856\":1}}],[\"entry<k\",{\"1\":{\"644\":1}}],[\"entry<>\",{\"1\":{\"633\":1}}],[\"entry<integer\",{\"1\":{\"633\":1}}],[\"entry\",{\"1\":{\"633\":3}}],[\"entryset遍历\",{\"1\":{\"633\":1}}],[\"entryset\",{\"1\":{\"633\":2,\"644\":1}}],[\"enter键即可自动生成相应的代码\",{\"1\":{\"413\":1}}],[\"enum\",{\"1\":{\"575\":1}}],[\"enqueue\",{\"1\":{\"506\":3,\"516\":4,\"517\":3,\"518\":2,\"519\":2,\"520\":1}}],[\"end被唤醒\",{\"1\":{\"671\":1}}],[\"endtime\",{\"1\":{\"505\":2,\"670\":6}}],[\"end之间的距离是flex\",{\"1\":{\"446\":1}}],[\"end之间的距离等于flex\",{\"1\":{\"444\":1,\"446\":1}}],[\"end两端对齐\",{\"1\":{\"446\":1}}],[\"end对齐\",{\"1\":{\"444\":1,\"445\":1,\"446\":1}}],[\"end\",{\"1\":{\"441\":1,\"442\":1,\"444\":3,\"445\":1,\"446\":1,\"448\":1,\"753\":4,\"807\":2}}],[\"en\",{\"1\":{\"358\":1,\"387\":3,\"416\":1,\"423\":1,\"425\":2,\"431\":3,\"436\":1,\"441\":1,\"442\":1,\"453\":1}}],[\"engine决定\",{\"1\":{\"679\":1}}],[\"engine\",{\"1\":{\"346\":1,\"751\":1}}],[\"eg\",{\"1\":{\"357\":1,\"454\":1,\"721\":2,\"724\":1,\"729\":1,\"731\":1,\"817\":1}}],[\"ef\",{\"1\":{\"333\":1}}],[\"所谓\",{\"1\":{\"866\":1}}],[\"所谓的双端队列\",{\"1\":{\"521\":1}}],[\"所选索引的长度\",{\"1\":{\"796\":1}}],[\"所依赖的手段主要是\",{\"1\":{\"776\":1}}],[\"所用被\",{\"1\":{\"668\":1}}],[\"所引用的新\",{\"1\":{\"610\":1}}],[\"所以snowflake算法能够使用的时间范围是有限的\",{\"1\":{\"938\":1}}],[\"所以才会不断地尝试对gc进行优化\",{\"1\":{\"708\":1}}],[\"所以能减少系统的停顿时间\",{\"1\":{\"693\":1}}],[\"所以jvm\",{\"1\":{\"691\":1}}],[\"所以每次在获取资源操作的时候都会上锁\",{\"1\":{\"660\":1}}],[\"所以这两个类加载器有多个实例\",{\"1\":{\"716\":1}}],[\"所以这两个线程就会互相等待而进入死锁状态\",{\"1\":{\"652\":1}}],[\"所以这里返回的是常量池中的\",{\"1\":{\"611\":1}}],[\"所以hashmap要比hashtable效率高\",{\"1\":{\"628\":1}}],[\"所以它们位于不同的内存区域\",{\"1\":{\"611\":1}}],[\"所以\",{\"1\":{\"521\":2,\"522\":1,\"611\":1,\"663\":1}}],[\"所以发动机这个类和车这个类之间\",{\"1\":{\"521\":1}}],[\"所以程序员这个类可以继承雇员类\",{\"1\":{\"521\":1}}],[\"所以猫这个类可以继承动物类\",{\"1\":{\"521\":1}}],[\"所以data静态数组的大小是capacity\",{\"1\":{\"518\":1}}],[\"所以返回\",{\"1\":{\"489\":1}}],[\"所以不适合服务器环境\",{\"1\":{\"696\":1}}],[\"所以不用担心某些原因html的font\",{\"1\":{\"473\":1}}],[\"所以不再向父元素汇报高度\",{\"1\":{\"432\":1}}],[\"所以手机端浏览器会默认对页面进行缩放以显示\",{\"1\":{\"470\":1}}],[\"所以还有特殊的别名\",{\"1\":{\"457\":1}}],[\"所以transform\",{\"1\":{\"454\":1}}],[\"所以margin\",{\"1\":{\"383\":1}}],[\"所学知识沉淀汇总\",{\"1\":{\"340\":1,\"476\":1,\"811\":1}}],[\"所有执行器\",{\"1\":{\"975\":1}}],[\"所有节点访问同一份最新的数据副本\",{\"1\":{\"933\":1}}],[\"所有键中筛选\",{\"1\":{\"832\":1}}],[\"所有用户均可签到\",{\"1\":{\"823\":1}}],[\"所有对数据的修改都会先写入redo\",{\"1\":{\"802\":1}}],[\"所有加锁的select\",{\"1\":{\"797\":1}}],[\"所有值的顺序从最优到最差排序为\",{\"1\":{\"796\":1}}],[\"所有需要查询的字段的值\",{\"1\":{\"793\":1}}],[\"所有被同步锁持有的对象\",{\"1\":{\"687\":1}}],[\"所有一个更好的\",{\"1\":{\"521\":1}}],[\"所有属性都不执行动画\",{\"1\":{\"456\":1}}],[\"所有属性都执行动画\",{\"1\":{\"456\":1}}],[\"所有的任务调度指令都由调度中心统一发出\",{\"1\":{\"975\":1}}],[\"所有的请求都会先经过dispatcherservlet\",{\"1\":{\"895\":1}}],[\"所有的键值对的健和值的字符串长度都小于等于\",{\"1\":{\"853\":1}}],[\"所有的事物依次逐个执行\",{\"1\":{\"781\":1}}],[\"所有的后代\",{\"1\":{\"370\":1}}],[\"所有的行为都需要符合人物性格\",{\"1\":{\"134\":1}}],[\"所有色彩都是建立在光影之上\",{\"1\":{\"289\":1}}],[\"job通过中心化的调度策略结合数据库的原子操作和分布式锁机制\",{\"1\":{\"975\":1}}],[\"job是如何保证分布式下只有一个任务执行的\",{\"0\":{\"975\":1}}],[\"job可能更适合\",{\"1\":{\"974\":1}}],[\"job可能是更好的选择\",{\"1\":{\"974\":1}}],[\"job的功能更加全面和强大\",{\"1\":{\"974\":1}}],[\"job的区别\",{\"0\":{\"974\":1}}],[\"job\",{\"0\":{\"973\":1,\"974\":1},\"1\":{\"974\":7,\"975\":4}}],[\"john\",{\"1\":{\"798\":2}}],[\"join\",{\"0\":{\"748\":1},\"1\":{\"670\":5,\"748\":2,\"796\":1}}],[\"jyaq\",{\"1\":{\"751\":1}}],[\"jvisualvm来实时查看jvm状态\",{\"1\":{\"735\":1}}],[\"jvm系统属性\",{\"1\":{\"926\":1}}],[\"jvm优化之jit优化\",{\"1\":{\"738\":1}}],[\"jvm常见参数总结\",{\"0\":{\"718\":1}}],[\"jvm内置三个加载器\",{\"1\":{\"714\":1}}],[\"jvm知识梳理\",{\"0\":{\"676\":1}}],[\"jvm\",{\"0\":{\"594\":1,\"675\":1},\"1\":{\"594\":1,\"610\":1,\"714\":1,\"726\":1,\"727\":1,\"730\":1,\"811\":1},\"2\":{\"740\":1}}],[\"jconsole\",{\"0\":{\"732\":1}}],[\"jhat\",{\"0\":{\"730\":1}}],[\"jmap\",{\"0\":{\"729\":1},\"1\":{\"729\":6,\"735\":1}}],[\"jmm将内存屏障插入策略分为4种\",{\"1\":{\"659\":1}}],[\"jmm\",{\"1\":{\"657\":1}}],[\"jmm内存模型\",{\"0\":{\"657\":1}}],[\"jar到服务器\",{\"1\":{\"738\":1}}],[\"jar等\",{\"1\":{\"714\":1}}],[\"jar\",{\"1\":{\"714\":5,\"721\":2,\"724\":2,\"726\":2,\"738\":3,\"892\":1,\"926\":1}}],[\"java配置类等\",{\"1\":{\"884\":1}}],[\"java对象\",{\"1\":{\"884\":1}}],[\"java监视与管理控制台\",{\"1\":{\"732\":1}}],[\"java7之前\",{\"1\":{\"683\":1}}],[\"java没有给中断增加任何语法\",{\"1\":{\"671\":1}}],[\"java锁\",{\"0\":{\"660\":1}}],[\"java内存模型的重排规则会要求java编译器在生成jvm指令时插入特定的内存屏障指令\",{\"1\":{\"659\":1}}],[\"java线程的生命周期和状态\",{\"0\":{\"651\":1}}],[\"java集合总结\",{\"1\":{\"614\":1}}],[\"java集合\",{\"0\":{\"614\":1},\"1\":{\"811\":1}}],[\"java编译器会自动装箱和拆箱\",{\"1\":{\"599\":1}}],[\"java运行环境\",{\"1\":{\"594\":1}}],[\"java虚拟机的堆内存设置不够\",{\"1\":{\"683\":1}}],[\"java虚拟机\",{\"1\":{\"594\":1}}],[\"java程序环境的工具包\",{\"1\":{\"594\":1}}],[\"java基础总结\",{\"1\":{\"593\":1}}],[\"java基础\",{\"0\":{\"593\":1},\"1\":{\"811\":1}}],[\"java反射\",{\"0\":{\"583\":1}}],[\"java进阶总结\",{\"1\":{\"570\":1}}],[\"java进阶\",{\"0\":{\"570\":1},\"1\":{\"811\":1}}],[\"java的stack最大的问题是继承了vector这个类\",{\"1\":{\"521\":1}}],[\"java的stack类到底怎么了\",{\"1\":{\"521\":1}}],[\"java的stack有什么问题\",{\"0\":{\"521\":1}}],[\"java官方说的\",{\"1\":{\"521\":1}}],[\"java相关\",{\"0\":{\"334\":1}}],[\"java\",{\"0\":{\"587\":1,\"598\":1,\"811\":1},\"1\":{\"310\":1,\"505\":1,\"514\":1,\"521\":1,\"522\":8,\"523\":3,\"588\":5,\"594\":1,\"610\":1,\"625\":3,\"662\":1,\"671\":1,\"682\":1,\"683\":2,\"687\":1,\"700\":1,\"714\":3,\"719\":4,\"721\":1,\"724\":1,\"726\":1,\"728\":1,\"737\":6,\"738\":1,\"842\":1,\"916\":1},\"2\":{\"569\":1,\"592\":1,\"613\":1,\"647\":1,\"674\":1,\"929\":1}}],[\"jni\",{\"1\":{\"687\":1}}],[\"juc内容\",{\"2\":{\"673\":1}}],[\"juc\",{\"0\":{\"648\":1},\"1\":{\"811\":1}}],[\"justify\",{\"0\":{\"444\":1},\"1\":{\"358\":1,\"440\":1,\"444\":1,\"453\":1,\"455\":1}}],[\"jit相关的\",{\"1\":{\"727\":1}}],[\"jit编译等运行数据\",{\"1\":{\"727\":1}}],[\"jit\",{\"0\":{\"594\":1},\"1\":{\"594\":1}}],[\"jinfo等\",{\"1\":{\"735\":1}}],[\"jinfo\",{\"0\":{\"337\":1,\"728\":1},\"1\":{\"700\":1,\"720\":1,\"721\":1,\"723\":1,\"728\":5}}],[\"jre\",{\"0\":{\"594\":1},\"1\":{\"594\":1,\"714\":1}}],[\"jdk的动态代理主要涉及java\",{\"1\":{\"892\":1}}],[\"jdk9以后已经被删除\",{\"1\":{\"730\":1}}],[\"jdk9默认的垃圾回收器\",{\"1\":{\"708\":1}}],[\"jdk监控和故障工具总结\",{\"0\":{\"725\":1}}],[\"jdk8默认的垃圾回收器\",{\"1\":{\"704\":1}}],[\"jdk1\",{\"1\":{\"664\":1,\"672\":2}}],[\"jdk\",{\"0\":{\"594\":1},\"1\":{\"594\":1,\"714\":1,\"732\":1,\"972\":1}}],[\"jdk动态代理是利用反射机制生成一个实现代理接口的匿名类\",{\"1\":{\"892\":1}}],[\"jdk动态代理和cglib代理\",{\"1\":{\"892\":1}}],[\"jdk动态代理\",{\"1\":{\"589\":1,\"892\":1}}],[\"jdkproxyfactory\",{\"1\":{\"588\":2}}],[\"jdk代理\",{\"0\":{\"588\":1}}],[\"j=\",{\"1\":{\"532\":1}}],[\"j=i\",{\"1\":{\"527\":1,\"528\":1,\"531\":1}}],[\"j=i+1\",{\"1\":{\"490\":1}}],[\"j也可以从0开始\",{\"1\":{\"490\":1}}],[\"j\",{\"1\":{\"490\":2,\"497\":12,\"527\":5,\"528\":5,\"531\":9,\"532\":7}}],[\"j++\",{\"1\":{\"490\":1,\"527\":1,\"528\":1}}],[\"j<arr\",{\"1\":{\"490\":1,\"527\":1,\"528\":1}}],[\"jstat\",{\"0\":{\"727\":1},\"1\":{\"727\":3}}],[\"jstack查看堆栈信息\",{\"1\":{\"735\":1}}],[\"jstack\",{\"0\":{\"336\":1,\"731\":1},\"1\":{\"731\":2,\"735\":1,\"738\":3}}],[\"jstx\",{\"1\":{\"558\":1}}],[\"json\",{\"1\":{\"557\":5,\"916\":1}}],[\"jsdelivr\",{\"1\":{\"469\":1}}],[\"jpa\",{\"1\":{\"923\":1}}],[\"jpg\",{\"1\":{\"398\":1,\"403\":2}}],[\"jps\",{\"0\":{\"335\":1,\"726\":1},\"1\":{\"726\":3,\"738\":1}}],[\"||\",{\"1\":{\"497\":1,\"504\":4,\"507\":1,\"509\":1,\"513\":4,\"514\":2,\"516\":4,\"539\":4,\"645\":1}}],[\"|flex\",{\"1\":{\"452\":2}}],[\"|900\",{\"1\":{\"363\":1}}],[\"|800\",{\"1\":{\"363\":1}}],[\"|500|\",{\"1\":{\"363\":1}}],[\"|\",{\"1\":{\"332\":1,\"333\":1,\"363\":2,\"452\":1,\"558\":1,\"738\":1,\"796\":39}}],[\"系统环境变量\",{\"1\":{\"926\":1}}],[\"系统调用\",{\"1\":{\"867\":1}}],[\"系统调用栈\",{\"1\":{\"514\":1}}],[\"系统当前未提交的事务id的列表\",{\"1\":{\"797\":1}}],[\"系统变量所指定的路径下的所有类\",{\"1\":{\"714\":1}}],[\"系统内存充足不会被回收\",{\"1\":{\"663\":1}}],[\"系统信息\",{\"1\":{\"590\":1}}],[\"系统平均负载情况\",{\"1\":{\"329\":1}}],[\"系统已经运行的时间\",{\"1\":{\"329\":1}}],[\"系统的平均负载等信息\",{\"1\":{\"329\":1}}],[\"系统状态\",{\"0\":{\"327\":1}}],[\"n表示节点数\",{\"1\":{\"872\":1}}],[\"nio都使用的是epoll\",{\"1\":{\"869\":1}}],[\"nginx\",{\"1\":{\"869\":1}}],[\"nginx分布式微服务\",{\"1\":{\"840\":1}}],[\"n次就绪状态的文件描述符的\",{\"1\":{\"867\":1}}],[\"n状态\",{\"1\":{\"823\":1}}],[\"nx\",{\"1\":{\"817\":2}}],[\"n=6\",{\"1\":{\"669\":1}}],[\"n>\",{\"1\":{\"579\":1}}],[\"n个结果\",{\"1\":{\"562\":1}}],[\"null来判断\",{\"1\":{\"764\":1}}],[\"null会影响聚合函数的结果\",{\"1\":{\"764\":1}}],[\"null值\",{\"1\":{\"628\":1}}],[\"null\",{\"0\":{\"764\":1},\"1\":{\"497\":1,\"504\":10,\"506\":11,\"507\":10,\"509\":5,\"517\":1,\"518\":1,\"519\":1,\"520\":2,\"663\":4,\"670\":4,\"714\":1,\"746\":1,\"751\":4,\"753\":2,\"764\":2,\"796\":7,\"808\":2,\"822\":1}}],[\"num2\",{\"1\":{\"587\":5}}],[\"num1\",{\"1\":{\"587\":5,\"600\":1}}],[\"num\",{\"1\":{\"497\":2,\"746\":1,\"807\":3}}],[\"nums\",{\"1\":{\"489\":4,\"491\":1,\"493\":3,\"494\":17,\"497\":24,\"507\":4}}],[\"number\",{\"1\":{\"452\":1,\"461\":1,\"557\":2,\"565\":1,\"580\":1,\"807\":1,\"808\":1}}],[\"npm\",{\"1\":{\"469\":1}}],[\"nacosconfigservice\",{\"1\":{\"972\":1}}],[\"nacos动态刷新底层实现\",{\"0\":{\"972\":1}}],[\"nacos通过一套高效可靠的消息通信机制\",{\"1\":{\"971\":1}}],[\"nacos还提供了dns服务发现模式\",{\"1\":{\"971\":1}}],[\"nacos还会根据策略进一步过滤和排序服务实例列表\",{\"1\":{\"971\":1}}],[\"nacos支持主动健康检查\",{\"1\":{\"971\":1}}],[\"nacos服务注册发现的原理\",{\"0\":{\"971\":1}}],[\"nacos的心跳默认是5秒\",{\"1\":{\"970\":1}}],[\"nacos的心跳机制\",{\"0\":{\"970\":1}}],[\"nacos\",{\"0\":{\"969\":1},\"1\":{\"931\":2,\"933\":1,\"970\":10,\"971\":5,\"972\":7}}],[\"native\",{\"1\":{\"687\":2,\"737\":1}}],[\"nanotime\",{\"1\":{\"505\":2}}],[\"nav\",{\"1\":{\"459\":1}}],[\"name2`\",{\"1\":{\"753\":2}}],[\"name2\",{\"1\":{\"753\":2}}],[\"name来声明匹配\",{\"1\":{\"457\":1}}],[\"name=trim\",{\"1\":{\"808\":1}}],[\"name=value\",{\"1\":{\"728\":1}}],[\"name=\",{\"1\":{\"358\":1,\"387\":3,\"410\":2,\"416\":1,\"423\":1,\"425\":2,\"431\":3,\"436\":1,\"441\":1,\"442\":1,\"453\":1,\"461\":1,\"960\":1}}],[\"name\",{\"1\":{\"318\":1,\"457\":3,\"557\":2,\"575\":5,\"600\":1,\"603\":2,\"715\":3,\"728\":2,\"746\":2,\"751\":2,\"753\":4,\"793\":3,\"798\":1,\"807\":5,\"808\":6,\"888\":1,\"919\":5,\"936\":1}}],[\"nested\",{\"1\":{\"898\":1}}],[\"never\",{\"1\":{\"898\":1}}],[\"net\",{\"1\":{\"469\":1}}],[\"nextline\",{\"1\":{\"573\":1}}],[\"nextint\",{\"1\":{\"505\":1,\"670\":1,\"822\":4}}],[\"nextpermutation\",{\"1\":{\"497\":1}}],[\"next\",{\"1\":{\"431\":2,\"503\":1,\"504\":24,\"506\":9,\"507\":21,\"509\":11,\"785\":1}}],[\"newgeoradiusargs\",{\"1\":{\"824\":2}}],[\"newratio\",{\"1\":{\"738\":1}}],[\"newcondition\",{\"1\":{\"671\":3}}],[\"newcachedthreadpool\",{\"1\":{\"664\":1}}],[\"newcap\",{\"1\":{\"645\":1}}],[\"newcapacity\",{\"1\":{\"513\":2,\"516\":2,\"517\":2,\"518\":2,\"519\":2,\"520\":2,\"623\":1}}],[\"newworkstealingpool\",{\"1\":{\"664\":1}}],[\"newscheduledthreadpool\",{\"1\":{\"664\":1}}],[\"newsinglethreadexecutor\",{\"1\":{\"664\":1}}],[\"newfixedthreadpool\",{\"1\":{\"664\":2}}],[\"newproxyinstance\",{\"1\":{\"588\":2}}],[\"newdata\",{\"1\":{\"513\":3,\"516\":3,\"517\":3,\"518\":3,\"519\":3,\"520\":3}}],[\"new\",{\"0\":{\"610\":1},\"1\":{\"404\":1,\"490\":2,\"491\":3,\"494\":1,\"504\":10,\"505\":5,\"506\":6,\"507\":8,\"513\":14,\"514\":1,\"516\":14,\"517\":6,\"518\":6,\"519\":6,\"520\":8,\"521\":2,\"522\":8,\"523\":7,\"539\":9,\"573\":2,\"586\":1,\"588\":2,\"599\":1,\"606\":2,\"610\":3,\"611\":3,\"623\":2,\"633\":1,\"645\":2,\"651\":1,\"658\":1,\"663\":10,\"664\":5,\"666\":2,\"667\":4,\"668\":2,\"670\":6,\"671\":26,\"683\":1,\"703\":1,\"737\":1,\"822\":3,\"824\":5,\"889\":1,\"898\":1,\"907\":1,\"908\":1}}],[\"n代表任意正整数和0\",{\"1\":{\"373\":2}}],[\"nth\",{\"1\":{\"373\":16,\"431\":1}}],[\"noeviction\",{\"1\":{\"832\":1}}],[\"node<k\",{\"1\":{\"644\":1}}],[\"nodes参数\",{\"1\":{\"564\":1}}],[\"nodes设置\",{\"1\":{\"564\":1}}],[\"node\",{\"1\":{\"503\":3,\"504\":28,\"506\":11,\"566\":2,\"640\":1}}],[\"nono\",{\"1\":{\"460\":1}}],[\"none\",{\"1\":{\"355\":1,\"379\":1,\"380\":1,\"388\":1,\"406\":2,\"420\":1,\"429\":1,\"431\":2,\"433\":1,\"452\":1,\"456\":1,\"457\":1,\"460\":1}}],[\"no\",{\"1\":{\"398\":1,\"399\":1,\"419\":1,\"575\":1,\"728\":1,\"796\":5,\"861\":1}}],[\"nowrap\",{\"1\":{\"395\":1,\"442\":1,\"462\":2,\"469\":4}}],[\"notempty\",{\"1\":{\"919\":1}}],[\"notify\",{\"1\":{\"671\":3}}],[\"notifyall\",{\"1\":{\"653\":1}}],[\"not\",{\"1\":{\"373\":3,\"466\":1,\"507\":1,\"559\":1,\"746\":1,\"751\":5,\"753\":1,\"764\":1,\"898\":1}}],[\"normal\",{\"1\":{\"363\":1,\"364\":1,\"445\":1,\"457\":1,\"462\":1,\"671\":4}}],[\"n\",{\"1\":{\"328\":1,\"373\":2,\"484\":4,\"493\":1,\"494\":2,\"513\":1,\"516\":1,\"517\":1,\"518\":1,\"519\":1,\"520\":1,\"522\":9,\"530\":1,\"539\":1,\"564\":1,\"580\":1,\"599\":1,\"622\":2,\"632\":1,\"637\":2,\"664\":1,\"669\":2,\"738\":1,\"868\":1,\"872\":1}}],[\"v>>\",{\"1\":{\"644\":1}}],[\"v>\",{\"1\":{\"644\":4,\"645\":1}}],[\"volatile实现了java内存模型中的可见性和有序性\",{\"1\":{\"659\":1}}],[\"volatile凭什么可以保证可见性和有序性\",{\"1\":{\"658\":1}}],[\"volatile\",{\"0\":{\"658\":1},\"1\":{\"658\":1,\"659\":2,\"671\":1,\"832\":4}}],[\"votes\",{\"1\":{\"564\":1}}],[\"voting\",{\"1\":{\"564\":1}}],[\"void\",{\"1\":{\"497\":3,\"504\":4,\"505\":4,\"506\":3,\"507\":2,\"512\":1,\"513\":10,\"514\":1,\"516\":11,\"517\":4,\"518\":3,\"519\":3,\"520\":4,\"522\":6,\"523\":4,\"527\":2,\"528\":3,\"531\":1,\"532\":1,\"539\":6,\"579\":1,\"582\":1,\"587\":2,\"600\":1,\"661\":4,\"663\":6,\"666\":1,\"667\":4,\"668\":1,\"670\":12,\"671\":12,\"822\":1,\"833\":1,\"926\":1}}],[\"vector\",{\"1\":{\"619\":1}}],[\"vector<e>\",{\"1\":{\"521\":2}}],[\"verification\",{\"1\":{\"712\":1}}],[\"version\",{\"1\":{\"504\":1,\"505\":2,\"506\":1,\"513\":3,\"514\":1,\"516\":3,\"517\":1,\"522\":4,\"523\":3,\"539\":1,\"565\":1,\"700\":1,\"719\":3,\"797\":1}}],[\"vertical\",{\"0\":{\"458\":1},\"1\":{\"349\":1,\"396\":1,\"458\":3}}],[\"vm相对于rem的优势\",{\"1\":{\"473\":1}}],[\"vm\",{\"0\":{\"733\":1},\"1\":{\"473\":1,\"737\":1}}],[\"vscode插件\",{\"1\":{\"472\":1}}],[\"vscode内置了emmet语法\",{\"1\":{\"413\":1}}],[\"vh相对于视口的高度\",{\"1\":{\"467\":1}}],[\"vh\",{\"1\":{\"467\":1}}],[\"vw相对于rem更加语义化\",{\"1\":{\"473\":1}}],[\"vw相对于视口的宽度\",{\"1\":{\"467\":1}}],[\"vw单位\",{\"1\":{\"471\":1}}],[\"vw\",{\"1\":{\"467\":1}}],[\"valid\",{\"1\":{\"514\":2}}],[\"val\",{\"1\":{\"507\":13,\"509\":4}}],[\"value2\",{\"1\":{\"819\":1}}],[\"value1\",{\"1\":{\"819\":1,\"820\":1}}],[\"valueof\",{\"1\":{\"666\":1,\"667\":2,\"668\":1}}],[\"value值\",{\"1\":{\"640\":1}}],[\"value是无序\",{\"1\":{\"617\":1}}],[\"values\",{\"1\":{\"575\":1}}],[\"value\",{\"0\":{\"918\":1},\"1\":{\"505\":1,\"558\":5,\"580\":1,\"617\":1,\"633\":2,\"663\":3,\"664\":1,\"794\":2,\"817\":3,\"818\":4,\"820\":3,\"823\":1,\"824\":5,\"840\":1,\"853\":2,\"856\":1,\"889\":1,\"896\":1,\"915\":1,\"918\":2,\"920\":1,\"951\":2,\"963\":2,\"972\":1}}],[\"value=\",{\"1\":{\"410\":6,\"461\":3,\"960\":1}}],[\"varchar2\",{\"1\":{\"807\":4,\"808\":2}}],[\"varchar\",{\"1\":{\"751\":1,\"753\":2}}],[\"variables\",{\"1\":{\"469\":1,\"682\":1}}],[\"variant\",{\"1\":{\"366\":2}}],[\"var\",{\"1\":{\"463\":3}}],[\"viewresolver\",{\"1\":{\"894\":1}}],[\"view的事务id\",{\"1\":{\"797\":1}}],[\"view\",{\"1\":{\"776\":1,\"797\":2,\"895\":2}}],[\"viewport进行宽度和缩放的设置\",{\"1\":{\"470\":1}}],[\"viewport并不适合我们进行布局\",{\"1\":{\"470\":1}}],[\"viewport\",{\"1\":{\"358\":1,\"387\":3,\"416\":1,\"423\":1,\"424\":1,\"425\":2,\"431\":3,\"436\":1,\"441\":1,\"442\":1,\"453\":1}}],[\"visual\",{\"0\":{\"733\":1}}],[\"visibility\",{\"1\":{\"380\":1,\"433\":1}}],[\"visited后面才能完全生效\",{\"1\":{\"373\":1}}],[\"visited\",{\"1\":{\"373\":3}}],[\"video>\",{\"1\":{\"460\":1}}],[\"video\",{\"0\":{\"460\":1},\"1\":{\"460\":2}}],[\"vim\",{\"0\":{\"324\":1}}],[\"v\",{\"1\":{\"326\":1,\"521\":1,\"580\":1,\"669\":5,\"670\":6,\"726\":1}}],[\"xid\",{\"1\":{\"968\":1}}],[\"xa\",{\"1\":{\"968\":1}}],[\"xss\",{\"1\":{\"737\":1,\"738\":1}}],[\"xss128k\",{\"1\":{\"720\":1}}],[\"xbootclasspath参数指定的路径下的所有类\",{\"1\":{\"714\":1}}],[\"xml等\",{\"1\":{\"953\":1}}],[\"xml方式\",{\"1\":{\"889\":1}}],[\"xmn2g\",{\"1\":{\"721\":1}}],[\"xmx\",{\"1\":{\"737\":1,\"738\":2}}],[\"xmx50m是启动程序指定的jvm参数\",{\"1\":{\"726\":1}}],[\"xmx4g\",{\"1\":{\"721\":1}}],[\"xmx4000m\",{\"1\":{\"721\":1}}],[\"xmx来调整\",{\"1\":{\"683\":1}}],[\"xmx10m\",{\"1\":{\"663\":2}}],[\"xms和xmx为啥要设置成一样\",{\"1\":{\"738\":1}}],[\"xms20m\",{\"1\":{\"726\":1}}],[\"xms2g\",{\"1\":{\"721\":1}}],[\"xms4000m\",{\"1\":{\"721\":1}}],[\"xms\",{\"1\":{\"683\":1,\"738\":1}}],[\"xms10m\",{\"1\":{\"663\":2}}],[\"xyzxyz\",{\"1\":{\"610\":3}}],[\"xyz\",{\"1\":{\"610\":4}}],[\"x以后版本中类型已弃用\",{\"1\":{\"561\":1}}],[\"xv\",{\"1\":{\"464\":2}}],[\"x是一个简单选择器\",{\"1\":{\"373\":1}}],[\"x\",{\"1\":{\"326\":1,\"373\":1,\"390\":1,\"399\":1,\"403\":1,\"454\":5,\"468\":1,\"507\":2,\"509\":4,\"522\":13,\"523\":9,\"557\":2,\"670\":2,\"738\":1}}],[\"xxl\",{\"0\":{\"973\":1,\"974\":1,\"975\":1},\"1\":{\"974\":2,\"975\":5}}],[\"xx\",{\"1\":{\"684\":1,\"690\":1,\"700\":1,\"702\":1,\"703\":1,\"704\":1,\"708\":1,\"719\":8,\"720\":1,\"721\":3,\"722\":1,\"723\":3,\"724\":2,\"737\":1,\"738\":8,\"817\":2}}],[\"xx模特\",{\"1\":{\"122\":2}}],[\"xx民宿\",{\"1\":{\"121\":1}}],[\"xx摄影工作室\",{\"1\":{\"121\":1}}],[\"xxx包实现起步依赖\",{\"1\":{\"923\":1}}],[\"xxx2\",{\"1\":{\"362\":1}}],[\"xxx1\",{\"1\":{\"362\":1}}],[\"xxx\",{\"1\":{\"362\":1}}],[\"xxx摄影场地\",{\"1\":{\"121\":1}}],[\"xxx铁轨拍照\",{\"1\":{\"121\":1}}],[\"xxx网红拍照打卡\",{\"1\":{\"121\":1}}],[\"xx公园拍照\",{\"1\":{\"121\":1}}],[\"xx天台拍照\",{\"1\":{\"121\":1}}],[\"xx近郊游\",{\"1\":{\"121\":1}}],[\"xx周末游\",{\"1\":{\"121\":1}}],[\"xx拍照\",{\"1\":{\"121\":1,\"122\":2}}],[\"xx约拍\",{\"1\":{\"121\":1,\"122\":3}}],[\"zookeeper\",{\"1\":{\"933\":2}}],[\"zookeeper保证的是cp\",{\"1\":{\"933\":1}}],[\"zoom\",{\"1\":{\"433\":1}}],[\"zipkin\",{\"1\":{\"931\":1}}],[\"ziplist压缩配置\",{\"1\":{\"854\":1}}],[\"ziplist在entry配置\",{\"1\":{\"854\":1}}],[\"ziplist是一个经过特殊编码的双向链表\",{\"1\":{\"853\":1}}],[\"ziplist升级到hashtable可以\",{\"1\":{\"853\":1}}],[\"ziplist\",{\"1\":{\"853\":6,\"854\":1,\"856\":3}}],[\"zincrby\",{\"1\":{\"821\":3}}],[\"zrevrange\",{\"1\":{\"821\":2}}],[\"zrevrank\",{\"1\":{\"821\":1}}],[\"zrank\",{\"1\":{\"821\":1}}],[\"zadd\",{\"1\":{\"821\":1}}],[\"zset底层结构\",{\"0\":{\"856\":1}}],[\"zset\",{\"0\":{\"821\":1},\"1\":{\"856\":3}}],[\"zgc的工作过程可以分为4个阶段\",{\"1\":{\"709\":1}}],[\"zgc\",{\"0\":{\"709\":1},\"1\":{\"709\":1}}],[\"zen\",{\"1\":{\"564\":2}}],[\"zcvf\",{\"1\":{\"326\":1}}],[\"zxvf\",{\"1\":{\"326\":2}}],[\"z\",{\"0\":{\"427\":1},\"1\":{\"326\":1,\"427\":2}}],[\"z张照片\",{\"1\":{\"19\":1}}],[\"tm\",{\"1\":{\"967\":5,\"968\":5}}],[\"tc\",{\"1\":{\"967\":6,\"968\":6}}],[\"tcc的执行流程可以分为两个阶段\",{\"1\":{\"942\":1}}],[\"tcc\",{\"1\":{\"942\":1,\"968\":1}}],[\"tcc了解么\",{\"0\":{\"942\":1}}],[\"tcp的三次握手和四次挥手\",{\"0\":{\"552\":1}}],[\"tcp首部开销20\",{\"1\":{\"550\":1}}],[\"tcp和udp的区别\",{\"0\":{\"550\":1}}],[\"tcp连接\",{\"1\":{\"547\":1}}],[\"tcp\",{\"0\":{\"545\":1},\"1\":{\"546\":1,\"550\":8,\"551\":2,\"552\":1,\"970\":2}}],[\"tx\",{\"1\":{\"782\":1}}],[\"txt\",{\"1\":{\"318\":1,\"319\":2,\"320\":2,\"326\":1,\"573\":1}}],[\"ttl\",{\"1\":{\"832\":2}}],[\"tt\",{\"1\":{\"738\":1}}],[\"ttf\",{\"1\":{\"417\":1}}],[\"tunnel\",{\"1\":{\"738\":1}}],[\"t参数\",{\"1\":{\"727\":1}}],[\"t2\",{\"1\":{\"671\":6}}],[\"t1先notify了\",{\"1\":{\"671\":1}}],[\"t1\",{\"1\":{\"671\":15,\"822\":1}}],[\"t上完自习\",{\"1\":{\"667\":2}}],[\"t>\",{\"1\":{\"581\":2}}],[\"tf\",{\"1\":{\"563\":1}}],[\"tfoot\",{\"1\":{\"408\":1}}],[\"tls之上\",{\"1\":{\"549\":1}}],[\"twosum\",{\"1\":{\"490\":1,\"491\":1}}],[\"t\",{\"1\":{\"484\":1,\"527\":2,\"528\":2,\"531\":2,\"532\":3,\"579\":8,\"580\":1,\"625\":2,\"663\":1,\"667\":2,\"670\":7,\"671\":13,\"727\":1,\"738\":1}}],[\"tidb等\",{\"1\":{\"977\":1}}],[\"tinyint\",{\"1\":{\"755\":1}}],[\"timestamp\",{\"1\":{\"751\":3}}],[\"timeunit\",{\"1\":{\"662\":1,\"663\":5,\"664\":2,\"666\":1,\"667\":1,\"670\":8,\"671\":10,\"822\":1,\"840\":1}}],[\"timeoutinmilliseconds\",{\"1\":{\"960\":1}}],[\"timeouthandler\",{\"1\":{\"960\":1}}],[\"timeout\",{\"1\":{\"662\":1,\"667\":1,\"670\":1,\"960\":1,\"970\":2}}],[\"time2\",{\"1\":{\"505\":1}}],[\"time\",{\"1\":{\"461\":1,\"484\":1,\"505\":1,\"651\":1,\"670\":3,\"708\":1,\"738\":1,\"751\":2}}],[\"timing\",{\"1\":{\"456\":2,\"457\":3}}],[\"title\",{\"1\":{\"369\":1,\"463\":1}}],[\"title=div\",{\"1\":{\"369\":1}}],[\"title=\",{\"1\":{\"369\":2}}],[\"title>\",{\"1\":{\"358\":1,\"387\":3,\"416\":1,\"423\":1,\"425\":2,\"431\":3,\"436\":1,\"441\":1,\"442\":1,\"453\":1}}],[\"tbody\",{\"1\":{\"408\":1}}],[\"thymeleaf\",{\"1\":{\"895\":1}}],[\"that\",{\"1\":{\"522\":2}}],[\"this\",{\"1\":{\"504\":6,\"506\":4,\"507\":3,\"513\":2,\"516\":2,\"517\":1,\"518\":1,\"519\":1,\"520\":1,\"539\":2,\"575\":2,\"579\":2,\"588\":1,\"603\":1,\"645\":5,\"661\":1,\"824\":5}}],[\"threadstacksize\",{\"1\":{\"720\":1}}],[\"threadfactory\",{\"1\":{\"664\":3}}],[\"threadpool\",{\"1\":{\"664\":2}}],[\"threadpoolholder\",{\"1\":{\"664\":2}}],[\"threadpoolexecutor\",{\"1\":{\"664\":6}}],[\"threadpooltaskexecutor\",{\"1\":{\"664\":3}}],[\"thread\",{\"1\":{\"663\":3,\"666\":3,\"667\":6,\"668\":1,\"670\":7,\"671\":36,\"737\":1,\"738\":3,\"822\":1,\"960\":1}}],[\"thread类源码\",{\"1\":{\"663\":1}}],[\"threadlocalrandom\",{\"1\":{\"670\":1}}],[\"threadlocal方法后最好手动调用remove\",{\"1\":{\"663\":1}}],[\"threadlocals\",{\"1\":{\"663\":1}}],[\"threadlocalmap关系\",{\"1\":{\"663\":1}}],[\"threadlocalmap\",{\"1\":{\"663\":4}}],[\"threadlocal<simpledateformat>\",{\"1\":{\"663\":1}}],[\"threadlocal\",{\"0\":{\"663\":1},\"1\":{\"663\":8}}],[\"threshold\",{\"1\":{\"644\":3,\"645\":2,\"738\":1}}],[\"threesum\",{\"1\":{\"494\":1}}],[\"throws\",{\"1\":{\"588\":1,\"663\":1,\"667\":3,\"670\":1}}],[\"throwable\",{\"1\":{\"571\":1,\"663\":1}}],[\"throw\",{\"1\":{\"504\":4,\"506\":2,\"507\":1,\"513\":6,\"516\":6,\"517\":2,\"518\":2,\"519\":2,\"520\":4,\"539\":6,\"645\":2,\"670\":6,\"671\":4}}],[\"throughput\",{\"1\":{\"704\":1}}],[\"through\",{\"1\":{\"355\":1}}],[\"then\",{\"1\":{\"753\":2,\"807\":1}}],[\"thencombineresult\",{\"1\":{\"670\":2}}],[\"thencombine\",{\"1\":{\"670\":2}}],[\"thenrun\",{\"1\":{\"670\":2}}],[\"thenaccept\",{\"1\":{\"670\":3}}],[\"thenapply\",{\"1\":{\"670\":7}}],[\"the\",{\"1\":{\"522\":8,\"523\":1,\"693\":1,\"707\":1,\"710\":2,\"807\":1}}],[\"themecolor\",{\"1\":{\"469\":4}}],[\"thead\",{\"1\":{\"408\":1}}],[\"th\",{\"1\":{\"408\":1}}],[\"td>\",{\"1\":{\"409\":3}}],[\"td\",{\"1\":{\"408\":1}}],[\"tasks\",{\"1\":{\"667\":1}}],[\"task\",{\"1\":{\"664\":1,\"667\":3,\"670\":4}}],[\"tail+1\",{\"1\":{\"517\":1}}],[\"tail\",{\"1\":{\"506\":10,\"516\":1,\"517\":13,\"518\":8,\"519\":18,\"520\":16}}],[\"tab\",{\"1\":{\"462\":1}}],[\"tables\",{\"1\":{\"807\":1}}],[\"tablesizefor\",{\"1\":{\"645\":2}}],[\"table`\",{\"1\":{\"751\":1,\"753\":2}}],[\"table>\",{\"1\":{\"409\":1}}],[\"table\",{\"1\":{\"408\":1,\"640\":1,\"644\":1,\"745\":2,\"751\":1,\"753\":16,\"754\":1,\"755\":1,\"756\":1,\"758\":1,\"760\":1,\"789\":2,\"793\":4,\"796\":2,\"798\":1,\"807\":13,\"808\":14}}],[\"targetobject\",{\"1\":{\"586\":4}}],[\"target\",{\"1\":{\"373\":1,\"489\":2,\"490\":2,\"491\":2,\"579\":1,\"582\":4,\"588\":9}}],[\"tar文件\",{\"1\":{\"326\":1}}],[\"tar\",{\"0\":{\"326\":1},\"1\":{\"326\":6}}],[\"type和indices\",{\"1\":{\"567\":1}}],[\"type有很多值\",{\"1\":{\"410\":1}}],[\"type=web\",{\"1\":{\"915\":2}}],[\"type=\",{\"1\":{\"410\":6,\"461\":1}}],[\"type\",{\"1\":{\"373\":4,\"557\":13,\"558\":1,\"575\":3,\"580\":1,\"796\":4,\"808\":2,\"851\":1,\"915\":2,\"916\":1}}],[\"trx\",{\"1\":{\"797\":3}}],[\"truncate\",{\"1\":{\"745\":1}}],[\"truncate的区别\",{\"0\":{\"745\":1}}],[\"truncation\",{\"1\":{\"745\":1}}],[\"true为公平锁\",{\"1\":{\"662\":1}}],[\"true且满足其他特定条件\",{\"1\":{\"564\":1}}],[\"true\",{\"1\":{\"504\":1,\"513\":1,\"514\":2,\"516\":1,\"539\":1,\"606\":3,\"609\":1,\"611\":4,\"671\":4,\"833\":1}}],[\"trace由一系列的span组成\",{\"1\":{\"977\":1}}],[\"trace\",{\"1\":{\"738\":1}}],[\"transferserviceimpl\",{\"1\":{\"908\":1}}],[\"transferservice\",{\"1\":{\"908\":2}}],[\"transform等\",{\"1\":{\"456\":1}}],[\"transform属性的语法\",{\"1\":{\"454\":1}}],[\"transform\",{\"0\":{\"356\":1,\"454\":1},\"1\":{\"416\":2,\"454\":9,\"455\":1,\"456\":2,\"457\":4}}],[\"transient\",{\"1\":{\"644\":4}}],[\"transition需要在特定状态下触发才能执行\",{\"1\":{\"457\":1}}],[\"transition不能重复执行\",{\"1\":{\"457\":1}}],[\"transitions\",{\"1\":{\"456\":1}}],[\"transition提供了一种在更改css属性时控制动画速度的方法\",{\"1\":{\"456\":1}}],[\"transition\",{\"0\":{\"456\":1},\"1\":{\"456\":10,\"457\":1}}],[\"transactiondefinition\",{\"1\":{\"899\":5}}],[\"transaction\",{\"1\":{\"561\":1,\"782\":1,\"802\":1,\"967\":2,\"968\":3}}],[\"translog日志\",{\"1\":{\"561\":1}}],[\"translog用于确保在发生故障时\",{\"1\":{\"561\":1}}],[\"translog\",{\"1\":{\"561\":1}}],[\"translate是translatex和translatey函数的简写\",{\"1\":{\"454\":1}}],[\"translate的百分比可以完成一个元素的水平和垂直居中\",{\"1\":{\"454\":1}}],[\"translate的百分比是相对于自身的\",{\"1\":{\"454\":1}}],[\"translate的补充\",{\"1\":{\"454\":1}}],[\"translate\",{\"1\":{\"454\":6,\"455\":1,\"456\":1,\"457\":4}}],[\"transmission\",{\"1\":{\"546\":1}}],[\"transparent\",{\"1\":{\"386\":1,\"416\":3}}],[\"trylock\",{\"1\":{\"662\":1}}],[\"try\",{\"0\":{\"573\":1},\"1\":{\"573\":1,\"663\":7,\"666\":2,\"668\":1,\"670\":9,\"671\":19,\"822\":1,\"842\":1,\"942\":2,\"968\":1}}],[\"tr>\",{\"1\":{\"409\":2}}],[\"tr\",{\"1\":{\"408\":1}}],[\"treeify\",{\"1\":{\"644\":2}}],[\"treemap允许根据键的自然顺序或自定义比较器来进行排序\",{\"1\":{\"630\":1}}],[\"treemap会根据健的自然顺序或自定义比较器来对元素进行排序\",{\"1\":{\"630\":1}}],[\"treemap使用红黑树\",{\"1\":{\"630\":1}}],[\"treemap\",{\"1\":{\"621\":1}}],[\"treeset\",{\"0\":{\"626\":1},\"1\":{\"620\":1,\"626\":1}}],[\"tree\",{\"1\":{\"353\":1,\"793\":3}}],[\"teachers\",{\"1\":{\"915\":2}}],[\"tenure\",{\"1\":{\"683\":2}}],[\"temporary\",{\"1\":{\"796\":1}}],[\"template\",{\"1\":{\"557\":3}}],[\"temp\",{\"1\":{\"497\":2,\"587\":2}}],[\"tel\",{\"1\":{\"461\":1}}],[\"terminated\",{\"1\":{\"651\":1}}],[\"terms\",{\"1\":{\"558\":1}}],[\"term是项的意思\",{\"1\":{\"406\":1}}],[\"term\",{\"1\":{\"406\":1,\"558\":2,\"559\":1,\"563\":2}}],[\"textarea\",{\"1\":{\"410\":1}}],[\"text=indent\",{\"1\":{\"357\":1}}],[\"text\",{\"0\":{\"355\":1,\"356\":1,\"357\":1,\"358\":1,\"391\":1,\"462\":1},\"1\":{\"357\":2,\"358\":2,\"376\":1,\"383\":1,\"391\":1,\"395\":1,\"396\":1,\"410\":3,\"416\":1,\"420\":1,\"426\":1,\"431\":3,\"442\":1,\"444\":6,\"461\":1,\"462\":3,\"469\":1,\"751\":1,\"807\":1}}],[\"test3\",{\"1\":{\"667\":1}}],[\"test2\",{\"1\":{\"667\":2}}],[\"test1\",{\"1\":{\"667\":2}}],[\"teststack\",{\"1\":{\"505\":2}}],[\"test\",{\"1\":{\"326\":5,\"457\":3,\"460\":1,\"469\":1,\"528\":1,\"573\":1,\"582\":1,\"603\":1,\"751\":3,\"753\":14,\"807\":8,\"808\":9,\"918\":2}}],[\"tolerance\",{\"1\":{\"933\":1}}],[\"tool\",{\"1\":{\"727\":1,\"730\":1}}],[\"tomcat私有的类加载器\",{\"1\":{\"716\":1}}],[\"tomcat最基本的类加载器\",{\"1\":{\"716\":1}}],[\"tomcat类加载机制\",{\"1\":{\"716\":1}}],[\"tomcat\",{\"0\":{\"716\":1}}],[\"total\",{\"1\":{\"557\":1,\"558\":2,\"559\":1,\"567\":1,\"670\":3}}],[\"tostring\",{\"1\":{\"504\":4,\"505\":2,\"506\":4,\"507\":2,\"513\":4,\"516\":4,\"517\":2,\"518\":2,\"519\":2,\"520\":2,\"528\":1,\"539\":2,\"824\":1,\"919\":1}}],[\"todo\",{\"1\":{\"504\":1,\"506\":1,\"508\":1,\"513\":3,\"514\":1,\"516\":3,\"517\":1,\"523\":2,\"539\":1}}],[\"to\",{\"1\":{\"331\":1,\"332\":1,\"463\":2,\"472\":1,\"737\":1,\"807\":1,\"808\":1}}],[\"topic\",{\"1\":{\"982\":2}}],[\"topchar\",{\"1\":{\"514\":4}}],[\"top+translate\",{\"1\":{\"455\":1}}],[\"topbar\",{\"1\":{\"419\":1}}],[\"top值会传递给父元素\",{\"1\":{\"387\":1}}],[\"top传递\",{\"1\":{\"387\":1}}],[\"top过大时\",{\"1\":{\"387\":1}}],[\"top\",{\"0\":{\"328\":1},\"1\":{\"328\":3,\"349\":1,\"374\":1,\"385\":3,\"386\":3,\"387\":5,\"401\":1,\"422\":1,\"423\":3,\"424\":1,\"425\":6,\"426\":1,\"455\":2,\"458\":1,\"463\":1,\"505\":1,\"513\":1,\"522\":12,\"738\":1}}],[\"touch\",{\"0\":{\"322\":1}}],[\"tv\",{\"1\":{\"277\":1}}],[\"hystrixproperty\",{\"1\":{\"960\":1}}],[\"hystrixcommand\",{\"0\":{\"960\":1},\"1\":{\"960\":1,\"961\":1}}],[\"hystrix支持\",{\"1\":{\"953\":1}}],[\"hystrix\",{\"0\":{\"955\":1},\"1\":{\"931\":1}}],[\"hyperloglog是一种概率算法的实现\",{\"1\":{\"822\":1}}],[\"hyperloglog\",{\"0\":{\"822\":1},\"1\":{\"822\":11}}],[\"hyfont01\",{\"1\":{\"417\":2}}],[\"hdel\",{\"1\":{\"820\":1}}],[\"hlen\",{\"1\":{\"820\":3}}],[\"hll\",{\"1\":{\"567\":1,\"822\":3}}],[\"hmget\",{\"1\":{\"820\":1}}],[\"hmset\",{\"1\":{\"820\":1}}],[\"hgetall\",{\"1\":{\"820\":3}}],[\"hget\",{\"1\":{\"820\":2}}],[\"hset\",{\"1\":{\"820\":4}}],[\"hsl\",{\"0\":{\"290\":1}}],[\"hincrby\",{\"1\":{\"820\":1}}],[\"histo\",{\"1\":{\"729\":1}}],[\"hidden\",{\"1\":{\"380\":1,\"395\":1,\"433\":1,\"462\":1,\"469\":1}}],[\"h参数\",{\"1\":{\"727\":1}}],[\"h<lines>\",{\"1\":{\"727\":1}}],[\"hadleradapter\",{\"1\":{\"894\":1}}],[\"having在group\",{\"1\":{\"746\":1}}],[\"having\",{\"0\":{\"746\":1},\"1\":{\"746\":2,\"796\":1}}],[\"handleblock\",{\"1\":{\"963\":2}}],[\"handleappexception\",{\"1\":{\"896\":1}}],[\"handle\",{\"1\":{\"670\":4}}],[\"handleresourcenotfoundexception\",{\"1\":{\"896\":1}}],[\"handlermapping\",{\"1\":{\"894\":1}}],[\"handler\",{\"1\":{\"664\":1,\"894\":1,\"895\":2}}],[\"happens\",{\"1\":{\"657\":2,\"659\":1}}],[\"hash底层结构\",{\"0\":{\"853\":1}}],[\"hash表\",{\"1\":{\"793\":1}}],[\"hash算法的冲突概率要小\",{\"1\":{\"638\":1}}],[\"hash的特点\",{\"1\":{\"638\":1}}],[\"hash的核心理论\",{\"1\":{\"638\":1}}],[\"hash\",{\"0\":{\"820\":1},\"1\":{\"632\":2,\"640\":1,\"824\":2,\"853\":5}}],[\"hashmap<k\",{\"1\":{\"644\":1}}],[\"hashmap<>\",{\"1\":{\"491\":1,\"824\":1}}],[\"hashmap源码之\",{\"0\":{\"644\":1,\"645\":1}}],[\"hashmap源码分析\",{\"0\":{\"636\":1}}],[\"hashmap源码深入分析\",{\"1\":{\"635\":1}}],[\"hashmap遍历方式\",{\"0\":{\"633\":1}}],[\"hashmap的长度为什么是2的幂次方\",{\"0\":{\"632\":1}}],[\"hashmap底层实现\",{\"0\":{\"631\":1}}],[\"hashmap性能比treemap高\",{\"1\":{\"630\":1}}],[\"hashmap不保证元素顺序\",{\"1\":{\"630\":1}}],[\"hashmap使用哈希表\",{\"1\":{\"630\":1}}],[\"hashmap和treemap\",{\"0\":{\"630\":1}}],[\"hashmap默认初始化大小为16\",{\"1\":{\"628\":1}}],[\"hashmap可以存储null的key和value\",{\"1\":{\"628\":1}}],[\"hashmap线程不安全\",{\"1\":{\"628\":1}}],[\"hashmap\",{\"0\":{\"628\":1,\"639\":1,\"643\":1},\"1\":{\"620\":1,\"621\":1,\"629\":1,\"633\":1,\"645\":4}}],[\"hashset和hashmap区别\",{\"0\":{\"629\":1}}],[\"hashset的底层数据结构是哈希表\",{\"1\":{\"626\":1}}],[\"hashset\",{\"0\":{\"626\":1},\"1\":{\"620\":1,\"629\":1}}],[\"hashtable默认初始化大小为11\",{\"1\":{\"628\":1}}],[\"hashtable不允许有null健和null值\",{\"1\":{\"628\":1}}],[\"hashtable线程安全\",{\"1\":{\"628\":1}}],[\"hashtable的区别\",{\"0\":{\"628\":1,\"634\":1}}],[\"hashtable\",{\"1\":{\"616\":1,\"621\":1,\"853\":1,\"855\":1}}],[\"hashcode\",{\"1\":{\"607\":3}}],[\"hasnext\",{\"1\":{\"573\":1}}],[\"has\",{\"1\":{\"521\":1}}],[\"hhmmm\",{\"1\":{\"663\":1}}],[\"hh\",{\"1\":{\"557\":1}}],[\"http等方式验证服务是否可用\",{\"1\":{\"971\":1}}],[\"httpclient\",{\"1\":{\"953\":1,\"954\":1}}],[\"http相关\",{\"0\":{\"909\":1}}],[\"http连接池\",{\"1\":{\"664\":1}}],[\"http是基于tcp还是udp的\",{\"0\":{\"551\":1}}],[\"http是传输明文\",{\"1\":{\"549\":1}}],[\"http默认80\",{\"1\":{\"549\":1}}],[\"http和https有什么区别\",{\"0\":{\"549\":1}}],[\"http状态码\",{\"0\":{\"548\":1}}],[\"httpservletrequest\",{\"1\":{\"896\":2}}],[\"https有天然的优势\",{\"1\":{\"549\":1}}],[\"https传输加密\",{\"1\":{\"549\":1}}],[\"https默认是443\",{\"1\":{\"549\":1}}],[\"https\",{\"1\":{\"418\":1,\"469\":1,\"549\":1,\"557\":1,\"738\":1}}],[\"http\",{\"0\":{\"547\":1},\"1\":{\"410\":1,\"549\":1,\"551\":3,\"557\":1,\"735\":1,\"936\":1,\"953\":1,\"970\":2}}],[\"html的font\",{\"1\":{\"472\":1}}],[\"html的每一个元素都可以看作一个盒子\",{\"1\":{\"383\":1}}],[\"html5新增全局属性data\",{\"1\":{\"461\":1}}],[\"html5新增属性\",{\"1\":{\"461\":1}}],[\"html5新增元素\",{\"1\":{\"459\":1}}],[\"html5\",{\"0\":{\"459\":1}}],[\"html提供了3组常见的用来展示列表的元素\",{\"1\":{\"406\":1}}],[\"html在设计时考虑一个问题\",{\"1\":{\"378\":1}}],[\"html>\",{\"1\":{\"358\":2,\"387\":6,\"416\":2,\"423\":2,\"425\":4,\"431\":6,\"436\":2,\"441\":2,\"442\":2,\"453\":2}}],[\"html\",{\"1\":{\"353\":3,\"413\":1,\"463\":1}}],[\"hotvct\",{\"1\":{\"821\":1}}],[\"hotvcr\",{\"1\":{\"821\":2}}],[\"hotspot虚拟机中第一款真正意义上的并发收集器\",{\"1\":{\"707\":1}}],[\"hot\",{\"1\":{\"404\":1,\"419\":2}}],[\"hover后面才能完全生效\",{\"1\":{\"373\":1}}],[\"hover必须放在\",{\"1\":{\"373\":1}}],[\"hover\",{\"1\":{\"373\":4,\"431\":1,\"454\":2,\"456\":1,\"469\":1}}],[\"home\",{\"1\":{\"318\":1,\"319\":1,\"320\":1,\"326\":1,\"714\":2}}],[\"h1>\",{\"1\":{\"406\":1}}],[\"h1\",{\"1\":{\"372\":1}}],[\"h2>\",{\"1\":{\"369\":1,\"406\":2}}],[\"h2\",{\"1\":{\"369\":1,\"977\":1}}],[\"hello\",{\"1\":{\"671\":2,\"851\":1}}],[\"heart\",{\"1\":{\"970\":2}}],[\"heartbeat\",{\"1\":{\"970\":1}}],[\"heap\",{\"0\":{\"683\":1},\"1\":{\"683\":1,\"729\":2,\"730\":1,\"737\":2}}],[\"health\",{\"1\":{\"566\":1}}],[\"head\",{\"1\":{\"504\":6,\"506\":9,\"507\":17,\"509\":10}}],[\"header\",{\"1\":{\"459\":1}}],[\"header+div\",{\"1\":{\"414\":1}}],[\"head>\",{\"1\":{\"358\":1,\"387\":3,\"416\":1,\"423\":1,\"425\":2,\"431\":3,\"436\":1,\"441\":1,\"442\":1,\"453\":1}}],[\"here\",{\"1\":{\"522\":2}}],[\"heigth\",{\"1\":{\"457\":1}}],[\"height计算\",{\"1\":{\"458\":1}}],[\"height一半的线对齐\",{\"1\":{\"458\":1}}],[\"height里边\",{\"1\":{\"393\":1}}],[\"height外边\",{\"1\":{\"393\":1}}],[\"height\",{\"0\":{\"365\":1,\"384\":1},\"1\":{\"349\":1,\"358\":2,\"365\":1,\"366\":2,\"374\":1,\"376\":1,\"383\":1,\"384\":1,\"387\":6,\"392\":1,\"416\":1,\"419\":1,\"425\":4,\"431\":7,\"433\":1,\"441\":1,\"442\":2,\"453\":1,\"456\":1,\"460\":1,\"463\":2,\"470\":1}}],[\"href=\",{\"1\":{\"351\":2,\"431\":11,\"466\":1,\"469\":1}}],[\"href\",{\"1\":{\"351\":1,\"414\":1}}],[\"h\",{\"1\":{\"330\":1,\"331\":2,\"332\":4,\"378\":1,\"557\":2,\"731\":1,\"738\":1}}],[\"hprof\",{\"1\":{\"729\":1}}],[\"hprof>\",{\"1\":{\"729\":2}}],[\"hp\",{\"1\":{\"328\":1,\"738\":1}}],[\"弥足珍贵\",{\"1\":{\"309\":1}}],[\"项目\",{\"0\":{\"309\":1}}],[\"项目管理\",{\"0\":{\"307\":1}}],[\"本质就是判断具体数据存不存在一个大的集合中\",{\"1\":{\"833\":1}}],[\"本质是数组\",{\"1\":{\"823\":1}}],[\"本质\",{\"1\":{\"715\":1}}],[\"本地方法栈\",{\"1\":{\"687\":1}}],[\"本地变量\",{\"1\":{\"682\":1}}],[\"本次只是为了讲课演示\",{\"1\":{\"663\":1}}],[\"本人拿过一次全年优秀和一次季度优秀\",{\"1\":{\"308\":1}}],[\"本身具有一定情感色彩\",{\"1\":{\"121\":1}}],[\"参数设置为false\",{\"1\":{\"984\":1}}],[\"参数\",{\"1\":{\"726\":1,\"738\":1}}],[\"参数说明\",{\"1\":{\"670\":1}}],[\"参数2\",{\"1\":{\"670\":2}}],[\"参数1\",{\"1\":{\"670\":2}}],[\"参数列表一定不能修改\",{\"1\":{\"601\":1}}],[\"参数列表必须修改\",{\"1\":{\"601\":1}}],[\"参照元素本身\",{\"1\":{\"454\":1}}],[\"参考对象是视口\",{\"1\":{\"425\":1}}],[\"参考场地\",{\"1\":{\"123\":1}}],[\"参与了手机数据分析系统和星原平台的开发工作\",{\"1\":{\"308\":1}}],[\"目的\",{\"1\":{\"846\":1}}],[\"目录下的\",{\"1\":{\"714\":1}}],[\"目录操作\",{\"0\":{\"314\":1}}],[\"目前特别在移动端可以说已经完全普及\",{\"1\":{\"435\":1}}],[\"目前有者6年左右开发经验\",{\"1\":{\"308\":1}}],[\"目标类和代理类要实现相同的接口\",{\"1\":{\"892\":1}}],[\"目标类的类加载\",{\"1\":{\"588\":1}}],[\"目标则是达到一个可控制的吞吐量\",{\"1\":{\"704\":1}}],[\"目标伪类\",{\"1\":{\"373\":1}}],[\"目标文件\",{\"1\":{\"319\":1,\"320\":1}}],[\"目标计划与绩效管理\",{\"0\":{\"300\":1}}],[\"目标\",{\"1\":{\"299\":1}}],[\"您好\",{\"1\":{\"308\":1}}],[\"管理链接\",{\"1\":{\"803\":1}}],[\"管理\",{\"1\":{\"544\":1}}],[\"管理把事情做对\",{\"1\":{\"299\":1}}],[\"管理者的职责之一就是通过计划去锁定确定性\",{\"1\":{\"300\":1}}],[\"管理者的工作地图\",{\"1\":{\"299\":1}}],[\"管理者的五项任务\",{\"1\":{\"299\":1}}],[\"管理者的八项修炼\",{\"0\":{\"298\":1},\"1\":{\"307\":2}}],[\"教练辅导\",{\"1\":{\"299\":1}}],[\"绩效评估\",{\"1\":{\"299\":1}}],[\"团队\",{\"1\":{\"299\":1}}],[\"团队建设\",{\"1\":{\"299\":1}}],[\"改用\",{\"1\":{\"551\":1}}],[\"改善\",{\"1\":{\"299\":1}}],[\"改变是针对整个照片\",{\"1\":{\"295\":1}}],[\"改变范畴更大\",{\"1\":{\"288\":1}}],[\"改变相机的色温和白平衡偏移让画面更加温暖\",{\"1\":{\"237\":1}}],[\"改变明度的同时\",{\"1\":{\"91\":1}}],[\"改变照片的影调\",{\"1\":{\"76\":1}}],[\"改变光位实际是在改变照片的明暗配比\",{\"1\":{\"76\":1}}],[\"改变物体空间排布\",{\"1\":{\"51\":1}}],[\"改变俯仰角度\",{\"1\":{\"51\":1}}],[\"改变距离\",{\"1\":{\"33\":1}}],[\"改变视点可以改变照片的视觉效果\",{\"1\":{\"33\":1}}],[\"执行耗时等\",{\"1\":{\"977\":1}}],[\"执行本地事务\",{\"1\":{\"968\":1}}],[\"执行真正的业务\",{\"1\":{\"942\":1}}],[\"执行事务\",{\"1\":{\"942\":1}}],[\"执行事务前后\",{\"1\":{\"767\":1}}],[\"执行applicationrunner\",{\"1\":{\"926\":1}}],[\"执行add\",{\"1\":{\"622\":1}}],[\"执行处理器\",{\"1\":{\"895\":1}}],[\"执行sql语句\",{\"1\":{\"803\":1}}],[\"执行器在执行任务前会检查任务是否已经被执行或正在执行\",{\"1\":{\"975\":1}}],[\"执行器\",{\"1\":{\"803\":1}}],[\"执行计划中的key列表示哪个索引被使用了\",{\"1\":{\"796\":1}}],[\"执行优先级越高\",{\"1\":{\"796\":1}}],[\"执行过程\",{\"1\":{\"691\":1}}],[\"执行完执行\",{\"1\":{\"670\":2}}],[\"执行refresh操作\",{\"1\":{\"561\":1}}],[\"执行动画最后保留哪一个值\",{\"1\":{\"457\":1}}],[\"执行infinite表示无限动画\",{\"1\":{\"457\":1}}],[\"执行次数\",{\"1\":{\"457\":1}}],[\"执行\",{\"1\":{\"299\":1,\"522\":1}}],[\"业务逻辑接口\",{\"1\":{\"951\":1}}],[\"业务系统做检测并预留资源\",{\"1\":{\"942\":1}}],[\"业务代码\",{\"1\":{\"661\":2}}],[\"业务\",{\"1\":{\"299\":1}}],[\"培养自己\",{\"1\":{\"299\":1}}],[\"培养自己的观察力\",{\"0\":{\"17\":1}}],[\"培养下属\",{\"1\":{\"299\":1}}],[\"培养人才\",{\"1\":{\"299\":1}}],[\"沟通结果\",{\"1\":{\"299\":1}}],[\"衡量绩效\",{\"1\":{\"299\":2}}],[\"激烈的锁竞争会造成线程阻塞\",{\"1\":{\"669\":1}}],[\"激活的链接\",{\"1\":{\"373\":1}}],[\"激励沟通\",{\"1\":{\"299\":1}}],[\"激励与沟通\",{\"1\":{\"299\":1}}],[\"激发激励\",{\"1\":{\"299\":1}}],[\"组件负责维护全局事务的生命周期\",{\"1\":{\"968\":1}}],[\"组成\",{\"1\":{\"833\":1}}],[\"组织资源\",{\"1\":{\"299\":1}}],[\"组织\",{\"1\":{\"299\":1}}],[\"组合色\",{\"0\":{\"282\":1}}],[\"组合拍摄\",{\"1\":{\"45\":1}}],[\"洞察市场发现计划和改善的五看方法\",{\"1\":{\"299\":1}}],[\"角色认知和思维升级\",{\"0\":{\"299\":1}}],[\"角度的多样性\",{\"0\":{\"177\":1}}],[\"角度则引导观众如何让观众看待画面中的人物和事物\",{\"1\":{\"45\":1}}],[\"角度于景别无关\",{\"1\":{\"35\":1}}],[\"角度\",{\"0\":{\"34\":1},\"1\":{\"33\":1,\"35\":1,\"81\":1,\"120\":1,\"136\":1,\"276\":1}}],[\"校准\",{\"0\":{\"295\":1}}],[\"扭曲度\",{\"1\":{\"293\":1}}],[\"杂色深度减低\",{\"1\":{\"292\":1}}],[\"杂志\",{\"1\":{\"23\":1}}],[\"蒙版\",{\"1\":{\"292\":1}}],[\"锐化\",{\"1\":{\"292\":1}}],[\"包\",{\"1\":{\"726\":1}}],[\"包和类来智能地决定哪些\",{\"1\":{\"926\":1}}],[\"包和类以及被\",{\"1\":{\"714\":1}}],[\"包和类\",{\"1\":{\"714\":2}}],[\"包装类型的对象比基本类型占用更多的内存空间\",{\"1\":{\"599\":1}}],[\"包装类型可以作为泛型的参数\",{\"1\":{\"599\":1}}],[\"包装类型可以使用null表示空值\",{\"1\":{\"599\":1}}],[\"包装类型提供了一些方法和属性\",{\"1\":{\"599\":1}}],[\"包装类型是对基本类型的封装\",{\"1\":{\"599\":1}}],[\"包裹每行的inline\",{\"1\":{\"458\":1}}],[\"包括但不限于broker磁盘使用率\",{\"1\":{\"981\":1}}],[\"包括请求的开始时间\",{\"1\":{\"977\":1}}],[\"包括开启事务\",{\"1\":{\"968\":1}}],[\"包括用户自定义的和通过自动配置生成的bean\",{\"1\":{\"926\":1}}],[\"包括命令行参数\",{\"1\":{\"926\":1}}],[\"包括检测和决定应用程序类型\",{\"1\":{\"926\":1}}],[\"包括实例化\",{\"1\":{\"884\":1}}],[\"包括主从关系\",{\"1\":{\"871\":1}}],[\"包括主副分片\",{\"1\":{\"565\":1}}],[\"包括共享锁\",{\"1\":{\"802\":1}}],[\"包括insert\",{\"1\":{\"801\":1}}],[\"包括系统调用\",{\"1\":{\"738\":1}}],[\"包括各个线程的cpu占用率\",{\"1\":{\"738\":1}}],[\"包括gc的使用\",{\"1\":{\"729\":1}}],[\"包括\",{\"1\":{\"729\":1,\"968\":1}}],[\"包括eden区\",{\"1\":{\"727\":1}}],[\"包括类文件\",{\"1\":{\"682\":1}}],[\"包括私有属性和私有方法\",{\"1\":{\"604\":1}}],[\"包括音量\",{\"1\":{\"460\":1}}],[\"包括旋转\",{\"1\":{\"454\":1}}],[\"包括已用内存\",{\"1\":{\"330\":1}}],[\"包括cpu占用\",{\"1\":{\"738\":1}}],[\"包括cpu\",{\"1\":{\"328\":1}}],[\"包含\",{\"1\":{\"852\":1}}],[\"包含记录本身\",{\"1\":{\"785\":1}}],[\"包含另一个\",{\"1\":{\"645\":1}}],[\"包含了所有出现在文档集合中的词项\",{\"1\":{\"563\":1}}],[\"包含按评分排序的最相关的top\",{\"1\":{\"562\":1}}],[\"包含要索引的文档内容以及索引名\",{\"1\":{\"561\":1}}],[\"包含四个属性\",{\"1\":{\"456\":1}}],[\"包含以下信息\",{\"1\":{\"329\":1}}],[\"包含度\",{\"1\":{\"291\":1}}],[\"包容他人\",{\"1\":{\"15\":1}}],[\"记得把高处的曲线给还原\",{\"1\":{\"289\":1}}],[\"记录span\",{\"1\":{\"977\":1}}],[\"记录同一毫秒内生成的id序号\",{\"1\":{\"938\":1}}],[\"记录机器的id\",{\"1\":{\"938\":1}}],[\"记录生成id的时间\",{\"1\":{\"938\":1}}],[\"记录生活\",{\"1\":{\"9\":1}}],[\"记录的就是sql语句的原文\",{\"1\":{\"801\":1}}],[\"记录所有的数据更改操作\",{\"1\":{\"801\":1}}],[\"记录内容修改情况\",{\"1\":{\"799\":1}}],[\"记录锁\",{\"1\":{\"785\":1}}],[\"记录id\",{\"1\":{\"751\":1}}],[\"记录出栈\",{\"1\":{\"682\":1}}],[\"记录飞机\",{\"1\":{\"273\":1}}],[\"记录\",{\"1\":{\"149\":1,\"520\":1}}],[\"记录自己的灵感和情绪\",{\"0\":{\"22\":1}}],[\"程序运行异常\",{\"1\":{\"956\":1}}],[\"程序计数器\",{\"0\":{\"680\":1}}],[\"程序的可维护性\",{\"1\":{\"604\":1}}],[\"程序无法处理的错误\",{\"1\":{\"571\":1}}],[\"程序本身可以处理的异常\",{\"1\":{\"571\":1}}],[\"程序员是一个雇员\",{\"1\":{\"521\":1}}],[\"程序自动\",{\"1\":{\"277\":1}}],[\"程度更重降低饱和度增加鲜艳度\",{\"1\":{\"288\":1}}],[\"鲜艳度\",{\"1\":{\"288\":1}}],[\"鲜花\",{\"1\":{\"126\":1}}],[\"去实例化b\",{\"1\":{\"925\":1}}],[\"去创建对象\",{\"1\":{\"892\":1}}],[\"去重复后的真实个数\",{\"1\":{\"822\":1}}],[\"去重复统计功能的基数估计算法就是hyperloglog\",{\"1\":{\"822\":1}}],[\"去掉了\",{\"1\":{\"868\":1}}],[\"去掉lock\",{\"1\":{\"671\":1}}],[\"去掉同步代码块\",{\"1\":{\"671\":1}}],[\"去除的方法\",{\"1\":{\"430\":1}}],[\"去除重复代码\",{\"1\":{\"404\":1}}],[\"去噪点\",{\"1\":{\"292\":1}}],[\"去灰\",{\"1\":{\"288\":1}}],[\"去朦胧\",{\"1\":{\"288\":1}}],[\"纹理\",{\"1\":{\"288\":1}}],[\"降级等操作\",{\"1\":{\"963\":1}}],[\"降级为记录锁\",{\"1\":{\"785\":1}}],[\"降高光提高白色\",{\"1\":{\"288\":1}}],[\"降低了阻塞范围\",{\"1\":{\"942\":1}}],[\"降低模块间的耦合度\",{\"1\":{\"892\":1}}],[\"降低对比度\",{\"1\":{\"288\":1}}],[\"降低曝光\",{\"1\":{\"288\":1}}],[\"降低不透明度\",{\"1\":{\"6\":1}}],[\"值为null\",{\"1\":{\"796\":1}}],[\"值却不相等\",{\"1\":{\"607\":1}}],[\"值必须是相等\",{\"1\":{\"607\":1}}],[\"值必须为以下其中之一\",{\"1\":{\"452\":1}}],[\"值传递\",{\"0\":{\"587\":1},\"1\":{\"587\":1}}],[\"值的方式\",{\"1\":{\"460\":1}}],[\"值类型\",{\"1\":{\"454\":4}}],[\"值个数\",{\"1\":{\"454\":4}}],[\"值\",{\"1\":{\"452\":1,\"470\":1}}],[\"值越小就越排在前面\",{\"1\":{\"447\":1}}],[\"值越高越亮\",{\"1\":{\"288\":1}}],[\"值会传递给父元素\",{\"1\":{\"387\":1}}],[\"值调大会变得粗糙\",{\"1\":{\"288\":1}}],[\"值低代表比较柔和\",{\"1\":{\"288\":1}}],[\"值高代表比较透\",{\"1\":{\"288\":1}}],[\"导出内存映像文件\",{\"1\":{\"729\":1}}],[\"导航元素\",{\"1\":{\"459\":1}}],[\"导致主节点和从节点之间出现数据不一致的情况\",{\"1\":{\"871\":1}}],[\"导致请求再次访问redis时缓存命中\",{\"1\":{\"849\":1}}],[\"导致更新失败\",{\"1\":{\"847\":1}}],[\"导致大量的请求打到数据库上面去\",{\"1\":{\"837\":1}}],[\"导致后台数据库压力暴增\",{\"1\":{\"836\":1}}],[\"导致晋升的对象太多\",{\"1\":{\"738\":1}}],[\"导致方法区被撑爆\",{\"1\":{\"737\":1}}],[\"导致多次gc后\",{\"1\":{\"737\":1}}],[\"导致数据的不一致性问题\",{\"1\":{\"707\":1}}],[\"导致服务器不确定是否可以安全关闭连接\",{\"1\":{\"552\":1}}],[\"导致了高度坍塌的问题\",{\"1\":{\"432\":1}}],[\"导致照片色彩复杂\",{\"1\":{\"126\":1}}],[\"导入\",{\"0\":{\"287\":1}}],[\"洋红色和红色混合就是紫红色\",{\"1\":{\"284\":1}}],[\"洋红色\",{\"1\":{\"282\":1}}],[\"guide哥\",{\"1\":{\"919\":1}}],[\"globaltransactional\",{\"1\":{\"966\":1}}],[\"globalexceptionhandler\",{\"1\":{\"896\":1}}],[\"global\",{\"1\":{\"889\":1,\"961\":1}}],[\"github\",{\"1\":{\"738\":1}}],[\"g1heapregionsize\",{\"1\":{\"738\":1}}],[\"g1并发执行的线程数对性能的影响\",{\"1\":{\"738\":1}}],[\"g1收集器就会将该region标记为可回收的region\",{\"1\":{\"708\":1}}],[\"g1收集器会将可回收的region标记为可用region\",{\"1\":{\"708\":1}}],[\"g1收集器会对堆内存进行并发重置\",{\"1\":{\"708\":1}}],[\"g1收集器会对整个堆内存进行最终标记\",{\"1\":{\"708\":1}}],[\"g1收集器会在应用程序运行的同时清理可回收的region\",{\"1\":{\"708\":1}}],[\"g1收集器会在应用程序运行的同时继续标记存活的对象\",{\"1\":{\"708\":1}}],[\"g1收集器会启动并发清理阶段\",{\"1\":{\"708\":1}}],[\"g1收集器会启动并发标记阶段\",{\"1\":{\"708\":1}}],[\"g1收集器会根据每个region中存活对象的总大小来决定采用哪种回收方式\",{\"1\":{\"708\":1}}],[\"g1收集器会标记出所有存活的对象\",{\"1\":{\"708\":2}}],[\"g1收集器首先会对整个堆内存进行初始标记\",{\"1\":{\"708\":1}}],[\"g1收集器的垃圾回收过程主要分为以下几个步骤\",{\"1\":{\"708\":1}}],[\"g1收集器使用的算法\",{\"1\":{\"694\":1}}],[\"g1会启动一次年轻代垃圾回收过程\",{\"1\":{\"708\":1}}],[\"g1拥有与应用程序交替执行的能力\",{\"1\":{\"708\":1}}],[\"g1在回收期间\",{\"1\":{\"708\":1}}],[\"g1\",{\"0\":{\"708\":1},\"1\":{\"698\":1,\"708\":1,\"723\":1}}],[\"geolocation<string>>\",{\"1\":{\"824\":2}}],[\"georesults=\",{\"1\":{\"824\":2}}],[\"georesults<redisgeocommands\",{\"1\":{\"824\":2}}],[\"georesults\",{\"1\":{\"824\":4}}],[\"georadiusbymember\",{\"1\":{\"824\":1}}],[\"georadiuscommandargs\",{\"1\":{\"824\":4}}],[\"georadius\",{\"1\":{\"824\":3}}],[\"geohash算法生成的base32编码值\",{\"1\":{\"824\":1}}],[\"geohash\",{\"1\":{\"824\":1}}],[\"geocontroller\",{\"1\":{\"824\":1}}],[\"geodist\",{\"1\":{\"824\":3}}],[\"geopos\",{\"1\":{\"824\":3}}],[\"geoadd\",{\"1\":{\"824\":4}}],[\"geospatial\",{\"0\":{\"824\":1}}],[\"general\",{\"1\":{\"751\":3}}],[\"generation\",{\"1\":{\"683\":2,\"684\":1}}],[\"getrecordmetadata\",{\"1\":{\"982\":2}}],[\"getresource\",{\"1\":{\"963\":2}}],[\"getpaymentbyid\",{\"1\":{\"951\":1}}],[\"getproxy\",{\"1\":{\"588\":2}}],[\"getter\",{\"1\":{\"919\":1}}],[\"getklassrelatedteachers\",{\"1\":{\"915\":1}}],[\"getkey\",{\"1\":{\"633\":1}}],[\"getallusers\",{\"1\":{\"910\":1}}],[\"getandincrement\",{\"1\":{\"658\":1}}],[\"get请求\",{\"1\":{\"910\":1}}],[\"getlock\",{\"1\":{\"842\":1}}],[\"getlast\",{\"1\":{\"504\":1,\"513\":2,\"516\":1,\"520\":2}}],[\"getmessage\",{\"1\":{\"982\":1}}],[\"getmultiplier\",{\"1\":{\"824\":1}}],[\"getmapping\",{\"0\":{\"910\":1},\"1\":{\"824\":5,\"910\":1,\"915\":1,\"951\":1}}],[\"getbit\",{\"1\":{\"823\":5}}],[\"getinstance\",{\"1\":{\"664\":2}}],[\"getinterfaces\",{\"1\":{\"588\":1}}],[\"get起来性能变差\",{\"1\":{\"641\":1}}],[\"getvalue\",{\"1\":{\"633\":1}}],[\"getname\",{\"1\":{\"588\":2,\"663\":1,\"666\":2,\"667\":4,\"670\":4,\"671\":17}}],[\"getnamebycode\",{\"1\":{\"575\":1}}],[\"getcause\",{\"1\":{\"670\":1}}],[\"getcapcity\",{\"1\":{\"516\":1}}],[\"getcapacity\",{\"1\":{\"513\":3,\"516\":2,\"517\":6,\"518\":7,\"519\":6,\"520\":12,\"539\":1}}],[\"getclassloader\",{\"1\":{\"588\":1}}],[\"getclass\",{\"1\":{\"586\":2,\"588\":2}}],[\"getsingleton\",{\"1\":{\"925\":1}}],[\"getsize\",{\"1\":{\"504\":1,\"505\":3,\"506\":2,\"512\":1,\"513\":6,\"516\":7,\"517\":2,\"518\":1,\"519\":4,\"520\":4,\"539\":1}}],[\"getsystemclassloader\",{\"1\":{\"586\":1}}],[\"getsecond\",{\"1\":{\"579\":1}}],[\"getfront\",{\"1\":{\"506\":2,\"516\":3,\"517\":2,\"518\":1,\"519\":1,\"520\":1}}],[\"getfirst\",{\"1\":{\"504\":1,\"505\":1,\"513\":1,\"516\":2,\"579\":1}}],[\"get\",{\"1\":{\"491\":1,\"504\":4,\"513\":6,\"516\":6,\"522\":2,\"523\":1,\"539\":3,\"558\":1,\"559\":1,\"622\":1,\"633\":1,\"663\":7,\"667\":1,\"670\":7,\"671\":1,\"817\":2,\"824\":2,\"831\":1,\"853\":1,\"854\":1,\"855\":1,\"856\":1,\"916\":1,\"951\":1,\"970\":1}}],[\"get和post\",{\"1\":{\"410\":1}}],[\"gc过于频繁\",{\"1\":{\"738\":1}}],[\"gc暂停时间增长等\",{\"1\":{\"738\":1}}],[\"gceasy\",{\"1\":{\"735\":1}}],[\"gcutil\",{\"1\":{\"727\":1}}],[\"gc时间合计等信息\",{\"1\":{\"727\":1}}],[\"gc相关的内容\",{\"0\":{\"724\":1}}],[\"gc后\",{\"1\":{\"684\":1}}],[\"gc\",{\"1\":{\"663\":15,\"687\":3,\"710\":2,\"727\":2,\"737\":1,\"738\":1}}],[\"gatewayfilter\",{\"1\":{\"936\":1}}],[\"gateway\",{\"0\":{\"935\":1,\"936\":1},\"1\":{\"931\":1,\"936\":1}}],[\"gather\",{\"1\":{\"557\":1}}],[\"gap\",{\"1\":{\"785\":2}}],[\"garbage\",{\"1\":{\"708\":1}}],[\"gaonaite\",{\"1\":{\"557\":1}}],[\"gainsboro\",{\"1\":{\"442\":1,\"453\":1}}],[\"gold\",{\"1\":{\"453\":1}}],[\"gte\",{\"1\":{\"558\":1}}],[\"gt\",{\"1\":{\"431\":1}}],[\"graph\",{\"1\":{\"884\":1}}],[\"gradient常见函数\",{\"1\":{\"463\":1}}],[\"gradient是一种imagecss数据的子类型\",{\"1\":{\"463\":1}}],[\"gradient\",{\"1\":{\"463\":9}}],[\"group\",{\"1\":{\"558\":1,\"746\":1,\"796\":1}}],[\"grow的值\",{\"1\":{\"452\":2}}],[\"grow||flex\",{\"1\":{\"452\":1}}],[\"grow属性才会生效\",{\"1\":{\"449\":1}}],[\"grow\",{\"0\":{\"449\":1},\"1\":{\"440\":1,\"449\":1,\"452\":2}}],[\"green\",{\"1\":{\"348\":1,\"373\":1,\"377\":1,\"390\":1,\"391\":1}}],[\"grep\",{\"1\":{\"333\":1,\"738\":1}}],[\"grb12色相环\",{\"0\":{\"284\":1}}],[\"gz\",{\"1\":{\"326\":3}}],[\"g\",{\"1\":{\"281\":1}}],[\"ribbon\",{\"1\":{\"931\":1,\"953\":1}}],[\"right\",{\"0\":{\"748\":1},\"1\":{\"358\":1,\"383\":1,\"385\":3,\"386\":4,\"387\":2,\"401\":2,\"416\":1,\"422\":1,\"423\":2,\"424\":2,\"425\":6,\"429\":1,\"431\":18,\"433\":1,\"455\":1,\"463\":2,\"494\":11,\"748\":1}}],[\"rdb创建快照时会阻塞主线程吗\",{\"0\":{\"860\":1}}],[\"rdb是redis默认采用的持久化方式\",{\"1\":{\"859\":1}}],[\"rdb和aof的混合持久化\",{\"1\":{\"859\":1}}],[\"rdb\",{\"1\":{\"859\":1}}],[\"rlock\",{\"1\":{\"842\":1}}],[\"rpush\",{\"1\":{\"818\":1}}],[\"rr\",{\"0\":{\"780\":1}}],[\"r图\",{\"0\":{\"743\":1}}],[\"rt\",{\"1\":{\"714\":1}}],[\"runtime\",{\"1\":{\"681\":1}}],[\"runtimeexception\",{\"1\":{\"670\":6,\"671\":4}}],[\"running\",{\"1\":{\"667\":3}}],[\"runnable\",{\"1\":{\"651\":1,\"663\":1,\"664\":3,\"670\":4}}],[\"runasync\",{\"1\":{\"667\":3,\"670\":10}}],[\"run\",{\"1\":{\"656\":1,\"664\":1,\"926\":1}}],[\"rm根据undo\",{\"1\":{\"968\":1}}],[\"rm根据redo\",{\"1\":{\"968\":1}}],[\"rm\",{\"1\":{\"557\":1,\"967\":3,\"968\":2}}],[\"rate\",{\"1\":{\"936\":2}}],[\"raw\",{\"1\":{\"852\":1}}],[\"ram\",{\"1\":{\"566\":1}}],[\"range\",{\"1\":{\"558\":1,\"796\":2}}],[\"random\",{\"1\":{\"505\":5,\"822\":2,\"832\":3}}],[\"radial\",{\"1\":{\"463\":2}}],[\"radio\",{\"1\":{\"410\":1}}],[\"radiusbymember\",{\"1\":{\"824\":1}}],[\"radiusbyxy\",{\"1\":{\"824\":1}}],[\"radius\",{\"1\":{\"390\":2,\"431\":1,\"463\":2,\"824\":2}}],[\"route\",{\"1\":{\"936\":1}}],[\"routes\",{\"1\":{\"936\":1}}],[\"roll\",{\"1\":{\"797\":1}}],[\"rolling\",{\"1\":{\"566\":1}}],[\"roots开始遍历整个对象图的过程\",{\"1\":{\"707\":1}}],[\"roots直接关联的对象\",{\"1\":{\"707\":1}}],[\"roots\",{\"1\":{\"687\":3,\"710\":1}}],[\"root的元素\",{\"1\":{\"465\":1}}],[\"root\",{\"1\":{\"463\":1}}],[\"row结合\",{\"1\":{\"801\":1}}],[\"rows\",{\"1\":{\"796\":2}}],[\"row\",{\"1\":{\"441\":3,\"442\":1,\"443\":1,\"751\":1,\"797\":1,\"801\":1}}],[\"rotate\",{\"1\":{\"416\":1,\"454\":4}}],[\"rgba\",{\"1\":{\"380\":1,\"463\":1}}],[\"rgba的a设置alpha值\",{\"1\":{\"380\":1}}],[\"rgba设置颜色\",{\"1\":{\"380\":1}}],[\"rgb变焦手电筒\",{\"1\":{\"85\":1}}],[\"rename\",{\"1\":{\"808\":1}}],[\"region时\",{\"1\":{\"708\":1}}],[\"region\",{\"1\":{\"708\":1}}],[\"register\",{\"0\":{\"680\":1}}],[\"rejectedexecutionhandler\",{\"1\":{\"664\":2}}],[\"reentrantlock\",{\"0\":{\"662\":1},\"1\":{\"660\":1,\"662\":4,\"669\":1,\"671\":3}}],[\"ref\",{\"1\":{\"796\":6}}],[\"referencedemo\",{\"1\":{\"663\":2}}],[\"reflect包中的两个类\",{\"1\":{\"892\":1}}],[\"reflect\",{\"1\":{\"588\":3}}],[\"refreshevent\",{\"1\":{\"972\":2}}],[\"refreshscoperefreshedevent\",{\"1\":{\"972\":1}}],[\"refreshscope\",{\"1\":{\"972\":6}}],[\"refresh\",{\"1\":{\"561\":1,\"565\":2,\"972\":1}}],[\"real\",{\"1\":{\"567\":1}}],[\"readtimeout\",{\"1\":{\"952\":1}}],[\"read\",{\"1\":{\"565\":2,\"776\":1,\"778\":1,\"779\":1,\"780\":1,\"797\":2,\"802\":1,\"867\":1,\"899\":9}}],[\"readonly\",{\"1\":{\"410\":1}}],[\"requestratelimiter\",{\"1\":{\"936\":1}}],[\"requestbody\",{\"0\":{\"916\":1},\"1\":{\"916\":1}}],[\"requestparam\",{\"0\":{\"915\":1},\"1\":{\"915\":2}}],[\"requestmapping\",{\"1\":{\"824\":1}}],[\"request\",{\"1\":{\"561\":1,\"566\":1,\"884\":1,\"889\":1,\"896\":2,\"916\":1}}],[\"requires\",{\"1\":{\"898\":1}}],[\"required\",{\"1\":{\"898\":1,\"915\":1}}],[\"require\",{\"1\":{\"513\":1,\"516\":1,\"539\":1}}],[\"replenishrate\",{\"1\":{\"936\":1}}],[\"replication\",{\"1\":{\"565\":1,\"800\":1}}],[\"replicas\",{\"1\":{\"557\":1}}],[\"repository\",{\"0\":{\"905\":1},\"1\":{\"886\":1,\"902\":1}}],[\"repeatable\",{\"1\":{\"780\":1,\"802\":1,\"899\":3}}],[\"repeating\",{\"1\":{\"463\":2}}],[\"repeat\",{\"0\":{\"399\":1},\"1\":{\"398\":2,\"399\":4,\"403\":2,\"419\":2}}],[\"records以控制每次拉取消息的数量\",{\"1\":{\"981\":1}}],[\"record\",{\"1\":{\"557\":1,\"751\":1,\"785\":2}}],[\"recv\",{\"1\":{\"552\":1}}],[\"rev\",{\"1\":{\"509\":2}}],[\"reverselist\",{\"1\":{\"509\":3}}],[\"reverse\",{\"1\":{\"441\":3,\"442\":1,\"457\":1,\"497\":2}}],[\"ret\",{\"1\":{\"513\":2,\"516\":2,\"517\":2,\"518\":2,\"519\":2,\"520\":4,\"522\":7,\"523\":2,\"539\":2}}],[\"retnode\",{\"1\":{\"504\":4,\"506\":3}}],[\"returns\",{\"1\":{\"522\":4}}],[\"return\",{\"1\":{\"490\":2,\"491\":2,\"494\":1,\"497\":1,\"504\":12,\"505\":6,\"506\":6,\"507\":4,\"509\":3,\"513\":20,\"514\":5,\"516\":20,\"517\":6,\"518\":6,\"519\":6,\"520\":8,\"522\":19,\"523\":12,\"539\":12,\"575\":2,\"579\":2,\"582\":4,\"588\":3,\"664\":2,\"670\":17,\"824\":6,\"889\":1,\"907\":1,\"908\":1,\"910\":1}}],[\"retina屏幕\",{\"1\":{\"468\":1}}],[\"responseentity<list<user>>\",{\"1\":{\"910\":1}}],[\"responseentity<errorreponse>\",{\"1\":{\"896\":1}}],[\"responseentity<\",{\"1\":{\"896\":1}}],[\"responsebody\",{\"1\":{\"896\":1,\"906\":1}}],[\"resolver\",{\"1\":{\"895\":1,\"936\":1}}],[\"resolution\",{\"1\":{\"712\":1}}],[\"resourcename\",{\"1\":{\"963\":1}}],[\"resourcenotfoundexception\",{\"1\":{\"896\":2}}],[\"resource可以通过\",{\"1\":{\"888\":1}}],[\"resource都需要通过名称才能正确匹配到对应的\",{\"1\":{\"888\":1}}],[\"resource默认注入方式为byname\",{\"1\":{\"888\":1}}],[\"resource是jdk提供的注解\",{\"1\":{\"888\":1}}],[\"resource的区别是什么\",{\"0\":{\"888\":1}}],[\"resources\",{\"1\":{\"573\":1,\"714\":1}}],[\"resource\",{\"0\":{\"573\":1},\"1\":{\"887\":1,\"888\":1,\"967\":1,\"968\":1}}],[\"restcontroller\",{\"0\":{\"906\":1},\"1\":{\"824\":1}}],[\"rest\",{\"1\":{\"562\":1}}],[\"restful\",{\"1\":{\"561\":1}}],[\"resize\",{\"1\":{\"513\":3,\"516\":3,\"517\":3,\"518\":3,\"519\":3,\"520\":5}}],[\"res\",{\"1\":{\"504\":4,\"505\":4,\"506\":5,\"507\":8,\"513\":14,\"516\":14,\"517\":7,\"518\":7,\"519\":7,\"520\":7,\"539\":7}}],[\"resulta\",{\"1\":{\"670\":1}}],[\"result=\",{\"1\":{\"670\":1}}],[\"result\",{\"1\":{\"472\":3,\"494\":3,\"557\":2,\"588\":2,\"670\":4,\"796\":1,\"982\":3}}],[\"reset\",{\"1\":{\"410\":2}}],[\"remote\",{\"1\":{\"953\":1}}],[\"removes\",{\"1\":{\"522\":2}}],[\"removefront\",{\"1\":{\"520\":3}}],[\"removefirst\",{\"1\":{\"504\":1,\"505\":1,\"513\":1,\"516\":2,\"539\":1}}],[\"removeelement\",{\"1\":{\"513\":1,\"516\":1,\"539\":1}}],[\"removeelements\",{\"1\":{\"507\":4}}],[\"removelast\",{\"1\":{\"504\":1,\"513\":2,\"516\":1,\"520\":3,\"539\":1}}],[\"remove\",{\"1\":{\"504\":4,\"513\":5,\"516\":5,\"522\":9,\"539\":5}}],[\"rem事实上是作为一种过渡方案\",{\"1\":{\"473\":1}}],[\"rem的单位换算\",{\"1\":{\"472\":1}}],[\"rem单位是相对于html元素的font\",{\"1\":{\"472\":1}}],[\"rem单位+动态html的font\",{\"1\":{\"471\":1}}],[\"rem\",{\"0\":{\"472\":1},\"1\":{\"467\":1,\"472\":1}}],[\"relay\",{\"1\":{\"801\":1}}],[\"relative\",{\"1\":{\"374\":1,\"422\":1,\"423\":2,\"425\":3,\"455\":1,\"456\":1}}],[\"release\",{\"1\":{\"666\":2}}],[\"rel=\",{\"1\":{\"351\":2,\"466\":1,\"469\":1}}],[\"rel\",{\"1\":{\"351\":1}}],[\"redis在事务执行阶段\",{\"1\":{\"878\":1}}],[\"redis会保证事务块内的命令序列是原子地被执行\",{\"1\":{\"877\":1}}],[\"redis使用multi\",{\"1\":{\"877\":1}}],[\"redis事物有什么缺陷\",{\"0\":{\"878\":1}}],[\"redis事物支持原子性吗\",{\"0\":{\"877\":1}}],[\"redis事物\",{\"0\":{\"876\":1}}],[\"redis主节点的配置信息中它所负责的哈希槽是通过一张bitmap的形式来保存的\",{\"1\":{\"872\":1}}],[\"redis主机挂了\",{\"1\":{\"835\":1}}],[\"redis脑裂是指在redis集群中\",{\"1\":{\"871\":1}}],[\"redis哨兵\",{\"1\":{\"871\":1}}],[\"redis集群并没有使用一致性hash而是引入了哈希槽的概念\",{\"1\":{\"872\":1}}],[\"redis集群\",{\"0\":{\"870\":1,\"872\":1}}],[\"redis集群环境下\",{\"1\":{\"840\":1}}],[\"redis利用epoll来实现io多路复用\",{\"1\":{\"866\":1}}],[\"redis就会将该命令写入aof缓存区\",{\"1\":{\"861\":1}}],[\"redis就会自动触发bgsave命令创建快照\",{\"1\":{\"859\":3}}],[\"redis6\",{\"1\":{\"861\":1}}],[\"redis提供了两个命令来生成rdb快照文件\",{\"1\":{\"860\":1}}],[\"redis内部会根据用户给的不同键值而使用不同的编码格式\",{\"1\":{\"852\":1}}],[\"redis为什么要重新设计一个sds数据结构\",{\"1\":{\"852\":1}}],[\"redis经典五种数据类型底层实现\",{\"0\":{\"850\":1}}],[\"redis分布锁锁过期了\",{\"1\":{\"842\":1}}],[\"redis分布锁\",{\"0\":{\"838\":1}}],[\"redis成为了一个摆设\",{\"1\":{\"836\":1}}],[\"redis缓存集群实现高可用\",{\"1\":{\"835\":1}}],[\"redis全盘崩溃\",{\"1\":{\"835\":1}}],[\"redis默认内存多少可以用\",{\"1\":{\"831\":1}}],[\"redis默认内存多少\",{\"0\":{\"831\":1}}],[\"redis采用定期删除+惰性\",{\"1\":{\"829\":1}}],[\"redisgeocommands\",{\"1\":{\"824\":5}}],[\"redistemplate\",{\"1\":{\"822\":1,\"824\":8}}],[\"redis的大key\",{\"0\":{\"873\":1}}],[\"redis的i\",{\"0\":{\"863\":1}}],[\"redis的数据类型\",{\"0\":{\"816\":1}}],[\"redis的应用\",{\"0\":{\"815\":1}}],[\"redissonlock\",{\"1\":{\"842\":5}}],[\"redisson里面使用\",{\"1\":{\"842\":1}}],[\"redisson的看门狗缓存续命了解么\",{\"0\":{\"842\":1}}],[\"redisson使用场景\",{\"0\":{\"841\":1}}],[\"redisson\",{\"1\":{\"815\":1,\"842\":2,\"940\":1}}],[\"redis知识梳理\",{\"0\":{\"813\":1}}],[\"redis\",{\"0\":{\"812\":1,\"814\":1,\"825\":1,\"830\":1,\"832\":1,\"858\":1,\"871\":1},\"1\":{\"811\":1,\"814\":3,\"815\":1,\"822\":5,\"842\":1,\"869\":1,\"871\":6,\"872\":1,\"936\":2},\"2\":{\"881\":1}}],[\"redo日志\",{\"1\":{\"968\":1}}],[\"redo\",{\"1\":{\"802\":3}}],[\"redolog\",{\"1\":{\"799\":1}}],[\"red\",{\"1\":{\"348\":1,\"369\":1,\"370\":2,\"371\":2,\"372\":1,\"373\":2,\"374\":1,\"377\":2,\"386\":1,\"463\":4}}],[\"r\",{\"1\":{\"281\":1,\"670\":3,\"822\":5}}],[\"尼康z30\",{\"0\":{\"280\":1}}],[\"韵律感\",{\"1\":{\"279\":1}}],[\"突变\",{\"1\":{\"279\":1}}],[\"突出人物情绪\",{\"1\":{\"276\":1}}],[\"突出主体保留一定背景层次\",{\"1\":{\"274\":1}}],[\"突出主体\",{\"1\":{\"61\":1}}],[\"质感对比\",{\"1\":{\"279\":1}}],[\"喧嚣\",{\"1\":{\"279\":1}}],[\"安全性与资源消耗\",{\"1\":{\"549\":1}}],[\"安全\",{\"1\":{\"279\":1}}],[\"安静的情绪流淌\",{\"0\":{\"145\":1}}],[\"安静的\",{\"1\":{\"114\":1}}],[\"安静\",{\"1\":{\"14\":1,\"84\":1,\"93\":1,\"143\":1,\"144\":1,\"145\":1,\"279\":1}}],[\"具备以下特点\",{\"1\":{\"436\":1}}],[\"具体原理如下\",{\"1\":{\"975\":1}}],[\"具体实现如下\",{\"1\":{\"938\":1}}],[\"具体实现\",{\"1\":{\"823\":1}}],[\"具体参数=具体参数值\",{\"1\":{\"728\":1}}],[\"具体参数\",{\"1\":{\"728\":2}}],[\"具体表现为父类的引用指向子类的实例\",{\"1\":{\"604\":1}}],[\"具体来说\",{\"1\":{\"563\":1,\"798\":1}}],[\"具体的宽度数值\",{\"1\":{\"451\":1}}],[\"具体的大小\",{\"1\":{\"400\":1}}],[\"具体数值+单位\",{\"1\":{\"361\":1}}],[\"具体选择哪条\",{\"1\":{\"279\":1}}],[\"具有渲染气氛的功能\",{\"1\":{\"126\":1}}],[\"具有一定设计感或舒适\",{\"1\":{\"125\":1}}],[\"具有张力\",{\"1\":{\"114\":1}}],[\"霸气\",{\"1\":{\"279\":1}}],[\"冲突\",{\"1\":{\"279\":1}}],[\"冲突感\",{\"1\":{\"76\":1}}],[\"混入也可以传递参数\",{\"1\":{\"469\":1}}],[\"混入是一种将一组属性从一个规则集混入到另外一个规则集的方法\",{\"1\":{\"469\":1}}],[\"混入\",{\"1\":{\"469\":2}}],[\"混乱\",{\"1\":{\"279\":1}}],[\"混合回收\",{\"1\":{\"708\":2}}],[\"混合\",{\"1\":{\"256\":2,\"469\":1}}],[\"紧张\",{\"1\":{\"279\":2}}],[\"紧张时尽量不看镜头\",{\"1\":{\"129\":1}}],[\"引入nosql和程序架构调整\",{\"1\":{\"804\":1}}],[\"引入cdn的less编译代码\",{\"1\":{\"469\":1}}],[\"引用的对象\",{\"1\":{\"687\":1}}],[\"引用的是同一个字符串常量池中的对象\",{\"1\":{\"611\":1}}],[\"引用失效减1\",{\"1\":{\"686\":1}}],[\"引用计数法\",{\"0\":{\"686\":1}}],[\"引用传递\",{\"1\":{\"587\":1}}],[\"引力\",{\"1\":{\"279\":1}}],[\"引导类加载器先加载\",{\"1\":{\"715\":1}}],[\"引导人物在通道内进行左右交叉步的运动\",{\"1\":{\"236\":1}}],[\"引导线法\",{\"1\":{\"278\":1}}],[\"引导线不一定是具体的线\",{\"1\":{\"222\":1}}],[\"引导线构图法\",{\"0\":{\"222\":1}}],[\"引导线构图\",{\"0\":{\"58\":1}}],[\"引导观看顺序\",{\"1\":{\"50\":1}}],[\"神奇的黄金分割线\",{\"1\":{\"279\":1}}],[\"神圣\",{\"1\":{\"279\":1}}],[\"神秘\",{\"1\":{\"279\":1}}],[\"神北jk\",{\"1\":{\"125\":1}}],[\"螺旋线\",{\"1\":{\"279\":1}}],[\"规则\",{\"1\":{\"366\":1}}],[\"规范了文档于外部资源的关系\",{\"1\":{\"351\":1}}],[\"规律\",{\"1\":{\"279\":1}}],[\"规避杂乱\",{\"1\":{\"234\":1}}],[\"规避人的五官或身材缺点\",{\"1\":{\"136\":1}}],[\"规避繁杂\",{\"1\":{\"74\":1}}],[\"弧线\",{\"1\":{\"279\":1}}],[\"曲线\",{\"0\":{\"289\":1},\"1\":{\"279\":1}}],[\"曲线构图\",{\"0\":{\"62\":1}}],[\"诚实\",{\"1\":{\"279\":1}}],[\"刻板\",{\"1\":{\"279\":1}}],[\"挺拔\",{\"1\":{\"279\":1}}],[\"舍去多余物体\",{\"1\":{\"279\":1}}],[\"干什么\",{\"1\":{\"279\":1}}],[\"干净\",{\"1\":{\"51\":1,\"93\":1,\"127\":1}}],[\"非租约模式\",{\"1\":{\"970\":1}}],[\"非故障的节点在合理的时间内返回合理的响应\",{\"1\":{\"933\":1}}],[\"非阻塞的讨论对象是调用者\",{\"1\":{\"865\":1}}],[\"非阻塞\",{\"1\":{\"865\":1}}],[\"非精准统计\",{\"1\":{\"822\":1}}],[\"非聚簇索引一定回表查询吗\",{\"1\":{\"793\":1}}],[\"非聚簇索引的叶子节点并不一定存放数据的指针\",{\"1\":{\"793\":1}}],[\"非聚簇索引\",{\"1\":{\"793\":1}}],[\"非叶子节点只存储索引\",{\"1\":{\"793\":1}}],[\"非键字段\",{\"1\":{\"744\":1}}],[\"非boolean类型\",{\"1\":{\"728\":1}}],[\"非公平锁\",{\"1\":{\"660\":1,\"662\":1,\"669\":1}}],[\"非常适合于大数据场景下的去重计数需求\",{\"1\":{\"822\":1}}],[\"非常简单\",{\"1\":{\"519\":1}}],[\"非常重要\",{\"0\":{\"379\":1,\"552\":1}}],[\"非常规构图\",{\"1\":{\"60\":1}}],[\"非平衡法\",{\"1\":{\"278\":1}}],[\"十字法\",{\"1\":{\"278\":1}}],[\"十大影调\",{\"0\":{\"84\":1}}],[\"矩形选区工具\",{\"1\":{\"278\":1}}],[\"矩形选取工具\",{\"1\":{\"278\":1}}],[\"mm\",{\"1\":{\"557\":2}}],[\"my\",{\"1\":{\"919\":1,\"936\":1}}],[\"myisam都不支持\",{\"1\":{\"765\":1}}],[\"myisam\",{\"0\":{\"765\":1}}],[\"mysql的主键等天然的幂等功能\",{\"1\":{\"984\":1}}],[\"mysql的主从复制\",{\"1\":{\"800\":1}}],[\"mysql通过锁定机制和多版本并发控制\",{\"1\":{\"802\":1}}],[\"mysql通过将一系列sql语句封装在一个事务中来保证原子性\",{\"1\":{\"802\":1}}],[\"mysql实现事务处理是通过底层数据库引擎的支持\",{\"1\":{\"802\":1}}],[\"mysql是如何实现事物的\",{\"0\":{\"802\":1}}],[\"mysql会根据事务隔离级别采取相应的并发控制策略\",{\"1\":{\"802\":1}}],[\"mysql会根据sql情况\",{\"1\":{\"801\":1}}],[\"mysql会先将驱动表读出来放到join\",{\"1\":{\"796\":1}}],[\"mysql主从复制原理\",{\"0\":{\"800\":1}}],[\"mysql三大日志\",{\"0\":{\"799\":1}}],[\"mysql无法直接通过索引获取有序数据\",{\"1\":{\"796\":1}}],[\"mysql>\",{\"1\":{\"796\":1}}],[\"mysql默认索引结构为b+\",{\"1\":{\"793\":1}}],[\"mysql默认隔离级别\",{\"0\":{\"782\":1}}],[\"mysql索引\",{\"0\":{\"790\":1}}],[\"mysql锁\",{\"0\":{\"783\":1}}],[\"mysql8\",{\"1\":{\"782\":2}}],[\"mysql中主要是通过读写锁来实现并发控制\",{\"1\":{\"775\":1}}],[\"mysql事务\",{\"0\":{\"766\":1}}],[\"mysql基础\",{\"0\":{\"763\":1}}],[\"mysql字符集\",{\"0\":{\"761\":1}}],[\"mysql知识总结汇总\",{\"1\":{\"749\":1}}],[\"mysql\",{\"0\":{\"749\":1},\"1\":{\"796\":1,\"811\":1,\"977\":1},\"2\":{\"809\":1,\"810\":1}}],[\"mystacktest\",{\"1\":{\"522\":1}}],[\"mystack4\",{\"1\":{\"522\":5}}],[\"mystack3\",{\"1\":{\"522\":3}}],[\"mystack2\",{\"1\":{\"522\":2}}],[\"mystack\",{\"1\":{\"522\":13}}],[\"myclass\",{\"1\":{\"738\":2}}],[\"myobject\",{\"1\":{\"663\":12}}],[\"myqueuetest\",{\"1\":{\"523\":1}}],[\"myqueue3\",{\"1\":{\"523\":5}}],[\"myqueue2\",{\"1\":{\"523\":3}}],[\"myqueue\",{\"1\":{\"523\":12}}],[\"member=\",{\"1\":{\"824\":1}}],[\"member2\",{\"1\":{\"824\":2}}],[\"member1\",{\"1\":{\"824\":2}}],[\"member\",{\"1\":{\"819\":5,\"821\":5,\"824\":6}}],[\"memory等设置\",{\"1\":{\"567\":1}}],[\"memory\",{\"1\":{\"561\":2,\"831\":1}}],[\"message\",{\"1\":{\"588\":5,\"981\":1}}],[\"merge\",{\"1\":{\"561\":1}}],[\"media\",{\"1\":{\"466\":1}}],[\"media=\",{\"1\":{\"466\":1}}],[\"media和\",{\"1\":{\"466\":1}}],[\"metrics\",{\"1\":{\"824\":2}}],[\"meta\",{\"1\":{\"926\":2}}],[\"metaspacesize\",{\"1\":{\"722\":1}}],[\"metaspace\",{\"1\":{\"681\":1,\"737\":1}}],[\"metadata表示预加载元数据\",{\"1\":{\"460\":1}}],[\"metadata\",{\"1\":{\"460\":2,\"970\":1}}],[\"method属性等方式\",{\"1\":{\"890\":1}}],[\"method和destroy\",{\"1\":{\"890\":1}}],[\"method来定制bean的初始化和销毁逻辑\",{\"1\":{\"884\":1}}],[\"methodname\",{\"1\":{\"738\":2}}],[\"method\",{\"0\":{\"681\":1},\"1\":{\"410\":1,\"588\":10,\"600\":1,\"661\":4,\"663\":1,\"884\":1}}],[\"monitoring\",{\"1\":{\"727\":1}}],[\"monitorenter\",{\"1\":{\"662\":1}}],[\"monitorexit\",{\"1\":{\"661\":1,\"662\":1}}],[\"modify\",{\"1\":{\"753\":5,\"755\":1,\"808\":1}}],[\"modcount\",{\"1\":{\"644\":1}}],[\"model\",{\"1\":{\"895\":1}}],[\"mode\",{\"1\":{\"457\":3,\"788\":1}}],[\"moz\",{\"1\":{\"464\":2}}],[\"multiversion\",{\"1\":{\"802\":1}}],[\"multi\",{\"1\":{\"797\":1}}],[\"multiple>\",{\"1\":{\"461\":1}}],[\"multiple\",{\"1\":{\"410\":2,\"461\":1}}],[\"must\",{\"1\":{\"558\":1,\"559\":1}}],[\"muted\",{\"1\":{\"460\":2}}],[\"mp4\",{\"1\":{\"460\":1}}],[\"micrometer\",{\"1\":{\"931\":1}}],[\"mightcontain\",{\"1\":{\"833\":2}}],[\"mixed\",{\"1\":{\"801\":1}}],[\"mixins\",{\"1\":{\"469\":1}}],[\"milliseconds\",{\"1\":{\"671\":1,\"817\":1}}],[\"middle\",{\"1\":{\"458\":1}}],[\"ming\",{\"1\":{\"611\":3}}],[\"minindex\",{\"1\":{\"527\":4,\"528\":4}}],[\"minimum\",{\"1\":{\"470\":1,\"564\":1}}],[\"min\",{\"1\":{\"384\":1,\"466\":1,\"644\":1}}],[\"msgid\",{\"1\":{\"819\":5}}],[\"mso\",{\"1\":{\"464\":2}}],[\"ms\",{\"1\":{\"456\":1,\"464\":2,\"670\":3}}],[\"manager\",{\"1\":{\"967\":2,\"968\":2}}],[\"management\",{\"1\":{\"566\":1,\"567\":1}}],[\"mandatory\",{\"1\":{\"898\":1}}],[\"mark\",{\"0\":{\"689\":1},\"1\":{\"691\":2}}],[\"margin一般是用来设置兄弟元素之间的间距\",{\"1\":{\"387\":1}}],[\"margin的传递\",{\"1\":{\"387\":1}}],[\"margin包括四个方向\",{\"1\":{\"387\":1}}],[\"margin属性用于设置盒子的外边距\",{\"1\":{\"387\":1}}],[\"margin来说特殊一点\",{\"1\":{\"386\":1}}],[\"margin\",{\"1\":{\"358\":1,\"372\":1,\"383\":1,\"387\":17,\"406\":2,\"425\":6,\"431\":10,\"455\":2}}],[\"master节点选举\",{\"1\":{\"564\":1}}],[\"master节点负责管理集群范围内的元数据变更\",{\"1\":{\"564\":1}}],[\"master\",{\"1\":{\"564\":3,\"800\":2}}],[\"mapping\",{\"1\":{\"895\":1}}],[\"mappings\",{\"1\":{\"557\":1}}],[\"map=\",{\"1\":{\"824\":1}}],[\"map<string\",{\"1\":{\"824\":1,\"925\":1}}],[\"map<object\",{\"1\":{\"820\":1}}],[\"map<\",{\"1\":{\"645\":1}}],[\"map<k\",{\"1\":{\"644\":1}}],[\"map<integer\",{\"1\":{\"491\":1,\"633\":1}}],[\"map的区别\",{\"0\":{\"617\":1}}],[\"map集合包含hashmap\",{\"1\":{\"616\":1}}],[\"map\",{\"0\":{\"621\":1,\"627\":1},\"1\":{\"491\":4,\"617\":1,\"633\":8,\"645\":1,\"737\":1,\"824\":5}}],[\"maxmemory\",{\"1\":{\"831\":2}}],[\"maxmemory是bytes字节类型\",{\"1\":{\"831\":1}}],[\"maxmetaspacesize\",{\"1\":{\"738\":1}}],[\"maxheapsize\",{\"1\":{\"721\":1}}],[\"maxtenuringthreshold=15\",{\"1\":{\"721\":1}}],[\"maxtenuringthreshold\",{\"1\":{\"690\":1}}],[\"maxtenuringthreshold参数调整\",{\"1\":{\"684\":1}}],[\"maximumpoolsize\",{\"1\":{\"664\":2}}],[\"maximum\",{\"1\":{\"470\":1,\"644\":1,\"645\":2}}],[\"max\",{\"1\":{\"384\":1,\"466\":3,\"505\":1,\"664\":1,\"737\":1,\"853\":4,\"854\":1,\"856\":2,\"981\":1}}],[\"main线程会先执行\",{\"1\":{\"667\":1}}],[\"mainfontsize\",{\"1\":{\"469\":2}}],[\"main>\",{\"1\":{\"414\":1}}],[\"main\",{\"1\":{\"358\":2,\"387\":6,\"441\":1,\"444\":4,\"463\":3,\"505\":2,\"506\":1,\"507\":2,\"513\":2,\"514\":1,\"516\":2,\"517\":1,\"518\":1,\"519\":1,\"520\":1,\"522\":2,\"523\":1,\"528\":1,\"539\":1,\"582\":1,\"587\":1,\"663\":2,\"666\":1,\"667\":1,\"668\":1,\"670\":3,\"671\":5,\"726\":1,\"833\":1,\"926\":1}}],[\"mdn\",{\"1\":{\"358\":1,\"465\":1}}],[\"mvc能够将业务逻辑和视图展示分离\",{\"1\":{\"895\":1}}],[\"mvc中\",{\"1\":{\"895\":1}}],[\"mvc是spring框架中用于构建web应用程序的一部分\",{\"1\":{\"895\":1}}],[\"mvc的核心是dispatcherservlet\",{\"1\":{\"895\":1}}],[\"mvc的核心组件\",{\"0\":{\"894\":1}}],[\"mvc的工作原理\",{\"1\":{\"895\":1}}],[\"mvc的原理\",{\"0\":{\"895\":1}}],[\"mvc\",{\"0\":{\"893\":1}}],[\"mvcc\",{\"0\":{\"776\":1,\"797\":1},\"1\":{\"797\":1,\"802\":2}}],[\"mv\",{\"0\":{\"320\":1},\"1\":{\"320\":3}}],[\"mkdir\",{\"0\":{\"317\":1}}],[\"m\",{\"1\":{\"278\":1,\"330\":1,\"645\":2,\"726\":1,\"731\":1}}],[\"m档\",{\"1\":{\"277\":1}}],[\"裁切扩展\",{\"1\":{\"278\":1}}],[\"裁切\",{\"1\":{\"278\":1,\"279\":1}}],[\"裁剪特写\",{\"1\":{\"254\":1}}],[\"裁剪工具\",{\"0\":{\"250\":1}}],[\"宏伟\",{\"1\":{\"278\":1}}],[\"宏大场景构建\",{\"0\":{\"193\":1}}],[\"宏大\",{\"1\":{\"121\":1}}],[\"解码\",{\"1\":{\"953\":1}}],[\"解析\",{\"1\":{\"712\":1,\"713\":1}}],[\"解析这三个阶段称为连接\",{\"1\":{\"712\":1}}],[\"解答\",{\"1\":{\"623\":1}}],[\"解题二\",{\"1\":{\"507\":1}}],[\"解题1\",{\"1\":{\"507\":1}}],[\"解题思路\",{\"1\":{\"497\":1,\"824\":1}}],[\"解题\",{\"0\":{\"494\":1,\"497\":1}}],[\"解压到指定目录\",{\"1\":{\"326\":1}}],[\"解压\",{\"1\":{\"326\":1}}],[\"解压文件\",{\"1\":{\"326\":1}}],[\"解决了雪花算法时钟回拨问题\",{\"1\":{\"939\":1}}],[\"解决了select缺点中的前两条\",{\"1\":{\"868\":1}}],[\"解决了上面两种树的缺点\",{\"1\":{\"793\":1}}],[\"解决方案\",{\"0\":{\"879\":1},\"1\":{\"848\":1,\"849\":1,\"981\":1,\"983\":1,\"984\":1}}],[\"解决方法\",{\"1\":{\"737\":4,\"982\":1}}],[\"解决布隆过滤器不能删除元素的问题\",{\"1\":{\"833\":1}}],[\"解决缓存穿透问题\",{\"1\":{\"833\":1}}],[\"解决思路\",{\"1\":{\"823\":1}}],[\"解决思路是追加版本号或时间戳\",{\"1\":{\"669\":1}}],[\"解决问题\",{\"0\":{\"736\":1},\"1\":{\"738\":1}}],[\"解决循环依赖问题\",{\"1\":{\"687\":1}}],[\"解决并发问题\",{\"1\":{\"663\":1}}],[\"解决链化很长的问题\",{\"1\":{\"642\":1}}],[\"解决浮动高度塌陷问题\",{\"1\":{\"465\":1}}],[\"解决margin的折叠问题\",{\"1\":{\"465\":1}}],[\"解决\",{\"1\":{\"299\":1,\"835\":1,\"836\":1,\"837\":1}}],[\"解决依据\",{\"1\":{\"278\":1}}],[\"解释说明\",{\"0\":{\"678\":1}}],[\"解释如下\",{\"1\":{\"611\":1}}],[\"解释\",{\"1\":{\"256\":1,\"406\":1,\"490\":1,\"796\":1}}],[\"衬体\",{\"1\":{\"278\":1}}],[\"档\",{\"1\":{\"277\":1}}],[\"snowflake算法的缺点包括\",{\"1\":{\"938\":1}}],[\"snowflake算法的实现比较简单\",{\"1\":{\"938\":1}}],[\"snowflake算法的优点包括\",{\"1\":{\"938\":1}}],[\"snowflake算法的核心思想是将一个64位的整数id分成三部分\",{\"1\":{\"938\":1}}],[\"snowflake\",{\"1\":{\"938\":1}}],[\"snapshotting\",{\"1\":{\"859\":1}}],[\"sdk向nacos\",{\"1\":{\"971\":1}}],[\"sdk\",{\"1\":{\"970\":3,\"971\":1}}],[\"sdiff\",{\"1\":{\"819\":3}}],[\"sds\",{\"1\":{\"817\":1,\"852\":1}}],[\"srandmember\",{\"1\":{\"819\":3}}],[\"srem\",{\"1\":{\"819\":2}}],[\"src=\",{\"1\":{\"425\":1,\"460\":1,\"469\":1}}],[\"src\",{\"1\":{\"417\":1,\"460\":2}}],[\"sleuth\",{\"1\":{\"931\":1}}],[\"sleep\",{\"0\":{\"653\":1},\"1\":{\"653\":4,\"663\":5,\"666\":1,\"670\":9,\"671\":10,\"822\":1}}],[\"slots\",{\"1\":{\"872\":1}}],[\"slave\",{\"1\":{\"800\":2}}],[\"sql调优优化\",{\"0\":{\"804\":1}}],[\"sql语句来手动控制事务的边界\",{\"1\":{\"802\":1}}],[\"sql\",{\"1\":{\"798\":1,\"968\":1}}],[\"sql标准定义了哪些事务隔离级别\",{\"0\":{\"777\":1}}],[\"sql会根据连接条件生成一张新的临时表\",{\"1\":{\"747\":1}}],[\"sweep\",{\"0\":{\"689\":1},\"1\":{\"691\":1}}],[\"swap1\",{\"1\":{\"528\":2,\"531\":2}}],[\"swap\",{\"1\":{\"497\":3,\"527\":2,\"587\":2,\"878\":1}}],[\"singletonfactories\",{\"1\":{\"925\":1}}],[\"singletonobjects\",{\"1\":{\"925\":1}}],[\"singleton\",{\"1\":{\"889\":2,\"907\":1}}],[\"sinter\",{\"1\":{\"819\":2}}],[\"sign\",{\"1\":{\"823\":8}}],[\"signal\",{\"1\":{\"671\":5}}],[\"sismember\",{\"1\":{\"819\":2}}],[\"simple\",{\"1\":{\"670\":1,\"796\":1}}],[\"simpledateformat\",{\"1\":{\"663\":1}}],[\"sizing\",{\"0\":{\"393\":1},\"1\":{\"387\":2,\"416\":1}}],[\"size系统变量\",{\"1\":{\"796\":1}}],[\"size控制每个分片上桶的数量\",{\"1\":{\"567\":1}}],[\"size++\",{\"1\":{\"504\":1}}],[\"size的尺寸\",{\"1\":{\"473\":1}}],[\"size的一半\",{\"1\":{\"361\":1}}],[\"size大小\",{\"1\":{\"473\":2}}],[\"size不同\",{\"1\":{\"472\":1}}],[\"size尺寸被篡改\",{\"1\":{\"473\":1}}],[\"size尺寸\",{\"1\":{\"472\":1}}],[\"size来设置的\",{\"1\":{\"472\":1}}],[\"size设置为0\",{\"1\":{\"430\":1}}],[\"size=\",{\"1\":{\"410\":1}}],[\"size后面\",{\"1\":{\"366\":1}}],[\"size计算\",{\"1\":{\"361\":1}}],[\"size\",{\"0\":{\"361\":1,\"400\":1,\"472\":1},\"1\":{\"348\":2,\"349\":1,\"366\":2,\"372\":1,\"376\":1,\"400\":3,\"403\":1,\"423\":2,\"431\":1,\"451\":1,\"467\":2,\"469\":1,\"471\":1,\"472\":3,\"473\":2,\"504\":9,\"506\":6,\"513\":22,\"516\":22,\"517\":9,\"518\":13,\"519\":1,\"520\":17,\"522\":9,\"523\":4,\"539\":19,\"558\":2,\"559\":1,\"562\":1,\"644\":1,\"804\":2,\"854\":1}}],[\"s6\",{\"1\":{\"611\":11}}],[\"s5\",{\"1\":{\"611\":5}}],[\"s4\",{\"1\":{\"611\":3}}],[\"s3\",{\"1\":{\"611\":3}}],[\"s2\",{\"1\":{\"611\":11,\"819\":4}}],[\"s1\",{\"0\":{\"610\":1},\"1\":{\"611\":13,\"819\":4}}],[\"smembers\",{\"1\":{\"819\":2}}],[\"sms\",{\"1\":{\"808\":2}}],[\"smsserviceimpl\",{\"1\":{\"588\":2}}],[\"smsservice\",{\"1\":{\"588\":6}}],[\"small\",{\"1\":{\"366\":1}}],[\"ss\",{\"1\":{\"557\":1,\"582\":4}}],[\"sys\",{\"1\":{\"737\":1}}],[\"system\",{\"1\":{\"505\":5,\"506\":2,\"507\":4,\"513\":5,\"514\":1,\"516\":5,\"517\":2,\"518\":2,\"519\":2,\"520\":3,\"522\":9,\"523\":4,\"528\":1,\"539\":2,\"573\":1,\"579\":2,\"582\":1,\"587\":4,\"588\":3,\"597\":2,\"599\":1,\"606\":4,\"609\":1,\"611\":5,\"633\":6,\"661\":2,\"663\":16,\"666\":2,\"667\":9,\"668\":2,\"670\":37,\"671\":19,\"796\":2,\"833\":2}}],[\"sync\",{\"1\":{\"670\":1}}],[\"synchronized在修饰方法和代码块在字节码上实现方式有很大差异\",{\"1\":{\"672\":1}}],[\"synchronized锁升级过程总结\",{\"1\":{\"672\":1}}],[\"synchronizeddemo2\",{\"1\":{\"661\":1}}],[\"synchronizeddemo\",{\"1\":{\"661\":1}}],[\"synchronized底层原理\",{\"1\":{\"661\":1}}],[\"synchronized\",{\"0\":{\"661\":1,\"662\":1,\"672\":1},\"1\":{\"661\":9,\"662\":5,\"669\":1,\"671\":4,\"840\":1}}],[\"syn+ack\",{\"1\":{\"552\":1}}],[\"syn\",{\"1\":{\"552\":3}}],[\"sz\",{\"1\":{\"519\":3}}],[\"sunion\",{\"1\":{\"819\":1}}],[\"survivor区\",{\"1\":{\"683\":2}}],[\"survivor\",{\"1\":{\"683\":2}}],[\"supported\",{\"1\":{\"898\":1}}],[\"supports\",{\"1\":{\"898\":1}}],[\"supplier\",{\"1\":{\"670\":2}}],[\"supplier<u>\",{\"1\":{\"670\":2}}],[\"supplyasync\",{\"1\":{\"670\":12}}],[\"super\",{\"1\":{\"581\":1}}],[\"subquery\",{\"1\":{\"796\":2}}],[\"subscribing\",{\"1\":{\"564\":1}}],[\"submit\",{\"1\":{\"410\":3,\"664\":1}}],[\"sum\",{\"1\":{\"494\":3,\"558\":1}}],[\"saga\",{\"1\":{\"968\":1}}],[\"save\",{\"1\":{\"859\":3,\"860\":1}}],[\"sadd\",{\"1\":{\"819\":6}}],[\"sacc函数\",{\"1\":{\"472\":1}}],[\"sacle\",{\"1\":{\"454\":1,\"457\":2}}],[\"sass\",{\"1\":{\"469\":2}}],[\"safari\",{\"1\":{\"464\":1}}],[\"skywalking实现了跨越分布式系统各个服务和组件的链路追踪\",{\"1\":{\"977\":1}}],[\"skywalking提供了一个ui界面\",{\"1\":{\"977\":1}}],[\"skywalking通过传递跟踪上下文\",{\"1\":{\"977\":1}}],[\"skywalking\",{\"0\":{\"976\":1,\"977\":1},\"1\":{\"977\":2}}],[\"skyblue\",{\"1\":{\"358\":1,\"387\":3,\"441\":1,\"442\":1,\"453\":1}}],[\"skiplist\",{\"1\":{\"856\":1}}],[\"skew\",{\"1\":{\"454\":4}}],[\"scope\",{\"0\":{\"907\":1},\"1\":{\"889\":2,\"907\":1}}],[\"scope=\",{\"1\":{\"889\":1}}],[\"scope管理\",{\"1\":{\"884\":1}}],[\"score\",{\"1\":{\"821\":2}}],[\"schema=\",{\"1\":{\"753\":2}}],[\"schema\",{\"1\":{\"753\":2}}],[\"scard\",{\"1\":{\"819\":3}}],[\"scavenge与parnew一个重要区别\",{\"1\":{\"704\":1}}],[\"scavenge\",{\"0\":{\"704\":1},\"1\":{\"697\":1}}],[\"scanner\",{\"1\":{\"573\":5}}],[\"scalable\",{\"1\":{\"470\":1}}],[\"scale\",{\"1\":{\"454\":4,\"470\":3,\"566\":1}}],[\"scale=1\",{\"1\":{\"358\":1,\"387\":3,\"416\":1,\"423\":1,\"425\":2,\"431\":3,\"436\":1,\"441\":1,\"442\":1,\"453\":1}}],[\"scss的语法包括变量\",{\"1\":{\"469\":1}}],[\"scss\",{\"0\":{\"469\":1},\"1\":{\"469\":1}}],[\"script\",{\"1\":{\"558\":1}}],[\"script>\",{\"1\":{\"461\":1,\"469\":1}}],[\"screen\",{\"1\":{\"466\":1}}],[\"scroll\",{\"1\":{\"402\":1}}],[\"stop\",{\"1\":{\"693\":1,\"707\":1,\"710\":1,\"818\":1,\"821\":1}}],[\"stw是jvm在后台自动发起和自动完成的\",{\"1\":{\"710\":1}}],[\"stw\",{\"0\":{\"710\":1},\"1\":{\"691\":1,\"707\":2}}],[\"study\",{\"1\":{\"504\":1,\"505\":2,\"506\":1,\"513\":3,\"516\":3,\"517\":1,\"522\":4,\"523\":3,\"539\":1}}],[\"strlen\",{\"1\":{\"817\":1,\"823\":1}}],[\"structure\",{\"1\":{\"522\":2}}],[\"string底层结构\",{\"0\":{\"852\":1}}],[\"stringredistemplate\",{\"1\":{\"840\":1}}],[\"stringfunnel\",{\"1\":{\"833\":1}}],[\"string>\",{\"1\":{\"633\":2}}],[\"string不可变\",{\"1\":{\"608\":1}}],[\"stringbuffer\",{\"0\":{\"608\":1},\"1\":{\"608\":1}}],[\"stringbuilder的区别\",{\"0\":{\"608\":1}}],[\"stringbuilder\",{\"1\":{\"504\":2,\"505\":2,\"506\":2,\"507\":2,\"513\":4,\"516\":4,\"517\":2,\"518\":2,\"519\":2,\"520\":2,\"539\":2,\"608\":1}}],[\"string\",{\"0\":{\"608\":1,\"610\":2,\"611\":1,\"817\":1},\"1\":{\"504\":2,\"505\":3,\"506\":3,\"507\":3,\"513\":5,\"514\":3,\"516\":5,\"517\":3,\"518\":3,\"519\":3,\"520\":3,\"522\":2,\"523\":1,\"528\":1,\"539\":3,\"575\":6,\"582\":2,\"587\":1,\"588\":4,\"600\":1,\"603\":1,\"606\":6,\"609\":2,\"610\":7,\"611\":10,\"663\":2,\"666\":2,\"667\":3,\"668\":2,\"670\":3,\"671\":5,\"715\":1,\"822\":1,\"824\":8,\"833\":1,\"852\":1,\"915\":1,\"918\":1,\"919\":3,\"920\":1,\"926\":1,\"960\":1,\"963\":1}}],[\"stretch\",{\"1\":{\"445\":1,\"446\":1,\"448\":1}}],[\"strongreference\",{\"1\":{\"663\":2}}],[\"strong>\",{\"1\":{\"425\":1}}],[\"strong\",{\"1\":{\"392\":1,\"425\":1}}],[\"stackoverflowerror\",{\"1\":{\"682\":1}}],[\"stack1\",{\"1\":{\"523\":8}}],[\"stack2\",{\"1\":{\"523\":19}}],[\"stack和vector之间的关系\",{\"1\":{\"521\":1}}],[\"stack也有这样的能力\",{\"1\":{\"521\":1}}],[\"stack继承了vector\",{\"1\":{\"521\":1}}],[\"stack<>\",{\"1\":{\"514\":1,\"521\":1,\"523\":6}}],[\"stack<character>\",{\"1\":{\"514\":1}}],[\"stack<integer>\",{\"1\":{\"505\":1,\"521\":1,\"523\":6}}],[\"stack<e>\",{\"1\":{\"505\":2,\"521\":1}}],[\"stack\",{\"0\":{\"682\":1},\"1\":{\"505\":9,\"512\":1,\"513\":10,\"514\":6,\"521\":7,\"522\":6,\"523\":25,\"682\":1}}],[\"stats\",{\"1\":{\"566\":1}}],[\"statistics\",{\"1\":{\"727\":1}}],[\"statistic\",{\"1\":{\"557\":3,\"558\":1,\"559\":1}}],[\"static\",{\"1\":{\"422\":1,\"490\":1,\"491\":1,\"494\":1,\"505\":3,\"506\":1,\"507\":2,\"513\":2,\"514\":2,\"516\":2,\"517\":1,\"518\":1,\"519\":1,\"520\":1,\"522\":2,\"523\":1,\"527\":2,\"528\":3,\"531\":1,\"532\":1,\"539\":1,\"575\":1,\"579\":1,\"582\":3,\"587\":2,\"588\":1,\"644\":7,\"661\":1,\"663\":6,\"664\":3,\"666\":1,\"667\":1,\"668\":1,\"670\":12,\"671\":14,\"824\":1,\"833\":1,\"919\":1,\"926\":1}}],[\"statement\",{\"1\":{\"801\":2}}],[\"state变量+clh双端队列\",{\"1\":{\"665\":1}}],[\"state\",{\"1\":{\"457\":1,\"934\":1}}],[\"starter\",{\"1\":{\"923\":1}}],[\"starttime\",{\"1\":{\"505\":2,\"670\":6}}],[\"start对齐\",{\"1\":{\"445\":1,\"446\":1}}],[\"start\",{\"1\":{\"441\":1,\"442\":1,\"444\":5,\"445\":1,\"446\":4,\"448\":1,\"497\":2,\"656\":1,\"666\":1,\"667\":2,\"668\":1,\"671\":17,\"818\":1,\"821\":1,\"822\":1}}],[\"sticky是相对于最近的滚动祖先包含视口的\",{\"1\":{\"426\":1}}],[\"sticky\",{\"1\":{\"422\":1,\"426\":2}}],[\"stylus\",{\"1\":{\"469\":1}}],[\"stylle>\",{\"1\":{\"374\":1}}],[\"style是上面4个属性的简写属性\",{\"1\":{\"386\":1}}],[\"style>\",{\"1\":{\"358\":1,\"362\":1,\"369\":1,\"371\":2,\"373\":2,\"377\":1,\"387\":3,\"416\":1,\"423\":1,\"425\":2,\"431\":3,\"436\":1,\"441\":1,\"442\":1,\"453\":1,\"463\":1,\"466\":2}}],[\"style\",{\"0\":{\"364\":1},\"1\":{\"351\":1,\"366\":2,\"386\":4,\"406\":2,\"431\":1,\"463\":1}}],[\"stylesheet\",{\"1\":{\"351\":2,\"466\":1,\"469\":1}}],[\"sping\",{\"0\":{\"883\":1}}],[\"spop\",{\"1\":{\"819\":3}}],[\"split\",{\"1\":{\"564\":1}}],[\"specific\",{\"1\":{\"562\":1}}],[\"speech\",{\"1\":{\"466\":1}}],[\"springapplication\",{\"1\":{\"926\":3}}],[\"spring内部通过三级缓存来解决循环依赖\",{\"1\":{\"925\":1}}],[\"spring会抛出beancurrentlyincreationexception异常\",{\"1\":{\"924\":1}}],[\"spring会使用cglib生成一个被代理对象的子类来作为代理\",{\"1\":{\"892\":1}}],[\"springfactoriesloader\",{\"1\":{\"923\":1}}],[\"springboot的启动流程\",{\"0\":{\"926\":1}}],[\"springboot\",{\"0\":{\"921\":1,\"923\":1},\"1\":{\"923\":1}}],[\"springbootapplication\",{\"0\":{\"902\":1}}],[\"springboot常用注解\",{\"0\":{\"901\":1}}],[\"spring中的jdbctemplate\",{\"1\":{\"900\":1}}],[\"spring的事务隔离级别\",{\"0\":{\"899\":1}}],[\"spring事务的传播行为\",{\"0\":{\"898\":1}}],[\"spring框架中的bean生命周期包括以下几个阶段\",{\"1\":{\"890\":1}}],[\"spring容器会调用bean的初始化方法\",{\"1\":{\"890\":1}}],[\"spring容器会通过依赖注入或者调用setter方法来设置bean的属性\",{\"1\":{\"890\":1}}],[\"spring容器支持多种作用域\",{\"1\":{\"884\":1}}],[\"spring容器在启动时会读取配置信息\",{\"1\":{\"884\":1}}],[\"spring还支持自动装配\",{\"1\":{\"884\":1}}],[\"spring+springboot\",{\"0\":{\"882\":1}}],[\"springcloud\",{\"0\":{\"930\":1,\"931\":1,\"935\":1},\"1\":{\"811\":1,\"931\":3},\"2\":{\"978\":1,\"979\":1}}],[\"spring\",{\"0\":{\"885\":1,\"891\":1,\"893\":1,\"894\":1,\"895\":1,\"897\":1,\"900\":1,\"901\":1,\"903\":1,\"924\":1,\"925\":1,\"927\":1,\"936\":1},\"1\":{\"663\":1,\"811\":1,\"884\":6,\"892\":2,\"895\":3,\"900\":3,\"902\":1,\"923\":7,\"924\":2,\"926\":11,\"936\":1,\"970\":4,\"972\":4},\"2\":{\"928\":1}}],[\"sprite\",{\"1\":{\"419\":1}}],[\"spritecow\",{\"1\":{\"419\":1}}],[\"spread\",{\"1\":{\"390\":1}}],[\"space异常\",{\"1\":{\"683\":1}}],[\"space\",{\"0\":{\"462\":1},\"1\":{\"395\":1,\"444\":3,\"446\":3,\"453\":1,\"462\":2,\"469\":1,\"681\":1,\"683\":6,\"737\":2}}],[\"spacing\",{\"0\":{\"359\":2},\"1\":{\"359\":1}}],[\"span包含了操作的详细信息\",{\"1\":{\"977\":1}}],[\"span与trace概念\",{\"1\":{\"977\":1}}],[\"span>\",{\"1\":{\"373\":1,\"423\":2,\"425\":1}}],[\"span\",{\"1\":{\"370\":2,\"378\":1,\"392\":1,\"423\":1,\"430\":1,\"977\":1}}],[\"spark学习知识\",{\"1\":{\"342\":1}}],[\"spark学习\",{\"0\":{\"342\":1}}],[\"spark\",{\"0\":{\"341\":1},\"1\":{\"340\":1}}],[\"soft\",{\"1\":{\"934\":1}}],[\"softreference<>\",{\"1\":{\"663\":2}}],[\"softreference<myobject>\",{\"1\":{\"663\":2}}],[\"softreference\",{\"1\":{\"663\":3}}],[\"soft会被回收的情况\",{\"1\":{\"663\":2}}],[\"solution2\",{\"1\":{\"507\":2}}],[\"solution\",{\"1\":{\"507\":2,\"509\":2,\"514\":3}}],[\"solid\",{\"1\":{\"386\":1,\"388\":1,\"416\":1,\"469\":2}}],[\"source和其他html元素指定特定的媒体类型\",{\"1\":{\"466\":1}}],[\"sortascending\",{\"1\":{\"824\":2}}],[\"sortedmap\",{\"1\":{\"616\":1}}],[\"sort\",{\"1\":{\"332\":1,\"494\":1,\"625\":1}}],[\"svg\",{\"1\":{\"374\":1}}],[\"session\",{\"1\":{\"884\":1,\"889\":2}}],[\"sentinelresource\",{\"0\":{\"963\":1},\"1\":{\"963\":3}}],[\"sentinel会考虑实例的健康状况\",{\"1\":{\"871\":1}}],[\"sentinel还可以进行故障恢复\",{\"1\":{\"871\":1}}],[\"sentinel是一个用于监控和管理redis实例的工具\",{\"1\":{\"871\":1}}],[\"sentinel\",{\"0\":{\"962\":1},\"1\":{\"871\":4,\"931\":1,\"956\":1,\"963\":1}}],[\"send后添加回调函数\",{\"1\":{\"982\":1}}],[\"send\",{\"1\":{\"552\":1,\"588\":7,\"982\":1}}],[\"semaphore\",{\"0\":{\"666\":1},\"1\":{\"666\":5}}],[\"seconds\",{\"1\":{\"663\":5,\"664\":1,\"666\":1,\"670\":7,\"671\":9,\"817\":1,\"822\":1,\"840\":1}}],[\"second\",{\"1\":{\"579\":5}}],[\"section\",{\"1\":{\"459\":1}}],[\"seata提供了rm代理\",{\"1\":{\"968\":1}}],[\"seata\",{\"0\":{\"965\":1},\"1\":{\"931\":1,\"968\":5}}],[\"seach\",{\"1\":{\"582\":1}}],[\"seach1\",{\"1\":{\"579\":1,\"582\":2}}],[\"search\",{\"1\":{\"346\":1,\"558\":1,\"559\":1,\"562\":2}}],[\"segment\",{\"1\":{\"561\":2}}],[\"service\",{\"0\":{\"905\":1},\"1\":{\"886\":1,\"902\":1,\"951\":1}}],[\"server之间的数据同步采用raft一致性算法保证数据的强一致性\",{\"1\":{\"971\":1}}],[\"server根据服务名查找对应的服务实例集合\",{\"1\":{\"971\":1}}],[\"server在指定时间内未收到服务实例的心跳\",{\"1\":{\"971\":1}}],[\"server发起服务发现请求\",{\"1\":{\"971\":1}}],[\"server发起注册请求\",{\"1\":{\"971\":1}}],[\"server发送心跳\",{\"1\":{\"971\":1}}],[\"server还支持持久化到磁盘或数据库\",{\"1\":{\"971\":1}}],[\"server接收这些信息并存储在内部的数据结构中\",{\"1\":{\"971\":1}}],[\"server\",{\"1\":{\"552\":3,\"970\":3}}],[\"serial\",{\"0\":{\"702\":1,\"705\":1},\"1\":{\"696\":3}}],[\"serialversionuid\",{\"1\":{\"644\":1}}],[\"serializable\",{\"1\":{\"644\":1,\"781\":1,\"899\":3}}],[\"serif\",{\"1\":{\"366\":1}}],[\"seq=y\",{\"1\":{\"552\":2}}],[\"seq=x\",{\"1\":{\"552\":3}}],[\"set底层结构\",{\"0\":{\"855\":1}}],[\"setifabsent\",{\"1\":{\"840\":1}}],[\"setbit\",{\"1\":{\"823\":11}}],[\"setnx只加了锁\",{\"1\":{\"840\":1}}],[\"setnx\",{\"1\":{\"817\":1}}],[\"set维护排行榜\",{\"1\":{\"815\":1}}],[\"setter属性循环依赖是指bean\",{\"1\":{\"924\":1}}],[\"setter属性循环依赖\",{\"1\":{\"924\":1}}],[\"setter注入则是通过setter方法在bean创建后设置依赖对象\",{\"1\":{\"884\":1}}],[\"setter\",{\"1\":{\"884\":1,\"919\":2,\"920\":1}}],[\"setthreadnameprefix\",{\"1\":{\"664\":1}}],[\"settings\",{\"1\":{\"557\":1,\"565\":1}}],[\"setrejectedexecutionhandler\",{\"1\":{\"664\":1}}],[\"setkeepaliveseconds\",{\"1\":{\"664\":1}}],[\"setmaxpoolsize\",{\"1\":{\"664\":1}}],[\"setqueuecapacity\",{\"1\":{\"664\":1}}],[\"setcorepoolsize\",{\"1\":{\"664\":1}}],[\"set<map\",{\"1\":{\"644\":1}}],[\"set\",{\"0\":{\"617\":1,\"620\":1,\"624\":1,\"819\":1},\"1\":{\"504\":2,\"513\":1,\"516\":1,\"539\":1,\"617\":1,\"663\":1,\"671\":1,\"751\":3,\"808\":1,\"817\":3,\"831\":1,\"853\":2,\"855\":1}}],[\"self\",{\"0\":{\"448\":1},\"1\":{\"440\":1,\"448\":1}}],[\"select方式\",{\"1\":{\"867\":1}}],[\"select要快照读的时候\",{\"1\":{\"797\":1}}],[\"selectsort1\",{\"1\":{\"528\":2}}],[\"selectsort\",{\"1\":{\"527\":1}}],[\"select>\",{\"1\":{\"410\":1,\"461\":1}}],[\"select\",{\"0\":{\"867\":1},\"1\":{\"410\":1,\"746\":1,\"753\":2,\"782\":2,\"788\":2,\"796\":8,\"807\":1,\"866\":1,\"867\":1,\"868\":2}}],[\"selected>苹果<\",{\"1\":{\"410\":1}}],[\"selected\",{\"1\":{\"410\":1}}],[\"seo优化\",{\"1\":{\"549\":1}}],[\"seo\",{\"0\":{\"346\":1},\"1\":{\"346\":1}}],[\"shopcar\",{\"1\":{\"820\":5}}],[\"short\",{\"1\":{\"598\":1,\"599\":1}}],[\"shutdown\",{\"1\":{\"664\":1}}],[\"sh文件\",{\"1\":{\"557\":1}}],[\"share\",{\"1\":{\"788\":1}}],[\"sharedclassloader\",{\"1\":{\"716\":1}}],[\"shard\",{\"1\":{\"566\":1}}],[\"shardingsphere生态的一部分\",{\"1\":{\"974\":1}}],[\"sharding\",{\"1\":{\"565\":1}}],[\"shards\",{\"1\":{\"557\":1}}],[\"shadow\",{\"0\":{\"390\":1,\"391\":1},\"1\":{\"390\":1,\"391\":1}}],[\"shrink的值\",{\"1\":{\"452\":1}}],[\"shrink||flex\",{\"1\":{\"452\":1}}],[\"shrink属性才会有效\",{\"1\":{\"450\":1}}],[\"shrink\",{\"0\":{\"450\":1},\"1\":{\"440\":1,\"450\":1,\"452\":2}}],[\"sh\",{\"1\":{\"332\":1}}],[\"s\",{\"1\":{\"277\":1,\"410\":1,\"456\":1,\"505\":1,\"514\":8,\"610\":3}}],[\"挡\",{\"1\":{\"277\":1}}],[\"挡住后面的杂乱\",{\"1\":{\"234\":1}}],[\"劣势\",{\"1\":{\"276\":1}}],[\"肖像照\",{\"1\":{\"276\":1}}],[\"简化了服务发现过程\",{\"1\":{\"971\":1}}],[\"简要案情\",{\"1\":{\"751\":1}}],[\"简称\",{\"1\":{\"871\":1}}],[\"简称带头大哥不能死\",{\"1\":{\"794\":1}}],[\"简称jstat\",{\"1\":{\"727\":1}}],[\"简称stw\",{\"1\":{\"710\":1}}],[\"简称子绝父相\",{\"1\":{\"425\":1}}],[\"简单易用\",{\"1\":{\"938\":1}}],[\"简单来说就是key突然失效了\",{\"1\":{\"837\":1}}],[\"简单来说就是数据的发送与接收\",{\"1\":{\"552\":1}}],[\"简单动态字符串\",{\"1\":{\"817\":1,\"852\":2}}],[\"简单查询\",{\"1\":{\"796\":1}}],[\"简单高效\",{\"1\":{\"546\":1}}],[\"简单翻译\",{\"1\":{\"521\":1}}],[\"简单选择器\",{\"0\":{\"368\":1}}],[\"简写属性\",{\"1\":{\"456\":1}}],[\"简而言之就是将java类的字节码文件加载到机器内存中\",{\"1\":{\"712\":1}}],[\"简而言之\",{\"1\":{\"276\":1}}],[\"简洁明确\",{\"1\":{\"51\":1}}],[\"夜景\",{\"1\":{\"275\":1}}],[\"夜晚光源较为复杂\",{\"1\":{\"81\":1}}],[\"夜晚\",{\"1\":{\"81\":1}}],[\"傍晚\",{\"1\":{\"275\":1}}],[\"噪点少\",{\"1\":{\"275\":1}}],[\"噪点多\",{\"1\":{\"275\":1}}],[\"商品总数\",{\"1\":{\"820\":1}}],[\"商业人像\",{\"1\":{\"274\":1}}],[\"商家\",{\"1\":{\"125\":1}}],[\"产生原因\",{\"1\":{\"981\":1}}],[\"产生内存碎片\",{\"1\":{\"689\":1}}],[\"产生跨过门槛进入画面的感受\",{\"1\":{\"223\":1}}],[\"产品图片\",{\"1\":{\"403\":1}}],[\"产品\",{\"1\":{\"274\":1}}],[\"静态方法\",{\"1\":{\"671\":1}}],[\"静态定位\",{\"1\":{\"422\":1}}],[\"静态的二维照片由于快门的控制具有了时间的流动感\",{\"1\":{\"70\":1}}],[\"静物拍摄\",{\"1\":{\"277\":1}}],[\"静物需要突出主体\",{\"1\":{\"274\":1}}],[\"车里有一台发动机\",{\"1\":{\"521\":1}}],[\"车轨\",{\"1\":{\"273\":1}}],[\"车灯\",{\"1\":{\"81\":1,\"85\":1}}],[\"瀑布水流拉丝效果\",{\"1\":{\"273\":1}}],[\"行锁分类\",{\"1\":{\"785\":1}}],[\"行级锁\",{\"0\":{\"785\":1},\"1\":{\"775\":1,\"789\":1}}],[\"行插入和删除\",{\"1\":{\"521\":1}}],[\"行盒\",{\"1\":{\"458\":1}}],[\"行内块元素\",{\"1\":{\"465\":1}}],[\"行内块级的很多特性都会消失\",{\"1\":{\"425\":1}}],[\"行内级盒子的中心点与父盒基线加上x\",{\"1\":{\"458\":1}}],[\"行内级内容将会被浮动元素推出\",{\"1\":{\"430\":1}}],[\"行内级\",{\"1\":{\"425\":1}}],[\"行内级元素的布局属于inline\",{\"1\":{\"465\":1}}],[\"行内级元素不能进行形变\",{\"1\":{\"454\":1}}],[\"行内级元素\",{\"1\":{\"378\":1,\"379\":1,\"387\":1,\"430\":1,\"455\":1}}],[\"行内非替换元素的注意事项\",{\"0\":{\"392\":1}}],[\"行内替换元素\",{\"1\":{\"379\":1}}],[\"行内样式\",{\"1\":{\"347\":1}}],[\"行高对行内非替换元素是无效的\",{\"1\":{\"365\":1}}],[\"行高是可以继承的\",{\"1\":{\"365\":1}}],[\"行高可以先简单理解为一行文字所占据的高度\",{\"1\":{\"365\":1}}],[\"行人\",{\"1\":{\"273\":1}}],[\"行动状态也会不同\",{\"1\":{\"134\":1}}],[\"吃的是一段时间的光\",{\"1\":{\"273\":1}}],[\"吃的是一瞬间的关\",{\"1\":{\"273\":1}}],[\"慢\",{\"1\":{\"273\":1}}],[\"慢门拍摄\",{\"1\":{\"127\":1}}],[\"思考\",{\"0\":{\"267\":1},\"1\":{\"453\":1,\"458\":1}}],[\"思路\",{\"1\":{\"227\":1,\"233\":1,\"257\":1,\"262\":1,\"522\":1}}],[\"技术解释\",{\"1\":{\"665\":1}}],[\"技术类知识汇总沉淀\",{\"1\":{\"310\":1}}],[\"技术\",{\"0\":{\"310\":1}}],[\"技术决定下限\",{\"1\":{\"264\":1}}],[\"技术控制\",{\"1\":{\"87\":1}}],[\"想去通过暗角突出某个物体时\",{\"1\":{\"294\":1}}],[\"想擦擦一点\",{\"1\":{\"257\":1}}],[\"想要其生效必须引入spring\",{\"1\":{\"923\":1}}],[\"想要不拍到地面的杂乱\",{\"1\":{\"234\":1}}],[\"想要强调情绪\",{\"1\":{\"191\":1}}],[\"想要挣脱\",{\"1\":{\"127\":1}}],[\"想要学习一种风格\",{\"1\":{\"14\":1}}],[\"流程概览\",{\"1\":{\"968\":1}}],[\"流程\",{\"1\":{\"967\":1}}],[\"流控\",{\"1\":{\"964\":1}}],[\"流出速率总是稳定的\",{\"1\":{\"948\":1}}],[\"流逝\",{\"1\":{\"919\":1}}],[\"流量一般调到15\",{\"1\":{\"257\":1}}],[\"流量先调到20\",{\"1\":{\"256\":1}}],[\"流泪\",{\"1\":{\"127\":1}}],[\"载入\",{\"1\":{\"256\":1}}],[\"潮湿\",{\"1\":{\"256\":1}}],[\"补充\",{\"1\":{\"406\":1,\"663\":1,\"669\":1,\"872\":1,\"892\":1}}],[\"补光\",{\"1\":{\"275\":1}}],[\"补偿值\",{\"1\":{\"256\":1}}],[\"补色和谐关系\",{\"1\":{\"96\":1}}],[\"缩写属性\",{\"1\":{\"387\":1}}],[\"缩放背景图\",{\"1\":{\"400\":2}}],[\"缩放\",{\"1\":{\"256\":1,\"454\":4}}],[\"缩小一半\",{\"1\":{\"454\":1}}],[\"缩小属性\",{\"0\":{\"452\":1}}],[\"缩小\",{\"1\":{\"251\":1,\"450\":1}}],[\"减轻单个节点的压力\",{\"1\":{\"567\":1}}],[\"减法原则1\",{\"1\":{\"279\":1}}],[\"减淡图层最右边的那个\",{\"1\":{\"257\":1}}],[\"减去繁琐的配置\",{\"1\":{\"922\":1}}],[\"减去\",{\"1\":{\"256\":1}}],[\"减少指定的整数\",{\"1\":{\"817\":1}}],[\"减少了磁盘io次数\",{\"1\":{\"793\":1}}],[\"减少内存扩展和收缩带来的性能损耗\",{\"1\":{\"738\":1}}],[\"减少阻塞和轮询\",{\"1\":{\"670\":1}}],[\"减少每次获取资源的消耗\",{\"1\":{\"664\":1}}],[\"减少聚合所需扫描的数据量\",{\"1\":{\"567\":1}}],[\"减少计算复杂度\",{\"1\":{\"567\":1}}],[\"减少杂色\",{\"1\":{\"292\":1}}],[\"减少横构图\",{\"1\":{\"244\":1}}],[\"减少模特与镜头的交流感\",{\"1\":{\"153\":1}}],[\"减少色彩损失操作\",{\"1\":{\"247\":1}}],[\"减少色彩\",{\"1\":{\"148\":1}}],[\"点赞用户数统计\",{\"1\":{\"819\":1}}],[\"点赞用户id\",{\"1\":{\"819\":1}}],[\"点赞用户id2\",{\"1\":{\"819\":1}}],[\"点赞用户id1\",{\"1\":{\"819\":1}}],[\"点赞\",{\"1\":{\"817\":1}}],[\"点击视频\",{\"1\":{\"821\":1}}],[\"点击label就可以激活对应的input变为选中\",{\"1\":{\"410\":1}}],[\"点击减淡图层\",{\"1\":{\"257\":1}}],[\"点击完成后会生成四个图层\",{\"1\":{\"257\":1}}],[\"点击d\",{\"1\":{\"257\":1}}],[\"点击图像\",{\"1\":{\"256\":1}}],[\"点击滤镜\",{\"1\":{\"256\":1}}],[\"点缀\",{\"0\":{\"100\":1}}],[\"痘痘\",{\"1\":{\"256\":1}}],[\"切换到画笔工具\",{\"1\":{\"255\":1}}],[\"勾选1\",{\"1\":{\"257\":1}}],[\"勾选填充柔光中性灰色\",{\"1\":{\"255\":1}}],[\"勾勒轮廓和身体线条\",{\"1\":{\"76\":1}}],[\"便于减少系统的重复代码\",{\"1\":{\"892\":1}}],[\"便于观察面部黑白灰的关系\",{\"1\":{\"255\":1}}],[\"便于整体氛围构造\",{\"1\":{\"191\":1}}],[\"提交自身的服务id\",{\"1\":{\"971\":1}}],[\"提交\",{\"1\":{\"967\":2}}],[\"提交和回滚\",{\"1\":{\"967\":1}}],[\"提交事务或回滚事务\",{\"1\":{\"968\":1}}],[\"提交事务\",{\"1\":{\"942\":1}}],[\"提交阶段\",{\"1\":{\"942\":2}}],[\"提交按钮\",{\"1\":{\"410\":1}}],[\"提取出链表中关键节点当索引\",{\"1\":{\"857\":1}}],[\"提供丰富的容错策略\",{\"1\":{\"974\":1}}],[\"提供友好的web界面\",{\"1\":{\"974\":1}}],[\"提供了多种分布式事务模式\",{\"1\":{\"968\":1}}],[\"提供了表示实体类型\",{\"1\":{\"743\":1}}],[\"提供了逻辑像素的概念\",{\"1\":{\"468\":1}}],[\"提供可靠的传输服务\",{\"1\":{\"550\":1}}],[\"提供面向连接的服务\",{\"1\":{\"550\":1}}],[\"提供\",{\"1\":{\"546\":2}}],[\"提升系统硬件\",{\"1\":{\"804\":1}}],[\"提升聚合效率\",{\"1\":{\"567\":1}}],[\"提升\",{\"1\":{\"299\":1}}],[\"提高消费吞吐量\",{\"1\":{\"981\":1}}],[\"提高系统的稳定性和容错性\",{\"1\":{\"953\":1}}],[\"提高代码的灵活性和可维护性\",{\"1\":{\"884\":1}}],[\"提高了程序的响应速度\",{\"1\":{\"672\":1}}],[\"提高了代码的可重用性\",{\"1\":{\"578\":1}}],[\"提高线程的可管理性\",{\"1\":{\"664\":1}}],[\"提高对资源的利用率\",{\"1\":{\"664\":1}}],[\"提高对比度\",{\"1\":{\"288\":1}}],[\"提高我们的开发效率\",{\"1\":{\"604\":1}}],[\"提高自己解决问题的能力\",{\"1\":{\"481\":1}}],[\"提高自己的核心竞争力\",{\"1\":{\"481\":1}}],[\"提高效率\",{\"1\":{\"299\":1}}],[\"提高阴影降低黑色\",{\"1\":{\"288\":1}}],[\"提高曝光\",{\"1\":{\"288\":1}}],[\"提高数量\",{\"1\":{\"265\":1}}],[\"提亮该提亮的地方\",{\"1\":{\"255\":1}}],[\"提前准备样片参考动作\",{\"1\":{\"129\":1}}],[\"提前说明交通等费用\",{\"1\":{\"122\":1}}],[\"提前告知模特你想拍的风格\",{\"1\":{\"122\":1}}],[\"提前踩点\",{\"1\":{\"120\":1,\"121\":1}}],[\"拉取到消息即提交\",{\"1\":{\"984\":1}}],[\"拉伸\",{\"1\":{\"449\":1}}],[\"拉长画布\",{\"1\":{\"254\":1}}],[\"拉闸限电\",{\"1\":{\"957\":1}}],[\"拉闸\",{\"1\":{\"126\":1}}],[\"原因\",{\"1\":{\"982\":1}}],[\"原因分析\",{\"1\":{\"737\":2}}],[\"原先是由当当网开发\",{\"1\":{\"974\":1}}],[\"原先的布局存在的痛点\",{\"1\":{\"435\":1}}],[\"原值为\",{\"1\":{\"669\":1}}],[\"原理是什么\",{\"0\":{\"975\":1}}],[\"原理说明\",{\"1\":{\"822\":1}}],[\"原理\",{\"1\":{\"663\":1,\"833\":1}}],[\"原始构成\",{\"1\":{\"662\":1}}],[\"原始的\",{\"1\":{\"611\":1}}],[\"原子引用\",{\"1\":{\"658\":1}}],[\"原子性\",{\"1\":{\"657\":1,\"658\":1,\"767\":1,\"802\":1}}],[\"原地排序呢\",{\"1\":{\"526\":1}}],[\"原则\",{\"1\":{\"254\":1}}],[\"原生\",{\"1\":{\"121\":1}}],[\"方便起见\",{\"1\":{\"520\":1}}],[\"方向上的base\",{\"1\":{\"451\":1}}],[\"方向上超过了flex\",{\"1\":{\"450\":1}}],[\"方向对比\",{\"1\":{\"441\":1}}],[\"方向排布\",{\"1\":{\"441\":1}}],[\"方向等等\",{\"1\":{\"457\":1}}],[\"方向等\",{\"1\":{\"51\":1}}],[\"方案四\",{\"1\":{\"471\":1,\"472\":1}}],[\"方案三\",{\"1\":{\"433\":1,\"471\":1,\"472\":1,\"837\":1}}],[\"方案二\",{\"1\":{\"406\":1,\"471\":1,\"472\":1,\"837\":1}}],[\"方案一\",{\"1\":{\"406\":1,\"471\":1,\"472\":1,\"837\":1}}],[\"方式四\",{\"1\":{\"522\":1}}],[\"方式3\",{\"1\":{\"469\":1,\"671\":1}}],[\"方式2\",{\"1\":{\"469\":1,\"671\":1}}],[\"方式三\",{\"1\":{\"466\":1,\"522\":1,\"523\":1}}],[\"方式1\",{\"1\":{\"466\":1,\"469\":1,\"671\":1}}],[\"方式二\",{\"0\":{\"532\":1},\"1\":{\"358\":1,\"387\":1,\"466\":1,\"522\":1,\"523\":1}}],[\"方式一\",{\"0\":{\"531\":1},\"1\":{\"358\":1,\"387\":1,\"522\":1,\"523\":1}}],[\"方法2\",{\"1\":{\"983\":1}}],[\"方法2执行了\",{\"1\":{\"670\":1}}],[\"方法1\",{\"1\":{\"983\":1}}],[\"方法1执行了\",{\"1\":{\"670\":1}}],[\"方法为\",{\"1\":{\"963\":1}}],[\"方法逻辑\",{\"1\":{\"963\":1}}],[\"方法来创建\",{\"1\":{\"926\":1}}],[\"方法在内存中的指针或者偏移量\",{\"1\":{\"712\":1}}],[\"方法等待\",{\"1\":{\"682\":1}}],[\"方法区中常量引用的对象\",{\"1\":{\"687\":1}}],[\"方法区中类静态属性引用的对象\",{\"1\":{\"687\":1}}],[\"方法区\",{\"0\":{\"681\":1,\"722\":1}}],[\"方法唤醒线程\",{\"1\":{\"671\":2}}],[\"方法让线程等待\",{\"1\":{\"671\":2}}],[\"方法3执行了\",{\"1\":{\"670\":1}}],[\"方法的线程会被挂起\",{\"1\":{\"667\":1}}],[\"方法的话不会以多线程的方式执行\",{\"1\":{\"656\":1}}],[\"方法的话就可能会导致\",{\"1\":{\"607\":1}}],[\"方法可中断\",{\"1\":{\"662\":1}}],[\"方法配合try\",{\"1\":{\"662\":1}}],[\"方法方可启动线程并使线程进入就绪状态\",{\"1\":{\"656\":1}}],[\"方法定义在thread中\",{\"0\":{\"655\":1}}],[\"方法不定义在thread中\",{\"0\":{\"654\":1}}],[\"方法执行完成后\",{\"1\":{\"653\":1}}],[\"方法被调用后\",{\"1\":{\"653\":1}}],[\"方法释放了锁\",{\"1\":{\"653\":1}}],[\"方法没有释放锁\",{\"1\":{\"653\":1}}],[\"方法用synchronized修饰了\",{\"1\":{\"628\":1}}],[\"方法将其加入常量池\",{\"1\":{\"611\":1}}],[\"方法会尝试在字符串常量池中查找与\",{\"1\":{\"611\":1}}],[\"方法判断是相等的两个对象\",{\"1\":{\"607\":1}}],[\"方法时\",{\"1\":{\"606\":2}}],[\"方法重载和重写\",{\"0\":{\"601\":1}}],[\"方法创建代理对象\",{\"1\":{\"588\":1}}],[\"方法中我们会调用原生方法\",{\"1\":{\"588\":1}}],[\"方法接收的直接是实参所引用的对象在堆中的地址\",{\"1\":{\"587\":1}}],[\"方法接收的是实参的拷贝\",{\"1\":{\"587\":1}}],[\"方法二\",{\"0\":{\"491\":1},\"1\":{\"433\":1,\"936\":1}}],[\"方法一\",{\"0\":{\"490\":1},\"1\":{\"433\":1,\"936\":1}}],[\"方法\",{\"0\":{\"607\":1,\"611\":1},\"1\":{\"254\":1,\"599\":1,\"622\":1,\"625\":1,\"653\":1,\"661\":1,\"663\":2,\"666\":1,\"667\":1,\"668\":1,\"683\":1,\"687\":1,\"888\":1,\"926\":2,\"963\":1}}],[\"磨皮\",{\"1\":{\"254\":1}}],[\"磨皮精美\",{\"1\":{\"12\":1}}],[\"亮调\",{\"1\":{\"259\":1}}],[\"亮部变暗\",{\"1\":{\"288\":1}}],[\"亮部往上提\",{\"1\":{\"255\":1}}],[\"亮部\",{\"1\":{\"254\":1}}],[\"亮度\",{\"0\":{\"91\":1}}],[\"亮度等级偏低的色彩为主构成画面影调\",{\"1\":{\"84\":1}}],[\"均衡肤色\",{\"0\":{\"262\":1}}],[\"均衡光影\",{\"1\":{\"254\":1}}],[\"均衡上下\",{\"1\":{\"51\":1}}],[\"保存长度大于44字节的字符串\",{\"1\":{\"852\":1}}],[\"保存长度小于44字节的字符串\",{\"1\":{\"852\":1}}],[\"保存long型的64位有符合整数\",{\"1\":{\"852\":1}}],[\"保存所有引用类型的真实信息\",{\"1\":{\"683\":1}}],[\"保护程序安全\",{\"1\":{\"715\":1}}],[\"保持不变\",{\"1\":{\"454\":1}}],[\"保留人物面部比较有特色的痣\",{\"1\":{\"254\":1}}],[\"保证即使大部分节点挂掉也不会影响正常提供服务\",{\"1\":{\"933\":1}}],[\"保证最终一致性\",{\"1\":{\"846\":1}}],[\"保证具备原子性\",{\"1\":{\"840\":1}}],[\"保证了整体的速率\",{\"1\":{\"948\":1}}],[\"保证了mysql集群架构的数据一致性\",{\"1\":{\"799\":1}}],[\"保证了类型的安全性\",{\"1\":{\"578\":1}}],[\"保证加载的字节码是合法\",{\"1\":{\"712\":1}}],[\"保证事务上下文在同一线程内有效\",{\"1\":{\"663\":1}}],[\"保证可以性和禁止指令重排\",{\"1\":{\"658\":1}}],[\"保证每周至少1\",{\"1\":{\"265\":1}}],[\"保证皮肤质感\",{\"1\":{\"254\":1}}],[\"保证五官边缘清晰\",{\"1\":{\"254\":1}}],[\"保证背景是暗部\",{\"1\":{\"236\":1}}],[\"保证背景元素的少和统一\",{\"1\":{\"233\":1}}],[\"保证基本人好看的前提下\",{\"1\":{\"189\":1}}],[\"保证形体的舒展\",{\"1\":{\"163\":1}}],[\"保证出片\",{\"1\":{\"111\":1}}],[\"保证人物及陪体清晰\",{\"1\":{\"71\":1}}],[\"穿帮等\",{\"1\":{\"254\":1}}],[\"穿吊带拍摄时可以肩部外旋\",{\"1\":{\"175\":1}}],[\"瑕疵修复\",{\"1\":{\"254\":1}}],[\"按业务场景\",{\"1\":{\"967\":1}}],[\"按表条件过滤后\",{\"1\":{\"796\":1}}],[\"按顺序排放\",{\"1\":{\"691\":1}}],[\"按位与\",{\"1\":{\"632\":1}}],[\"按钮\",{\"1\":{\"410\":1}}],[\"按进程的优先级对进程进行排序并显示\",{\"1\":{\"328\":1}}],[\"按这三个数值参考\",{\"1\":{\"275\":1}}],[\"按住alt然后点击图层+号\",{\"1\":{\"255\":1}}],[\"按住shift+\",{\"1\":{\"251\":2}}],[\"按照成员的分数从大到小进行排序\",{\"1\":{\"821\":1}}],[\"按照自己的风格来布局\",{\"1\":{\"406\":1}}],[\"按照从外往里\",{\"1\":{\"404\":1}}],[\"按照一定的规则选出符合条件的元素\",{\"1\":{\"367\":1}}],[\"按照一定的对称轴或对称中心\",{\"1\":{\"220\":1}}],[\"按照alt键添加蒙版\",{\"1\":{\"6\":1}}],[\"盖印图层\",{\"1\":{\"249\":1}}],[\"创建好\",{\"1\":{\"926\":1}}],[\"创建applicationcontext\",{\"1\":{\"926\":1}}],[\"创建bean对象\",{\"1\":{\"900\":1}}],[\"创建这个read\",{\"1\":{\"797\":1}}],[\"创建了组合索引\",{\"1\":{\"794\":1}}],[\"创建了几个对象\",{\"1\":{\"610\":1}}],[\"创建了几个字符串对象\",{\"0\":{\"610\":1}}],[\"创建统一使用utf8mb4字符集\",{\"1\":{\"762\":1}}],[\"创建唯一索引\",{\"0\":{\"759\":1}}],[\"创建索引的字段应该是查询操作非常频繁的字段\",{\"1\":{\"794\":1}}],[\"创建索引和维护索引需要耗费许多时间\",{\"1\":{\"792\":1}}],[\"创建索引\",{\"0\":{\"757\":1}}],[\"创建时间\",{\"1\":{\"751\":1}}],[\"创建表\",{\"0\":{\"751\":1,\"807\":1},\"1\":{\"807\":1}}],[\"创建的\",{\"1\":{\"611\":1}}],[\"创建\",{\"1\":{\"611\":1,\"926\":1}}],[\"创建子类代理的实例\",{\"1\":{\"589\":1}}],[\"创建另外一个队列q2\",{\"1\":{\"522\":1}}],[\"创建一个epoll句柄\",{\"1\":{\"869\":1}}],[\"创建一个新的事务\",{\"1\":{\"898\":1}}],[\"创建一个新的\",{\"1\":{\"523\":1}}],[\"创建一个\",{\"1\":{\"494\":1}}],[\"创建一个hashmap存储数组元素和对应的索引\",{\"1\":{\"491\":1}}],[\"创建一个重复的原点触发渐变组成的image\",{\"1\":{\"463\":1}}],[\"创建一个由重复线性渐变组成的image\",{\"1\":{\"463\":1}}],[\"创建一个图像\",{\"1\":{\"463\":1}}],[\"创建一个表示两种或多种颜色线性渐变的图片\",{\"1\":{\"463\":1}}],[\"创建图层组\",{\"1\":{\"249\":1}}],[\"创新\",{\"1\":{\"123\":1}}],[\">恢复调用链路\",{\"1\":{\"957\":1}}],[\">进而熔断\",{\"1\":{\"957\":1}}],[\">epoll三个阶段来描述的\",{\"1\":{\"864\":1}}],[\">poll\",{\"1\":{\"864\":1}}],[\">px\",{\"1\":{\"472\":1}}],[\">重量级锁的升级过程\",{\"1\":{\"672\":1}}],[\">重量级锁\",{\"1\":{\"672\":1}}],[\">重量锁\",{\"1\":{\"669\":1}}],[\">轻量级锁\",{\"1\":{\"672\":2}}],[\">轻量锁\",{\"1\":{\"669\":1}}],[\">r+\",{\"1\":{\"670\":1}}],[\">偏向锁\",{\"1\":{\"669\":1,\"672\":2}}],[\">邮戳锁\",{\"1\":{\"669\":1}}],[\">读写锁\",{\"1\":{\"669\":1}}],[\">独占锁\",{\"1\":{\"669\":1}}],[\">new\",{\"1\":{\"663\":1}}],[\">null\",{\"1\":{\"503\":1}}],[\">>\",{\"1\":{\"596\":1,\"623\":1}}],[\">客户端\",{\"1\":{\"552\":2}}],[\">服务端\",{\"1\":{\"552\":2}}],[\">5\",{\"1\":{\"507\":2}}],[\">5<\",{\"1\":{\"431\":2}}],[\">6\",{\"1\":{\"507\":2}}],[\">6<\",{\"1\":{\"431\":1}}],[\">4\",{\"1\":{\"507\":2}}],[\">4<\",{\"1\":{\"431\":2}}],[\">size\",{\"1\":{\"504\":4,\"513\":1,\"516\":1,\"539\":1}}],[\">3\",{\"1\":{\"503\":1,\"507\":2}}],[\">3<\",{\"1\":{\"431\":2}}],[\">2\",{\"1\":{\"503\":1,\"507\":1}}],[\">2<\",{\"1\":{\"431\":2}}],[\">=0\",{\"1\":{\"513\":1,\"516\":1,\"539\":1}}],[\">=\",{\"1\":{\"497\":3,\"513\":3,\"516\":3,\"519\":2,\"532\":1,\"539\":3,\"746\":1,\"982\":1}}],[\">苹果<\",{\"1\":{\"461\":1}}],[\">box8<\",{\"1\":{\"453\":6}}],[\">box7<\",{\"1\":{\"453\":2}}],[\">box6<\",{\"1\":{\"453\":4}}],[\">box5<\",{\"1\":{\"442\":1,\"453\":2}}],[\">box4<\",{\"1\":{\"442\":1,\"453\":2}}],[\">box3<\",{\"1\":{\"436\":1,\"441\":1,\"442\":1,\"453\":2}}],[\">box2<\",{\"1\":{\"436\":1,\"441\":1,\"442\":1,\"453\":2}}],[\">box1<\",{\"1\":{\"436\":1,\"441\":1,\"442\":1,\"453\":2}}],[\">下一页\",{\"1\":{\"431\":1}}],[\">9<\",{\"1\":{\"431\":1}}],[\">8<\",{\"1\":{\"431\":1}}],[\">7<\",{\"1\":{\"431\":1}}],[\">a\",{\"1\":{\"431\":3}}],[\">橘子<\",{\"1\":{\"410\":1,\"461\":1}}],[\">香蕉<\",{\"1\":{\"410\":1,\"461\":1}}],[\">百度一下<\",{\"1\":{\"410\":1}}],[\">10px\",{\"1\":{\"467\":1}}],[\">1000\",{\"1\":{\"467\":1}}],[\">10<\",{\"1\":{\"431\":1}}],[\">1<\",{\"1\":{\"431\":2}}],[\">1\",{\"1\":{\"409\":1,\"523\":1,\"796\":1}}],[\">行内级元素\",{\"1\":{\"378\":1}}],[\">列表<\",{\"1\":{\"373\":3}}],[\">哈哈<\",{\"1\":{\"371\":2}}],[\">我是box<\",{\"1\":{\"377\":1}}],[\">我是p<\",{\"1\":{\"372\":1}}],[\">我是h2元素<\",{\"1\":{\"369\":1}}],[\">我是div<\",{\"1\":{\"369\":1,\"372\":1}}],[\"><a\",{\"1\":{\"431\":11}}],[\"><\",{\"1\":{\"358\":1,\"374\":2,\"387\":1,\"419\":1,\"431\":14,\"461\":1,\"469\":1,\"889\":1}}],[\">检查\",{\"1\":{\"352\":1}}],[\">\",{\"1\":{\"347\":1,\"351\":2,\"353\":6,\"358\":4,\"370\":1,\"373\":7,\"378\":1,\"387\":14,\"406\":1,\"410\":9,\"416\":4,\"423\":3,\"425\":11,\"431\":19,\"433\":2,\"436\":4,\"441\":4,\"442\":4,\"453\":5,\"463\":3,\"466\":1,\"469\":1,\"494\":2,\"497\":4,\"504\":1,\"506\":1,\"507\":1,\"513\":1,\"516\":1,\"522\":2,\"523\":1,\"539\":1,\"552\":3,\"557\":1,\"581\":1,\"588\":1,\"633\":1,\"645\":1,\"664\":2,\"666\":1,\"667\":5,\"668\":2,\"670\":32,\"671\":15,\"738\":3,\"796\":7,\"822\":1,\"896\":1,\"982\":2}}],[\">亮\",{\"1\":{\"289\":1}}],[\">应用图像\",{\"1\":{\"256\":1}}],[\">将半径调整到看不到皮肤纹理为止\",{\"1\":{\"256\":1}}],[\">将lab调整为rgb\",{\"1\":{\"247\":1}}],[\">高斯模糊\",{\"1\":{\"256\":1}}],[\">模糊\",{\"1\":{\"256\":1}}],[\">模式\",{\"1\":{\"247\":2}}],[\">先调整为lab\",{\"1\":{\"247\":1}}],[\"图结构\",{\"1\":{\"539\":1}}],[\"图层选择\",{\"1\":{\"256\":1}}],[\"图层新建曲线蒙版\",{\"1\":{\"255\":1}}],[\"图层新建黑白蒙版\",{\"1\":{\"255\":1}}],[\"图层\",{\"0\":{\"249\":1}}],[\"图像\",{\"1\":{\"247\":1}}],[\"图片越模糊\",{\"1\":{\"463\":1}}],[\"图片也可以居中\",{\"1\":{\"358\":1}}],[\"图片画质越差\",{\"1\":{\"275\":1}}],[\"图片ps打开\",{\"1\":{\"247\":1}}],[\"图片管理器\",{\"1\":{\"20\":1}}],[\"另一个作用是mvcc\",{\"1\":{\"797\":1}}],[\"另一个用于\",{\"1\":{\"666\":1}}],[\"另一个指针从数组的最后一个元素开始\",{\"1\":{\"494\":1}}],[\"另一个指针从数组尾部向左移动\",{\"1\":{\"494\":1}}],[\"另一个方向默认center\",{\"1\":{\"401\":1}}],[\"另一个在运动状态\",{\"1\":{\"70\":1}}],[\"另外生产者的重试次数设置一个比较合理的值\",{\"1\":{\"982\":1}}],[\"另外一个事务也访问该数据\",{\"1\":{\"771\":1}}],[\"另外一只手做变化\",{\"1\":{\"244\":1}}],[\"另外\",{\"1\":{\"425\":1,\"963\":1,\"971\":1}}],[\"另外我们还可以设置如下属性\",{\"1\":{\"384\":1}}],[\"半成品\",{\"1\":{\"925\":1}}],[\"半径10公里内\",{\"1\":{\"824\":1}}],[\"半径\",{\"1\":{\"292\":1}}],[\"半身拍摄\",{\"1\":{\"243\":1}}],[\"半身\",{\"1\":{\"242\":1}}],[\"半睁眼\",{\"1\":{\"143\":1}}],[\"由一个初值都为0的bit数组和多个哈希函数构成\",{\"1\":{\"833\":1}}],[\"由一种情绪转向另一种情绪\",{\"1\":{\"185\":1}}],[\"由0和1状态表现的二进制位的bit数据\",{\"1\":{\"823\":1}}],[\"由扩展类加载器加载\",{\"1\":{\"715\":1}}],[\"由\",{\"1\":{\"714\":1}}],[\"由执行引擎读取下一条指令\",{\"1\":{\"680\":1}}],[\"由inheritablethreadlocal类维护\",{\"1\":{\"663\":1}}],[\"由threadlocal类维护\",{\"1\":{\"663\":1}}],[\"由前面的\",{\"1\":{\"611\":1}}],[\"由于服务端处理业务时间长或者网络链接等原因让kafka认为服务假死\",{\"1\":{\"984\":1}}],[\"由于时间戳部分只有41位\",{\"1\":{\"938\":1}}],[\"由于网络分区或故障\",{\"1\":{\"871\":1}}],[\"由于链表无法进行二分查找\",{\"1\":{\"857\":1}}],[\"由于非叶子节点没有存放数据\",{\"1\":{\"793\":1}}],[\"由于第二个事务的修改导致第一个事务两次读取的数据可能不太一样\",{\"1\":{\"771\":1}}],[\"由于在垃圾回收过程中\",{\"1\":{\"693\":1}}],[\"由于存活对象较多\",{\"1\":{\"691\":1}}],[\"由于存在依赖关系\",{\"1\":{\"670\":1}}],[\"由于hash的原理是将输入空间的值映射成hash空间内\",{\"1\":{\"638\":1}}],[\"由于字符串连接的结果需要赋值给变量\",{\"1\":{\"610\":1}}],[\"由于记录了词频和其他相关度指标\",{\"1\":{\"563\":1}}],[\"由于\",{\"1\":{\"521\":1,\"610\":1}}],[\"由于使用\",{\"1\":{\"520\":1}}],[\"由于不浪费空间\",{\"1\":{\"518\":1}}],[\"由于浮动元素脱离了标准流\",{\"1\":{\"432\":1}}],[\"由内容决定\",{\"1\":{\"379\":1}}],[\"由蓝色和红色控制\",{\"1\":{\"288\":1}}],[\"由远到近\",{\"1\":{\"242\":1}}],[\"欧式大桥拍摄\",{\"0\":{\"242\":1}}],[\"欧美等人物肤色厚重的风格\",{\"1\":{\"85\":1}}],[\"廊桥拍摄\",{\"0\":{\"240\":1}}],[\"油菜花拍摄\",{\"0\":{\"239\":1}}],[\"夕阳多拍逆光\",{\"1\":{\"237\":1}}],[\"海边顺光拍摄\",{\"0\":{\"238\":1}}],[\"海边夕阳拍摄\",{\"0\":{\"237\":1}}],[\"海边\",{\"1\":{\"236\":1}}],[\"海边拍摄要注意水平线的横平竖直\",{\"1\":{\"236\":1}}],[\"海边拍摄\",{\"0\":{\"236\":1}}],[\"洱海逆光\",{\"0\":{\"236\":1}}],[\"来串联整个请求链路中的各个span\",{\"1\":{\"977\":1}}],[\"来确保同一时刻只有一个执行器获得执行任务的权利\",{\"1\":{\"975\":1}}],[\"来执行该任务\",{\"1\":{\"975\":1}}],[\"来管理和装配bean\",{\"1\":{\"884\":1}}],[\"来配合\",{\"1\":{\"866\":1}}],[\"来维持数据库的一致性状态\",{\"1\":{\"802\":1}}],[\"来处理请求\",{\"1\":{\"895\":1}}],[\"来处理\",{\"1\":{\"670\":1}}],[\"来更新\",{\"1\":{\"669\":1}}],[\"来操作\",{\"1\":{\"634\":1}}],[\"来比较两个对象的属性是否相等\",{\"1\":{\"606\":1}}],[\"来跟踪文档的变化\",{\"1\":{\"565\":1}}],[\"来存储从\",{\"1\":{\"522\":1}}],[\"来实现事务的隔离性\",{\"1\":{\"802\":1}}],[\"来实现的\",{\"1\":{\"565\":1}}],[\"来实现\",{\"1\":{\"521\":1}}],[\"来获取队尾元素的值\",{\"1\":{\"520\":1}}],[\"来生成css的程序\",{\"1\":{\"469\":1}}],[\"来做一些颜色上的偏色\",{\"1\":{\"235\":1}}],[\"来回走到\",{\"1\":{\"151\":1}}],[\"把分支事务的状态报告给\",{\"1\":{\"968\":1}}],[\"把线程pid变为16进制如\",{\"1\":{\"738\":2}}],[\"把堆内存dump下来\",{\"1\":{\"737\":1}}],[\"把用户正常的工作线程全部停掉\",{\"1\":{\"710\":1}}],[\"把数据分配均匀\",{\"1\":{\"632\":1}}],[\"把arr\",{\"1\":{\"530\":1}}],[\"把\",{\"1\":{\"523\":1}}],[\"把行内级盒子提升或者下降一段距离\",{\"1\":{\"458\":2}}],[\"把行内级盒子的底部跟line\",{\"1\":{\"458\":1}}],[\"把行内级盒子的顶部跟line\",{\"1\":{\"458\":1}}],[\"把浮动子元素的高度算进去\",{\"1\":{\"432\":1}}],[\"把过曝的细节拉回来\",{\"1\":{\"288\":1}}],[\"把主体放在线上\",{\"1\":{\"279\":1}}],[\"把暗部往下压\",{\"1\":{\"255\":1}}],[\"把人物的眼睛放在画面上部1\",{\"1\":{\"234\":1}}],[\"把脸的宽度分为五等分\",{\"1\":{\"165\":1}}],[\"考虑好背景的呈现内容\",{\"1\":{\"234\":1}}],[\"楼梯+旁边有一处花束\",{\"1\":{\"233\":1}}],[\"只存在一个实例\",{\"1\":{\"889\":1}}],[\"只追加文件\",{\"1\":{\"859\":1}}],[\"只需修改几个指针就能完成\",{\"1\":{\"857\":1}}],[\"只需扫描一遍叶子节点即可\",{\"1\":{\"793\":1}}],[\"只读缓存\",{\"1\":{\"845\":1}}],[\"只会在取出key的时候才对数据进行过期简称\",{\"1\":{\"827\":1}}],[\"只会拍模特不会拍客人\",{\"1\":{\"131\":1}}],[\"只记录数量而不是具体内容\",{\"1\":{\"822\":1}}],[\"只不过扫描的是索引\",{\"1\":{\"796\":1}}],[\"只不过多遍历了几次\",{\"1\":{\"490\":1}}],[\"只针对当前操作的行记录进行加锁\",{\"1\":{\"785\":1}}],[\"只删除表中的数据\",{\"1\":{\"745\":1}}],[\"只对当前webapp可见\",{\"1\":{\"716\":1}}],[\"只负责class文件的加载\",{\"1\":{\"679\":1}}],[\"只是统计结果不太准确\",{\"1\":{\"833\":1}}],[\"只是进行不重复的基数统计\",{\"1\":{\"822\":1}}],[\"只是把错误的信息延后\",{\"1\":{\"737\":1}}],[\"只是在提交的时候去验证对应的资源是否被其他线程修改了\",{\"1\":{\"669\":1}}],[\"只是拥有\",{\"1\":{\"604\":1}}],[\"只要有一个节点是可用的就行了\",{\"1\":{\"933\":1}}],[\"只要有一个位是0\",{\"1\":{\"833\":1}}],[\"只要他们发布了新文章\",{\"1\":{\"818\":1}}],[\"只要发生表数据更新\",{\"1\":{\"799\":1}}],[\"只要线程一结束该栈就over\",{\"1\":{\"682\":1}}],[\"只要没有跨分片操作\",{\"1\":{\"565\":1}}],[\"只要i大于index\",{\"1\":{\"513\":1,\"516\":1,\"539\":1}}],[\"只支持点对点通信\",{\"1\":{\"550\":1}}],[\"只使用一个队列\",{\"1\":{\"522\":2}}],[\"只允许使用额外常数空间\",{\"1\":{\"496\":1}}],[\"只有真正执行时才会发现错误\",{\"1\":{\"878\":1}}],[\"只有整数才会使用int\",{\"1\":{\"852\":1}}],[\"只有叶子节点才存储数据\",{\"1\":{\"793\":1}}],[\"只有父类加载器无法完成此加载任务时\",{\"1\":{\"715\":1}}],[\"只有当父类无法加载时\",{\"1\":{\"679\":1}}],[\"只有自己使用完毕后才释放资源\",{\"1\":{\"652\":1}}],[\"只有在elasticsearch\",{\"1\":{\"564\":1}}],[\"只有对应的浏览器才能解析使用\",{\"1\":{\"464\":1}}],[\"只有后代元素可以使用\",{\"1\":{\"463\":1}}],[\"只有非常少数的网站依然在用浮动来布局\",{\"1\":{\"435\":1}}],[\"只有加上这个才能居中\",{\"1\":{\"358\":1}}],[\"只在垂直方向平铺\",{\"1\":{\"399\":1}}],[\"只在水平方向平铺\",{\"1\":{\"399\":1}}],[\"只设置其中一个元素得margin\",{\"1\":{\"387\":1}}],[\"只能满足可用性\",{\"1\":{\"933\":1}}],[\"只能监听\",{\"1\":{\"868\":1}}],[\"只能自己加锁自己释放\",{\"1\":{\"839\":1}}],[\"只能单机使用\",{\"1\":{\"833\":1}}],[\"只能0或者1\",{\"1\":{\"823\":1}}],[\"只能处理的是新生代\",{\"1\":{\"703\":1}}],[\"只能从另一端\",{\"1\":{\"515\":1}}],[\"只能从一端添加元素\",{\"1\":{\"512\":1}}],[\"只能定义开始状态和结束状态\",{\"1\":{\"457\":1}}],[\"只能让行内元素居中\",{\"1\":{\"358\":1}}],[\"只能拍摄人物的半身和特写\",{\"1\":{\"233\":1}}],[\"只应用于块级元素\",{\"1\":{\"357\":1}}],[\"只留下主体清晰\",{\"1\":{\"279\":1}}],[\"只留下主体\",{\"1\":{\"279\":1}}],[\"只磨瑕疵明显的部位\",{\"1\":{\"254\":1}}],[\"只拍摄人物的半身和特写\",{\"1\":{\"232\":1}}],[\"金合欢花\",{\"0\":{\"232\":1}}],[\"金色+银色\",{\"1\":{\"85\":1}}],[\"金色\",{\"1\":{\"85\":1}}],[\"竹林洒下斑驳的光影\",{\"1\":{\"231\":1}}],[\"就用hashtable\",{\"1\":{\"855\":1}}],[\"就要采用同步直写策略\",{\"1\":{\"845\":1}}],[\"就证明key不存在\",{\"1\":{\"833\":1}}],[\"就证明服务端已正常关闭\",{\"1\":{\"552\":1}}],[\"就需要把每条记录的变更都记录下来\",{\"1\":{\"801\":1}}],[\"就可以查到数据了\",{\"1\":{\"793\":1}}],[\"就定位到了数据\",{\"1\":{\"793\":1}}],[\"就算是两个null\",{\"1\":{\"764\":1}}],[\"就不会有循环依赖问题\",{\"1\":{\"924\":1}}],[\"就不会计算浮动子元素的高度\",{\"1\":{\"432\":1}}],[\"就不应该直接出现在记录书籍的表中\",{\"1\":{\"744\":1}}],[\"就应该直接依赖于这个组合主键\",{\"1\":{\"744\":1}}],[\"就成功返回\",{\"1\":{\"715\":1}}],[\"就得不到结果\",{\"1\":{\"670\":1}}],[\"就得到pixel\",{\"1\":{\"468\":1}}],[\"就有可能导致出现死锁现象\",{\"1\":{\"662\":1}}],[\"就直接返回该引用\",{\"1\":{\"611\":1}}],[\"就好\",{\"1\":{\"522\":1}}],[\"就没有升序的子序列了\",{\"1\":{\"497\":1}}],[\"就是将原本在程序中手动创建对象的控制权\",{\"1\":{\"884\":1}}],[\"就是说通过一种机制\",{\"1\":{\"866\":1}}],[\"就是确保读请求结束\",{\"1\":{\"848\":1}}],[\"就是redis缓存淘汰策略\",{\"1\":{\"829\":1}}],[\"就是对集合去重复后剩余元素的计算\",{\"1\":{\"822\":1}}],[\"就是常见的点赞红色数字\",{\"1\":{\"819\":1}}],[\"就是读取最新数据\",{\"1\":{\"797\":1}}],[\"就是读取快照数据\",{\"1\":{\"797\":1}}],[\"就是联合索引\",{\"1\":{\"793\":1}}],[\"就是给行记录加x锁或s锁\",{\"1\":{\"788\":1}}],[\"就是单纯的select语句\",{\"1\":{\"788\":1}}],[\"就是一个指针\",{\"1\":{\"680\":1}}],[\"就是先自旋\",{\"1\":{\"672\":1}}],[\"就是内存泄露\",{\"1\":{\"663\":1}}],[\"就是把任意长度的输入\",{\"1\":{\"638\":1}}],[\"就是我们要拿出的\",{\"1\":{\"522\":1}}],[\"就是队尾的元素\",{\"1\":{\"522\":1}}],[\"就是能在线性数据结构的两段\",{\"1\":{\"521\":1}}],[\"就是指计算方法\",{\"1\":{\"480\":1}}],[\"就是视觉视口\",{\"1\":{\"470\":1}}],[\"就是盒子的底部\",{\"1\":{\"458\":1}}],[\"就会导致全部扫描\",{\"1\":{\"785\":1}}],[\"就会变成固定\",{\"1\":{\"426\":1}}],[\"就会显得非常有层次\",{\"1\":{\"231\":1}}],[\"就地取材\",{\"1\":{\"126\":2}}],[\"近似聚合\",{\"1\":{\"567\":1}}],[\"近\",{\"1\":{\"276\":1}}],[\"近大远小\",{\"1\":{\"231\":1}}],[\"近景10\",{\"1\":{\"45\":1}}],[\"近景\",{\"0\":{\"41\":1},\"1\":{\"44\":1,\"191\":1,\"276\":1}}],[\"近景系列\",{\"0\":{\"38\":1}}],[\"游客太多背景不统一\",{\"1\":{\"230\":1}}],[\"错误信息等\",{\"1\":{\"977\":1}}],[\"错误\",{\"1\":{\"680\":1,\"682\":1}}],[\"错误示范\",{\"1\":{\"230\":1,\"243\":1}}],[\"错误案例\",{\"1\":{\"51\":1}}],[\"第十五章\",{\"0\":{\"538\":1}}],[\"第十四章\",{\"0\":{\"537\":1}}],[\"第十三章\",{\"0\":{\"536\":1}}],[\"第十二章\",{\"0\":{\"535\":1}}],[\"第十一章\",{\"0\":{\"534\":1}}],[\"第十章\",{\"0\":{\"533\":1}}],[\"第九章\",{\"0\":{\"524\":1}}],[\"第八章\",{\"0\":{\"511\":1}}],[\"第七章\",{\"0\":{\"510\":1}}],[\"第六章\",{\"0\":{\"501\":1}}],[\"第五章\",{\"0\":{\"500\":1}}],[\"第四次挥手\",{\"1\":{\"552\":1}}],[\"第四章\",{\"0\":{\"499\":1}}],[\"第四个值\",{\"1\":{\"390\":1}}],[\"第三级缓存\",{\"1\":{\"925\":1}}],[\"第三范式\",{\"1\":{\"744\":1}}],[\"第三次挥手\",{\"1\":{\"552\":1}}],[\"第三次握手\",{\"1\":{\"552\":1}}],[\"第三章\",{\"0\":{\"498\":1}}],[\"第三个flex\",{\"1\":{\"452\":1}}],[\"第三个值\",{\"1\":{\"390\":1}}],[\"第二阶段\",{\"1\":{\"942\":2}}],[\"第二阶段将所有的存活对象压缩到内存的一端\",{\"1\":{\"691\":1}}],[\"第二级缓存\",{\"1\":{\"925\":1}}],[\"第二范式\",{\"1\":{\"744\":1}}],[\"第二次删除可以作为异步\",{\"1\":{\"848\":1}}],[\"第二次挥手\",{\"1\":{\"552\":1}}],[\"第二次握手\",{\"1\":{\"552\":1}}],[\"第二章\",{\"0\":{\"487\":1}}],[\"第二\",{\"1\":{\"470\":1}}],[\"第二个数据也修改了这个数据\",{\"1\":{\"770\":1}}],[\"第二个flex\",{\"1\":{\"452\":1}}],[\"第二个值必须为以下之一\",{\"1\":{\"452\":1}}],[\"第二个值\",{\"1\":{\"390\":1}}],[\"第二种\",{\"1\":{\"229\":1}}],[\"第一阶段\",{\"1\":{\"942\":2}}],[\"第一阶段和标记\",{\"1\":{\"691\":1}}],[\"第一级缓存\",{\"1\":{\"925\":1}}],[\"第一范式基础上\",{\"1\":{\"744\":1}}],[\"第一范式\",{\"1\":{\"744\":1}}],[\"第一次挥手\",{\"1\":{\"552\":1}}],[\"第一次握手\",{\"1\":{\"552\":1}}],[\"第一章\",{\"0\":{\"478\":1}}],[\"第一\",{\"1\":{\"470\":1}}],[\"第一个事务就会发现多了一些原本不存在的记录\",{\"1\":{\"772\":1}}],[\"第一个事务修改了这个数据后\",{\"1\":{\"770\":1}}],[\"第一个flex\",{\"1\":{\"452\":1}}],[\"第一个值必须为一个无单位数\",{\"1\":{\"452\":1}}],[\"第一个值\",{\"1\":{\"390\":1}}],[\"第一张显示在最前面\",{\"1\":{\"398\":1}}],[\"第一种\",{\"1\":{\"229\":1}}],[\"第2\",{\"1\":{\"373\":2}}],[\"进而映射到一个固定大小的桶\",{\"1\":{\"822\":1}}],[\"进而针对性地优化代码或调整配置\",{\"1\":{\"738\":1}}],[\"进入同步代码前要获得当前对象实例的锁\",{\"1\":{\"661\":1}}],[\"进入到红绳里面\",{\"1\":{\"229\":1}}],[\"进一步回到聚集索引中去检索对应主键的行\",{\"1\":{\"798\":1}}],[\"进一步降低暂停时间\",{\"1\":{\"708\":1}}],[\"进一步思考\",{\"1\":{\"458\":1}}],[\"进一步拔高平视机位拍摄水平\",{\"1\":{\"276\":1}}],[\"进程\",{\"1\":{\"726\":1}}],[\"进程id\",{\"1\":{\"700\":1,\"728\":1}}],[\"进程可以看作一个正在运行的程序\",{\"1\":{\"649\":1}}],[\"进程和线程的区别\",{\"0\":{\"649\":1}}],[\"进程等信息\",{\"1\":{\"328\":1}}],[\"进程信息等\",{\"1\":{\"328\":1}}],[\"进行设置\",{\"1\":{\"970\":1}}],[\"进行sql改写和程序改写\",{\"1\":{\"804\":1}}],[\"进行行级锁定\",{\"1\":{\"789\":1}}],[\"进行比较\",{\"1\":{\"669\":2}}],[\"进行table初始化\",{\"1\":{\"645\":1}}],[\"进行老化和归档\",{\"1\":{\"567\":1}}],[\"进行插入和删除操作\",{\"1\":{\"521\":1}}],[\"进行背景压缩\",{\"1\":{\"233\":1}}],[\"进行对应的呼应\",{\"1\":{\"224\":1}}],[\"旅游打卡宽窄巷子二\",{\"0\":{\"228\":1}}],[\"旅游打卡宽窄巷子一\",{\"0\":{\"227\":1}}],[\"掌握\",{\"0\":{\"449\":1,\"450\":1,\"452\":1},\"1\":{\"466\":1}}],[\"掌握常见的构图技巧\",{\"1\":{\"225\":1}}],[\"掌控拍摄\",{\"1\":{\"111\":1}}],[\"成品\",{\"1\":{\"925\":1}}],[\"成本较高\",{\"1\":{\"793\":1}}],[\"成员变量\",{\"1\":{\"600\":1}}],[\"成员变量和局部变量\",{\"0\":{\"600\":1}}],[\"成长\",{\"1\":{\"449\":1}}],[\"成片欣赏\",{\"1\":{\"235\":1}}],[\"成片展示\",{\"1\":{\"127\":1}}],[\"成组性思维\",{\"1\":{\"225\":1}}],[\"和自动提交一样\",{\"1\":{\"984\":1}}],[\"和elastic\",{\"0\":{\"974\":1}}],[\"和在执行后保存已更新的数据到redo\",{\"1\":{\"968\":1}}],[\"和setter注入\",{\"1\":{\"884\":1}}],[\"和aof\",{\"0\":{\"862\":1}}],[\"和排他锁\",{\"1\":{\"802\":1}}],[\"和预写日志\",{\"1\":{\"802\":1}}],[\"和group\",{\"1\":{\"796\":1}}],[\"和innodb有什么区别\",{\"0\":{\"765\":1}}],[\"和parnew\",{\"1\":{\"704\":1}}],[\"和老年区\",{\"1\":{\"683\":1}}],[\"和to\",{\"1\":{\"683\":1}}],[\"和方法区无关\",{\"1\":{\"681\":1}}],[\"和元空间\",{\"1\":{\"681\":1}}],[\"和执行非同步方法相比仅存在纳秒级的差距\",{\"1\":{\"672\":1}}],[\"和undo\",{\"1\":{\"802\":1}}],[\"和unlock\",{\"1\":{\"662\":1}}],[\"和unchecked\",{\"1\":{\"571\":1}}],[\"和一个monitorexit指令\",{\"1\":{\"661\":1}}],[\"和一个目标值\",{\"1\":{\"489\":1}}],[\"和wait\",{\"0\":{\"653\":1}}],[\"和cas\",{\"1\":{\"634\":1}}],[\"和可能的expand\",{\"1\":{\"562\":1}}],[\"和可选的文档id\",{\"1\":{\"561\":1}}],[\"和选择排序的区别\",{\"1\":{\"530\":1}}],[\"和rem对比\",{\"1\":{\"473\":1}}],[\"和换行规则\",{\"1\":{\"462\":1}}],[\"和^\",{\"1\":{\"414\":1}}],[\"和\",{\"0\":{\"625\":1,\"628\":1,\"634\":1,\"662\":1,\"746\":1,\"747\":1,\"764\":1,\"915\":1},\"1\":{\"414\":1,\"443\":1,\"497\":1,\"528\":1,\"564\":1,\"611\":3,\"645\":1,\"660\":1,\"661\":1,\"669\":1,\"671\":2,\"691\":1,\"888\":1,\"926\":1,\"953\":1,\"968\":1,\"970\":1,\"974\":1}}],[\"和不存在一样\",{\"1\":{\"380\":1}}],[\"和其他的行内级元素在同一行显示\",{\"1\":{\"379\":1}}],[\"和侧逆光\",{\"1\":{\"237\":1}}],[\"和人物在同一个地平线+低机位仰拍拍摄\",{\"1\":{\"233\":1}}],[\"和夸奖\",{\"1\":{\"224\":1}}],[\"和谐\",{\"1\":{\"57\":1}}],[\"撩头发\",{\"1\":{\"224\":1,\"231\":1,\"236\":1}}],[\"睁眼\",{\"1\":{\"224\":1}}],[\"比方说\",{\"1\":{\"744\":1}}],[\"比7小的数字\",{\"1\":{\"497\":1}}],[\"比起其他定位值要新一些position\",{\"1\":{\"426\":1}}],[\"比起银色反光板更为柔和\",{\"1\":{\"85\":1}}],[\"比较并交换\",{\"1\":{\"658\":1}}],[\"比较的是栈上引用地址\",{\"1\":{\"611\":1}}],[\"比较的是对象的内存地址\",{\"1\":{\"606\":1}}],[\"比较的是值\",{\"1\":{\"606\":1}}],[\"比较原则\",{\"1\":{\"427\":1}}],[\"比较怀旧的片子\",{\"1\":{\"294\":1}}],[\"比较矮的前景树枝或花枝做前景\",{\"1\":{\"231\":1}}],[\"比如redis的set\",{\"1\":{\"984\":1}}],[\"比如服务id\",{\"1\":{\"970\":1}}],[\"比如常见的下单\",{\"1\":{\"942\":1}}],[\"比如数据源\",{\"1\":{\"923\":1}}],[\"比如多个缓存数据设置了相同的过期时间\",{\"1\":{\"835\":1}}],[\"比如通过bitmap统计活跃用户\",{\"1\":{\"815\":1}}],[\"比如批量修改\",{\"1\":{\"801\":1}}],[\"比如仅依赖书籍id\",{\"1\":{\"744\":1}}],[\"比如借书人的信息\",{\"1\":{\"744\":1}}],[\"比如学生\",{\"1\":{\"743\":1}}],[\"比如缓存\",{\"1\":{\"736\":1}}],[\"比如最小\",{\"1\":{\"564\":1}}],[\"比如\",{\"1\":{\"497\":2,\"521\":1,\"726\":1,\"923\":1,\"924\":1,\"963\":1}}],[\"比如下面的案例\",{\"1\":{\"472\":1}}],[\"比如定义变量\",{\"1\":{\"469\":1}}],[\"比如iphone\",{\"1\":{\"468\":1}}],[\"比如屏幕上看到的画面\",{\"1\":{\"468\":1}}],[\"比如父元素的字体大小\",{\"1\":{\"467\":1}}],[\"比如视频的时长\",{\"1\":{\"460\":1}}],[\"比如width\",{\"1\":{\"456\":1}}],[\"比如span\",{\"1\":{\"454\":1}}],[\"比如使容器的所有子项等分可用宽度\",{\"1\":{\"435\":1}}],[\"比如行内级元素\",{\"1\":{\"430\":1}}],[\"比如根据文本和非文本切换指针样式\",{\"1\":{\"420\":1}}],[\"比如广告图片\",{\"1\":{\"403\":1}}],[\"比如20px\",{\"1\":{\"401\":1}}],[\"比如50\",{\"1\":{\"361\":1}}],[\"比如100px\",{\"1\":{\"361\":1,\"400\":1}}],[\"比如要对人物的眼圈进行提亮\",{\"1\":{\"255\":1}}],[\"比如在场景拍摄过程中\",{\"1\":{\"224\":1}}],[\"甚至他们设置了margin这些属性呢\",{\"1\":{\"458\":1}}],[\"甚至人的目光都可以当作引导线使用\",{\"1\":{\"222\":1}}],[\"甚至光影\",{\"1\":{\"184\":1}}],[\"竖线\",{\"1\":{\"279\":1,\"445\":1}}],[\"竖排都是一种三分构图法\",{\"1\":{\"219\":1}}],[\"竖构图\",{\"1\":{\"278\":1}}],[\"竖构图除发布抖音等自媒体外避免使用9\",{\"1\":{\"48\":1}}],[\"竖构图的中景中\",{\"1\":{\"40\":1}}],[\"柱头\",{\"1\":{\"218\":1}}],[\"柱子\",{\"1\":{\"160\":1}}],[\"带宽\",{\"1\":{\"804\":1}}],[\"带来的问题\",{\"1\":{\"641\":1}}],[\"带有悲悯之心\",{\"1\":{\"213\":1}}],[\"带补光设备\",{\"1\":{\"83\":1}}],[\"破碎\",{\"1\":{\"213\":1}}],[\"破败\",{\"1\":{\"212\":1}}],[\"新增点赞\",{\"1\":{\"819\":1}}],[\"新增字段\",{\"1\":{\"753\":1}}],[\"新增type属性\",{\"1\":{\"461\":1}}],[\"新类的定义可以增加新的数据或新的功能\",{\"1\":{\"604\":1}}],[\"新的\",{\"1\":{\"520\":1}}],[\"新的位置是\",{\"1\":{\"520\":1}}],[\"新闻报道\",{\"1\":{\"273\":1}}],[\"新建曲线\",{\"1\":{\"262\":1}}],[\"新生成的令牌将被丢弃\",{\"1\":{\"949\":1}}],[\"新生代每次minorgc后\",{\"1\":{\"721\":1}}],[\"新生代使用复制算法\",{\"1\":{\"692\":1}}],[\"新生代比例\",{\"1\":{\"683\":1}}],[\"新生代\",{\"1\":{\"683\":1}}],[\"新生+养老+永久\",{\"1\":{\"683\":1}}],[\"新生区\",{\"1\":{\"683\":2}}],[\"新生\",{\"1\":{\"212\":1}}],[\"新手如何约到合适的模特\",{\"1\":{\"122\":1}}],[\"欲望\",{\"1\":{\"209\":1}}],[\"欲念之花\",{\"1\":{\"127\":1}}],[\"感光度可以调\",{\"1\":{\"277\":1}}],[\"感光度\",{\"1\":{\"275\":2,\"277\":2}}],[\"感光度调低\",{\"1\":{\"275\":1}}],[\"感光度调高\",{\"1\":{\"275\":1}}],[\"感染力的释放\",{\"0\":{\"210\":1}}],[\"感知到人的情绪状态及性格\",{\"1\":{\"209\":1}}],[\"感到压抑或安静\",{\"1\":{\"93\":1}}],[\"镜头的选择\",{\"1\":{\"208\":1}}],[\"镜子\",{\"1\":{\"126\":1}}],[\"难以单纯使用焦段突出画面张力\",{\"1\":{\"206\":1}}],[\"短信类型\",{\"1\":{\"808\":1}}],[\"短语或数字等可搜索的内容单元\",{\"1\":{\"563\":1}}],[\"短焦更容易形成畸变塑造画面张力\",{\"1\":{\"205\":1}}],[\"短调\",{\"1\":{\"84\":1}}],[\"雪花算法是一种简单高效的分布式id生成算法\",{\"1\":{\"938\":1}}],[\"雪花算法\",{\"0\":{\"938\":1},\"1\":{\"938\":1}}],[\"雪\",{\"1\":{\"199\":1}}],[\"雨丝\",{\"1\":{\"199\":1}}],[\"雨伞\",{\"1\":{\"126\":1}}],[\"雾\",{\"1\":{\"199\":1}}],[\"风光\",{\"1\":{\"274\":1}}],[\"风的自由感\",{\"0\":{\"196\":1}}],[\"风格定位\",{\"1\":{\"278\":1}}],[\"风格某种意义上决定了照片的基调\",{\"1\":{\"259\":1}}],[\"风格及情绪表达\",{\"1\":{\"259\":1}}],[\"风格导向型\",{\"1\":{\"127\":1}}],[\"风格的内核是情绪统一\",{\"1\":{\"93\":1}}],[\"风格分类\",{\"1\":{\"20\":1}}],[\"风格\",{\"0\":{\"114\":1},\"1\":{\"19\":1,\"114\":1,\"120\":1,\"127\":1}}],[\"剪影\",{\"0\":{\"195\":1},\"1\":{\"279\":1}}],[\"剪影更容易出效果\",{\"1\":{\"162\":1}}],[\"横向扩展\",{\"1\":{\"566\":1}}],[\"横竖构图变化\",{\"1\":{\"254\":1}}],[\"横构图与竖构图\",{\"1\":{\"279\":1}}],[\"横构图\",{\"1\":{\"278\":1}}],[\"横构图或者竖构图的半身拍摄\",{\"1\":{\"233\":1}}],[\"横构图交代的环境信息比竖构图相对更多\",{\"1\":{\"40\":1}}],[\"横排\",{\"1\":{\"219\":1}}],[\"横屏包含的画面信息更多\",{\"1\":{\"191\":1}}],[\"传统的数据库存储\",{\"1\":{\"823\":1}}],[\"传统文化\",{\"1\":{\"29\":1}}],[\"传统文学\",{\"1\":{\"29\":1}}],[\"传递了变量值\",{\"1\":{\"663\":1}}],[\"传递的就是实参所引用的对象在堆中地址值的拷贝\",{\"1\":{\"587\":1}}],[\"传递的就是基本类型的字面量值的拷贝\",{\"1\":{\"587\":1}}],[\"传入类路径获取\",{\"1\":{\"586\":1}}],[\"传入数组的容量capacity构造array\",{\"1\":{\"513\":1,\"516\":1,\"539\":1}}],[\"传输形式\",{\"1\":{\"550\":1}}],[\"传输效率就会越高\",{\"1\":{\"872\":1}}],[\"传输效率\",{\"1\":{\"550\":1}}],[\"传输是有状态的\",{\"1\":{\"550\":1}}],[\"传输控制协议\",{\"1\":{\"546\":1}}],[\"传输层常见的协议\",{\"0\":{\"546\":1}}],[\"传输层\",{\"1\":{\"544\":1,\"545\":1}}],[\"传达信息\",{\"1\":{\"191\":1}}],[\"裙摆\",{\"1\":{\"191\":1}}],[\"袖口\",{\"1\":{\"191\":1}}],[\"衣口\",{\"1\":{\"191\":1}}],[\"衣着特写\",{\"1\":{\"191\":1}}],[\"连续签到天数越多\",{\"1\":{\"823\":1}}],[\"连用\",{\"1\":{\"746\":1}}],[\"连接超时时间\",{\"1\":{\"952\":1}}],[\"连接就是套接字描述符\",{\"1\":{\"864\":1}}],[\"连接器\",{\"1\":{\"803\":1}}],[\"连接表时\",{\"1\":{\"747\":1}}],[\"连接传输的数据\",{\"1\":{\"550\":1}}],[\"连接结束\",{\"1\":{\"547\":1}}],[\"连接\",{\"1\":{\"371\":2}}],[\"连贯动作多机位\",{\"1\":{\"191\":1}}],[\"连贯动作拆解\",{\"1\":{\"191\":2}}],[\"连拍模式\",{\"1\":{\"162\":1}}],[\"代理设计模式\",{\"1\":{\"900\":1}}],[\"代理类是目标类的子类\",{\"1\":{\"892\":1}}],[\"代理类中的真实对象\",{\"1\":{\"588\":1}}],[\"代理对象对应的自定义\",{\"1\":{\"588\":1}}],[\"代理需要实现的接口\",{\"1\":{\"588\":1}}],[\"代码没有走到finally这块\",{\"1\":{\"840\":1}}],[\"代码实现\",{\"1\":{\"824\":1,\"833\":1}}],[\"代码实操\",{\"1\":{\"664\":1}}],[\"代码可能存在大对象分配\",{\"1\":{\"737\":1}}],[\"代码中创建了大量大对象\",{\"1\":{\"683\":1}}],[\"代码示例\",{\"1\":{\"664\":1,\"668\":1}}],[\"代码块执行时间很长\",{\"1\":{\"672\":1}}],[\"代码块执行时间很短的话\",{\"1\":{\"672\":1}}],[\"代码块则使用偏向锁\",{\"1\":{\"672\":1}}],[\"代码块\",{\"1\":{\"661\":1}}],[\"代码重排序\",{\"1\":{\"657\":1}}],[\"代码更加灵活\",{\"1\":{\"585\":1}}],[\"代码模板\",{\"1\":{\"578\":1}}],[\"代码最终会转换为css来运行\",{\"1\":{\"469\":1}}],[\"代码初体验\",{\"1\":{\"436\":1}}],[\"代表我们的消息被leader副本接收之后就算被成功发送\",{\"1\":{\"982\":1}}],[\"代表embstr格式的sds\",{\"1\":{\"852\":1}}],[\"代表一个不确定的之\",{\"1\":{\"764\":1}}],[\"代表异步计算过程中的某一个阶段\",{\"1\":{\"670\":1}}],[\"代表\",{\"1\":{\"669\":2}}],[\"代表的含义\",{\"1\":{\"385\":1}}],[\"代表前2个子元素\",{\"1\":{\"373\":1}}],[\"代表不同的情绪和心理变化\",{\"1\":{\"191\":1}}],[\"代入情境\",{\"1\":{\"190\":1}}],[\"烘托情绪\",{\"1\":{\"191\":1}}],[\"烘托整体氛围和定调\",{\"1\":{\"127\":1}}],[\"结束时间\",{\"1\":{\"977\":1}}],[\"结束分布式事务\",{\"1\":{\"967\":1}}],[\"结论备注\",{\"1\":{\"833\":1}}],[\"结论\",{\"1\":{\"458\":1,\"587\":1,\"853\":1,\"856\":1,\"869\":1}}],[\"结构\",{\"1\":{\"820\":1,\"853\":1}}],[\"结构实现\",{\"1\":{\"814\":1}}],[\"结构就是聚簇索引\",{\"1\":{\"793\":1}}],[\"结构与样式分离\",{\"1\":{\"433\":1}}],[\"结构伪类\",{\"1\":{\"373\":1}}],[\"结果为\",{\"1\":{\"597\":2,\"611\":3,\"670\":1}}],[\"结果裁剪与排序\",{\"1\":{\"562\":1}}],[\"结果\",{\"1\":{\"190\":1}}],[\"结合自己强大的api声明式定义和处理机制\",{\"1\":{\"953\":1}}],[\"结合自己的拍摄\",{\"1\":{\"123\":1}}],[\"结合kubernetes\",{\"1\":{\"566\":1}}],[\"结合内存缓冲\",{\"1\":{\"561\":1}}],[\"结合构图\",{\"1\":{\"179\":1}}],[\"结合横竖构图\",{\"1\":{\"177\":1}}],[\"结合慢门拍摄\",{\"1\":{\"162\":1}}],[\"叙事六要素\",{\"1\":{\"190\":1}}],[\"每1\",{\"1\":{\"842\":1}}],[\"每隔一段时间抽取一批key执行删除过期key操作\",{\"1\":{\"828\":1}}],[\"每条单独的sql语句被视为一个隐式事务\",{\"1\":{\"802\":1}}],[\"每行记录可能存在多个历史版本\",{\"1\":{\"788\":1}}],[\"每当插入或删除数据时\",{\"1\":{\"793\":1}}],[\"每当有引用+1\",{\"1\":{\"686\":1}}],[\"每当一个线程执行完毕后\",{\"1\":{\"667\":1}}],[\"每天或每周创建新的索引\",{\"1\":{\"566\":1}}],[\"每天至少10分钟审美提升\",{\"1\":{\"264\":1}}],[\"每次重试的时间间隔为\",{\"1\":{\"985\":1}}],[\"每次在真正消费完消息之后再自己手动提交offset\",{\"1\":{\"982\":1}}],[\"每次对该bean的请求都会创建一个新的实例\",{\"1\":{\"889\":1}}],[\"每次请求都会新建一个实例\",{\"1\":{\"884\":1}}],[\"每次扩展和收缩都会带来一定的性能开销\",{\"1\":{\"738\":1}}],[\"每次扩容和更改map结构的计数器\",{\"1\":{\"644\":1}}],[\"每次合理地回收若干个小区间\",{\"1\":{\"694\":1}}],[\"每次\",{\"1\":{\"693\":1,\"842\":1}}],[\"每次只使用其中一个区域\",{\"1\":{\"690\":1}}],[\"每次添加元素的时候都会判断是否能够容下\",{\"1\":{\"623\":1}}],[\"每次文档更新时\",{\"1\":{\"565\":1}}],[\"每次外层循环找到最小的\",{\"1\":{\"527\":1}}],[\"每次找数组最小的\",{\"1\":{\"526\":1}}],[\"每次选择还没处理的元素里最小的元素\",{\"1\":{\"526\":1}}],[\"每从\",{\"1\":{\"522\":1}}],[\"每英寸像素\",{\"1\":{\"468\":1}}],[\"每一层都专注做一件事情\",{\"1\":{\"544\":1}}],[\"每一帧动画如何执行\",{\"1\":{\"457\":1}}],[\"每一个格子里面只能放1或者0\",{\"1\":{\"823\":1}}],[\"每一个jsp文件对应一个jspclassloader\",{\"1\":{\"716\":1}}],[\"每一个web应用程序对应一个webappclassloader\",{\"1\":{\"716\":1}}],[\"每一个小区间都独立使用\",{\"1\":{\"694\":1}}],[\"每一个层次类加载器都是如此\",{\"1\":{\"679\":1}}],[\"每一个线程都有自己的专属本地变量\",{\"1\":{\"663\":1}}],[\"每一个数字表示一个重量\",{\"1\":{\"363\":1}}],[\"每一个镜头的出现都是为情绪主题服务\",{\"1\":{\"189\":1}}],[\"每个span代表一次服务间的调用或一次服务内部的操作\",{\"1\":{\"977\":1}}],[\"每个servletcontext都会创建一个新的实例\",{\"1\":{\"889\":1}}],[\"每个任务都有唯一的标识符\",{\"1\":{\"975\":1}}],[\"每个服务实例在其启动后\",{\"1\":{\"970\":1}}],[\"每个数据库作为一个rm\",{\"1\":{\"968\":1}}],[\"每个令牌代表一个请求的处理权限\",{\"1\":{\"949\":1}}],[\"每个id都是唯一的\",{\"1\":{\"938\":1}}],[\"每个步骤都涉及众多细节\",{\"1\":{\"926\":1}}],[\"每个http会话都会创建一个新的实例\",{\"1\":{\"889\":1}}],[\"每个http请求都会创建一个新的实例\",{\"1\":{\"889\":1}}],[\"每个hash函数都会算得一个不同的位置\",{\"1\":{\"833\":1}}],[\"每个key通过crc16校验后对16384取模来决定放置哪个槽\",{\"1\":{\"872\":1}}],[\"每个quicklist节点上的ziplist大小不能超过8\",{\"1\":{\"854\":1}}],[\"每个用户来自不同ip地址\",{\"1\":{\"822\":1}}],[\"每个事务只能看到自己开始时刻的数据库状态\",{\"1\":{\"802\":1}}],[\"每个节点可以存储多个值\",{\"1\":{\"793\":1}}],[\"每个节点都会投给自己认为最合适成为master的节点\",{\"1\":{\"564\":1}}],[\"每个节点都会周期性地发布自己的集群状态到集群中的其他节点\",{\"1\":{\"564\":1}}],[\"每个webappclassloader加载自己的目录下的class文件\",{\"1\":{\"716\":1}}],[\"每个线程都有一个程序计数器\",{\"1\":{\"680\":1}}],[\"每个thread中都具备一个threadlocalmap\",{\"1\":{\"663\":1}}],[\"每个对象都拥有对象锁\",{\"1\":{\"654\":1}}],[\"每个都包含内容\",{\"1\":{\"610\":1}}],[\"每个分片会在本地构建一个优先队列\",{\"1\":{\"562\":1}}],[\"每个分片在本地执行相同的搜索请求\",{\"1\":{\"562\":1}}],[\"每个索引会被分成多个分片\",{\"1\":{\"561\":1}}],[\"每个右括号都有一个对应的相同类型的左括号\",{\"1\":{\"514\":1}}],[\"每个计算步骤都可以在有限时间内完成\",{\"1\":{\"482\":1}}],[\"每个元素的左边缘是紧挨着包含块的左边缘的\",{\"1\":{\"465\":1}}],[\"每个元素在页面当中到底占据多大的空间\",{\"1\":{\"378\":1}}],[\"每个像素格加强了质感\",{\"1\":{\"288\":1}}],[\"每个地方都要拍摄全身\",{\"1\":{\"242\":1}}],[\"每个人都是一座孤岛\",{\"1\":{\"127\":1}}],[\"分为elastic\",{\"1\":{\"974\":1}}],[\"分支事务报告\",{\"1\":{\"968\":1}}],[\"分支事务注册\",{\"1\":{\"968\":1}}],[\"分支事务协调器\",{\"1\":{\"968\":1}}],[\"分布式唯一性\",{\"1\":{\"938\":1}}],[\"分布式id\",{\"0\":{\"937\":1}}],[\"分布式系统在出现不可预知故障的时候\",{\"1\":{\"934\":1}}],[\"分布式系统出现网络分区的时候\",{\"1\":{\"933\":1}}],[\"分布式事务\",{\"0\":{\"941\":1},\"1\":{\"931\":1}}],[\"分布式链路追踪\",{\"1\":{\"931\":1}}],[\"分布式锁\",{\"0\":{\"940\":1},\"1\":{\"815\":1,\"817\":1,\"975\":1}}],[\"分发\",{\"1\":{\"894\":1}}],[\"分发阶段\",{\"1\":{\"562\":1}}],[\"分库分表\",{\"1\":{\"804\":1}}],[\"分散过期时间\",{\"1\":{\"835\":1}}],[\"分散节点压力\",{\"1\":{\"736\":1}}],[\"分散负载\",{\"1\":{\"566\":1}}],[\"分代收集\",{\"1\":{\"708\":1}}],[\"分代收集算法\",{\"0\":{\"692\":1}}],[\"分代算法将按照对象的生命周期长短划分成两个部分\",{\"1\":{\"694\":1}}],[\"分区中的多个副本之间会有一个leader的家伙\",{\"1\":{\"982\":1}}],[\"分区容错性\",{\"1\":{\"933\":1}}],[\"分区算法将整个堆空间划分成连续的不同小区间\",{\"1\":{\"694\":1}}],[\"分区算法\",{\"0\":{\"694\":1}}],[\"分区调色\",{\"1\":{\"254\":2,\"260\":1}}],[\"分段锁\",{\"1\":{\"634\":1}}],[\"分片分配等\",{\"1\":{\"564\":1}}],[\"分页参数等\",{\"1\":{\"562\":1}}],[\"分组\",{\"1\":{\"414\":1}}],[\"分别对应轻量级和云原生的解决方案\",{\"1\":{\"974\":1}}],[\"分别在堆内存中创建了两个新的\",{\"1\":{\"610\":1}}],[\"分别表示过去1分钟\",{\"1\":{\"329\":1}}],[\"分别命名高频\",{\"1\":{\"256\":1}}],[\"分离色调\",{\"0\":{\"291\":1}}],[\"分析和索引\",{\"1\":{\"977\":1}}],[\"分析执行计划\",{\"1\":{\"804\":1}}],[\"分析慢查询sql语句\",{\"1\":{\"804\":1}}],[\"分析器\",{\"1\":{\"803\":1}}],[\"分析应用中对象的生命周期分布\",{\"1\":{\"738\":1}}],[\"分析heapdump文件\",{\"1\":{\"730\":1}}],[\"分析工作必须在一个能确保一致性的快照中进行\",{\"1\":{\"710\":1}}],[\"分析别人的作品和自己的相比到底好在哪里\",{\"1\":{\"266\":1}}],[\"分析自己做的不好和好的地方\",{\"1\":{\"266\":1}}],[\"分析人物五官形体\",{\"1\":{\"253\":1}}],[\"分析画面内容\",{\"1\":{\"253\":1}}],[\"分镜头\",{\"1\":{\"265\":1}}],[\"分镜头梳理\",{\"1\":{\"191\":1}}],[\"分镜\",{\"1\":{\"189\":1}}],[\"分类总结\",{\"1\":{\"264\":1}}],[\"分类\",{\"0\":{\"616\":1},\"1\":{\"37\":1,\"78\":1}}],[\"什么时候提交offset合适\",{\"1\":{\"984\":1}}],[\"什么情况下对象会进入老年代\",{\"0\":{\"684\":1}}],[\"什么都不能确认\",{\"1\":{\"552\":1}}],[\"什么人\",{\"1\":{\"279\":1}}],[\"什么道理\",{\"1\":{\"274\":1}}],[\"什么动作\",{\"1\":{\"189\":1}}],[\"什么是自动装配\",{\"0\":{\"922\":1}}],[\"什么是redis\",{\"1\":{\"871\":1}}],[\"什么是aof持久化\",{\"1\":{\"861\":1}}],[\"什么是回表\",{\"0\":{\"798\":1}}],[\"什么是内存泄漏\",{\"1\":{\"663\":1}}],[\"什么是哈希碰撞\",{\"0\":{\"641\":1}}],[\"什么是deque接口\",{\"1\":{\"521\":1}}],[\"什么是算法\",{\"0\":{\"480\":1}}],[\"什么是transition动画\",{\"1\":{\"456\":1}}],[\"什么是定位元素\",{\"1\":{\"425\":1}}],[\"什么是行内元素\",{\"1\":{\"378\":1}}],[\"什么是块级元素\",{\"1\":{\"378\":1}}],[\"什么是层叠呢\",{\"1\":{\"377\":1}}],[\"什么是电影感\",{\"0\":{\"187\":1}}],[\"什么是情绪风\",{\"0\":{\"184\":1}}],[\"什么是构图\",{\"0\":{\"50\":1}}],[\"讲故事\",{\"1\":{\"189\":1,\"190\":1}}],[\"疏离\",{\"1\":{\"189\":1}}],[\"疏离感\",{\"1\":{\"93\":1,\"145\":1,\"191\":1}}],[\"某个线程要先将变量从主内存拷贝到自己的工作内存空间\",{\"1\":{\"657\":1}}],[\"某个瞬间\",{\"1\":{\"188\":1}}],[\"某些元素属于内容的一部分\",{\"1\":{\"378\":1}}],[\"某些元素非常重要\",{\"1\":{\"378\":1}}],[\"某种情绪贯穿照片始终\",{\"1\":{\"185\":1}}],[\"某种意义上决定了美资\",{\"1\":{\"147\":1}}],[\"feign利用了ribbon的客户端负载均衡和多种http客户端库的能力\",{\"1\":{\"953\":1}}],[\"feign可以设置请求的超时时间和重试次数等策略\",{\"1\":{\"953\":1}}],[\"feign集成了hystrix\",{\"1\":{\"953\":1}}],[\"feign集成了ribbon\",{\"1\":{\"953\":1}}],[\"feign会通过encoder进行编码转换成适合http传输的格式\",{\"1\":{\"953\":1}}],[\"feign通过jdk或cglib动态代理技术创建一个接口的实现类\",{\"1\":{\"953\":1}}],[\"feign的底层主要依赖于\",{\"1\":{\"953\":1}}],[\"feign被用来实现服务间的调用\",{\"1\":{\"953\":1}}],[\"feign是一个声明式的http客户端\",{\"1\":{\"953\":1}}],[\"feign调用的底层原理\",{\"0\":{\"953\":1}}],[\"feign\",{\"0\":{\"954\":1},\"1\":{\"952\":1}}],[\"feignclient\",{\"1\":{\"951\":2}}],[\"fetching\",{\"1\":{\"566\":1}}],[\"fetch\",{\"1\":{\"562\":1}}],[\"fsync策略\",{\"1\":{\"861\":1}}],[\"f+3\",{\"1\":{\"670\":1}}],[\"f+2\",{\"1\":{\"670\":1}}],[\"f+1\",{\"1\":{\"670\":4}}],[\"fnfe\",{\"1\":{\"573\":2}}],[\"funnels\",{\"1\":{\"833\":1}}],[\"function\",{\"1\":{\"456\":2,\"457\":3}}],[\"future\",{\"1\":{\"670\":1,\"982\":2}}],[\"future<t>\",{\"1\":{\"670\":1}}],[\"future3\",{\"1\":{\"667\":2,\"670\":2}}],[\"future2\",{\"1\":{\"667\":2,\"670\":2}}],[\"future1\",{\"1\":{\"667\":2,\"670\":2}}],[\"fulltext\",{\"1\":{\"796\":1}}],[\"fullgc\",{\"1\":{\"708\":1}}],[\"full\",{\"1\":{\"513\":2,\"516\":2,\"539\":2}}],[\"fc\",{\"1\":{\"465\":1}}],[\"f3c258\",{\"1\":{\"463\":1,\"469\":1}}],[\"f3f3f3\",{\"1\":{\"453\":1}}],[\"fff\",{\"1\":{\"431\":6}}],[\"ff0\",{\"1\":{\"358\":1,\"387\":3}}],[\"flaglock\",{\"1\":{\"840\":1}}],[\"flags\",{\"1\":{\"721\":1,\"723\":1,\"728\":2,\"852\":1}}],[\"flag\",{\"1\":{\"700\":1,\"720\":1,\"728\":6,\"807\":3}}],[\"flush\",{\"1\":{\"561\":1}}],[\"flow是属性flex\",{\"1\":{\"443\":1}}],[\"flow\",{\"0\":{\"443\":1},\"1\":{\"440\":1,\"443\":2}}],[\"float\",{\"1\":{\"431\":3,\"598\":1,\"644\":2,\"645\":2}}],[\"float属性最初只用于在一段文本内浮动图像\",{\"1\":{\"429\":1}}],[\"float属性可以指定一个元素应沿着其容器的左侧或右侧放置\",{\"1\":{\"429\":1}}],[\"flex的弹性布局\",{\"1\":{\"471\":1}}],[\"flex属性可以指定1个\",{\"1\":{\"452\":1}}],[\"flex相关的属性\",{\"0\":{\"440\":1}}],[\"flex可以成为flex\",{\"1\":{\"436\":1}}],[\"flexible布局\",{\"1\":{\"435\":1}}],[\"flex\",{\"0\":{\"437\":1,\"438\":1,\"441\":1,\"442\":1,\"443\":1,\"449\":1,\"450\":1,\"451\":1,\"452\":1},\"1\":{\"435\":1,\"436\":10,\"440\":7,\"441\":4,\"442\":4,\"443\":4,\"444\":7,\"445\":2,\"446\":7,\"448\":3,\"449\":2,\"450\":2,\"451\":1,\"452\":4,\"453\":2,\"455\":2}}],[\"flexbox翻译为弹性盒子\",{\"1\":{\"435\":1}}],[\"flex布局对齐问题\",{\"0\":{\"453\":1}}],[\"flex布局的模型\",{\"0\":{\"439\":1}}],[\"flex布局的理解\",{\"0\":{\"436\":1}}],[\"flex布局中重要概念\",{\"1\":{\"436\":1}}],[\"flex布局是目前web开发中使用最多的布局方案\",{\"1\":{\"435\":1}}],[\"flex布局\",{\"0\":{\"434\":1},\"1\":{\"430\":1,\"435\":1,\"455\":1}}],[\"flimgrab\",{\"1\":{\"187\":1}}],[\"f0f\",{\"1\":{\"425\":1,\"463\":1}}],[\"f00\",{\"1\":{\"374\":1,\"425\":2,\"436\":1,\"441\":1,\"442\":1,\"462\":1,\"469\":1}}],[\"frame\",{\"1\":{\"682\":1}}],[\"from\",{\"1\":{\"517\":2,\"518\":1,\"519\":1,\"520\":2,\"683\":1,\"745\":1,\"746\":1,\"753\":2,\"796\":2,\"798\":1,\"807\":1}}],[\"from和to\",{\"1\":{\"457\":1}}],[\"front\",{\"1\":{\"506\":1,\"516\":1,\"517\":15,\"518\":12,\"519\":22,\"520\":17,\"523\":8}}],[\"fruits\",{\"1\":{\"410\":1}}],[\"freemarker等模板文件\",{\"1\":{\"895\":1}}],[\"free\",{\"0\":{\"330\":1},\"1\":{\"330\":2}}],[\"f1f1f1\",{\"1\":{\"403\":1}}],[\"f12打开\",{\"1\":{\"352\":1}}],[\"f5f5f5\",{\"1\":{\"394\":1,\"431\":2}}],[\"foo\",{\"1\":{\"936\":1}}],[\"footer\",{\"1\":{\"459\":1}}],[\"fork出一个子线程\",{\"1\":{\"860\":1}}],[\"foreach\",{\"1\":{\"633\":1}}],[\"for循环第一个参数为map\",{\"1\":{\"633\":1}}],[\"for循环第一个参数为map集合的第一个类型\",{\"1\":{\"633\":1}}],[\"forname\",{\"1\":{\"586\":2}}],[\"for\",{\"1\":{\"490\":2,\"491\":1,\"494\":1,\"504\":4,\"505\":3,\"506\":1,\"507\":1,\"513\":9,\"514\":1,\"516\":9,\"517\":3,\"518\":3,\"519\":3,\"520\":4,\"522\":2,\"527\":2,\"528\":2,\"531\":2,\"532\":2,\"539\":6,\"557\":1,\"575\":1,\"579\":1,\"582\":2,\"597\":2,\"623\":1,\"633\":2,\"664\":1,\"666\":1,\"667\":2,\"668\":1,\"788\":1,\"789\":1,\"822\":1}}],[\"forwards\",{\"1\":{\"457\":3}}],[\"for=\",{\"1\":{\"410\":1}}],[\"format=b\",{\"1\":{\"729\":3}}],[\"formatter\",{\"1\":{\"663\":1}}],[\"formatting\",{\"1\":{\"465\":3}}],[\"format\",{\"1\":{\"513\":1,\"516\":1,\"517\":1,\"518\":1,\"519\":1,\"520\":1,\"539\":1,\"557\":1,\"751\":1}}],[\"form>\",{\"1\":{\"410\":2}}],[\"form通常作为表单元素的父元素\",{\"1\":{\"410\":1}}],[\"form\",{\"1\":{\"410\":1}}],[\"focus\",{\"1\":{\"373\":1}}],[\"fonts\",{\"1\":{\"417\":1}}],[\"font\",{\"0\":{\"361\":1,\"362\":1,\"363\":1,\"364\":1,\"366\":1},\"1\":{\"348\":2,\"349\":1,\"362\":2,\"366\":11,\"372\":1,\"376\":2,\"417\":3,\"423\":2,\"431\":1,\"469\":1,\"472\":1}}],[\"fallbackmethod\",{\"1\":{\"960\":1,\"961\":1}}],[\"fallback\",{\"1\":{\"956\":1,\"963\":1}}],[\"false为非公平锁\",{\"1\":{\"662\":1}}],[\"false\",{\"1\":{\"504\":1,\"513\":1,\"514\":5,\"516\":1,\"522\":1,\"523\":1,\"539\":1,\"557\":1,\"599\":1,\"606\":1,\"611\":6,\"645\":1,\"671\":2,\"715\":1,\"833\":1,\"915\":1}}],[\"facotrybean\",{\"1\":{\"927\":1}}],[\"factories\",{\"1\":{\"926\":2}}],[\"factories中的自动配置类实现自动装配\",{\"1\":{\"923\":1}}],[\"factories文件中\",{\"1\":{\"923\":1}}],[\"factor\",{\"1\":{\"644\":1,\"645\":4,\"982\":1}}],[\"face\",{\"1\":{\"362\":1,\"417\":1}}],[\"failed\",{\"1\":{\"504\":1,\"513\":6,\"516\":6,\"539\":6}}],[\"faild\",{\"1\":{\"504\":3}}],[\"family\",{\"0\":{\"362\":1},\"1\":{\"362\":1,\"366\":2,\"376\":1,\"417\":2}}],[\"favicon\",{\"1\":{\"351\":1}}],[\"fields\",{\"1\":{\"645\":1}}],[\"fielddata缓存\",{\"1\":{\"566\":1}}],[\"field\",{\"1\":{\"558\":1,\"753\":8,\"820\":6}}],[\"finali\",{\"1\":{\"668\":2}}],[\"finalize\",{\"1\":{\"663\":2}}],[\"final\",{\"1\":{\"588\":1,\"644\":8,\"663\":1,\"671\":1,\"824\":1}}],[\"finally语句块来完成\",{\"1\":{\"662\":1}}],[\"finally\",{\"0\":{\"572\":1},\"1\":{\"663\":2,\"666\":1,\"671\":4,\"842\":1}}],[\"fin\",{\"1\":{\"552\":6}}],[\"findall\",{\"1\":{\"910\":1}}],[\"find\",{\"0\":{\"318\":1},\"1\":{\"318\":3,\"513\":2,\"516\":2,\"539\":2}}],[\"fifo队列来完成资源获取的排队工作将每条要去抢占资源的线程封装成\",{\"1\":{\"665\":1}}],[\"fifo\",{\"1\":{\"515\":1}}],[\"firefox\",{\"1\":{\"464\":1}}],[\"first\",{\"1\":{\"374\":4,\"377\":2,\"512\":1,\"515\":2,\"579\":5,\"708\":1}}],[\"fix\",{\"1\":{\"433\":2}}],[\"fixed的元素\",{\"1\":{\"425\":1}}],[\"fixed\",{\"1\":{\"402\":1,\"422\":1,\"424\":1,\"425\":1}}],[\"filters\",{\"1\":{\"936\":1}}],[\"filtered\",{\"1\":{\"796\":2}}],[\"filter缓存和buffer\",{\"1\":{\"566\":1}}],[\"filter\",{\"1\":{\"463\":4,\"566\":1}}],[\"fill\",{\"1\":{\"457\":3}}],[\"filesort\",{\"1\":{\"796\":1}}],[\"filesystem\",{\"1\":{\"561\":1}}],[\"file=test\",{\"1\":{\"729\":1}}],[\"file=<filename\",{\"1\":{\"729\":2}}],[\"filenotfoundexception\",{\"1\":{\"573\":1}}],[\"file\",{\"1\":{\"319\":2,\"320\":2,\"410\":1,\"573\":1,\"804\":1,\"859\":1}}],[\"filmgrab\",{\"1\":{\"19\":1}}],[\"f2f2f2\",{\"1\":{\"431\":1}}],[\"f2\",{\"1\":{\"275\":2}}],[\"f\",{\"1\":{\"273\":1,\"274\":3,\"326\":1,\"484\":1,\"557\":1,\"670\":6,\"731\":1}}],[\"科幻\",{\"1\":{\"187\":1}}],[\"的重试\",{\"1\":{\"985\":1}}],[\"的消息\",{\"1\":{\"982\":1}}],[\"的事件广播系统\",{\"1\":{\"972\":1}}],[\"的过程\",{\"1\":{\"968\":1}}],[\"的资源\",{\"1\":{\"963\":1}}],[\"的读请求都能得到一致性的结果\",{\"1\":{\"933\":1}}],[\"的启动流程可以概括为以下几个关键步骤\",{\"1\":{\"926\":1}}],[\"的作用是配合配置中心\",{\"1\":{\"972\":1}}],[\"的作用域\",{\"1\":{\"907\":1}}],[\"的作用分别是阻塞线程和解除阻塞线程\",{\"1\":{\"671\":1}}],[\"的增强或通知以及mvc中适配controller\",{\"1\":{\"900\":1}}],[\"的增长率正相关\",{\"1\":{\"484\":1}}],[\"的实现主要依赖于代理模式和反射模式\",{\"1\":{\"892\":1}}],[\"的实现中\",{\"1\":{\"822\":1}}],[\"的遍历\",{\"1\":{\"868\":1}}],[\"的主要区别就是\",{\"1\":{\"868\":1}}],[\"的系统调用\",{\"1\":{\"867\":1}}],[\"的配置来决定何时将系统内核缓存区的数据同步到硬盘中的\",{\"1\":{\"861\":1}}],[\"的计数\",{\"1\":{\"822\":1}}],[\"的数组\",{\"1\":{\"822\":1}}],[\"的数据传输服务\",{\"1\":{\"546\":2}}],[\"的关键实现原理\",{\"1\":{\"822\":1}}],[\"的关系\",{\"1\":{\"521\":4}}],[\"的所有数据更改自动复制到一个或多个从数据库\",{\"1\":{\"800\":1}}],[\"的记录\",{\"1\":{\"798\":1}}],[\"的序号\",{\"1\":{\"796\":1}}],[\"的长度是0\",{\"1\":{\"764\":1}}],[\"的堆内存时会抛出此异常\",{\"1\":{\"737\":1}}],[\"的设计者需要在此基础之上进行改进\",{\"1\":{\"691\":1}}],[\"的对象作为起点\",{\"1\":{\"687\":1}}],[\"的形式\",{\"1\":{\"672\":1}}],[\"的结果\",{\"1\":{\"670\":2}}],[\"的值为\",{\"1\":{\"669\":1}}],[\"的值\",{\"1\":{\"669\":1}}],[\"的值等于\",{\"1\":{\"669\":1}}],[\"的弱引用\",{\"1\":{\"663\":1}}],[\"的键值对\",{\"1\":{\"663\":1}}],[\"的区别是什么\",{\"0\":{\"764\":1}}],[\"的区别\",{\"0\":{\"662\":1},\"1\":{\"704\":1}}],[\"的这两种情况下都能被正确释放\",{\"1\":{\"661\":1}}],[\"的幂次方大小\",{\"1\":{\"645\":1}}],[\"的构造函数\",{\"1\":{\"645\":3}}],[\"的时间是\",{\"1\":{\"842\":1}}],[\"的时间用来做gc并且回收了不到2\",{\"1\":{\"737\":1}}],[\"的时间\",{\"1\":{\"637\":1}}],[\"的引用\",{\"1\":{\"609\":1,\"611\":1}}],[\"的引用保存在字符串常量池中\",{\"1\":{\"609\":1}}],[\"的相应类型的缓存数据\",{\"1\":{\"599\":1}}],[\"的源码\",{\"1\":{\"579\":1}}],[\"的聚合如何实现\",{\"0\":{\"567\":1}}],[\"的节点才有资格参与master选举\",{\"1\":{\"564\":1}}],[\"的状态\",{\"1\":{\"552\":1}}],[\"的传输效率要比\",{\"1\":{\"550\":1}}],[\"的\",{\"1\":{\"522\":4,\"546\":2,\"551\":1,\"822\":1,\"916\":1,\"926\":1,\"972\":1}}],[\"的定义是在同一端进\",{\"1\":{\"521\":1}}],[\"的方法\",{\"1\":{\"520\":1}}],[\"的位置是在线程里面\",{\"1\":{\"667\":1}}],[\"的位置\",{\"1\":{\"520\":1}}],[\"的地方\",{\"1\":{\"520\":1}}],[\"的逻辑是一样的\",{\"1\":{\"520\":2}}],[\"的逻辑和我们之前实现的队列中的\",{\"1\":{\"520\":2}}],[\"的字符串\",{\"1\":{\"514\":1}}],[\"的元素暂存进\",{\"1\":{\"523\":1}}],[\"的元素\",{\"1\":{\"497\":1}}],[\"的函数f\",{\"1\":{\"484\":1}}],[\"的分辨率1125\",{\"1\":{\"468\":1}}],[\"的运算符的两边必须要有空格\",{\"1\":{\"463\":1}}],[\"的size\",{\"1\":{\"450\":1}}],[\"的简写\",{\"1\":{\"443\":1}}],[\"的变化\",{\"1\":{\"185\":1}}],[\"的比例\",{\"1\":{\"92\":1}}],[\"态度传递\",{\"1\":{\"184\":1}}],[\"即立即进行重试\",{\"1\":{\"985\":1}}],[\"即根据配置的采样策略决定哪些span需要被记录并上报给oap服务器\",{\"1\":{\"977\":1}}],[\"即服务实例默认每隔5秒向nacos服务器发送一次心跳\",{\"1\":{\"970\":1}}],[\"即在调用远程服务时\",{\"1\":{\"953\":1}}],[\"即微服务之间的rpc\",{\"1\":{\"953\":1}}],[\"即无论系统的处理能力如何\",{\"1\":{\"948\":1}}],[\"即允许系统在不同节点的数据副本之间进行数据同步的过程存在延时\",{\"1\":{\"934\":1}}],[\"即socket或者channel\",{\"1\":{\"864\":1}}],[\"即哈希值对应的二进制串中连续零的最大长度\",{\"1\":{\"822\":1}}],[\"即基数\",{\"1\":{\"822\":1}}],[\"即便发生宕机\",{\"1\":{\"802\":1}}],[\"即便是在大规模数据集上也能提供快速响应\",{\"1\":{\"562\":1}}],[\"即redo\",{\"1\":{\"802\":1}}],[\"即给定一个确切的键值\",{\"1\":{\"793\":1}}],[\"即实体与实体之间的关系\",{\"1\":{\"743\":1}}],[\"即某个实体拥有的属性\",{\"1\":{\"743\":1}}],[\"即某个线程正在做某个业务时\",{\"1\":{\"657\":1}}],[\"即对一份数据会存储多个版本\",{\"1\":{\"776\":1}}],[\"即对webapp不可见\",{\"1\":{\"716\":1}}],[\"即对实时垃圾收集算法的研究直接导致了增量收集\",{\"1\":{\"693\":1}}],[\"即同一时刻同时执行多个任务\",{\"1\":{\"650\":1}}],[\"即同一时间段执行多个任务\",{\"1\":{\"650\":1}}],[\"即时编译器\",{\"1\":{\"594\":1}}],[\"即时场景也同样可以抽取道具\",{\"1\":{\"126\":1}}],[\"即一旦索引操作成功返回\",{\"1\":{\"565\":1}}],[\"即使无法做到强一致性\",{\"1\":{\"934\":1}}],[\"即使左表中没有满足条件的行也是如此\",{\"1\":{\"748\":1}}],[\"即使右表中没有满足条件的行也是如此\",{\"1\":{\"748\":1}}],[\"即使调用\",{\"1\":{\"611\":1}}],[\"即使得搜索请求在分布式环境下能够并行处理\",{\"1\":{\"562\":1}}],[\"即使一个元素拥有滚动机制\",{\"1\":{\"402\":1}}],[\"即translog\",{\"1\":{\"561\":1}}],[\"即新的栈顶元素\",{\"1\":{\"522\":1}}],[\"即车中包含一个成员变量\",{\"1\":{\"521\":1}}],[\"即升序排列\",{\"1\":{\"496\":1}}],[\"即右指针\",{\"1\":{\"494\":1}}],[\"即左指针\",{\"1\":{\"494\":1}}],[\"即输出解压\",{\"1\":{\"326\":1}}],[\"即拉高曲线\",{\"1\":{\"289\":1}}],[\"即\",{\"1\":{\"184\":1,\"517\":1,\"521\":2,\"632\":1,\"691\":1,\"727\":1,\"963\":1}}],[\"七层模型是什么\",{\"0\":{\"544\":1}}],[\"七\",{\"0\":{\"183\":1}}],[\"它实现了\",{\"1\":{\"972\":1}}],[\"它使得编写web服务客户端变得非常容易\",{\"1\":{\"953\":1}}],[\"它把时间以一定比例分配\",{\"1\":{\"947\":1}}],[\"它负责管理和实例化应用程序中定义的bean\",{\"1\":{\"927\":1}}],[\"它负责将\",{\"1\":{\"594\":1}}],[\"它封装了应用程序运行时的所有环境属性\",{\"1\":{\"926\":1}}],[\"它协调整个请求处理流程\",{\"1\":{\"895\":1}}],[\"它充当前端控制器的角色\",{\"1\":{\"895\":1}}],[\"它基于mvc\",{\"1\":{\"895\":1}}],[\"它基本上遵守了jmm规范\",{\"1\":{\"658\":1}}],[\"它通过容器\",{\"1\":{\"884\":1}}],[\"它和\",{\"1\":{\"868\":1}}],[\"它不存储指向上一个链表节点和指向下一个链表节点的指针\",{\"1\":{\"853\":1}}],[\"它是一个分布式的任务调度框架\",{\"1\":{\"974\":1}}],[\"它是一个接口\",{\"1\":{\"927\":1}}],[\"它是基于string数据类型的按位的操作\",{\"1\":{\"823\":1}}],[\"它是当前线程所执行的字节码的行号指示器\",{\"1\":{\"680\":1}}],[\"它控制着innodb存储引擎使用的内存大小\",{\"1\":{\"804\":1}}],[\"它提供了acid\",{\"1\":{\"802\":1}}],[\"它提供了基于hyperloglog\",{\"1\":{\"567\":1}}],[\"它可以严格控制数据发送速率\",{\"1\":{\"949\":1}}],[\"它可以监视一个或多个键\",{\"1\":{\"878\":1}}],[\"它可以自动进行故障转移\",{\"1\":{\"871\":1}}],[\"它可以自动发现redis实例并监控它们的健康状况\",{\"1\":{\"871\":1}}],[\"它可以将主数据库\",{\"1\":{\"800\":1}}],[\"它可以代表一个明确完成的future\",{\"1\":{\"670\":1}}],[\"它对数据库中数据的改变是持久的\",{\"1\":{\"767\":1}}],[\"它两也不一定相等\",{\"1\":{\"764\":1}}],[\"它决定临时表的生成\",{\"1\":{\"747\":1}}],[\"它首先不会自己尝试去加载这个类\",{\"1\":{\"715\":1}}],[\"它首先解析和验证请求\",{\"1\":{\"562\":1}}],[\"它第一次实现了让垃圾收集线程与用户线程同时工作\",{\"1\":{\"707\":1}}],[\"它也可用再次获取这个锁\",{\"1\":{\"839\":1}}],[\"它也可以通过css的gradient函数来设置颜色的渐变\",{\"1\":{\"463\":1}}],[\"它也被称为吞吐量优先的垃圾收集器\",{\"1\":{\"704\":1}}],[\"它为单线程环境设计且只使用一个线程进行垃圾回收\",{\"1\":{\"696\":1}}],[\"它的实现原理是基于twitter的snowflake算法\",{\"1\":{\"938\":1}}],[\"它的生命期是随线程的生命期\",{\"1\":{\"682\":1}}],[\"它的后代元素都可以继承这个属性\",{\"1\":{\"376\":1}}],[\"它存储了每一个类的结构信息\",{\"1\":{\"681\":1}}],[\"它支持在计算完成以后触发一些函数或执行某些动作\",{\"1\":{\"670\":1}}],[\"它要做的事情是\",{\"1\":{\"668\":1}}],[\"它们将会进行选举\",{\"1\":{\"871\":1}}],[\"它们在实现类对象之间比较大小\",{\"1\":{\"625\":1}}],[\"它们与其他任何东西都没有关系\",{\"1\":{\"467\":1}}],[\"它能在内存中进行流式处理\",{\"1\":{\"567\":1}}],[\"它发送一个\",{\"1\":{\"552\":1}}],[\"它犯了面向设计领域的一个基本错误\",{\"1\":{\"521\":1}}],[\"它利用的也是vm的思想\",{\"1\":{\"473\":1}}],[\"它会选择一个执行器\",{\"1\":{\"975\":1}}],[\"它会通过nacos\",{\"1\":{\"971\":1}}],[\"它会通过与其他哨兵节点进行投票来确认主节点是否真的故障\",{\"1\":{\"871\":1}}],[\"它会根据项目类路径\",{\"1\":{\"926\":1}}],[\"它会根据视图名称找到对应的视图对象\",{\"1\":{\"895\":1}}],[\"它会根据请求的url和其他条件找到合适的处理器来处理请求\",{\"1\":{\"895\":1}}],[\"它会等待直到count值为0才继续执行\",{\"1\":{\"667\":1}}],[\"它会按照宽度980px来布局一个页面的盒子和内容\",{\"1\":{\"470\":1}}],[\"它会被当作flex\",{\"1\":{\"452\":2}}],[\"它在默认情况下等同于设备独立像素\",{\"1\":{\"468\":1}}],[\"它允许被定位的元素表现得像相对定位一样\",{\"1\":{\"426\":1}}],[\"它用于选择处于特定状态的元素\",{\"1\":{\"373\":1}}],[\"它吃进去的光多\",{\"1\":{\"273\":1}}],[\"它吃进去的光少\",{\"1\":{\"273\":1}}],[\"它更是摄影者与被拍摄者的艺术素质\",{\"1\":{\"182\":1}}],[\"它包含了一个人的学识\",{\"1\":{\"14\":1}}],[\"为redis的分布锁锁key\",{\"1\":{\"840\":1}}],[\"为类的静态变量赋予正确的初始值\",{\"1\":{\"712\":1}}],[\"为类的静态变量分配内存\",{\"1\":{\"712\":1}}],[\"为\",{\"1\":{\"663\":1,\"916\":1}}],[\"为何能实现原子性\",{\"1\":{\"658\":1}}],[\"为啥使用跳表而不使用b+树呢\",{\"1\":{\"857\":1}}],[\"为啥不对表中所有的列创建索引\",{\"0\":{\"795\":1}}],[\"为啥b树不适合区间查找\",{\"1\":{\"793\":1}}],[\"为啥\",{\"1\":{\"716\":1}}],[\"为啥要上分布锁\",{\"0\":{\"840\":1}}],[\"为啥要使用b+\",{\"1\":{\"793\":1}}],[\"为啥要破坏双亲委派机制\",{\"0\":{\"716\":1}}],[\"为啥要有g1\",{\"1\":{\"708\":1}}],[\"为啥要有completablefuture\",{\"1\":{\"670\":1}}],[\"为啥引入红黑树\",{\"0\":{\"642\":1}}],[\"为啥img可以设置宽高\",{\"1\":{\"379\":1}}],[\"为17\",{\"1\":{\"632\":1}}],[\"为一个引用\",{\"1\":{\"606\":1}}],[\"为两台主机进程之间的通信提供通用的数据传输服务\",{\"1\":{\"544\":1}}],[\"为计算机用户提供服务\",{\"1\":{\"544\":1}}],[\"为元素后面的区域添加模糊或者其他效果\",{\"1\":{\"463\":1}}],[\"为auto时\",{\"1\":{\"445\":1}}],[\"为了保证分布式环境下同一个任务只有一个执行器执行\",{\"1\":{\"975\":1}}],[\"为了尽量地址不冲突\",{\"1\":{\"833\":1}}],[\"为了得到完整的行数据\",{\"1\":{\"798\":1}}],[\"为了避免堆内存被耗尽\",{\"1\":{\"708\":1}}],[\"为了避免脑裂\",{\"1\":{\"564\":1}}],[\"为了适应现在不断扩大的内存和不断增加的处理器数量\",{\"1\":{\"708\":1}}],[\"为了更好地控制gc产生的停顿时间\",{\"1\":{\"694\":1}}],[\"为了解决这个问题\",{\"1\":{\"693\":1}}],[\"为了解决了\",{\"1\":{\"551\":1}}],[\"为了优化性能和磁盘空间利用率\",{\"1\":{\"561\":1}}],[\"为了显示可以完整的显示在页面中\",{\"1\":{\"470\":1}}],[\"为了让网页更加美观\",{\"1\":{\"397\":1}}],[\"为了取悦于人\",{\"1\":{\"182\":1}}],[\"为之添加css样式\",{\"1\":{\"367\":1}}],[\"为什么我们记得过去\",{\"1\":{\"919\":1}}],[\"为什么出来一个压缩链表\",{\"1\":{\"853\":1}}],[\"为什么这么快\",{\"0\":{\"814\":1}}],[\"为什么sleep\",{\"0\":{\"655\":1}}],[\"为什么wait\",{\"0\":{\"654\":1}}],[\"为什么重写equals\",{\"0\":{\"607\":1}}],[\"为什么要使用线程池\",{\"1\":{\"664\":1}}],[\"为什么要用弱引用\",{\"1\":{\"663\":1}}],[\"为什么要三次握手\",{\"1\":{\"552\":1}}],[\"为什么要做拍摄策划\",{\"0\":{\"111\":1}}],[\"为什么链表很重要\",{\"0\":{\"502\":1}}],[\"为什么学习算法\",{\"0\":{\"481\":1}}],[\"为什么可以解决浮动高度塌陷问题\",{\"1\":{\"465\":1}}],[\"为什么需要浏览器前缀了\",{\"1\":{\"464\":1}}],[\"为什么需要flex布局\",{\"1\":{\"435\":1}}],[\"为什么总说计划赶不上变化\",{\"1\":{\"300\":1}}],[\"摆姿绝不是为了单纯的好看\",{\"1\":{\"182\":1}}],[\"摆拍tips\",{\"1\":{\"149\":1}}],[\"摆拍\",{\"1\":{\"149\":1}}],[\"摆拍or抓拍\",{\"0\":{\"149\":1}}],[\"丰富内容\",{\"1\":{\"191\":1}}],[\"丰富美姿\",{\"0\":{\"176\":1}}],[\"丰富化\",{\"1\":{\"156\":1}}],[\"凹出背后脊柱骨感\",{\"1\":{\"175\":1}}],[\"过期键在筛选\",{\"1\":{\"832\":1}}],[\"过滤分组\",{\"1\":{\"746\":1}}],[\"过滤指定的行\",{\"1\":{\"746\":1}}],[\"过滤器筛选或其他后期处理操作\",{\"1\":{\"562\":1}}],[\"过时不侯\",{\"1\":{\"670\":1}}],[\"过时不候\",{\"1\":{\"670\":1}}],[\"过多或过少的分片数都可能导致性能问题\",{\"1\":{\"566\":1}}],[\"过渡动画有如下缺点\",{\"1\":{\"457\":1}}],[\"过渡动画\",{\"1\":{\"456\":1}}],[\"过于瘦的人\",{\"1\":{\"175\":1}}],[\"过曝\",{\"1\":{\"12\":1}}],[\"瘦\",{\"0\":{\"175\":1}}],[\"挂脖吊带\",{\"1\":{\"174\":1}}],[\"斜体显示\",{\"1\":{\"364\":1}}],[\"斜线\",{\"1\":{\"279\":1}}],[\"斜方肌太厚\",{\"1\":{\"174\":1}}],[\"斜侧面\",{\"1\":{\"34\":1}}],[\"太繁琐\",{\"1\":{\"961\":1}}],[\"太暗\",{\"1\":{\"275\":2}}],[\"太瘦的人尽量少俯拍\",{\"1\":{\"175\":1}}],[\"太紧会放大缺点后期困难\",{\"1\":{\"174\":1}}],[\"太阳天\",{\"1\":{\"275\":1}}],[\"太阳落山之后\",{\"1\":{\"81\":1}}],[\"太阳下山前1\",{\"1\":{\"81\":1}}],[\"太阳高度较低\",{\"1\":{\"81\":1}}],[\"太阳升起之后的2\",{\"1\":{\"81\":1}}],[\"太阳升起之前的20\",{\"1\":{\"81\":1}}],[\"太阳角度低\",{\"1\":{\"81\":1}}],[\"太阳光的高度\",{\"1\":{\"81\":1}}],[\"胖\",{\"0\":{\"174\":1}}],[\"抿嘴时嘴角的纹路加深\",{\"1\":{\"173\":1}}],[\"舌头抵上颚\",{\"1\":{\"173\":1}}],[\"闭眼\",{\"1\":{\"179\":1,\"224\":1}}],[\"闭嘴巴\",{\"1\":{\"173\":1}}],[\"闭园时间\",{\"1\":{\"121\":1}}],[\"戴牙套也会嘴凸\",{\"1\":{\"173\":1}}],[\"牙齿不整齐少露牙齿\",{\"1\":{\"173\":1}}],[\"牙齿不整齐\",{\"1\":{\"173\":1}}],[\"牙套\",{\"1\":{\"173\":1}}],[\"咬嘴唇\",{\"1\":{\"173\":1}}],[\"露齿笑拍侧脸\",{\"1\":{\"173\":1}}],[\"露齿笑可以提升面部让下颌线明显\",{\"1\":{\"169\":1}}],[\"肿眼泡\",{\"1\":{\"171\":1}}],[\"哑光眼影视觉收缩\",{\"1\":{\"171\":1}}],[\"颅顶蓬松\",{\"1\":{\"171\":1}}],[\"修复并发标记环节\",{\"1\":{\"707\":1}}],[\"修复瑕疵\",{\"1\":{\"247\":1,\"256\":1}}],[\"修改或删除要监控的文件描述符\",{\"1\":{\"869\":1}}],[\"修改列\",{\"0\":{\"755\":1}}],[\"修改字段\",{\"1\":{\"753\":1}}],[\"修改表字段长度\",{\"1\":{\"808\":1}}],[\"修改表字段varchar为clob\",{\"1\":{\"808\":1}}],[\"修改表字段\",{\"0\":{\"753\":1}}],[\"修改\",{\"1\":{\"728\":1}}],[\"修改中断标识位仅此而已\",{\"1\":{\"671\":1}}],[\"修改链表的第index个位置的元素e\",{\"1\":{\"504\":1}}],[\"修改文字默认缝隙\",{\"1\":{\"359\":1}}],[\"修瑕\",{\"1\":{\"254\":1}}],[\"修补环境中的瑕疵\",{\"1\":{\"254\":1}}],[\"修补工具\",{\"1\":{\"247\":1}}],[\"修饰方法的情况\",{\"1\":{\"661\":1}}],[\"修饰代码块情况\",{\"1\":{\"661\":1}}],[\"修饰代码块\",{\"1\":{\"661\":1}}],[\"修饰静态方法\",{\"1\":{\"661\":1}}],[\"修饰实例方法\",{\"1\":{\"661\":1}}],[\"修饰\",{\"1\":{\"584\":1}}],[\"修饰瑕疵\",{\"1\":{\"253\":1}}],[\"修饰脸型的头发之间\",{\"1\":{\"170\":1}}],[\"修饰脸型的发丝需要有层次感\",{\"1\":{\"170\":1}}],[\"修图软件\",{\"1\":{\"278\":1}}],[\"修图小技巧\",{\"0\":{\"261\":1}}],[\"修图步骤\",{\"0\":{\"252\":1,\"254\":1}}],[\"修图前准备\",{\"0\":{\"247\":1}}],[\"修图\",{\"1\":{\"122\":1}}],[\"刘海遮挡\",{\"1\":{\"171\":2}}],[\"刘海或鬓角的碎发用来修饰脸型\",{\"1\":{\"170\":1}}],[\"刘海不能太长\",{\"1\":{\"168\":1}}],[\"卷棒\",{\"1\":{\"170\":1}}],[\"卷发\",{\"1\":{\"124\":1}}],[\"玉米夹\",{\"1\":{\"170\":1}}],[\"假如缓存删除失败或者来不及\",{\"1\":{\"849\":1}}],[\"假如有个图书馆\",{\"1\":{\"744\":1}}],[\"假设请求url\",{\"1\":{\"915\":1}}],[\"假设在更新redis缓存出现了异常\",{\"1\":{\"847\":1}}],[\"假设宕机了\",{\"1\":{\"840\":1}}],[\"假设当前日期是20240211\",{\"1\":{\"823\":1}}],[\"假设两个公账号对应的id分别为11\",{\"1\":{\"818\":1}}],[\"假设一个表有主键id和若干其他列如name\",{\"1\":{\"798\":1}}],[\"假设一个方法执行需要1秒\",{\"1\":{\"670\":1}}],[\"假设建立索引a\",{\"1\":{\"794\":1}}],[\"假设我们记录每本书借出的时间\",{\"1\":{\"744\":1}}],[\"假设35是高cpu占用的线程id\",{\"1\":{\"738\":1}}],[\"假设不存在\",{\"1\":{\"669\":1}}],[\"假设给定的队列入队一端是栈顶\",{\"1\":{\"522\":1}}],[\"假设容器中的类型是\",{\"1\":{\"521\":1}}],[\"假设div中只有一行文字\",{\"1\":{\"365\":1}}],[\"假发片\",{\"1\":{\"170\":1}}],[\"假刘海\",{\"1\":{\"124\":1}}],[\"月牙型脸\",{\"1\":{\"169\":1}}],[\"少用\",{\"1\":{\"373\":2}}],[\"少拍侧面正侧面\",{\"1\":{\"173\":1}}],[\"少拍侧脸或道具遮挡\",{\"1\":{\"169\":1}}],[\"少拍正侧面或微低下巴\",{\"1\":{\"173\":1}}],[\"少拍正面或微低下巴\",{\"1\":{\"172\":1}}],[\"少拍仰拍镜头下巴圆润\",{\"1\":{\"169\":1}}],[\"少女私房\",{\"1\":{\"114\":1}}],[\"圆角border\",{\"0\":{\"386\":1}}],[\"圆\",{\"1\":{\"169\":1}}],[\"圆脸\",{\"1\":{\"159\":1}}],[\"加权随机\",{\"1\":{\"944\":1}}],[\"加权轮询\",{\"1\":{\"944\":1}}],[\"加在主类上\",{\"1\":{\"902\":1}}],[\"加大内存\",{\"1\":{\"737\":1}}],[\"加大堆内存\",{\"1\":{\"737\":1}}],[\"加载并初始化从\",{\"1\":{\"926\":1}}],[\"加载spring\",{\"1\":{\"926\":1}}],[\"加载环境和外部配置\",{\"1\":{\"926\":1}}],[\"加载路径中的class可以被tomcat和各个webapp访问\",{\"1\":{\"716\":1}}],[\"加载\",{\"1\":{\"712\":1,\"713\":1}}],[\"加锁\",{\"0\":{\"775\":1},\"1\":{\"797\":1}}],[\"加锁和解锁不需要额外的消耗\",{\"1\":{\"672\":1}}],[\"加锁是否公平\",{\"1\":{\"662\":1}}],[\"加版本号\",{\"1\":{\"658\":1}}],[\"加入常量池并返回其引用\",{\"1\":{\"611\":1}}],[\"加密解密\",{\"1\":{\"544\":1}}],[\"加上element\",{\"1\":{\"468\":1}}],[\"加刘海\",{\"1\":{\"168\":1}}],[\"加了柔光设备的灯光\",{\"1\":{\"79\":1}}],[\"颏唇沟\",{\"1\":{\"166\":1}}],[\"颧骨\",{\"1\":{\"166\":1}}],[\"鼻孔大\",{\"1\":{\"172\":1}}],[\"鼻基底塌陷\",{\"1\":{\"172\":1}}],[\"鼻子歪很严重的时候尽量避免拍正脸\",{\"1\":{\"172\":1}}],[\"鼻子\",{\"0\":{\"172\":1}}],[\"鼻梁不正\",{\"1\":{\"172\":1}}],[\"鼻梁塌陷\",{\"1\":{\"172\":1}}],[\"鼻梁两侧\",{\"1\":{\"166\":1}}],[\"鼻梁\",{\"1\":{\"166\":1}}],[\"鼻底至下颌\",{\"1\":{\"165\":1}}],[\"各并发事物之间数据库是独立的\",{\"1\":{\"767\":1}}],[\"各个webapp共享的类加载器\",{\"1\":{\"716\":1}}],[\"各个分片将它们的局部最优结果集\",{\"1\":{\"562\":1}}],[\"各个时刻光线变化不大\",{\"1\":{\"83\":1}}],[\"各自从元素自己以及祖先元素中\",{\"1\":{\"427\":1}}],[\"各占脸宽的1\",{\"1\":{\"165\":1}}],[\"各占脸长的1\",{\"1\":{\"165\":1}}],[\"从消息队列去除\",{\"1\":{\"849\":1}}],[\"从键里面返回所有给定位置元素的位置\",{\"1\":{\"824\":1}}],[\"从小到大\",{\"1\":{\"821\":1}}],[\"从大到小\",{\"1\":{\"821\":1}}],[\"从集合中随机弹出一个元素\",{\"1\":{\"819\":2}}],[\"从数据库读取到的还是旧值\",{\"1\":{\"848\":1}}],[\"从数据库的sql线程读取中继日志\",{\"1\":{\"801\":1}}],[\"从数据库通过i\",{\"1\":{\"801\":1}}],[\"从数组中删除index位置的元素\",{\"1\":{\"513\":1,\"516\":1,\"539\":1}}],[\"从最左开始\",{\"1\":{\"794\":1}}],[\"从最后一个元素开始\",{\"1\":{\"513\":1,\"516\":1,\"539\":1}}],[\"从gc\",{\"1\":{\"707\":1}}],[\"从效率上来说\",{\"1\":{\"691\":1}}],[\"从根节点开始标记所有被引用对象\",{\"1\":{\"691\":1}}],[\"从这些节点开始向下搜索\",{\"1\":{\"687\":1}}],[\"从无锁\",{\"1\":{\"672\":1}}],[\"从hash值不可以反向推导出原始的数据\",{\"1\":{\"638\":1}}],[\"从常量池中查找\",{\"1\":{\"606\":1}}],[\"从而避免了重复执行\",{\"1\":{\"975\":1}}],[\"从而避免了并发冲突\",{\"1\":{\"565\":1}}],[\"从而做出合适的选择\",{\"1\":{\"974\":1}}],[\"从而增强了微服务架构下的灵活性和可运维性\",{\"1\":{\"972\":1}}],[\"从而确保各个节点上的服务注册信息和服务发现结果是一致的\",{\"1\":{\"971\":1}}],[\"从而确保redis服务的高可用性\",{\"1\":{\"871\":1}}],[\"从而防止客户端调用已失效的服务实例\",{\"1\":{\"970\":1}}],[\"从而在从数据库上产生与主数据库相同的数据更改\",{\"1\":{\"801\":1}}],[\"从而实现数据的分布式存储和备份\",{\"1\":{\"800\":1}}],[\"从而实现快速的全文检索\",{\"1\":{\"563\":1}}],[\"从而减少一次gc所产生的停顿\",{\"1\":{\"694\":1}}],[\"从输入\",{\"0\":{\"547\":1}}],[\"从高到低分别为\",{\"1\":{\"544\":1,\"545\":1}}],[\"从索引为0开始\",{\"1\":{\"504\":1}}],[\"从右向左找到第一个大于nums\",{\"1\":{\"497\":1}}],[\"从右向左找到第一个不满足递减顺序的元素\",{\"1\":{\"497\":1}}],[\"从i+1到\",{\"1\":{\"497\":1}}],[\"从结果来说\",{\"1\":{\"490\":1}}],[\"从main\",{\"1\":{\"441\":1}}],[\"从上到下按顺序摆放好\",{\"1\":{\"422\":1}}],[\"从上往下依次执行\",{\"1\":{\"796\":1}}],[\"从上往下\",{\"1\":{\"404\":1}}],[\"从左到右排布\",{\"1\":{\"425\":1}}],[\"从左到右\",{\"1\":{\"422\":1}}],[\"从左到右分为\",{\"1\":{\"289\":1}}],[\"从左侧发际线到右侧发际线为无知眼睛\",{\"1\":{\"165\":1}}],[\"从眉骨至鼻底\",{\"1\":{\"165\":1}}],[\"从前额发际线至眉骨\",{\"1\":{\"165\":1}}],[\"从容\",{\"1\":{\"143\":1}}],[\"找到了a然后把三级缓存里面的这个a放到二级缓存里面\",{\"1\":{\"925\":1}}],[\"找到了6\",{\"1\":{\"497\":1}}],[\"找到的handler\",{\"1\":{\"894\":1}}],[\"找到第一对连续的数字\",{\"1\":{\"497\":1}}],[\"找到一个满足条件的三元组后\",{\"1\":{\"494\":1}}],[\"找到一个满足条件的三元组\",{\"1\":{\"494\":1}}],[\"找出某一半径内的元素\",{\"1\":{\"824\":1}}],[\"找出node应存放在数组的位置\",{\"1\":{\"640\":1}}],[\"找出所有满足条件且不重复的三元组\",{\"1\":{\"493\":1}}],[\"找出最邻近的2个定位元素进行比较\",{\"1\":{\"427\":1}}],[\"找问题\",{\"1\":{\"278\":1}}],[\"找花比较低的位置\",{\"1\":{\"232\":1}}],[\"找好动作及角度可摆拍\",{\"1\":{\"163\":1}}],[\"找模特\",{\"0\":{\"122\":1}}],[\"桌子\",{\"1\":{\"161\":1}}],[\"草地\",{\"1\":{\"161\":1}}],[\"屁股靠\",{\"1\":{\"160\":1}}],[\"肩膀暗\",{\"1\":{\"262\":1}}],[\"肩靠\",{\"1\":{\"160\":2}}],[\"肩下沉\",{\"1\":{\"156\":1}}],[\"肘靠\",{\"1\":{\"160\":1}}],[\"墙\",{\"1\":{\"160\":1}}],[\"折叠后最终值得计算规则\",{\"1\":{\"387\":1}}],[\"折叠\",{\"1\":{\"387\":1}}],[\"折叠椅子\",{\"1\":{\"126\":1}}],[\"折线\",{\"1\":{\"279\":1}}],[\"折三角制造曲线\",{\"1\":{\"159\":1}}],[\"张开平放或打三角\",{\"1\":{\"159\":1}}],[\"张扬\",{\"1\":{\"142\":1}}],[\"床\",{\"1\":{\"159\":1,\"161\":1}}],[\"抬起和环境道具互动\",{\"1\":{\"158\":1}}],[\"抬头\",{\"1\":{\"157\":1,\"179\":1}}],[\"抬头时角度不能过大\",{\"1\":{\"156\":1}}],[\"膝盖高度平齐或增加层次感\",{\"1\":{\"158\":1}}],[\"石头\",{\"1\":{\"158\":1,\"159\":1,\"160\":1}}],[\"窗口\",{\"1\":{\"550\":1}}],[\"窗台\",{\"1\":{\"161\":1}}],[\"窗边\",{\"1\":{\"158\":1,\"160\":1}}],[\"窗户\",{\"1\":{\"79\":1,\"161\":1}}],[\"椅子\",{\"1\":{\"158\":1}}],[\"台阶\",{\"1\":{\"158\":1,\"159\":1}}],[\"台灯\",{\"1\":{\"85\":1}}],[\"胸面\",{\"1\":{\"156\":1}}],[\"胸以上的景别\",{\"1\":{\"41\":1}}],[\"单例\",{\"1\":{\"884\":1}}],[\"单机锁不行\",{\"1\":{\"840\":1}}],[\"单机版ok\",{\"1\":{\"840\":1}}],[\"单位\",{\"1\":{\"727\":1,\"970\":2}}],[\"单位为毫秒\",{\"1\":{\"727\":1}}],[\"单位可以是秒\",{\"1\":{\"456\":1}}],[\"单词\",{\"1\":{\"468\":1}}],[\"单值语法\",{\"1\":{\"452\":1}}],[\"单行\",{\"1\":{\"442\":1}}],[\"单行文字显示省略号\",{\"0\":{\"395\":1}}],[\"单独对某个元素进行定位呢\",{\"1\":{\"422\":1}}],[\"单独看美姿\",{\"1\":{\"154\":1}}],[\"单号文本输入框\",{\"1\":{\"410\":1}}],[\"单曲循环一整天\",{\"1\":{\"311\":1}}],[\"单个镜头的呈现\",{\"1\":{\"188\":1}}],[\"单手靠墙靠桌等\",{\"1\":{\"160\":1}}],[\"单色\",{\"0\":{\"103\":1,\"104\":1}}],[\"单色和谐关系\",{\"1\":{\"96\":1}}],[\"形式存在\",{\"1\":{\"436\":1}}],[\"形象\",{\"1\":{\"278\":1}}],[\"形成了一个闭环\",{\"1\":{\"924\":1}}],[\"形成快照链表\",{\"1\":{\"797\":1}}],[\"形成一个新的段\",{\"1\":{\"561\":1}}],[\"形成独立的格式化上下文\",{\"1\":{\"465\":1}}],[\"形成人景结合感\",{\"1\":{\"234\":1}}],[\"形成落差\",{\"1\":{\"233\":1}}],[\"形成前景的虚化感\",{\"1\":{\"232\":1}}],[\"形成低角度仰拍\",{\"1\":{\"230\":1}}],[\"形成明显的明暗对比\",{\"1\":{\"76\":1}}],[\"形成明显的受光面\",{\"1\":{\"76\":1}}],[\"形体\",{\"1\":{\"254\":1}}],[\"形体等制造曲线\",{\"1\":{\"154\":1}}],[\"形体动作制造三角\",{\"1\":{\"154\":1}}],[\"都按固定速率处理\",{\"1\":{\"949\":1}}],[\"都要实现对应的确认和补偿操作\",{\"1\":{\"942\":1}}],[\"都可以用无限制\",{\"1\":{\"671\":1}}],[\"都可以称作引导线\",{\"1\":{\"222\":1}}],[\"都触发了\",{\"1\":{\"671\":1}}],[\"都为1的时候才为1\",{\"1\":{\"632\":1}}],[\"都能保证元素唯一\",{\"1\":{\"626\":1}}],[\"都包含抽象方法\",{\"1\":{\"605\":1}}],[\"都不能被实例化\",{\"1\":{\"605\":1}}],[\"都不可以调\",{\"1\":{\"277\":1}}],[\"都成功才返回结果\",{\"1\":{\"565\":1}}],[\"都给\",{\"1\":{\"522\":1}}],[\"都应该是组合关系\",{\"1\":{\"521\":1}}],[\"都是用于解决分布式环境下的定时任务调度问题\",{\"1\":{\"974\":1}}],[\"都是线程不安全的\",{\"1\":{\"622\":1}}],[\"都是将1rem等同于设计稿的1\",{\"1\":{\"473\":1}}],[\"都是加强质感\",{\"1\":{\"288\":1}}],[\"都向观众传递了某种信息\",{\"1\":{\"153\":1}}],[\"都会到我的list\",{\"1\":{\"818\":1}}],[\"都会产生binlog日志\",{\"1\":{\"799\":1}}],[\"都会回收\",{\"1\":{\"663\":1}}],[\"都会改变模特的性格和风格\",{\"1\":{\"123\":1}}],[\"都会影响画面的整体效果\",{\"1\":{\"40\":1}}],[\"眉峰不能挑太高\",{\"1\":{\"168\":1}}],[\"眉骨\",{\"1\":{\"166\":1}}],[\"眉形可以改变人物性格\",{\"1\":{\"152\":1}}],[\"眉毛扬起\",{\"1\":{\"142\":1}}],[\"眉毛\",{\"1\":{\"40\":1,\"123\":1,\"152\":2,\"211\":1}}],[\"并从服务列表中移除\",{\"1\":{\"971\":1}}],[\"并从服务列表中剔除\",{\"1\":{\"970\":1}}],[\"并通知所有rm执行相应的动作\",{\"1\":{\"968\":1}}],[\"并通过java命令启动arthas\",{\"1\":{\"738\":1}}],[\"并通过一个int类变量\",{\"1\":{\"665\":1}}],[\"并通过横向扩展集群节点数来分散负载和提高并发处理能力\",{\"1\":{\"567\":1}}],[\"并通过调整相机白平衡色温\",{\"1\":{\"235\":1}}],[\"并获得全局事务id\",{\"1\":{\"968\":1}}],[\"并记录全局事务状态\",{\"1\":{\"968\":1}}],[\"并认为该中间状态的存在不会影响系统的整体可用性\",{\"1\":{\"934\":1}}],[\"并删除三级缓存里面的a\",{\"1\":{\"925\":1}}],[\"并返回一个modelandview对象\",{\"1\":{\"895\":1}}],[\"并返回他们的数组下标\",{\"1\":{\"489\":1}}],[\"并会将请求涉及到的拦截器和handler一起封装\",{\"1\":{\"894\":1}}],[\"并可以设置其属性\",{\"1\":{\"884\":1}}],[\"并由ioc容器完成对象的注入\",{\"1\":{\"884\":1}}],[\"并收集关于它们健康状态的信息\",{\"1\":{\"871\":1}}],[\"并集\",{\"1\":{\"819\":1}}],[\"并集选择器\",{\"1\":{\"372\":1}}],[\"并按顺序重新执行\",{\"1\":{\"801\":1}}],[\"并按大小排序\",{\"1\":{\"332\":1}}],[\"并没有存储age等其他列的信息\",{\"1\":{\"798\":1}}],[\"并在接收到这些事件时\",{\"1\":{\"972\":1}}],[\"并在执行sql前保存原始数据到undo\",{\"1\":{\"968\":1}}],[\"并在进程退出时输出当前内存各区域分配情况\",{\"1\":{\"724\":1}}],[\"并在内存中构建出java类的原型\",{\"1\":{\"712\":1}}],[\"并将操作前的原始数据存入\",{\"1\":{\"968\":1}}],[\"并将spring容器注册到web容器中\",{\"1\":{\"926\":1}}],[\"并将a自己放到一级缓存里面\",{\"1\":{\"925\":1}}],[\"并将这些信息返回给客户端\",{\"1\":{\"971\":1}}],[\"并将这些内容转换成方法区中的运行时数据结构并且classloader\",{\"1\":{\"679\":1}}],[\"并将这个数字作为桶的计数值存储下来\",{\"1\":{\"822\":1}}],[\"并将其初始化为默认值\",{\"1\":{\"712\":1}}],[\"并计算出每个region中存活对象的总大小\",{\"1\":{\"708\":1}}],[\"并清除当前中断状态\",{\"1\":{\"671\":1}}],[\"并消费处理\",{\"1\":{\"670\":1}}],[\"并不是存在\",{\"1\":{\"663\":1}}],[\"并不意味着一定要按照happens\",{\"1\":{\"657\":1}}],[\"并行性\",{\"1\":{\"708\":1}}],[\"并行与并发\",{\"1\":{\"708\":1}}],[\"并行回收\",{\"1\":{\"703\":1}}],[\"并行垃圾回收器\",{\"0\":{\"697\":1},\"1\":{\"697\":1}}],[\"并行\",{\"1\":{\"650\":1}}],[\"并发事务带来的问题\",{\"0\":{\"768\":1}}],[\"并发访问数据库时候\",{\"1\":{\"767\":1}}],[\"并发线程数\",{\"1\":{\"738\":1}}],[\"并发线程数的控制\",{\"1\":{\"666\":1}}],[\"并发重映射等\",{\"1\":{\"709\":1}}],[\"并发重分配\",{\"1\":{\"709\":1}}],[\"并发重置\",{\"1\":{\"708\":1}}],[\"并发预备重分配\",{\"1\":{\"709\":1}}],[\"并发性\",{\"1\":{\"708\":1}}],[\"并发收集\",{\"1\":{\"707\":1}}],[\"并发清理\",{\"1\":{\"707\":1,\"708\":1}}],[\"并发标记过程\",{\"1\":{\"708\":1}}],[\"并发标记\",{\"1\":{\"707\":1,\"708\":1,\"709\":1}}],[\"并发垃圾收集器\",{\"0\":{\"698\":1},\"1\":{\"698\":1}}],[\"并发\",{\"1\":{\"650\":1}}],[\"并发与并行的区别\",{\"0\":{\"650\":1}}],[\"并发控制使用synchronized\",{\"1\":{\"634\":1}}],[\"并保持有序状态\",{\"1\":{\"630\":1}}],[\"并保持数据一致性和完整性\",{\"1\":{\"564\":1}}],[\"并自定义一些处理逻辑\",{\"1\":{\"588\":1}}],[\"并重写invoke方法\",{\"1\":{\"588\":1}}],[\"并利用ilm\",{\"1\":{\"567\":1}}],[\"并订阅其他节点的状态\",{\"1\":{\"564\":1}}],[\"并迅速定位到包含这些词项的文档集合\",{\"1\":{\"563\":1}}],[\"并依据评分进行排序\",{\"1\":{\"562\":1}}],[\"并创建一个新的translog来记录后续的更新\",{\"1\":{\"561\":1}}],[\"并非所有的盒子都可以进行transform的转换\",{\"1\":{\"454\":1}}],[\"并非将所有看到的事物都拍下来\",{\"1\":{\"14\":1}}],[\"并使它们具有不同的行为\",{\"1\":{\"422\":1}}],[\"并且在等待超时后\",{\"1\":{\"942\":1}}],[\"并且由事务协调者来协调所有事物参与者\",{\"1\":{\"942\":1}}],[\"并且使用从小到大排列\",{\"1\":{\"793\":1}}],[\"并且使用animation\",{\"1\":{\"457\":1}}],[\"并且表中的其他数据\",{\"1\":{\"744\":1}}],[\"并且没有父级\",{\"1\":{\"714\":1}}],[\"并且也会\",{\"1\":{\"707\":1}}],[\"并且也不占据位置\",{\"1\":{\"380\":1}}],[\"并且长时间不能被垃圾收集器收集\",{\"1\":{\"683\":1}}],[\"并且b不需要a的结果\",{\"1\":{\"670\":1}}],[\"并且提供了函数式编程能力\",{\"1\":{\"670\":1}}],[\"并且数组长度小于64的时候\",{\"1\":{\"631\":1}}],[\"并且数组长度大于64会转换为红黑树\",{\"1\":{\"621\":1}}],[\"并且都不是线程安全\",{\"1\":{\"626\":1}}],[\"并且都可以省略\",{\"1\":{\"443\":1}}],[\"并且不能保证强一致性\",{\"1\":{\"565\":1}}],[\"并且不保证数据不丢失\",{\"1\":{\"550\":1}}],[\"并且每个span都有一个全局唯一的trace\",{\"1\":{\"977\":1}}],[\"并且每个词项对应一个\",{\"1\":{\"563\":1}}],[\"并且每一层都需要使用下一层提供的功能比如传输层需要使用网络层提供的路由和寻址功能\",{\"1\":{\"544\":1}}],[\"并且执行fsync操作\",{\"1\":{\"561\":1}}],[\"并且按序到达\",{\"1\":{\"550\":1}}],[\"并且\",{\"1\":{\"521\":1}}],[\"并且兼容css\",{\"1\":{\"469\":1}}],[\"并且会隐式地应用all类型\",{\"1\":{\"466\":1}}],[\"并且会携带所有的子元素都有一定的透明度\",{\"1\":{\"380\":2}}],[\"并且line\",{\"1\":{\"458\":1}}],[\"并且它会被当作flex\",{\"1\":{\"452\":1}}],[\"并且所有的空间进行等分\",{\"1\":{\"444\":1}}],[\"并且他们用于布局实在是无奈之举\",{\"1\":{\"435\":1}}],[\"并且让它设置clear\",{\"1\":{\"433\":1}}],[\"并且省略掉后面tr中的td\",{\"1\":{\"409\":1}}],[\"并且省略掉合并的td\",{\"1\":{\"409\":1}}],[\"并且父元素的高度是auto\",{\"1\":{\"387\":1}}],[\"并且是第三个子元素\",{\"1\":{\"373\":1}}],[\"并逆光拍摄\",{\"1\":{\"235\":1}}],[\"并采用多机位方式\",{\"1\":{\"151\":1}}],[\"跑动的小孩\",{\"1\":{\"273\":1}}],[\"跑姿基本都是抓拍\",{\"1\":{\"162\":1}}],[\"跑\",{\"0\":{\"162\":1},\"1\":{\"150\":1}}],[\"跳表的高度是动态调整的\",{\"1\":{\"857\":1}}],[\"跳表的实现相对b+树更为简单\",{\"1\":{\"857\":1}}],[\"跳表支持高效的范围查询\",{\"1\":{\"857\":1}}],[\"跳表插入新元素时\",{\"1\":{\"857\":1}}],[\"跳表是可以实现二分查找的有序链表\",{\"1\":{\"857\":1}}],[\"跳表=链表+多级索引\",{\"1\":{\"857\":1}}],[\"跳表\",{\"0\":{\"857\":1}}],[\"跳转\",{\"1\":{\"680\":1}}],[\"跳过重复元素\",{\"1\":{\"494\":2}}],[\"跳\",{\"1\":{\"150\":1}}],[\"靠近湖边的低矮梅花\",{\"1\":{\"233\":1}}],[\"靠近光源位置\",{\"1\":{\"79\":1}}],[\"靠太紧形体相对拘谨\",{\"1\":{\"160\":1}}],[\"靠姿\",{\"0\":{\"160\":1}}],[\"靠\",{\"1\":{\"150\":1}}],[\"走动的过程中人物可以抬头\",{\"1\":{\"236\":1}}],[\"走起来等等状态的改变\",{\"1\":{\"224\":1}}],[\"走姿可摆拍\",{\"1\":{\"162\":1}}],[\"走\",{\"0\":{\"162\":1},\"1\":{\"150\":1}}],[\"走进\",{\"1\":{\"33\":1}}],[\"趴姿从侧面可以突出人体背部的曲线\",{\"1\":{\"161\":1}}],[\"趴姿\",{\"0\":{\"161\":1}}],[\"趴\",{\"1\":{\"150\":1}}],[\"趴在地上\",{\"1\":{\"127\":1}}],[\"躺姿\",{\"0\":{\"159\":1}}],[\"躺\",{\"1\":{\"150\":1}}],[\"躺在水边\",{\"1\":{\"127\":1}}],[\"躺在一座孤岛\",{\"1\":{\"127\":1}}],[\"躺在地上\",{\"1\":{\"127\":2}}],[\"坐靠\",{\"1\":{\"160\":1}}],[\"坐姿\",{\"0\":{\"158\":1}}],[\"坐\",{\"1\":{\"150\":1}}],[\"坐在凳子上正面拍摄\",{\"1\":{\"127\":1}}],[\"坐在椅子上抽烟看远方拍半身\",{\"1\":{\"127\":1}}],[\"站点图标\",{\"1\":{\"351\":1}}],[\"站+坐+靠+躺+趴+走+跑+转圈+跳舞\",{\"1\":{\"179\":1}}],[\"站靠\",{\"1\":{\"160\":1}}],[\"站姿\",{\"0\":{\"155\":1,\"156\":1,\"157\":1}}],[\"站\",{\"1\":{\"150\":1}}],[\"奔跑的动物\",{\"1\":{\"273\":1}}],[\"奔跑等瞬间性动作需要抓拍\",{\"1\":{\"149\":1}}],[\"奔放\",{\"1\":{\"93\":1}}],[\"旋转的角度\",{\"1\":{\"454\":2}}],[\"旋转楼梯\",{\"1\":{\"279\":1}}],[\"旋转\",{\"0\":{\"163\":1},\"1\":{\"149\":1,\"416\":1,\"454\":2}}],[\"旋律\",{\"1\":{\"112\":1}}],[\"抓拍人物的动感和情绪\",{\"1\":{\"225\":1}}],[\"抓拍tips\",{\"1\":{\"149\":1}}],[\"抓拍\",{\"1\":{\"149\":1}}],[\"抓住光之花\",{\"1\":{\"127\":2}}],[\"看门狗\",{\"1\":{\"842\":1}}],[\"看能不能理解为什么\",{\"1\":{\"519\":1}}],[\"看远方\",{\"1\":{\"224\":1}}],[\"看镜头\",{\"1\":{\"224\":1}}],[\"看书+走路+抬头看远处+陪体\",{\"1\":{\"181\":1}}],[\"看书+走路+抽烟\",{\"1\":{\"181\":1}}],[\"看书+走路\",{\"1\":{\"181\":1}}],[\"看书\",{\"1\":{\"181\":1}}],[\"看起来非常自然的抓拍\",{\"1\":{\"149\":1}}],[\"看电影\",{\"0\":{\"18\":1}}],[\"幅度较大的肢体动作\",{\"1\":{\"146\":1}}],[\"很多书\",{\"1\":{\"689\":1}}],[\"很多都涉及列表\",{\"1\":{\"406\":1}}],[\"很简单\",{\"1\":{\"587\":1}}],[\"很少与镜头产生互动\",{\"1\":{\"145\":1}}],[\"很大程度上决定了画面的情绪\",{\"1\":{\"92\":1}}],[\"仪态相对讲究\",{\"1\":{\"144\":1}}],[\"旗袍\",{\"0\":{\"144\":1}}],[\"惬意的\",{\"1\":{\"143\":1}}],[\"法式\",{\"1\":{\"187\":1}}],[\"法式氛围感私房\",{\"0\":{\"143\":1}}],[\"法式私房\",{\"1\":{\"114\":1}}],[\"俏皮\",{\"1\":{\"142\":1}}],[\"治愈\",{\"1\":{\"142\":1}}],[\"微信公众号订阅的消息\",{\"1\":{\"818\":1}}],[\"微微颔首或15\",{\"1\":{\"169\":1}}],[\"微微挺胸挺腹\",{\"1\":{\"160\":1}}],[\"微笑\",{\"1\":{\"142\":1,\"150\":1,\"169\":1}}],[\"微博\",{\"1\":{\"122\":2,\"124\":1}}],[\"让引导类加载器进行加载\",{\"1\":{\"715\":1}}],[\"让一组线程到达一个屏障\",{\"1\":{\"668\":1}}],[\"让一些线程阻塞直到另一些线程完成一系列操作后才被唤醒\",{\"1\":{\"667\":1}}],[\"让线程释放对锁的占用\",{\"1\":{\"662\":1}}],[\"让父元素计算总高度的时候\",{\"1\":{\"432\":1}}],[\"让父元素成为定位元素\",{\"1\":{\"425\":1}}],[\"让子元素在父元素里面水平和垂直都居中显示\",{\"1\":{\"425\":1}}],[\"让子盒子向左移动10px\",{\"1\":{\"387\":1}}],[\"让它用起来不是非常方便\",{\"1\":{\"406\":1}}],[\"让元素同时具备行内级\",{\"1\":{\"379\":1}}],[\"让元素显示为行内级元素\",{\"1\":{\"379\":1}}],[\"让元素显示为块级元素\",{\"1\":{\"379\":1}}],[\"让line\",{\"1\":{\"365\":1}}],[\"让文本倾斜\",{\"1\":{\"364\":1}}],[\"让暗部变亮\",{\"1\":{\"288\":1}}],[\"让亮部更亮\",{\"1\":{\"288\":1}}],[\"让背景和前景都模糊\",{\"1\":{\"279\":1}}],[\"让头距离拍摄顶部留出一些空间\",{\"1\":{\"244\":1}}],[\"让画面更有冲击力\",{\"1\":{\"244\":1}}],[\"让画面呈现冷调的感觉\",{\"1\":{\"240\":1}}],[\"让画面动起来\",{\"0\":{\"202\":1}}],[\"让树枝的背后呈现蓝天白云的元素\",{\"1\":{\"234\":1}}],[\"让模特找到高位置地方站立\",{\"1\":{\"227\":1}}],[\"让模特面部放松\",{\"1\":{\"129\":1}}],[\"让人物呈现剪影和半剪影\",{\"1\":{\"237\":1}}],[\"让人物走到夕阳照射海面的高光区域\",{\"1\":{\"237\":1}}],[\"让人物的头部充满画面\",{\"1\":{\"234\":1}}],[\"让人物的面部去迎合光线\",{\"1\":{\"231\":1}}],[\"让人物站在有光线照亮的地方\",{\"1\":{\"236\":1}}],[\"让人物站在楼梯下\",{\"1\":{\"233\":1}}],[\"让人物站在花丛中\",{\"1\":{\"232\":1}}],[\"让人物面部受到光的照射\",{\"1\":{\"231\":1}}],[\"让人物充分与环境互动而非一直站着或坐着\",{\"1\":{\"179\":1}}],[\"让人与环境互动\",{\"1\":{\"137\":1}}],[\"充分利用身边的道具和环境\",{\"1\":{\"137\":1}}],[\"充分利用场地与环境互动\",{\"1\":{\"126\":1}}],[\"扬长避短\",{\"0\":{\"136\":1}}],[\"演绎某种生活状态\",{\"1\":{\"135\":1}}],[\"演剧本\",{\"1\":{\"134\":1}}],[\"腿放到镜头边缘位置\",{\"1\":{\"244\":1}}],[\"腿部姿势\",{\"1\":{\"159\":1}}],[\"腿面避免同时正对镜头\",{\"1\":{\"156\":1}}],[\"腿\",{\"1\":{\"133\":1}}],[\"胳膊一高一低有层次感\",{\"1\":{\"163\":1}}],[\"胳膊肘靠\",{\"1\":{\"160\":1}}],[\"胳膊\",{\"1\":{\"133\":1}}],[\"脖子\",{\"1\":{\"133\":1}}],[\"尽管这个估计值并非完全准确\",{\"1\":{\"822\":1}}],[\"尽可能使用覆盖索引\",{\"1\":{\"796\":1}}],[\"尽可能的考虑建立联合索引而不是单列索引\",{\"1\":{\"794\":1}}],[\"尽可能按照人物本身的面部特点进行液化\",{\"1\":{\"254\":1}}],[\"尽最大努力\",{\"1\":{\"546\":1}}],[\"尽量减少不必要的全文检索\",{\"1\":{\"566\":1}}],[\"尽量来到一个平面再进行拍摄\",{\"1\":{\"231\":1}}],[\"尽量拍摄侧脸\",{\"1\":{\"208\":1}}],[\"尽量少拍大特写\",{\"1\":{\"174\":1}}],[\"尽量避免过多看上方的镜头\",{\"1\":{\"171\":1}}],[\"尽量避免过多看下方的镜头\",{\"1\":{\"171\":1}}],[\"尽量避免\",{\"1\":{\"161\":1,\"169\":1}}],[\"尽量避免关节位置正对镜头\",{\"1\":{\"158\":1}}],[\"尽量避免双手垂直站立\",{\"1\":{\"156\":1}}],[\"尽量避免大面积的白色天空\",{\"1\":{\"83\":1}}],[\"尽快保证模特的形体修长\",{\"1\":{\"133\":1}}],[\"除堆栈外\",{\"1\":{\"731\":1}}],[\"除非数据是被本身事务自己所修改\",{\"1\":{\"780\":1}}],[\"除非抛出异常或者正常运行完成\",{\"1\":{\"662\":1}}],[\"除非主副分片之间的同步出现问题\",{\"1\":{\"565\":1}}],[\"除了被动监听配置变化外\",{\"1\":{\"972\":1}}],[\"除了\",{\"1\":{\"963\":1}}],[\"除了最后一个元素\",{\"1\":{\"522\":1}}],[\"除了a元素\",{\"1\":{\"373\":1}}],[\"除面部外\",{\"1\":{\"254\":1}}],[\"除倒置构图外\",{\"1\":{\"159\":1}}],[\"除需要表现局促\",{\"1\":{\"133\":1}}],[\"除天黑拍摄不受时间影响\",{\"1\":{\"83\":1}}],[\"会有消息丢失的风险\",{\"1\":{\"984\":1}}],[\"会有三次握手来建立连接\",{\"1\":{\"550\":1}}],[\"会向调度中心注册自己及其所能执行的任务列表\",{\"1\":{\"975\":1}}],[\"会周期性地或通过长轮询方式从\",{\"1\":{\"972\":1}}],[\"会在数据库中标记任务为锁定状态\",{\"1\":{\"975\":1}}],[\"会在每个参与分布式事务的数据库实例上注册分支事务\",{\"1\":{\"968\":1}}],[\"会在字符串常量池中创建第三个对象\",{\"1\":{\"610\":1}}],[\"会查找并执行实现了\",{\"1\":{\"926\":1}}],[\"会得到相同的结果\",{\"1\":{\"899\":1}}],[\"会根据配置找到合适的处理器\",{\"1\":{\"895\":1}}],[\"会根据配置文件或注解来实例化bean对象\",{\"1\":{\"890\":1}}],[\"会调用bean的销毁方法\",{\"1\":{\"890\":1}}],[\"会阻塞redis主线程\",{\"1\":{\"860\":1}}],[\"会使用多个hash函数对key进行运算\",{\"1\":{\"833\":1}}],[\"会使得垃圾回收的总体成本上升\",{\"1\":{\"693\":1}}],[\"会使得链表越来越长\",{\"1\":{\"641\":1}}],[\"会记录每个数据更改的具体行的细节\",{\"1\":{\"801\":1}}],[\"会和trx\",{\"1\":{\"797\":1}}],[\"会利用索引\",{\"1\":{\"794\":1}}],[\"会利用索引来记录每个元素在数组中的位置\",{\"1\":{\"487\":1}}],[\"会对临键锁进行优化\",{\"1\":{\"785\":1}}],[\"会对词典和倒排列表进行压缩存储\",{\"1\":{\"563\":1}}],[\"会产生应用程序的停顿\",{\"1\":{\"710\":1}}],[\"会产生内存碎片\",{\"1\":{\"707\":1}}],[\"会产生很多小的段\",{\"1\":{\"561\":1}}],[\"会暂停所有的用户线程\",{\"1\":{\"696\":1}}],[\"会带来额外的锁撤销的消耗\",{\"1\":{\"672\":1}}],[\"会导致脏读\",{\"1\":{\"899\":1}}],[\"会导致两边数据不一致\",{\"1\":{\"847\":1}}],[\"会导致主从同步的数据不一致问题\",{\"1\":{\"801\":1}}],[\"会导致右边越来越多\",{\"1\":{\"793\":1}}],[\"会导致stop\",{\"1\":{\"710\":1}}],[\"会导致所有java执行线程停顿\",{\"1\":{\"710\":1}}],[\"会导致阻塞\",{\"1\":{\"670\":1}}],[\"会导致父盒子宽度变大\",{\"1\":{\"387\":1}}],[\"会被清理掉\",{\"1\":{\"663\":1}}],[\"会自动释放当前线程占有的对象锁\",{\"1\":{\"654\":1}}],[\"会自动拉伸至填充flex\",{\"1\":{\"445\":1}}],[\"会进行扩容\",{\"1\":{\"644\":1}}],[\"会进行数组扩容\",{\"1\":{\"631\":1}}],[\"会发生扩容\",{\"1\":{\"643\":1}}],[\"会创建一个\",{\"1\":{\"926\":1}}],[\"会创建一个新的\",{\"1\":{\"611\":1}}],[\"会创建第四个对象\",{\"1\":{\"610\":1}}],[\"会创建1或者2个字符串对象\",{\"1\":{\"610\":1}}],[\"会创建副本\",{\"1\":{\"587\":2}}],[\"会认为该节点已经离线\",{\"1\":{\"564\":1}}],[\"会话层\",{\"1\":{\"544\":1}}],[\"会增加高度以包括这些浮动元素的下边缘\",{\"1\":{\"465\":1}}],[\"会增加很多无意义的空标签\",{\"1\":{\"433\":1}}],[\"会不会有高度\",{\"1\":{\"458\":1}}],[\"会影响行内块级元素在一个行盒中垂直方向的位置\",{\"1\":{\"458\":1}}],[\"会影响所有的子元素\",{\"1\":{\"380\":1}}],[\"会盖在background\",{\"1\":{\"398\":1}}],[\"会引导观者注意框内的景象\",{\"1\":{\"223\":1}}],[\"会让画面有一种舒展感\",{\"1\":{\"221\":1}}],[\"会做的动作等等\",{\"1\":{\"133\":1}}],[\"会形成阴阳脸\",{\"1\":{\"76\":1}}],[\"手动补救措施\",{\"1\":{\"879\":1}}],[\"手动方式\",{\"1\":{\"729\":1}}],[\"手动换算\",{\"1\":{\"472\":1}}],[\"手动\",{\"1\":{\"293\":1}}],[\"手动曝光\",{\"1\":{\"277\":1}}],[\"手要有弧度\",{\"1\":{\"244\":1}}],[\"手捧着花瓣\",{\"1\":{\"182\":1}}],[\"手拿花\",{\"1\":{\"182\":1}}],[\"手的位置和姿势变换\",{\"1\":{\"179\":1}}],[\"手的摆放\",{\"1\":{\"158\":1}}],[\"手肘撑地\",{\"1\":{\"158\":1}}],[\"手掌\",{\"1\":{\"158\":1}}],[\"手\",{\"1\":{\"150\":1,\"191\":1}}],[\"手腕\",{\"1\":{\"133\":1}}],[\"手势\",{\"1\":{\"133\":1}}],[\"手部动作\",{\"0\":{\"210\":1}}],[\"手部姿势\",{\"1\":{\"159\":1}}],[\"手部\",{\"1\":{\"43\":1}}],[\"拿时间换空间\",{\"1\":{\"826\":1}}],[\"拿道具的方向\",{\"1\":{\"133\":1}}],[\"拿着蜡烛借助微弱的光看书\",{\"1\":{\"127\":1}}],[\"舒缓\",{\"1\":{\"279\":1}}],[\"舒展\",{\"1\":{\"133\":1}}],[\"舒展性\",{\"0\":{\"133\":1}}],[\"舒适开阔\",{\"1\":{\"279\":1}}],[\"舒适\",{\"1\":{\"84\":1,\"125\":1}}],[\"遇到统一且干净的背景\",{\"1\":{\"231\":1}}],[\"遇到不同五官的模特\",{\"1\":{\"131\":1}}],[\"遇到难度大或者相对危险的动作自己先示范\",{\"1\":{\"128\":1}}],[\"六\",{\"0\":{\"130\":1}}],[\"经度和纬度\",{\"1\":{\"824\":1}}],[\"经常使用单位是px\",{\"1\":{\"468\":1}}],[\"经常用\",{\"1\":{\"393\":1}}],[\"经常遇到\",{\"1\":{\"275\":1}}],[\"经过hash运算后得到的值一样\",{\"1\":{\"641\":1}}],[\"经过hash值扰动函数\",{\"1\":{\"640\":1}}],[\"经过一些仔细地规划\",{\"1\":{\"467\":1}}],[\"经过\",{\"1\":{\"190\":1}}],[\"经验不足可以将样片存储在sd卡内\",{\"1\":{\"129\":1}}],[\"经历\",{\"1\":{\"14\":1,\"23\":1}}],[\"取消单机锁\",{\"1\":{\"840\":1}}],[\"取消点赞\",{\"1\":{\"819\":1}}],[\"取出的\",{\"1\":{\"522\":1}}],[\"取出元素是队列头的元素\",{\"1\":{\"516\":1}}],[\"取出元素\",{\"1\":{\"515\":1}}],[\"取值\",{\"1\":{\"458\":1}}],[\"取值可以是正整数\",{\"1\":{\"427\":1}}],[\"取较大得值\",{\"1\":{\"387\":1}}],[\"取与舍\",{\"1\":{\"279\":1}}],[\"取景范围\",{\"1\":{\"276\":1}}],[\"取景器里让模特抬头\",{\"1\":{\"129\":1}}],[\"取好看的角度\",{\"1\":{\"129\":1}}],[\"取到膝盖以上的景别\",{\"1\":{\"39\":1}}],[\"设备独立像素\",{\"1\":{\"468\":1}}],[\"设备分辨率就是设备像素大小\",{\"1\":{\"468\":1}}],[\"设备像素比\",{\"1\":{\"468\":1}}],[\"设备像素\",{\"1\":{\"468\":1}}],[\"设置replication\",{\"1\":{\"982\":1}}],[\"设置acks\",{\"1\":{\"982\":1}}],[\"设置阈值警报\",{\"1\":{\"981\":1}}],[\"设置实时监控系统\",{\"1\":{\"981\":1}}],[\"设置心跳超时时间\",{\"1\":{\"970\":1}}],[\"设置服务实例心跳间隔\",{\"1\":{\"970\":1}}],[\"设置了10秒\",{\"1\":{\"952\":1}}],[\"设置了5秒\",{\"1\":{\"952\":1}}],[\"设置桶的容量和令牌生成速率\",{\"1\":{\"949\":1}}],[\"设置maxmemory参数\",{\"1\":{\"831\":1}}],[\"设置每个堆区域的大小\",{\"1\":{\"738\":1}}],[\"设置每个线程栈大小的容量\",{\"1\":{\"737\":1}}],[\"设置每个线程的栈大小为128k\",{\"1\":{\"720\":1}}],[\"设置年轻代大小为2g\",{\"1\":{\"721\":1}}],[\"设置某个服务的初始堆内存和最大堆内存的大小\",{\"1\":{\"721\":1}}],[\"设置jvm最大堆内存为4000m\",{\"1\":{\"721\":1}}],[\"设置jvm初始堆内存为4000m\",{\"1\":{\"721\":1}}],[\"设置对象在新生代中存活的次数\",{\"1\":{\"690\":1}}],[\"设置我们的内存大小\",{\"1\":{\"663\":2}}],[\"设置超时方法\",{\"1\":{\"662\":1}}],[\"设置合适的内存分配\",{\"1\":{\"567\":1}}],[\"设置html不同的font\",{\"1\":{\"472\":1}}],[\"设置hidden\",{\"1\":{\"380\":1}}],[\"设置不同的屏幕上html的font\",{\"1\":{\"472\":1}}],[\"设置一个盒子的宽度是2rem\",{\"1\":{\"472\":1}}],[\"设置一个元素的margin或者padding\",{\"1\":{\"422\":1}}],[\"设置为no\",{\"1\":{\"470\":1}}],[\"设置为0\",{\"1\":{\"380\":1}}],[\"设置video高度\",{\"1\":{\"460\":1}}],[\"设置video宽度\",{\"1\":{\"460\":1}}],[\"设置当前块级元素的margin\",{\"1\":{\"455\":1}}],[\"设置x轴和y轴上的缩放\",{\"1\":{\"454\":1}}],[\"设置x轴上的缩放\",{\"1\":{\"454\":1}}],[\"设置x轴上的距离\",{\"1\":{\"454\":1}}],[\"设置x和y轴的距离\",{\"1\":{\"454\":1}}],[\"设置display属性为flex或者inline\",{\"1\":{\"436\":1}}],[\"设置鼠标指针在元素上面时显示样式\",{\"1\":{\"420\":1}}],[\"设置盒子阴影\",{\"1\":{\"390\":1}}],[\"设置父元素的text\",{\"1\":{\"455\":1}}],[\"设置父元素的padding\",{\"1\":{\"387\":1}}],[\"设置父元素overflow为auto\",{\"1\":{\"387\":1}}],[\"设置父盒子的paddding\",{\"1\":{\"387\":1}}],[\"设置子盒子的margin\",{\"1\":{\"387\":1}}],[\"设置整个元素的透明度\",{\"1\":{\"380\":1}}],[\"设置透明度\",{\"1\":{\"380\":2}}],[\"设置奇数被选中\",{\"1\":{\"373\":1}}],[\"设置偶数被选中\",{\"1\":{\"373\":1}}],[\"设置文字阴影\",{\"1\":{\"391\":1}}],[\"设置文字的粗细\",{\"1\":{\"363\":1}}],[\"设置文字的字体名称\",{\"1\":{\"362\":1}}],[\"设置文本的装饰线\",{\"1\":{\"355\":1}}],[\"设置此属性中间空格\",{\"1\":{\"358\":1}}],[\"设置负值可以将文本向左移动\",{\"1\":{\"357\":1}}],[\"设定对应名称的参数\",{\"1\":{\"728\":1}}],[\"设定目标\",{\"1\":{\"299\":1}}],[\"设定故事情境\",{\"1\":{\"189\":1}}],[\"设定场景进行演绎\",{\"1\":{\"135\":1}}],[\"设定小剧场模特和道具场景互动抓拍\",{\"1\":{\"129\":1}}],[\"设计了一个调度中心\",{\"1\":{\"975\":1}}],[\"设计模式\",{\"1\":{\"895\":1}}],[\"设计事物时考虑幂等性\",{\"1\":{\"879\":1}}],[\"设计\",{\"1\":{\"23\":1}}],[\"做成一个\",{\"1\":{\"521\":1}}],[\"做到很平竖直\",{\"1\":{\"227\":1}}],[\"做到背景的绝对干净\",{\"1\":{\"148\":1}}],[\"做符合当下情境的事情\",{\"1\":{\"135\":1}}],[\"做合适的动作和事情\",{\"1\":{\"129\":1}}],[\"做好拍摄策划准备\",{\"1\":{\"129\":1}}],[\"做减法\",{\"1\":{\"51\":1,\"148\":1,\"253\":1,\"254\":1}}],[\"放代码块中\",{\"1\":{\"662\":1}}],[\"放下了电话\",{\"1\":{\"552\":1}}],[\"放到合适的位置\",{\"1\":{\"530\":1}}],[\"放射线\",{\"1\":{\"279\":1}}],[\"放在常量池中\",{\"1\":{\"606\":1}}],[\"放在锁骨上\",{\"1\":{\"182\":1}}],[\"放在腰部\",{\"1\":{\"159\":1}}],[\"放在腿上\",{\"1\":{\"158\":1}}],[\"放松\",{\"1\":{\"143\":1,\"145\":1,\"156\":1}}],[\"放点适合拍摄风格的音乐\",{\"1\":{\"128\":1}}],[\"放大一倍\",{\"1\":{\"454\":1}}],[\"放大不会失真\",{\"1\":{\"418\":1}}],[\"放大\",{\"1\":{\"251\":1}}],[\"放大优点\",{\"1\":{\"136\":1}}],[\"放大细微的情感\",{\"1\":{\"43\":1}}],[\"放大自己的感受力\",{\"0\":{\"17\":1}}],[\"适配器模式\",{\"1\":{\"900\":1}}],[\"适配执行对应的handler\",{\"1\":{\"894\":1}}],[\"适配方案\",{\"0\":{\"472\":1}}],[\"适用对响应时间有要求的场景\",{\"1\":{\"698\":1}}],[\"适用场景\",{\"1\":{\"672\":1}}],[\"适用于对输出速率有稳定要求且不允许突刺的场景\",{\"1\":{\"949\":1}}],[\"适用于大多数分布式系统\",{\"1\":{\"938\":1}}],[\"适用于科学计算\",{\"1\":{\"697\":1}}],[\"适用于老年代\",{\"1\":{\"691\":1}}],[\"适用于竞争激烈的情况\",{\"1\":{\"672\":1}}],[\"适用于竞争较不激烈的情况\",{\"1\":{\"672\":1}}],[\"适用于单线程适用的情况\",{\"1\":{\"672\":1}}],[\"适用于只有一个线程访问同步快的场景\",{\"1\":{\"672\":1}}],[\"适用于方法多的场景\",{\"1\":{\"670\":1}}],[\"适用于所有设备\",{\"1\":{\"466\":1}}],[\"适度调整副本数量\",{\"1\":{\"566\":1}}],[\"适当增加排序缓冲区的大小\",{\"1\":{\"796\":1}}],[\"适当增加内存\",{\"1\":{\"736\":1}}],[\"适当调整不透明度和流量\",{\"1\":{\"257\":1}}],[\"适当做一些低头抬头\",{\"1\":{\"231\":1}}],[\"适当做一些前景\",{\"1\":{\"231\":1}}],[\"适当真诚的夸赞\",{\"1\":{\"128\":1}}],[\"适合下颌线比较明显的对象拍摄\",{\"1\":{\"208\":1}}],[\"适合大多数模特的tips\",{\"1\":{\"173\":1}}],[\"适合大多数风格的照片拍摄\",{\"1\":{\"81\":1}}],[\"适合的发型\",{\"1\":{\"123\":1}}],[\"适合拍摄风格的可以尝试\",{\"1\":{\"122\":1}}],[\"适合拍摄都市故事感\",{\"1\":{\"81\":1}}],[\"适合风格\",{\"1\":{\"120\":1}}],[\"适合表达欢乐\",{\"1\":{\"84\":1}}],[\"聊对方感兴趣的话题\",{\"1\":{\"128\":1}}],[\"头部元素\",{\"1\":{\"459\":1}}],[\"头部放在画面的三分之一处\",{\"1\":{\"227\":1}}],[\"头发里编花\",{\"1\":{\"182\":1}}],[\"头发多视觉上显脸小\",{\"1\":{\"170\":1}}],[\"头发不能贴头皮\",{\"1\":{\"170\":1}}],[\"头发不油\",{\"1\":{\"124\":1}}],[\"头靠\",{\"1\":{\"160\":1}}],[\"头向后仰用书盖住脑袋\",{\"1\":{\"127\":1}}],[\"火焰在人的前方做前景拍摄\",{\"1\":{\"127\":1}}],[\"火源\",{\"1\":{\"85\":1}}],[\"笔\",{\"1\":{\"127\":1}}],[\"笔记本\",{\"1\":{\"127\":1}}],[\"桥\",{\"1\":{\"127\":1}}],[\"案例测试\",{\"1\":{\"852\":1}}],[\"案例7\",{\"1\":{\"738\":1}}],[\"案例6\",{\"1\":{\"738\":1}}],[\"案例5\",{\"1\":{\"738\":1}}],[\"案例4\",{\"1\":{\"737\":1,\"738\":1}}],[\"案例3\",{\"1\":{\"737\":1,\"738\":1}}],[\"案例2\",{\"1\":{\"737\":1,\"738\":1}}],[\"案例1\",{\"1\":{\"737\":1,\"738\":1}}],[\"案例分析\",{\"0\":{\"737\":1}}],[\"案例演示\",{\"1\":{\"387\":1}}],[\"案例\",{\"1\":{\"191\":1,\"666\":1,\"667\":1}}],[\"案例二\",{\"1\":{\"127\":1}}],[\"案例一\",{\"1\":{\"127\":1}}],[\"地理位置\",{\"0\":{\"824\":1}}],[\"地面最好不要拍摄到\",{\"1\":{\"231\":1}}],[\"地面\",{\"1\":{\"158\":1,\"159\":1}}],[\"地点\",{\"1\":{\"127\":1,\"190\":1}}],[\"地图app\",{\"1\":{\"121\":1}}],[\"盛开的鲜花放在手边\",{\"1\":{\"127\":1}}],[\"盛放的欲念之花\",{\"1\":{\"127\":1}}],[\"捂住嘴巴\",{\"1\":{\"127\":1}}],[\"助理用绳子勒住模特脖子\",{\"1\":{\"127\":1}}],[\"挣脱\",{\"1\":{\"127\":1}}],[\"挣扎\",{\"1\":{\"127\":1,\"209\":1}}],[\"面向切面编程\",{\"1\":{\"892\":1}}],[\"面向我们用户的加载器\",{\"1\":{\"714\":1}}],[\"面向对象三大特征\",{\"0\":{\"604\":1}}],[\"面向连接\",{\"1\":{\"546\":1}}],[\"面试官\",{\"1\":{\"308\":1}}],[\"面中\",{\"1\":{\"166\":1}}],[\"面朝水面\",{\"1\":{\"127\":1}}],[\"面部光影重塑\",{\"1\":{\"254\":1}}],[\"面部情绪不仅只是单纯的笑或不笑\",{\"1\":{\"211\":1}}],[\"面部情绪\",{\"0\":{\"211\":1}}],[\"面部情绪多由眼睛\",{\"1\":{\"152\":1}}],[\"面部扁平\",{\"1\":{\"169\":1}}],[\"面部方向\",{\"1\":{\"156\":1}}],[\"面部表情\",{\"1\":{\"150\":1}}],[\"面部肌肉调动不同\",{\"1\":{\"147\":1}}],[\"面部\",{\"1\":{\"142\":1,\"143\":1,\"145\":1}}],[\"面部受光均匀\",{\"1\":{\"83\":1}}],[\"面部立体感不强\",{\"1\":{\"76\":1}}],[\"面部五官特写\",{\"1\":{\"43\":1}}],[\"伸手想要去碰触花\",{\"1\":{\"127\":1}}],[\"绑住手\",{\"1\":{\"127\":1}}],[\"绳子和花\",{\"1\":{\"127\":1}}],[\"绳子捆着\",{\"1\":{\"127\":1}}],[\"绳子即束缚\",{\"1\":{\"127\":1}}],[\"个文件描述符的限制\",{\"1\":{\"868\":1}}],[\"个别方法是自己特有的\",{\"1\":{\"629\":1}}],[\"个元素我们不能扔掉\",{\"1\":{\"522\":1}}],[\"个元素都取出来\",{\"1\":{\"522\":1}}],[\"个整数的数组\",{\"1\":{\"493\":1}}],[\"个\",{\"1\":{\"373\":2,\"853\":1}}],[\"个体想要与外界对话\",{\"1\":{\"127\":1}}],[\"个体的自我束缚和隔绝\",{\"1\":{\"127\":1}}],[\"个人印刷等\",{\"1\":{\"122\":1}}],[\"个人经历\",{\"1\":{\"112\":1}}],[\"个人风格的建立\",{\"0\":{\"15\":1}}],[\"重点在于等消息时候的行为\",{\"1\":{\"865\":1}}],[\"重点在于获得调用结果的消息通知方式上\",{\"1\":{\"865\":1}}],[\"重点表现外界对个体的束缚\",{\"1\":{\"127\":1}}],[\"重入性\",{\"1\":{\"839\":1}}],[\"重做\",{\"1\":{\"801\":1}}],[\"重做日志\",{\"1\":{\"799\":1,\"802\":1}}],[\"重新加载并刷新代理对象中的配置属性值\",{\"1\":{\"972\":1}}],[\"重新标记\",{\"1\":{\"707\":1}}],[\"重新到主物理内存中获取最新数据\",{\"1\":{\"659\":1}}],[\"重量级锁\",{\"1\":{\"661\":1,\"672\":3}}],[\"重写\",{\"1\":{\"601\":1}}],[\"重载\",{\"1\":{\"601\":1}}],[\"重传\",{\"1\":{\"550\":1}}],[\"重连\",{\"1\":{\"544\":1}}],[\"重置按钮\",{\"1\":{\"410\":1}}],[\"重置样式\",{\"1\":{\"404\":1}}],[\"重要\",{\"0\":{\"358\":1,\"361\":1,\"362\":1,\"363\":1,\"368\":1,\"370\":1,\"372\":1,\"455\":1,\"766\":1},\"1\":{\"373\":1,\"387\":1,\"445\":1,\"670\":1,\"738\":1,\"796\":3}}],[\"重要的是人与环境\",{\"1\":{\"147\":1}}],[\"重复步骤3和步骤4\",{\"1\":{\"494\":1}}],[\"重复与节奏\",{\"1\":{\"279\":1}}],[\"重复拍摄获取最佳画面\",{\"1\":{\"162\":1}}],[\"重复的刻意练习\",{\"1\":{\"27\":1}}],[\"重力作用面部塌陷\",{\"1\":{\"159\":1}}],[\"爱与希望\",{\"1\":{\"127\":1}}],[\"爱情\",{\"1\":{\"93\":1}}],[\"痛苦\",{\"1\":{\"127\":1}}],[\"河边\",{\"1\":{\"127\":1}}],[\"河岸上的石头同样给人以坚硬\",{\"1\":{\"127\":1}}],[\"河流等\",{\"1\":{\"121\":1}}],[\"辽阔感\",{\"1\":{\"127\":1}}],[\"孤离\",{\"1\":{\"209\":1}}],[\"孤岛\",{\"1\":{\"127\":1}}],[\"孤独感与束缚感\",{\"1\":{\"127\":1}}],[\"孤独的自我背离\",{\"1\":{\"127\":1}}],[\"孤独的\",{\"1\":{\"121\":1}}],[\"孤独\",{\"1\":{\"14\":1,\"17\":1,\"92\":1,\"93\":1,\"189\":1,\"209\":1}}],[\"逃脱\",{\"1\":{\"127\":1}}],[\"恐惧\",{\"1\":{\"127\":1}}],[\"恐怖\",{\"1\":{\"93\":1}}],[\"恐怖片较多\",{\"1\":{\"66\":1}}],[\"怀疑\",{\"1\":{\"127\":1}}],[\"怀旧复古\",{\"1\":{\"114\":1}}],[\"窒息感\",{\"1\":{\"159\":1}}],[\"窒息\",{\"1\":{\"127\":2}}],[\"束缚\",{\"1\":{\"127\":2}}],[\"概念\",{\"0\":{\"865\":1},\"1\":{\"127\":1}}],[\"马灯\",{\"1\":{\"126\":1}}],[\"透明地传送比特流传输\",{\"1\":{\"544\":1}}],[\"透明水杯\",{\"1\":{\"126\":1}}],[\"透光材质遮挡柔光\",{\"1\":{\"78\":1}}],[\"透光的帽子等进行遮挡\",{\"1\":{\"78\":1}}],[\"封装起来\",{\"1\":{\"892\":1}}],[\"封装是指把一个对象的状态信息\",{\"1\":{\"604\":1}}],[\"封装\",{\"1\":{\"604\":1}}],[\"封面色彩单色\",{\"1\":{\"126\":1}}],[\"封闭\",{\"1\":{\"93\":1}}],[\"琴谱\",{\"1\":{\"126\":1}}],[\"书籍id+借书日期\",{\"1\":{\"744\":1}}],[\"书\",{\"1\":{\"126\":1,\"181\":1}}],[\"芦苇\",{\"1\":{\"126\":1}}],[\"树的高度就会越来越高\",{\"1\":{\"793\":1}}],[\"树结构\",{\"1\":{\"539\":1}}],[\"树萌\",{\"1\":{\"275\":1}}],[\"树林\",{\"1\":{\"236\":1}}],[\"树\",{\"1\":{\"160\":1}}],[\"树干\",{\"1\":{\"158\":1}}],[\"树叶\",{\"1\":{\"126\":1,\"199\":1}}],[\"树影\",{\"1\":{\"68\":1}}],[\"花在上层\",{\"1\":{\"233\":1}}],[\"花瓣\",{\"1\":{\"199\":1}}],[\"花瓣洒在空中\",{\"1\":{\"182\":1}}],[\"花作为媒介\",{\"1\":{\"127\":1}}],[\"花代表平和\",{\"1\":{\"127\":1}}],[\"花同送官方旗舰店\",{\"1\":{\"126\":1}}],[\"花\",{\"1\":{\"126\":1,\"182\":1}}],[\"私信小红书或者淘宝店铺借拍\",{\"1\":{\"125\":1}}],[\"私房\",{\"1\":{\"114\":1}}],[\"品\",{\"1\":{\"282\":1}}],[\"品牌合作\",{\"1\":{\"125\":1}}],[\"品红色\",{\"1\":{\"282\":1}}],[\"品红\",{\"1\":{\"96\":1}}],[\"莉蒂亚度假裙\",{\"1\":{\"125\":1}}],[\"lfu\",{\"1\":{\"832\":3}}],[\"lru\",{\"1\":{\"832\":3}}],[\"lrange\",{\"1\":{\"818\":3}}],[\"lr基础定调\",{\"1\":{\"260\":1}}],[\"lpush\",{\"1\":{\"818\":3}}],[\"lua脚本的方式实现了限流\",{\"1\":{\"815\":1}}],[\"l\",{\"1\":{\"726\":1,\"731\":2,\"738\":1}}],[\"lte\",{\"1\":{\"558\":1}}],[\"latitude\",{\"1\":{\"824\":1}}],[\"lambda表达式\",{\"1\":{\"633\":1}}],[\"last\",{\"1\":{\"512\":1,\"552\":1}}],[\"lawngreen\",{\"1\":{\"453\":1}}],[\"layout\",{\"1\":{\"435\":1}}],[\"label\",{\"1\":{\"410\":1}}],[\"label>\",{\"1\":{\"410\":1}}],[\"label可以跟某个input绑定\",{\"1\":{\"410\":1}}],[\"label元素一般跟input配合使用\",{\"1\":{\"410\":1}}],[\"lang包下面\",{\"1\":{\"625\":1}}],[\"language\",{\"1\":{\"562\":1}}],[\"lang\",{\"1\":{\"373\":1,\"588\":3,\"671\":1,\"682\":1,\"683\":1,\"715\":2,\"737\":4,\"892\":1}}],[\"lang=\",{\"1\":{\"358\":1,\"387\":3,\"416\":1,\"423\":1,\"425\":2,\"431\":3,\"436\":1,\"441\":1,\"442\":1,\"453\":1}}],[\"leaf\",{\"1\":{\"939\":1}}],[\"len\",{\"1\":{\"796\":2,\"852\":1}}],[\"length\",{\"1\":{\"400\":1,\"458\":1,\"490\":2,\"491\":1,\"494\":2,\"497\":4,\"507\":2,\"513\":8,\"514\":1,\"516\":8,\"517\":7,\"518\":6,\"519\":11,\"520\":9,\"527\":2,\"528\":2,\"531\":1,\"532\":1,\"539\":4,\"582\":2,\"640\":1}}],[\"less内置函数\",{\"1\":{\"469\":1}}],[\"less代码编译\",{\"1\":{\"469\":1}}],[\"less最终被编译css运行在浏览器中\",{\"1\":{\"469\":1}}],[\"less增加了很多相对于css更好用的特性\",{\"1\":{\"469\":1}}],[\"less\",{\"1\":{\"469\":6,\"472\":1}}],[\"level\",{\"1\":{\"436\":1,\"458\":2,\"465\":4}}],[\"level形式存在\",{\"1\":{\"436\":1}}],[\"letter\",{\"0\":{\"359\":1},\"1\":{\"374\":2}}],[\"left++\",{\"1\":{\"494\":3}}],[\"left+right+\",{\"1\":{\"425\":1}}],[\"left让子盒子向左移动是比较推荐的方式\",{\"1\":{\"387\":1}}],[\"left为10px\",{\"1\":{\"387\":1}}],[\"left值过大时\",{\"1\":{\"387\":1}}],[\"left值10px\",{\"1\":{\"387\":1}}],[\"left=color\",{\"1\":{\"386\":1}}],[\"left都使用10\",{\"1\":{\"385\":1}}],[\"left使用right的值\",{\"1\":{\"385\":1}}],[\"left四个边\",{\"1\":{\"383\":1}}],[\"left\",{\"0\":{\"748\":1},\"1\":{\"358\":1,\"374\":1,\"385\":2,\"386\":2,\"387\":4,\"401\":1,\"416\":1,\"422\":1,\"423\":2,\"425\":5,\"429\":1,\"431\":7,\"433\":1,\"455\":1,\"456\":4,\"494\":8,\"748\":1}}],[\"led补光灯\",{\"1\":{\"85\":1}}],[\"low\",{\"1\":{\"797\":1}}],[\"lowercase\",{\"1\":{\"356\":1}}],[\"location\",{\"1\":{\"919\":2}}],[\"localhost\",{\"1\":{\"970\":1}}],[\"local\",{\"1\":{\"402\":1,\"682\":1}}],[\"lockwatchdogtimeout来另行指定\",{\"1\":{\"842\":1}}],[\"lockwatchdogtimeout\",{\"1\":{\"842\":1}}],[\"lockinterruptibly\",{\"1\":{\"662\":1}}],[\"lock\",{\"1\":{\"662\":1,\"671\":21,\"785\":5,\"788\":1,\"817\":2,\"842\":2}}],[\"locksupport类可以阻塞当前线程以及唤醒指定被阻塞的线程\",{\"1\":{\"671\":1}}],[\"locksupport中的park\",{\"1\":{\"671\":1}}],[\"locksupport是用来创建锁和其他同步类的基本线程阻塞原语\",{\"1\":{\"671\":1}}],[\"locksupport\",{\"0\":{\"671\":1},\"1\":{\"671\":4}}],[\"locks\",{\"1\":{\"662\":1}}],[\"lock是具体类\",{\"1\":{\"662\":1}}],[\"loopqueue<>\",{\"1\":{\"518\":1,\"519\":1}}],[\"loopqueue<integer>\",{\"1\":{\"518\":1,\"519\":1}}],[\"loopqueue<e>\",{\"1\":{\"517\":1}}],[\"loopqueue\",{\"1\":{\"517\":5,\"518\":3,\"519\":3}}],[\"loopqueue类\",{\"1\":{\"517\":1}}],[\"longitude\",{\"1\":{\"824\":1}}],[\"longaddr\",{\"1\":{\"660\":1,\"669\":1}}],[\"long\",{\"1\":{\"505\":2,\"557\":2,\"598\":1,\"599\":1,\"644\":1,\"662\":1,\"664\":1,\"667\":1,\"670\":7,\"822\":1,\"842\":1,\"915\":1,\"951\":1}}],[\"logger\",{\"1\":{\"982\":2}}],[\"log还原事务执行前的状态\",{\"1\":{\"968\":1}}],[\"log提交更改\",{\"1\":{\"968\":1}}],[\"log保存了事务修改前的数据\",{\"1\":{\"802\":1}}],[\"log在系统重启时恢复未持久化的数据\",{\"1\":{\"802\":1}}],[\"log的内容会被刷入磁盘\",{\"1\":{\"802\":1}}],[\"log记录了事务对数据库所做的修改\",{\"1\":{\"802\":1}}],[\"log中\",{\"1\":{\"802\":1}}],[\"log读取之前的版本数据\",{\"1\":{\"797\":1}}],[\"log文件\",{\"1\":{\"738\":1}}],[\"log\",{\"1\":{\"461\":1,\"494\":1,\"557\":4,\"561\":1,\"738\":1,\"776\":1,\"797\":2,\"801\":2,\"802\":4,\"804\":1,\"822\":2,\"968\":3}}],[\"logo图片\",{\"1\":{\"403\":1}}],[\"loadbalancer\",{\"1\":{\"931\":1}}],[\"loading\",{\"1\":{\"712\":1}}],[\"loadfactor\",{\"1\":{\"644\":1,\"645\":8}}],[\"loader\",{\"1\":{\"588\":1}}],[\"loadclass\",{\"1\":{\"586\":2,\"715\":2}}],[\"load\",{\"1\":{\"353\":2,\"644\":1,\"645\":4}}],[\"llen\",{\"1\":{\"818\":2}}],[\"ll\",{\"0\":{\"316\":1}}],[\"ls\",{\"0\":{\"315\":1},\"1\":{\"557\":5}}],[\"lite是去中心化的解决方案\",{\"1\":{\"974\":1}}],[\"lite和elastic\",{\"1\":{\"974\":1}}],[\"likearticle\",{\"1\":{\"818\":2}}],[\"limiter\",{\"1\":{\"936\":2}}],[\"limit\",{\"1\":{\"737\":1,\"797\":2,\"824\":2}}],[\"live\",{\"1\":{\"729\":1}}],[\"libraryproperties\",{\"1\":{\"919\":1}}],[\"library\",{\"1\":{\"919\":2}}],[\"lib\",{\"1\":{\"714\":1}}],[\"lib目录下的\",{\"1\":{\"714\":1}}],[\"lifecycle\",{\"1\":{\"566\":1,\"567\":1}}],[\"lifo\",{\"1\":{\"512\":1}}],[\"listenablefuture<sendresult<string\",{\"1\":{\"982\":1}}],[\"list底层结构\",{\"0\":{\"854\":1}}],[\"list=\",{\"1\":{\"824\":2}}],[\"list<book>\",{\"1\":{\"919\":1}}],[\"list<teacher>\",{\"1\":{\"915\":1}}],[\"list<string>\",{\"1\":{\"824\":1}}],[\"list<point>\",{\"1\":{\"824\":1}}],[\"list<list<integer>>\",{\"1\":{\"494\":2}}],[\"listnode\",{\"1\":{\"507\":23,\"509\":14}}],[\"list\",{\"0\":{\"615\":1,\"617\":1,\"619\":1,\"818\":1},\"1\":{\"406\":5,\"431\":1,\"463\":1,\"505\":8,\"563\":3,\"616\":1,\"617\":1,\"623\":1,\"824\":2,\"854\":3}}],[\"li再存放其他元素\",{\"1\":{\"406\":1}}],[\"li>\",{\"1\":{\"373\":7,\"406\":8,\"431\":11}}],[\"li\",{\"1\":{\"373\":4,\"406\":4,\"431\":6}}],[\"linkedblockingqueue<>\",{\"1\":{\"664\":1}}],[\"linkedhashmap来实现的\",{\"1\":{\"620\":1}}],[\"linkedhashset的底层是链表和哈希表\",{\"1\":{\"626\":1}}],[\"linkedhashset\",{\"0\":{\"626\":1},\"1\":{\"620\":1}}],[\"linkedlist不支持随机元素访问\",{\"1\":{\"622\":1}}],[\"linkedlist底层使用的是双向链表\",{\"1\":{\"622\":1}}],[\"linkedlistqueue<integer>\",{\"1\":{\"506\":1}}],[\"linkedlistqueue<e>\",{\"1\":{\"506\":1}}],[\"linkedlistqueue\",{\"1\":{\"506\":3}}],[\"linkedlist<>\",{\"1\":{\"505\":1,\"522\":6}}],[\"linkedlist<e>\",{\"1\":{\"504\":1,\"505\":1}}],[\"linkedliststackmain\",{\"1\":{\"505\":2}}],[\"linkedliststack<>\",{\"1\":{\"505\":2}}],[\"linkedliststack<integer>\",{\"1\":{\"505\":2}}],[\"linkedliststack<e>\",{\"1\":{\"505\":1}}],[\"linkedliststack\",{\"1\":{\"505\":5}}],[\"linkedlist\",{\"1\":{\"504\":3,\"505\":2,\"506\":1,\"522\":5,\"619\":1,\"622\":1}}],[\"link和\",{\"1\":{\"373\":1}}],[\"link\",{\"1\":{\"373\":3,\"466\":1,\"469\":1}}],[\"link元素常见属性\",{\"1\":{\"351\":1}}],[\"link元素是外部资源链接元素\",{\"1\":{\"351\":1}}],[\"link元素\",{\"0\":{\"351\":1}}],[\"linear\",{\"1\":{\"457\":1,\"463\":6}}],[\"line\",{\"0\":{\"365\":1},\"1\":{\"355\":1,\"366\":2,\"374\":2,\"376\":1,\"396\":1,\"431\":1,\"458\":2}}],[\"linux中的java\",{\"1\":{\"869\":1}}],[\"linux\",{\"0\":{\"313\":1},\"1\":{\"340\":1},\"2\":{\"338\":1,\"339\":1}}],[\"lightroom\",{\"0\":{\"286\":1}}],[\"lidia\",{\"1\":{\"125\":1}}],[\"利于模特做肢体动作\",{\"1\":{\"125\":1}}],[\"利用统计学原理\",{\"1\":{\"822\":1}}],[\"利用elasticsearch内置的缓存机制\",{\"1\":{\"567\":1}}],[\"利用shard\",{\"1\":{\"566\":1}}],[\"利用栈解决\",{\"1\":{\"514\":1}}],[\"利用超长焦\",{\"1\":{\"279\":1}}],[\"利用环境拍摄大长腿\",{\"1\":{\"238\":1}}],[\"利用环境中的建筑\",{\"1\":{\"56\":1}}],[\"利用身边的道具让强光光线柔和\",{\"1\":{\"236\":1}}],[\"利用前景的杏花形成虚化和氛围感\",{\"1\":{\"234\":1}}],[\"利用前景制造画面纵深感\",{\"1\":{\"76\":1,\"83\":1}}],[\"利用水面做背景\",{\"1\":{\"233\":1}}],[\"利用中长焦进行画框构图\",{\"1\":{\"240\":1}}],[\"利用中长焦\",{\"1\":{\"232\":1}}],[\"利用长焦\",{\"1\":{\"233\":1}}],[\"利用长焦拍摄\",{\"1\":{\"231\":1}}],[\"利用长焦+横构图\",{\"1\":{\"230\":1}}],[\"利用线条引导观者的目光\",{\"1\":{\"222\":1}}],[\"利用光线\",{\"1\":{\"174\":1}}],[\"利用光影制造空间感\",{\"1\":{\"76\":1}}],[\"利用光影制造氛围感\",{\"1\":{\"76\":1}}],[\"利用光影增加照片中的层次感\",{\"1\":{\"68\":1}}],[\"利用光影构图\",{\"0\":{\"68\":1}}],[\"利用发丝修饰脸型\",{\"1\":{\"169\":1}}],[\"利用道具制造光影\",{\"1\":{\"239\":1}}],[\"利用道具制造氛围感\",{\"1\":{\"83\":1}}],[\"利用道具\",{\"1\":{\"154\":1}}],[\"利用肢体语言表达较为强烈的人物情绪状态或某种氛围\",{\"1\":{\"146\":1}}],[\"利用色彩对比拉开背景层次\",{\"1\":{\"76\":1}}],[\"利用镜子构图\",{\"0\":{\"67\":1}}],[\"利用人的形体制造曲线\",{\"1\":{\"62\":1}}],[\"绸质感吊带裙\",{\"1\":{\"125\":1}}],[\"田园碎花裙\",{\"1\":{\"125\":1}}],[\"酷\",{\"1\":{\"125\":1}}],[\"牛仔裤\",{\"1\":{\"125\":1}}],[\"卫衣\",{\"1\":{\"125\":1}}],[\"冬天的外套\",{\"1\":{\"125\":1}}],[\"西装\",{\"1\":{\"125\":1}}],[\"棕色\",{\"1\":{\"124\":1}}],[\"咖色\",{\"1\":{\"124\":1,\"171\":1}}],[\"垫发根\",{\"1\":{\"124\":1}}],[\"蓬松头顶视觉上拉长上庭\",{\"1\":{\"168\":1}}],[\"蓬松\",{\"1\":{\"124\":1}}],[\"盘发\",{\"1\":{\"124\":1}}],[\"暗\",{\"1\":{\"289\":1}}],[\"暗调\",{\"1\":{\"259\":1}}],[\"暗部更暗\",{\"1\":{\"288\":1}}],[\"暗部\",{\"1\":{\"254\":1}}],[\"暗部做背景\",{\"1\":{\"236\":1}}],[\"暗示人物命运\",{\"1\":{\"191\":1}}],[\"暗红\",{\"1\":{\"124\":1}}],[\"暗黑\",{\"1\":{\"93\":1,\"114\":1}}],[\"遮下唇\",{\"1\":{\"168\":1}}],[\"遮瑕遮上下唇\",{\"1\":{\"173\":1}}],[\"遮瑕\",{\"1\":{\"124\":1}}],[\"遮挡\",{\"1\":{\"78\":1}}],[\"遮挡构图让画面更具有想象空间和故事感\",{\"1\":{\"73\":1}}],[\"遮挡构图法\",{\"0\":{\"73\":1}}],[\"野生眉\",{\"1\":{\"124\":1}}],[\"裸妆\",{\"1\":{\"124\":1}}],[\"学习方法\",{\"0\":{\"263\":1}}],[\"学校\",{\"1\":{\"124\":1}}],[\"学会使用俯仰拍镜头\",{\"1\":{\"35\":1}}],[\"学会分析照片的视点\",{\"1\":{\"35\":1}}],[\"融入自然\",{\"1\":{\"126\":1}}],[\"融入自己的主题\",{\"1\":{\"123\":1}}],[\"融入环境或冲破平淡\",{\"1\":{\"83\":1}}],[\"融入环境\",{\"0\":{\"137\":1},\"1\":{\"34\":1}}],[\"初始堆和最大堆xms\",{\"1\":{\"738\":1}}],[\"初始空间大小\",{\"1\":{\"722\":1}}],[\"初始化令牌桶\",{\"1\":{\"949\":1}}],[\"初始化一些基础的applicationcontext\",{\"1\":{\"926\":1}}],[\"初始化springapplication\",{\"1\":{\"926\":1}}],[\"初始化方法\",{\"1\":{\"884\":1}}],[\"初始化了一个定时器\",{\"1\":{\"842\":1}}],[\"初始化\",{\"1\":{\"712\":1,\"713\":1,\"833\":1,\"884\":1,\"890\":1}}],[\"初始化双指针\",{\"1\":{\"494\":1}}],[\"初始标记\",{\"1\":{\"707\":1,\"708\":1}}],[\"初始状态\",{\"1\":{\"651\":1}}],[\"初始容量暂时存放到\",{\"1\":{\"645\":1}}],[\"初步结果聚合\",{\"1\":{\"562\":1}}],[\"初期阶段\",{\"1\":{\"148\":1}}],[\"初次合作的模特根据长相判断适合的风格\",{\"1\":{\"123\":1}}],[\"初学者常用\",{\"1\":{\"76\":1}}],[\"瞳色自然\",{\"1\":{\"171\":1}}],[\"瞳色\",{\"1\":{\"123\":1}}],[\"纯css样式解决\",{\"1\":{\"433\":1}}],[\"纯调\",{\"1\":{\"278\":1}}],[\"纯色背景\",{\"1\":{\"279\":1}}],[\"纯色\",{\"1\":{\"123\":1}}],[\"纯净\",{\"1\":{\"93\":1}}],[\"肤色不统一\",{\"1\":{\"262\":1}}],[\"肤色\",{\"1\":{\"123\":2,\"254\":1,\"260\":1}}],[\"脸宽\",{\"1\":{\"169\":1}}],[\"脸长与脸宽的一般标准比例\",{\"1\":{\"165\":1}}],[\"脸的宽度比例\",{\"1\":{\"165\":1}}],[\"脸的方向\",{\"1\":{\"158\":1}}],[\"脸的比例\",{\"1\":{\"156\":1}}],[\"脸面\",{\"1\":{\"156\":1}}],[\"脸型\",{\"1\":{\"123\":1}}],[\"脸部\",{\"1\":{\"191\":1}}],[\"脸部尽量朝上\",{\"1\":{\"78\":1}}],[\"脸部明暗对比明显\",{\"1\":{\"76\":1}}],[\"体系中用来实现实时刷新配置的一种注解\",{\"1\":{\"972\":1}}],[\"体验差\",{\"1\":{\"946\":1}}],[\"体育运动\",{\"1\":{\"273\":1}}],[\"体重\",{\"1\":{\"123\":1}}],[\"体现出动态不稳定性或生命力的感觉\",{\"1\":{\"221\":1}}],[\"体现冷峻\",{\"1\":{\"125\":1}}],[\"体现\",{\"1\":{\"92\":1}}],[\"气球\",{\"1\":{\"126\":1}}],[\"气质\",{\"1\":{\"123\":1}}],[\"气氛静谧\",{\"1\":{\"81\":1}}],[\"甜美\",{\"1\":{\"123\":1,\"276\":1}}],[\"定时以固定速率向桶中添加令牌\",{\"1\":{\"949\":1}}],[\"定时触发\",{\"1\":{\"561\":1}}],[\"定期向nacos\",{\"1\":{\"971\":1}}],[\"定期检查\",{\"1\":{\"842\":1}}],[\"定期检查线程是否还持有锁\",{\"1\":{\"842\":1}}],[\"定期删除\",{\"0\":{\"828\":1}}],[\"定期刷新机制\",{\"1\":{\"565\":1}}],[\"定位到索引的节点\",{\"1\":{\"793\":1}}],[\"定位高cpu占用的线程\",{\"1\":{\"738\":1}}],[\"定位元素会层叠在浮动元素上面\",{\"1\":{\"430\":1}}],[\"定位\",{\"1\":{\"426\":1}}],[\"定位的结合体\",{\"1\":{\"426\":1}}],[\"定位参照对象的高度\",{\"1\":{\"425\":1}}],[\"定位参照对象的宽度=\",{\"1\":{\"425\":1}}],[\"定位参照对象是视口\",{\"1\":{\"424\":1}}],[\"定位参照对象是元素自己原来的位置\",{\"1\":{\"423\":1}}],[\"定位参考对象是最邻近的定位祖先元素\",{\"1\":{\"425\":1}}],[\"定位允许从正常的文档流布局中取出元素\",{\"1\":{\"422\":1}}],[\"定模特\",{\"0\":{\"123\":1}}],[\"定义一个jdk动态类\",{\"1\":{\"588\":1}}],[\"定义一个接口及其实现类\",{\"1\":{\"588\":1}}],[\"定义发送短信的接口\",{\"1\":{\"588\":1}}],[\"定义最小得值得索引\",{\"1\":{\"527\":1}}],[\"定义缩放的最小值\",{\"1\":{\"470\":1}}],[\"定义缩放的最大值\",{\"1\":{\"470\":1}}],[\"定义设备宽度与viewport大小之间的缩放比例\",{\"1\":{\"470\":1}}],[\"定义高度\",{\"1\":{\"470\":1}}],[\"定义viewport的宽度\",{\"1\":{\"470\":1}}],[\"定义了一个变量\",{\"1\":{\"463\":1}}],[\"定义了一个元素在二维平面上的倾斜转换\",{\"1\":{\"454\":1}}],[\"定义文档某个区域的元素\",{\"1\":{\"459\":1}}],[\"定义列表dl\",{\"1\":{\"406\":1}}],[\"定义列表\",{\"1\":{\"406\":1}}],[\"定义行内内容\",{\"1\":{\"358\":1}}],[\"定义\",{\"0\":{\"87\":1},\"1\":{\"50\":1,\"517\":1,\"659\":1,\"667\":1,\"715\":1,\"924\":1,\"956\":1,\"957\":1,\"958\":1}}],[\"早期css标准并没有提供好的左右布局方案\",{\"1\":{\"429\":1}}],[\"早期可以不用写\",{\"1\":{\"122\":1}}],[\"早晨\",{\"1\":{\"81\":1}}],[\"售卖等商业行为需征得摄影师同意\",{\"1\":{\"122\":1}}],[\"液化\",{\"0\":{\"251\":1},\"1\":{\"122\":1,\"254\":1}}],[\"发起全局事务的开启请求\",{\"1\":{\"968\":1}}],[\"发送消息的时候指定key\",{\"1\":{\"983\":1}}],[\"发送心跳\",{\"1\":{\"970\":1}}],[\"发送心跳信息的消息头是16384\",{\"1\":{\"872\":1}}],[\"发送心跳信息的消息头是65536\",{\"1\":{\"872\":1}}],[\"发送报警信息给运维人员\",{\"1\":{\"849\":1}}],[\"发送http请求到web服务器\",{\"1\":{\"895\":1}}],[\"发送http请求\",{\"1\":{\"547\":1}}],[\"发生\",{\"1\":{\"835\":1}}],[\"发生了在一个事务内两次读到的数据是不一样的情况\",{\"1\":{\"771\":1}}],[\"发生在子父类中\",{\"1\":{\"601\":1}}],[\"发生在同一个类中\",{\"1\":{\"601\":1}}],[\"发现redis里面没数据\",{\"1\":{\"848\":1}}],[\"发现排序过程中占用了额外的空间\",{\"1\":{\"526\":1}}],[\"发现适合这人美的一面边拍边去做调整\",{\"1\":{\"224\":1}}],[\"发根蓬松\",{\"1\":{\"170\":1}}],[\"发丝塑造的自由感\",{\"0\":{\"197\":1}}],[\"发丝让照片更有风吹过的感觉\",{\"1\":{\"170\":1}}],[\"发丝修饰脸型\",{\"0\":{\"170\":1}}],[\"发丝\",{\"1\":{\"136\":1,\"154\":1,\"168\":1}}],[\"发包等\",{\"1\":{\"124\":1}}],[\"发型\",{\"1\":{\"123\":1,\"124\":1}}],[\"发布朋友圈\",{\"1\":{\"122\":1}}],[\"发互勉贴\",{\"1\":{\"122\":2}}],[\"底层原理\",{\"0\":{\"968\":1}}],[\"底层实现\",{\"1\":{\"817\":1,\"822\":1}}],[\"底层依赖于一条cpu的原子指令\",{\"1\":{\"669\":1}}],[\"底层是如何实现分布式链路追踪的\",{\"0\":{\"976\":1,\"977\":1}}],[\"底层是通过monitor对象来完成\",{\"1\":{\"662\":1}}],[\"底层是红黑树\",{\"1\":{\"626\":1}}],[\"底层使用的是acc\",{\"1\":{\"661\":1}}],[\"底层使用的是monitorenter\",{\"1\":{\"661\":1}}],[\"底层unsafe类\",{\"1\":{\"658\":1}}],[\"底层采用分段的数组+链表实现\",{\"1\":{\"634\":1}}],[\"底层就是基于\",{\"1\":{\"629\":1}}],[\"底层数据结构\",{\"0\":{\"639\":1},\"1\":{\"622\":1,\"628\":1,\"630\":1,\"634\":1}}],[\"底片不送\",{\"1\":{\"122\":1}}],[\"底光\",{\"1\":{\"76\":1}}],[\"交给spring框架来管理\",{\"1\":{\"884\":1}}],[\"交集\",{\"1\":{\"819\":1}}],[\"交集选择器\",{\"1\":{\"372\":1}}],[\"交换找到的两个元素\",{\"1\":{\"497\":1}}],[\"交叉轴\",{\"1\":{\"445\":1}}],[\"交通\",{\"1\":{\"122\":1}}],[\"交代更多的元素\",{\"1\":{\"191\":1}}],[\"交代环境\",{\"1\":{\"191\":1,\"274\":1}}],[\"交代故事发生的环境\",{\"1\":{\"37\":1}}],[\"交代整体环境\",{\"1\":{\"34\":1}}],[\"交代被摄主体与环境的空间\",{\"1\":{\"34\":2}}],[\"这可能会引入额外的系统开销\",{\"1\":{\"949\":1}}],[\"这条事务的状态也是不确定的\",{\"1\":{\"942\":1}}],[\"这绝不等价于系统不可用\",{\"1\":{\"934\":1}}],[\"这在一定程度上降低了开发调试阶段的便利性\",{\"1\":{\"878\":1}}],[\"这么做的目的\",{\"1\":{\"848\":1}}],[\"这应该是非聚簇索引的最大缺点了\",{\"1\":{\"793\":1}}],[\"这块内存区域很小\",{\"1\":{\"680\":1}}],[\"这时候就需要升级为重量级锁\",{\"1\":{\"672\":1}}],[\"这时先回复\",{\"1\":{\"552\":1}}],[\"这和乐观锁的使用范围类似\",{\"1\":{\"672\":1}}],[\"这两个线程串行化\",{\"1\":{\"670\":1}}],[\"这4种包装类默认创建了数值\",{\"1\":{\"599\":1}}],[\"这里设置为5秒\",{\"1\":{\"970\":1}}],[\"这里\",{\"1\":{\"869\":1}}],[\"这里的<pid>是java进程的进程id\",{\"1\":{\"727\":1}}],[\"这里的n通常是from\",{\"1\":{\"562\":1}}],[\"这里要注意了\",{\"1\":{\"689\":1}}],[\"这里对java中集合总结\",{\"1\":{\"614\":1}}],[\"这里对java中常见的知识点做一个总结\",{\"1\":{\"593\":1}}],[\"这里对java中基础的进阶总结\",{\"1\":{\"570\":1}}],[\"这有利于避免内存溢出问题\",{\"1\":{\"567\":1}}],[\"这对于需要计算大量不同值的数量而不关注具体值本身的应用场景特别有用\",{\"1\":{\"567\":1}}],[\"这意味着如果调用的服务在1秒内没有响应\",{\"1\":{\"952\":1}}],[\"这意味着所有的非键信息都只能依赖于键信息\",{\"1\":{\"744\":1}}],[\"这意味着年轻代占堆内存的1\",{\"1\":{\"738\":1}}],[\"这意味着每隔一秒\",{\"1\":{\"565\":1}}],[\"这意味着新索引的文档并没有立即写入磁盘\",{\"1\":{\"561\":1}}],[\"这是通过查询数据库中任务调度记录表实现的\",{\"1\":{\"975\":1}}],[\"这是通过在同一个节点上完成索引和搜索请求\",{\"1\":{\"565\":1}}],[\"这是心跳超时时间\",{\"1\":{\"970\":1}}],[\"这是因为只需存储每个桶的计数值\",{\"1\":{\"822\":1}}],[\"这是因为line\",{\"1\":{\"458\":1}}],[\"这是为了保证锁在同步代码块代码正常执行以及出现异常\",{\"1\":{\"661\":1}}],[\"这是一个运行时操作\",{\"1\":{\"611\":1}}],[\"这确保了在部分节点因网络故障隔离出去的情况下\",{\"1\":{\"564\":1}}],[\"这会将内存缓冲区中的所有更改内容写入到文件系统缓存\",{\"1\":{\"561\":1}}],[\"这样就可以实现对资源的限流操作\",{\"1\":{\"963\":1}}],[\"这样就会比较慢\",{\"1\":{\"793\":1}}],[\"这样就会把所有的文件名保存到\",{\"1\":{\"557\":1}}],[\"这样可以降低组件之间的耦合度\",{\"1\":{\"884\":1}}],[\"这样可以确保新的主节点能够提供高性能和高可用性的服务\",{\"1\":{\"871\":1}}],[\"这样可以避免内存碎片问题\",{\"1\":{\"690\":1}}],[\"这样事物之间就完全不可能产生干扰\",{\"1\":{\"781\":1}}],[\"这样第一个事务内的修改结果被丢失\",{\"1\":{\"770\":1}}],[\"这样每个节点都能了解到当前集群的最新状态\",{\"1\":{\"564\":1}}],[\"这样传输层才知道把数据传输到哪里去\",{\"1\":{\"544\":1}}],[\"这样在开发中\",{\"1\":{\"472\":1}}],[\"这些探针通常是以javaagent的形式存在\",{\"1\":{\"977\":1}}],[\"这些接口定义的方法会在所有spring\",{\"1\":{\"926\":1}}],[\"这些监听器将在应用生命周期的不同阶段被触发\",{\"1\":{\"926\":1}}],[\"这些自动配置类会根据条件来判断是否需要自动配置某个组件\",{\"1\":{\"923\":1}}],[\"这些类用于根据条件来自动配置各种组件\",{\"1\":{\"923\":1}}],[\"这些类和电脑类之间的关系\",{\"1\":{\"521\":1}}],[\"这些配置信息可以来自于xml配置文件\",{\"1\":{\"884\":1}}],[\"这些事件\",{\"1\":{\"801\":1}}],[\"这些区域中包含了逻辑上的年轻代和老年代\",{\"1\":{\"708\":1}}],[\"这些任务可能会交替执行\",{\"1\":{\"650\":1}}],[\"这些信息对于搜索时计算相关性得分至关重要\",{\"1\":{\"563\":1}}],[\"这些元素的色彩属性\",{\"1\":{\"95\":1}}],[\"这一步会依据应用程序类型选择合适的上下文实现\",{\"1\":{\"926\":1}}],[\"这一点也不666\",{\"1\":{\"521\":1}}],[\"这一端称为栈顶\",{\"1\":{\"512\":1}}],[\"这种方法最有效\",{\"1\":{\"984\":1}}],[\"这种模式是最高级别的\",{\"1\":{\"982\":1}}],[\"这种机制的使用需要\",{\"1\":{\"866\":1}}],[\"这种算法的好处是可以控制一次回收多少个小区间\",{\"1\":{\"694\":1}}],[\"这种情况在新生代经常发生\",{\"1\":{\"691\":1}}],[\"这种数据结构\",{\"1\":{\"521\":1}}],[\"这种现象叫做\",{\"1\":{\"387\":1}}],[\"这个实现类会包装请求方法\",{\"1\":{\"953\":1}}],[\"这个过程通过扫描\",{\"1\":{\"926\":1}}],[\"这个过程就被形象地称为\",{\"1\":{\"798\":1}}],[\"这个注解会触发spring\",{\"1\":{\"923\":1}}],[\"这个时间复杂度是\",{\"1\":{\"853\":1}}],[\"这个时候可以设置meta中的viewport\",{\"1\":{\"470\":1}}],[\"这个时候直接拍摄的画面会很普通\",{\"1\":{\"231\":1}}],[\"这个延迟时间怎么确定呢\",{\"1\":{\"848\":1}}],[\"这个key没有被删除\",{\"1\":{\"840\":1}}],[\"这个坐标是北京王府井位置\",{\"1\":{\"824\":1}}],[\"这个哈希值会根据哈希空间大小被截断\",{\"1\":{\"822\":1}}],[\"这个停顿称为stw\",{\"1\":{\"710\":1}}],[\"这个算法的基本思想就是通过一系列的称为\",{\"1\":{\"687\":1}}],[\"这个方法做了两件事\",{\"1\":{\"671\":1}}],[\"这个对象的值来源于步骤\",{\"1\":{\"610\":1}}],[\"这个阶段可能会进一步细分为fetch\",{\"1\":{\"562\":1}}],[\"这个位置是\",{\"1\":{\"520\":1}}],[\"这个比例称之为设备像素比\",{\"1\":{\"468\":1}}],[\"这个css函数用于移动元素在平面上的位置\",{\"1\":{\"454\":1}}],[\"这点很重要\",{\"1\":{\"122\":1}}],[\"迟到没有下次合作\",{\"1\":{\"122\":1}}],[\"请根据所使用的\",{\"1\":{\"970\":1}}],[\"请稍后再试\",{\"1\":{\"956\":1}}],[\"请求指定服务名下的可用服务实例列表\",{\"1\":{\"971\":1}}],[\"请求或者\",{\"1\":{\"970\":1}}],[\"请求\",{\"1\":{\"916\":2,\"970\":1}}],[\"请求处理器\",{\"1\":{\"894\":1}}],[\"请求并读取主数据库的二进制日志事件\",{\"1\":{\"801\":1}}],[\"请求上下文\",{\"1\":{\"663\":1}}],[\"请求与保持条件\",{\"1\":{\"652\":1}}],[\"请求通常包括搜索的索引名称\",{\"1\":{\"562\":1}}],[\"请求关闭连接\",{\"1\":{\"552\":1}}],[\"请求方法\",{\"1\":{\"410\":1}}],[\"请大家注意\",{\"1\":{\"520\":2}}],[\"请你在该数组中找出和为目标值的那两个整数\",{\"1\":{\"489\":1}}],[\"请勿催片\",{\"1\":{\"122\":1}}],[\"请勿迟到\",{\"1\":{\"122\":1}}],[\"请互相尊重\",{\"1\":{\"122\":1}}],[\"备注\",{\"1\":{\"122\":7,\"573\":1,\"579\":1,\"603\":1,\"633\":2,\"667\":1,\"738\":1}}],[\"互斥锁来锁住它\",{\"1\":{\"848\":1}}],[\"互斥独占锁防止击穿\",{\"1\":{\"837\":1}}],[\"互斥更新\",{\"1\":{\"837\":1}}],[\"互斥条件\",{\"1\":{\"652\":1}}],[\"互相之间不存在层叠现象\",{\"1\":{\"422\":1}}],[\"互勉约拍建立在双方互相认可\",{\"1\":{\"122\":1}}],[\"互补色\",{\"0\":{\"283\":1},\"1\":{\"88\":4,\"96\":1}}],[\"素人模特互勉约拍规则模板\",{\"1\":{\"122\":1}}],[\"素雅\",{\"1\":{\"93\":1}}],[\"路由算法\",{\"1\":{\"640\":1}}],[\"路由与分片选择\",{\"1\":{\"561\":1}}],[\"路由和寻址\",{\"1\":{\"544\":1}}],[\"路径\",{\"1\":{\"318\":1,\"726\":1}}],[\"路遇直接加微信或者征求意见拍照加微信\",{\"1\":{\"122\":1}}],[\"路灯都是常见的光源\",{\"1\":{\"81\":1}}],[\"医学院\",{\"1\":{\"122\":1}}],[\"师范\",{\"1\":{\"122\":1}}],[\"美团叶子算法\",{\"0\":{\"939\":1}}],[\"美团附近酒店推送\",{\"1\":{\"824\":1}}],[\"美姿的自然保证不在同一个平面上\",{\"1\":{\"156\":1}}],[\"美姿不仅是人物形体的引导\",{\"1\":{\"154\":1}}],[\"美资的基本原则\",{\"0\":{\"132\":1}}],[\"美瞳\",{\"1\":{\"124\":1,\"171\":1}}],[\"美院\",{\"1\":{\"122\":1}}],[\"美好事物\",{\"1\":{\"213\":1}}],[\"美好的氛围\",{\"1\":{\"84\":1}}],[\"美好\",{\"1\":{\"17\":1,\"33\":1}}],[\"超过这个时间未收到心跳\",{\"1\":{\"970\":1}}],[\"超过98\",{\"1\":{\"737\":1}}],[\"超时\",{\"1\":{\"956\":1}}],[\"超时设置优化\",{\"1\":{\"954\":1}}],[\"超时与重试\",{\"1\":{\"953\":1}}],[\"超时时间\",{\"0\":{\"952\":1}}],[\"超时等待状态\",{\"1\":{\"651\":1}}],[\"超级话题\",{\"1\":{\"122\":1}}],[\"超低机位的仰拍镜头要结合具体拍摄风格\",{\"1\":{\"34\":1}}],[\"线上环境推荐\",{\"0\":{\"753\":1}}],[\"线上约模特\",{\"1\":{\"122\":1}}],[\"线程从阻塞状态返回\",{\"1\":{\"866\":1}}],[\"线程会被挂起\",{\"1\":{\"865\":1}}],[\"线程会自动苏醒\",{\"1\":{\"653\":1}}],[\"线程数\",{\"1\":{\"738\":1}}],[\"线程数大多启动拒绝策略\",{\"1\":{\"664\":1}}],[\"线程溢出\",{\"1\":{\"737\":1}}],[\"线程结束栈内存也就释放\",{\"1\":{\"682\":1}}],[\"线程恢复等基础功能\",{\"1\":{\"680\":1}}],[\"线程阻塞\",{\"1\":{\"672\":1}}],[\"线程竞争不使用自旋\",{\"1\":{\"672\":1}}],[\"线程等待唤醒机制\",{\"1\":{\"671\":1}}],[\"线程中断机制\",{\"1\":{\"671\":1}}],[\"线程\",{\"1\":{\"669\":1,\"671\":1,\"865\":1}}],[\"线程可以不停地执行\",{\"1\":{\"669\":1}}],[\"线程进入屏障通过cyclicbarrier的await\",{\"1\":{\"668\":1}}],[\"线程工厂\",{\"1\":{\"664\":1}}],[\"线程池工作流程\",{\"1\":{\"664\":1}}],[\"线程池的拒绝策略\",{\"1\":{\"664\":1}}],[\"线程池的最大线程数\",{\"1\":{\"664\":1}}],[\"线程池的核心线程数量\",{\"1\":{\"664\":1}}],[\"线程池常见的参数\",{\"1\":{\"664\":1}}],[\"线程池\",{\"0\":{\"664\":1},\"1\":{\"956\":1}}],[\"线程私有工作内存的数据失效\",{\"1\":{\"659\":1}}],[\"线程a修改一个值后再改回原来的值\",{\"1\":{\"658\":1}}],[\"线程a持有资源2\",{\"1\":{\"652\":1}}],[\"线程不会自动苏醒\",{\"1\":{\"653\":1}}],[\"线程不安全\",{\"1\":{\"608\":1}}],[\"线程已获得的资源在未使用完之前不能被其他线程强行剥夺\",{\"1\":{\"652\":1}}],[\"线程b持有资源1\",{\"1\":{\"652\":1}}],[\"线程被调用了start\",{\"1\":{\"651\":1}}],[\"线程被创建出来但没有被调用start\",{\"1\":{\"651\":1}}],[\"线程安全推荐用concurrenthashmap\",{\"1\":{\"628\":1}}],[\"线程安全\",{\"1\":{\"608\":2,\"628\":1,\"634\":1}}],[\"线程调度\",{\"1\":{\"590\":1}}],[\"线性结构\",{\"1\":{\"539\":1}}],[\"线的角度与运动的方向\",{\"1\":{\"279\":1}}],[\"线的构成\",{\"1\":{\"279\":1}}],[\"线下活动\",{\"1\":{\"122\":1}}],[\"线下约模特\",{\"1\":{\"122\":1}}],[\"线条感\",{\"1\":{\"133\":1}}],[\"线条\",{\"1\":{\"49\":1,\"50\":1}}],[\"城市化元素少\",{\"1\":{\"121\":1}}],[\"寂寥\",{\"1\":{\"121\":1}}],[\"开头的like查询\",{\"1\":{\"794\":1}}],[\"开发者在代码中手动提交offset\",{\"1\":{\"984\":1}}],[\"开发中不要用system\",{\"1\":{\"710\":1}}],[\"开发案例思路\",{\"0\":{\"404\":1}}],[\"开源框架应用\",{\"1\":{\"663\":1}}],[\"开启全局事务\",{\"1\":{\"968\":1}}],[\"开启全局事务后\",{\"1\":{\"968\":1}}],[\"开启分布式事务\",{\"1\":{\"967\":1}}],[\"开启aof持久化后每执行一条会更改redis中的数据的命令\",{\"1\":{\"861\":1}}],[\"开启或关闭对应名称的参数\",{\"1\":{\"728\":1}}],[\"开启跨节点缓存\",{\"1\":{\"566\":1}}],[\"开启慢查询日志\",{\"1\":{\"566\":1}}],[\"开启了flex布局的元素叫\",{\"1\":{\"436\":1}}],[\"开始和结束时间戳\",{\"1\":{\"977\":1}}],[\"开始加载和注册所有的\",{\"1\":{\"926\":1}}],[\"开始进行业务处理\",{\"1\":{\"866\":1}}],[\"开始\",{\"1\":{\"463\":1}}],[\"开始往\",{\"1\":{\"441\":1}}],[\"开怀大笑\",{\"1\":{\"276\":1}}],[\"开衫长毛衣\",{\"1\":{\"127\":1}}],[\"开园\",{\"1\":{\"121\":1}}],[\"开阔或狭小\",{\"1\":{\"46\":1}}],[\"外层的select\",{\"1\":{\"796\":1}}],[\"外轮廓\",{\"1\":{\"388\":1}}],[\"外边距margin\",{\"0\":{\"387\":1}}],[\"外边距\",{\"1\":{\"383\":1,\"392\":1}}],[\"外部样式这两者优先级相同\",{\"1\":{\"347\":1}}],[\"外部样式\",{\"1\":{\"347\":1}}],[\"外在的束缚\",{\"1\":{\"127\":1}}],[\"外出游玩或坐车多观察\",{\"1\":{\"121\":1}}],[\"外景拍摄\",{\"1\":{\"79\":1}}],[\"抖音热搜\",{\"1\":{\"821\":1}}],[\"抖音寻找化妆师\",{\"1\":{\"124\":1}}],[\"抖音\",{\"1\":{\"121\":1,\"122\":1}}],[\"社交平台关键词搜素\",{\"1\":{\"121\":1}}],[\"最小并发连接\",{\"1\":{\"944\":1}}],[\"最小宽度\",{\"1\":{\"384\":1}}],[\"最初所有的值均设置为0\",{\"1\":{\"833\":1}}],[\"最近最不经常使用\",{\"1\":{\"832\":1}}],[\"最近最少使用\",{\"1\":{\"832\":2}}],[\"最近一周的活跃用户\",{\"1\":{\"823\":1}}],[\"最近一家公司主要从事公安系统的研发\",{\"1\":{\"308\":1}}],[\"最左前缀匹配原则\",{\"0\":{\"794\":1}}],[\"最左边的指针\",{\"1\":{\"494\":1}}],[\"最高的隔离级别\",{\"1\":{\"781\":1,\"899\":1}}],[\"最有可能是大数据分配\",{\"1\":{\"737\":1}}],[\"最顶层的加载类\",{\"1\":{\"714\":1}}],[\"最耗时\",{\"1\":{\"707\":2}}],[\"最典型的就是永久代\",{\"1\":{\"681\":1}}],[\"最终\",{\"1\":{\"977\":1}}],[\"最终能够达到一个一致的状态\",{\"1\":{\"934\":1}}],[\"最终能把两个任务的结果一起交给thencombine\",{\"1\":{\"670\":1}}],[\"最终一致性强调的是系统中所有的数据副本\",{\"1\":{\"934\":1}}],[\"最终一致性\",{\"1\":{\"934\":1}}],[\"最终加载meta\",{\"1\":{\"923\":1}}],[\"最终还是要回表\",{\"1\":{\"793\":1}}],[\"最终出现\",{\"1\":{\"737\":1}}],[\"最终标记\",{\"1\":{\"708\":1}}],[\"最终的变量是放在了当前线程的\",{\"1\":{\"663\":1}}],[\"最终生成满足用户请求的搜索结果\",{\"1\":{\"562\":1}}],[\"最关键的点\",{\"1\":{\"650\":1}}],[\"最接近的\",{\"1\":{\"645\":1}}],[\"最前面的元素是i前面元素最小的\",{\"1\":{\"530\":1}}],[\"最前面的元素总是最小的\",{\"1\":{\"530\":1}}],[\"最后再根据持久化方式\",{\"1\":{\"861\":1}}],[\"最后存储的就是\",{\"1\":{\"522\":1}}],[\"最后\",{\"1\":{\"522\":1,\"610\":1,\"691\":1}}],[\"最早也是最成熟的css预处理器\",{\"1\":{\"469\":1}}],[\"最常用\",{\"1\":{\"466\":1,\"817\":1}}],[\"最常用的链接是样式表css\",{\"1\":{\"351\":1}}],[\"最多输入的内容\",{\"1\":{\"461\":1}}],[\"最大前缀零\",{\"1\":{\"822\":1}}],[\"最大连接数\",{\"1\":{\"804\":1}}],[\"最大容量\",{\"1\":{\"644\":1}}],[\"最大宽度\",{\"1\":{\"384\":1}}],[\"最大的焦距\",{\"1\":{\"279\":1}}],[\"最大的光圈\",{\"1\":{\"279\":1}}],[\"最佳兴趣点\",{\"1\":{\"279\":1}}],[\"最佳画质光圈\",{\"1\":{\"274\":1}}],[\"最低的隔离级别\",{\"1\":{\"778\":1}}],[\"最低\",{\"1\":{\"275\":1}}],[\"最直接的反映\",{\"1\":{\"182\":1}}],[\"最重要判断\",{\"1\":{\"275\":1}}],[\"最重要\",{\"1\":{\"120\":1}}],[\"最亮和最暗部分对比大\",{\"1\":{\"84\":1}}],[\"身份或场景的道具\",{\"1\":{\"212\":1}}],[\"身份和情绪\",{\"1\":{\"109\":1}}],[\"身体特写\",{\"1\":{\"191\":1}}],[\"身体与墙面形成锐角\",{\"1\":{\"160\":1}}],[\"身体支点\",{\"1\":{\"160\":1}}],[\"身高\",{\"1\":{\"123\":1}}],[\"身高体重\",{\"1\":{\"120\":1}}],[\"晴\",{\"1\":{\"120\":1}}],[\"晴天不同时段下物体呈现出的色彩不同\",{\"1\":{\"87\":1}}],[\"晴天光线的利用\",{\"0\":{\"81\":1}}],[\"样片展示\",{\"1\":{\"127\":1}}],[\"样片\",{\"0\":{\"117\":1},\"1\":{\"120\":1,\"265\":1}}],[\"时的代理机制\",{\"1\":{\"972\":1}}],[\"时钟回拨问题\",{\"1\":{\"938\":1}}],[\"时用ziplist\",{\"1\":{\"853\":1}}],[\"时被阻塞\",{\"1\":{\"668\":1}}],[\"时没有重写\",{\"1\":{\"607\":1}}],[\"时必须重写hashcode\",{\"0\":{\"607\":1}}],[\"时\",{\"1\":{\"564\":1,\"595\":1,\"669\":1,\"798\":1,\"972\":1}}],[\"时间戳部分\",{\"1\":{\"938\":1}}],[\"时间戳\",{\"1\":{\"938\":1}}],[\"时间的本质\",{\"1\":{\"919\":1}}],[\"时间的秩序\",{\"1\":{\"919\":1}}],[\"时间单位\",{\"1\":{\"664\":1}}],[\"时间序列数据优化\",{\"1\":{\"566\":1}}],[\"时间复杂度为o\",{\"1\":{\"622\":2,\"637\":2}}],[\"时间复杂度为0\",{\"1\":{\"622\":1}}],[\"时间复杂度是o\",{\"1\":{\"622\":1}}],[\"时间复杂度是\",{\"1\":{\"522\":4}}],[\"时间复杂度分析\",{\"1\":{\"522\":1}}],[\"时间复杂度的计算\",{\"0\":{\"486\":1}}],[\"时间复杂度\",{\"0\":{\"484\":1}}],[\"时间\",{\"1\":{\"190\":1,\"919\":1}}],[\"时尚\",{\"1\":{\"114\":1}}],[\"时事热点\",{\"1\":{\"112\":1}}],[\"港风\",{\"1\":{\"187\":1}}],[\"港风电影感\",{\"1\":{\"114\":1}}],[\"港风复古\",{\"1\":{\"114\":1}}],[\"昭和复古\",{\"1\":{\"114\":1}}],[\"季节\",{\"1\":{\"112\":1}}],[\"歌词\",{\"1\":{\"112\":1}}],[\"绘画\",{\"1\":{\"112\":1}}],[\"优缺点\",{\"1\":{\"833\":1,\"942\":1}}],[\"优化消费者配置\",{\"1\":{\"981\":1}}],[\"优化\",{\"0\":{\"954\":1}}],[\"优化数据库的索引结构\",{\"1\":{\"804\":1}}],[\"优化器\",{\"1\":{\"803\":1}}],[\"优化点\",{\"1\":{\"796\":1}}],[\"优化代码\",{\"1\":{\"736\":1,\"737\":1}}],[\"优化副本数量\",{\"1\":{\"566\":1}}],[\"优化查询性能瓶颈\",{\"1\":{\"566\":1}}],[\"优先级\",{\"1\":{\"871\":1}}],[\"优先级也和编写顺序有关\",{\"1\":{\"347\":1}}],[\"优先级规则\",{\"1\":{\"347\":1}}],[\"优势在于其简洁易用\",{\"1\":{\"974\":1}}],[\"优势\",{\"1\":{\"276\":1}}],[\"优雅\",{\"1\":{\"123\":1,\"279\":1}}],[\"优秀摄影作品\",{\"1\":{\"112\":1}}],[\"优点\",{\"1\":{\"76\":3,\"216\":1,\"217\":1,\"503\":1,\"585\":1,\"637\":2,\"672\":1,\"690\":1,\"691\":1,\"707\":1,\"715\":1,\"792\":1,\"793\":2,\"833\":1,\"942\":1}}],[\"五个阶段\",{\"1\":{\"713\":1}}],[\"五看增长计划\",{\"1\":{\"299\":1}}],[\"五眼\",{\"1\":{\"165\":1}}],[\"五官\",{\"1\":{\"123\":1,\"254\":1}}],[\"五官特点\",{\"1\":{\"120\":1}}],[\"五\",{\"0\":{\"110\":1}}],[\"调度中心通过数据库事务来保证任务分配和执行状态更新的原子性\",{\"1\":{\"975\":1}}],[\"调度中心通过数据库锁来保证集群分布式调度的一致性\",{\"1\":{\"974\":1}}],[\"调度中心会使用数据库锁\",{\"1\":{\"975\":1}}],[\"调度中心在数据库中存储任务调度的相关信息\",{\"1\":{\"975\":1}}],[\"调大linux\",{\"1\":{\"737\":1}}],[\"调大细节会变得清晰\",{\"1\":{\"288\":1}}],[\"调用关系\",{\"1\":{\"977\":1}}],[\"调用者是否能干其它事\",{\"1\":{\"865\":1}}],[\"调用者要一直等待调用结果的通知后才能进行后续的执行\",{\"1\":{\"865\":1}}],[\"调用在发出去后\",{\"1\":{\"865\":1}}],[\"调用方先去忙别的事情\",{\"1\":{\"865\":1}}],[\"调用方一直在等待而且别的事情什么都不做\",{\"1\":{\"865\":1}}],[\"调用方法之后\",{\"1\":{\"588\":1}}],[\"调用方法之前\",{\"1\":{\"588\":1}}],[\"调用await\",{\"1\":{\"667\":1}}],[\"调用执行自己的线程运行任务\",{\"1\":{\"664\":1}}],[\"调用interupt\",{\"1\":{\"662\":1}}],[\"调用\",{\"1\":{\"656\":1,\"869\":1}}],[\"调和调\",{\"1\":{\"278\":1}}],[\"调亮\",{\"1\":{\"262\":1}}],[\"调色步骤\",{\"0\":{\"260\":1}}],[\"调色\",{\"0\":{\"258\":1}}],[\"调整max\",{\"1\":{\"981\":1}}],[\"调整mysql的sort\",{\"1\":{\"796\":1}}],[\"调整垃圾回收器提高服务的吞吐量\",{\"1\":{\"738\":1}}],[\"调整堆大小提高服务的吞吐量\",{\"1\":{\"738\":1}}],[\"调整分片大小等\",{\"1\":{\"566\":1}}],[\"调整filter缓存\",{\"1\":{\"566\":1}}],[\"调整指针的位置\",{\"1\":{\"494\":1}}],[\"调整指针位置\",{\"1\":{\"494\":1}}],[\"调整曝光对比度等\",{\"1\":{\"254\":1}}],[\"调整画笔大小快捷键\",{\"1\":{\"251\":1}}],[\"调整相机白平衡k值为6000k\",{\"1\":{\"235\":1}}],[\"调整相机k值\",{\"1\":{\"101\":1}}],[\"调低色温的k值\",{\"1\":{\"240\":1}}],[\"调动模特的面部情绪或肢体情绪\",{\"1\":{\"152\":1}}],[\"调动情绪\",{\"0\":{\"152\":1}}],[\"调子\",{\"1\":{\"84\":1}}],[\"配合使用kibana\",{\"1\":{\"566\":1}}],[\"配合道具使用\",{\"1\":{\"160\":1}}],[\"配置变化后\",{\"1\":{\"972\":1}}],[\"配置管理\",{\"1\":{\"971\":1}}],[\"配置管理和通知等功能\",{\"1\":{\"871\":1}}],[\"配置的降级策略生效\",{\"1\":{\"956\":1}}],[\"配置init\",{\"1\":{\"890\":1}}],[\"配置等因素\",{\"1\":{\"871\":1}}],[\"配置调整\",{\"1\":{\"566\":1}}],[\"配置调优\",{\"1\":{\"566\":1}}],[\"配置动画执行的名称\",{\"1\":{\"457\":1}}],[\"配置文件等\",{\"1\":{\"926\":1}}],[\"配置文件修改\",{\"1\":{\"831\":1}}],[\"配置文件\",{\"1\":{\"293\":1}}],[\"配饰\",{\"1\":{\"191\":1}}],[\"配饰参考\",{\"1\":{\"120\":1}}],[\"配饰等鲜明色彩点缀\",{\"1\":{\"100\":1}}],[\"配色\",{\"1\":{\"19\":1}}],[\"局部变量\",{\"1\":{\"600\":1}}],[\"局部磨皮\",{\"1\":{\"254\":1}}],[\"局部特写\",{\"1\":{\"127\":1}}],[\"局部道具\",{\"1\":{\"100\":1}}],[\"局部色彩对比\",{\"0\":{\"100\":1}}],[\"局外人的视角\",{\"1\":{\"33\":1}}],[\"紫红\",{\"1\":{\"124\":1}}],[\"紫\",{\"1\":{\"97\":1}}],[\"极大的节约存储空间\",{\"1\":{\"823\":1}}],[\"极为负重\",{\"1\":{\"691\":1}}],[\"极端的明度对比\",{\"1\":{\"97\":1}}],[\"极端的冷暖对比\",{\"1\":{\"97\":1}}],[\"极易塑造氛围感和故事感\",{\"1\":{\"81\":1}}],[\"极易塑造氛围感\",{\"1\":{\"81\":1}}],[\"极易塑造立体感氛围感\",{\"1\":{\"76\":1}}],[\"极易出彩\",{\"1\":{\"60\":1}}],[\"橙\",{\"1\":{\"97\":1}}],[\"橙+蓝\",{\"1\":{\"97\":1}}],[\"橙色\",{\"1\":{\"93\":1}}],[\"用string类型作为底层数据结构实现的一种统计二值状态的数据类型\",{\"1\":{\"823\":1}}],[\"用它来判断y\",{\"1\":{\"823\":1}}],[\"用到的表名\",{\"1\":{\"796\":1}}],[\"用到很多个图标时\",{\"1\":{\"418\":1}}],[\"用菱形表示\",{\"1\":{\"743\":1}}],[\"用椭圆形表示\",{\"1\":{\"743\":1}}],[\"用矩形框表示\",{\"1\":{\"743\":1}}],[\"用以完成分支\",{\"1\":{\"680\":1}}],[\"用完后再把资源\",{\"1\":{\"669\":1}}],[\"用countdownlatch\",{\"1\":{\"667\":1}}],[\"用栈实现队列\",{\"0\":{\"523\":1},\"1\":{\"523\":1}}],[\"用队列实现栈\",{\"0\":{\"522\":1},\"1\":{\"522\":3}}],[\"用链表实现队列\",{\"0\":{\"506\":1}}],[\"用链表实现栈和用数组实现栈性能测试\",{\"1\":{\"505\":1}}],[\"用链表实现栈\",{\"0\":{\"505\":1},\"1\":{\"505\":1}}],[\"用法\",{\"1\":{\"796\":1}}],[\"用法与justify\",{\"1\":{\"446\":1}}],[\"用法跟\",{\"1\":{\"373\":1}}],[\"用户可以通过实现initializingbean接口或定义init\",{\"1\":{\"884\":1}}],[\"用户可以通过调整indices\",{\"1\":{\"565\":1}}],[\"用户在配置中定义bean\",{\"1\":{\"884\":1}}],[\"用户在一个相对较短的时间窗口内就可以搜索到刚刚索引的文档\",{\"1\":{\"565\":1}}],[\"用户是否登录过\",{\"1\":{\"823\":1}}],[\"用户id\",{\"1\":{\"819\":3}}],[\"用户通过start\",{\"1\":{\"802\":1}}],[\"用户线程和垃圾收集线程同时执行\",{\"1\":{\"698\":1}}],[\"用户身份信息存储\",{\"1\":{\"663\":1}}],[\"用户数据协议\",{\"1\":{\"546\":1}}],[\"用户\",{\"1\":{\"410\":1}}],[\"用来表示sds的类型\",{\"1\":{\"852\":1}}],[\"用来表示input的标题\",{\"1\":{\"410\":1}}],[\"用来标识整个查询中select\",{\"1\":{\"796\":1}}],[\"用来判断当前版本数据的可见性\",{\"1\":{\"776\":2}}],[\"用来存储向下一条指令的地址\",{\"1\":{\"680\":1}}],[\"用来创建线程\",{\"1\":{\"664\":1}}],[\"用来储存等待执行任务的队列\",{\"1\":{\"664\":1}}],[\"用来实现分组唤醒需要唤醒的线程们\",{\"1\":{\"662\":1}}],[\"用来关闭客户端到服务器的数据传送\",{\"1\":{\"552\":1}}],[\"用来设置定位元素的层叠顺序\",{\"1\":{\"427\":1}}],[\"用来设置背景图片在水平\",{\"1\":{\"401\":1}}],[\"用来设置背景图片的大小\",{\"1\":{\"400\":1}}],[\"用来设置盒子模型中宽高的行为\",{\"1\":{\"393\":1}}],[\"用来保留细节的时候\",{\"1\":{\"288\":1}}],[\"用文字的斜体显示\",{\"1\":{\"364\":1}}],[\"用于分布式系统的链路追踪\",{\"1\":{\"977\":1}}],[\"用于重做\",{\"1\":{\"968\":1}}],[\"用于回滚\",{\"1\":{\"968\":1}}],[\"用于控制对后端服务的请求流量\",{\"1\":{\"936\":1}}],[\"用于响应式环境\",{\"1\":{\"926\":1}}],[\"用于servlet环境\",{\"1\":{\"926\":1}}],[\"用于读取\",{\"1\":{\"916\":1}}],[\"用于获取查询参数\",{\"1\":{\"915\":1}}],[\"用于获取路径参数\",{\"1\":{\"915\":1}}],[\"用于处理web请求和响应\",{\"1\":{\"895\":1}}],[\"用于估计一个大规模集合中不重复元素的数量\",{\"1\":{\"822\":1}}],[\"用于统计一个集合中不重复的元素个数\",{\"1\":{\"822\":1}}],[\"用于在事务回滚时撤销对数据库的更改\",{\"1\":{\"802\":1}}],[\"用于在多个并发事务同时读写数据库时保持数据的一致性和隔离性\",{\"1\":{\"797\":1}}],[\"用于记录某行数据的多个版本的数据\",{\"1\":{\"776\":1}}],[\"用于指定资源被降级或熔断时的处理方法\",{\"1\":{\"963\":1}}],[\"用于指定查询的总次数\",{\"1\":{\"727\":1}}],[\"用于指定输出统计数据的周期\",{\"1\":{\"727\":1}}],[\"用于停止线程的机制\",{\"1\":{\"671\":1}}],[\"用于支持对元素自定义排序规则场景\",{\"1\":{\"626\":1}}],[\"用于保证元素的插入和取出满足fifo的场景\",{\"1\":{\"626\":1}}],[\"用于不需要保证元素插入和取出顺序场景\",{\"1\":{\"626\":1}}],[\"用于存储满足条件的三元组\",{\"1\":{\"494\":1}}],[\"用于语音合成器\",{\"1\":{\"466\":1}}],[\"用于表现两种或多种颜色的过渡转变\",{\"1\":{\"463\":1}}],[\"用于定义高斯函数的偏差值\",{\"1\":{\"463\":1}}],[\"用于自定义数据属性\",{\"1\":{\"461\":1}}],[\"用于音频播放\",{\"1\":{\"460\":1}}],[\"用于视频播放\",{\"1\":{\"460\":1}}],[\"用于提交表单数据的请求url\",{\"1\":{\"410\":1}}],[\"用于设置心跳间隔\",{\"1\":{\"970\":1}}],[\"用于设置空白处理\",{\"1\":{\"462\":1}}],[\"用于设置背景图片是否要平铺\",{\"1\":{\"399\":1}}],[\"用于设置元素的背景图片\",{\"1\":{\"398\":1}}],[\"用于设置文字溢出时的行为\",{\"1\":{\"462\":1}}],[\"用于设置文字的常规\",{\"1\":{\"364\":1}}],[\"用于设置文本的行高\",{\"1\":{\"365\":1}}],[\"用于查看指定目录或文件的磁盘空间使用情况\",{\"1\":{\"332\":1}}],[\"用于查看系统的磁盘空间使用情况\",{\"1\":{\"331\":1}}],[\"用于查看系统的内存使用情况\",{\"1\":{\"330\":1}}],[\"用于查看系统总共运行了多长时间\",{\"1\":{\"329\":1}}],[\"用于实时查看系统的\",{\"1\":{\"328\":1}}],[\"用得好\",{\"1\":{\"279\":1}}],[\"用得多\",{\"0\":{\"160\":1},\"1\":{\"97\":2,\"127\":1}}],[\"用头发挡脸\",{\"1\":{\"169\":1}}],[\"用的多\",{\"1\":{\"97\":1}}],[\"用光\",{\"1\":{\"18\":1}}],[\"构造器循环依赖\",{\"1\":{\"924\":1}}],[\"构造器注入是在创建bean时通过构造函数传递依赖对象\",{\"1\":{\"884\":1}}],[\"构造器注入\",{\"1\":{\"884\":1}}],[\"构造一个具有指定初始容量的空数组\",{\"1\":{\"623\":1}}],[\"构造方法可以传入boolean值\",{\"1\":{\"662\":1}}],[\"构造方法可以用synchronized修饰么\",{\"1\":{\"661\":1}}],[\"构造方法1\",{\"1\":{\"603\":1}}],[\"构造方法有哪些特点\",{\"0\":{\"603\":1}}],[\"构造函数中会做一些基本的初始化工作\",{\"1\":{\"926\":1}}],[\"构造函数和普通方法的字节码内容\",{\"1\":{\"681\":1}}],[\"构造函数来创建\",{\"1\":{\"664\":1}}],[\"构造函数\",{\"1\":{\"513\":1,\"516\":1,\"539\":1}}],[\"构建一个完整的对象依赖关系图谱\",{\"1\":{\"884\":1}}],[\"构建一个空的数组\",{\"1\":{\"623\":1}}],[\"构建出node对象\",{\"1\":{\"640\":1}}],[\"构建预览选择为标准\",{\"1\":{\"287\":1}}],[\"构建纵向上的空间关系\",{\"1\":{\"97\":1}}],[\"构思好拍摄角度\",{\"1\":{\"151\":1}}],[\"构图法则\",{\"1\":{\"278\":1}}],[\"构图取景上更加灵活\",{\"1\":{\"233\":1}}],[\"构图采用横构图+低角度拍摄\",{\"1\":{\"229\":1}}],[\"构图做到横平竖直\",{\"1\":{\"227\":1}}],[\"构图上规避杂乱\",{\"1\":{\"242\":1}}],[\"构图上多采用竖构图\",{\"1\":{\"234\":1}}],[\"构图上背景只带到树木的上半截\",{\"1\":{\"232\":1}}],[\"构图上可以把上半部分留空多一些\",{\"1\":{\"231\":1}}],[\"构图上可以只拍到红墙加光影半身构图\",{\"1\":{\"231\":1}}],[\"构图上\",{\"1\":{\"227\":1,\"233\":1}}],[\"构图上相对平稳\",{\"1\":{\"206\":1}}],[\"构图不能太紧\",{\"1\":{\"174\":1}}],[\"构图找好机位\",{\"1\":{\"149\":1}}],[\"构图参考\",{\"1\":{\"120\":1}}],[\"构图是表达情绪的一种手段\",{\"1\":{\"74\":1}}],[\"构图是有意识地突出主体\",{\"1\":{\"74\":1}}],[\"构图是在有意识地通过镜头组织画面中出现的要素\",{\"1\":{\"74\":1}}],[\"构图方法\",{\"0\":{\"52\":1,\"215\":1}}],[\"构图元素少一些\",{\"1\":{\"51\":1}}],[\"构图的基本原则\",{\"0\":{\"51\":1}}],[\"构图的简洁化及不同寻常的视角\",{\"1\":{\"34\":2}}],[\"构图美学\",{\"0\":{\"31\":1}}],[\"构图分类\",{\"1\":{\"20\":1}}],[\"构图\",{\"0\":{\"279\":1},\"1\":{\"18\":1,\"19\":1,\"120\":1,\"121\":1,\"123\":1,\"184\":1,\"264\":1,\"278\":1}}],[\"dns服务\",{\"1\":{\"971\":1}}],[\"dns解析\",{\"1\":{\"547\":1}}],[\"db\",{\"1\":{\"797\":3}}],[\"dml操作\",{\"1\":{\"789\":1}}],[\"drop\",{\"0\":{\"745\":1},\"1\":{\"745\":2,\"753\":4,\"756\":1,\"760\":1,\"789\":1,\"808\":1}}],[\"dashboard\",{\"1\":{\"738\":1}}],[\"data缓存和filter缓存\",{\"1\":{\"567\":1}}],[\"dataid\",{\"1\":{\"557\":1}}],[\"datagram\",{\"1\":{\"546\":1}}],[\"data中没有元素的数目为front\",{\"1\":{\"519\":1}}],[\"dataset\",{\"1\":{\"461\":1}}],[\"data\",{\"1\":{\"461\":2,\"513\":24,\"516\":24,\"517\":16,\"518\":15,\"519\":20,\"520\":22,\"522\":2,\"539\":18,\"682\":1}}],[\"data设置的属性可以在js的dom操作中通过dataset轻松获取到\",{\"1\":{\"461\":1}}],[\"datetime\",{\"1\":{\"751\":2}}],[\"date\",{\"1\":{\"461\":1,\"504\":1,\"505\":2,\"506\":1,\"513\":3,\"514\":1,\"516\":3,\"517\":1,\"522\":4,\"523\":3,\"539\":1,\"557\":1,\"807\":2}}],[\"dynamic\",{\"1\":{\"557\":1,\"751\":1}}],[\"dq\",{\"1\":{\"520\":8}}],[\"dpr\",{\"0\":{\"468\":1},\"1\":{\"468\":1}}],[\"dd>\",{\"1\":{\"406\":4}}],[\"dd\",{\"1\":{\"406\":3,\"557\":1}}],[\"dt>\",{\"1\":{\"406\":2}}],[\"dt\",{\"1\":{\"406\":2}}],[\"destruction\",{\"1\":{\"890\":1}}],[\"description\",{\"1\":{\"406\":1,\"504\":1,\"505\":2,\"506\":1,\"513\":3,\"514\":1,\"516\":3,\"517\":1,\"522\":4,\"523\":3,\"539\":1,\"919\":4}}],[\"dependency\",{\"1\":{\"884\":2}}],[\"depth\",{\"1\":{\"854\":1}}],[\"dept\",{\"1\":{\"796\":5}}],[\"debug\",{\"1\":{\"851\":1}}],[\"debug结构\",{\"1\":{\"851\":1}}],[\"debuginvocationhandler\",{\"1\":{\"588\":3}}],[\"decrement\",{\"1\":{\"817\":1}}],[\"decrby\",{\"1\":{\"817\":1}}],[\"decr\",{\"1\":{\"817\":1}}],[\"declare\",{\"1\":{\"807\":1}}],[\"decoration\",{\"0\":{\"355\":1},\"1\":{\"431\":1}}],[\"derived\",{\"1\":{\"796\":1}}],[\"defaultfallback\",{\"0\":{\"961\":1},\"1\":{\"961\":1,\"963\":1}}],[\"defaultproperties\",{\"0\":{\"961\":1},\"1\":{\"961\":1}}],[\"defaultsingletonbeanregistry\",{\"1\":{\"925\":1}}],[\"defaultthreadfactory\",{\"1\":{\"664\":1}}],[\"defaulted\",{\"1\":{\"645\":1}}],[\"default\",{\"1\":{\"644\":2,\"645\":3,\"751\":2,\"753\":2,\"808\":2,\"899\":3,\"952\":1}}],[\"definition\",{\"1\":{\"406\":3}}],[\"detailinfo\",{\"1\":{\"557\":2}}],[\"deque<>\",{\"1\":{\"520\":1}}],[\"deque<integer>\",{\"1\":{\"520\":1}}],[\"deque\",{\"1\":{\"520\":6,\"521\":5}}],[\"dequeue\",{\"1\":{\"506\":4,\"516\":4,\"517\":5,\"518\":3,\"519\":3,\"520\":3}}],[\"dely\",{\"1\":{\"842\":1}}],[\"delimiter\",{\"1\":{\"753\":4}}],[\"deletemapping\",{\"0\":{\"913\":1}}],[\"delete以及其他ddl语句\",{\"1\":{\"801\":1}}],[\"delete操作\",{\"1\":{\"788\":1}}],[\"delete语句时\",{\"1\":{\"785\":1}}],[\"delete\",{\"0\":{\"745\":1},\"1\":{\"745\":2,\"789\":1,\"916\":1}}],[\"deleteenum\",{\"1\":{\"575\":3}}],[\"deltotal\",{\"1\":{\"557\":1}}],[\"delnode\",{\"1\":{\"507\":5}}],[\"delay\",{\"1\":{\"456\":2,\"457\":3}}],[\"devicepixelratio获取当前屏幕的dpr值\",{\"1\":{\"468\":1}}],[\"degrees\",{\"1\":{\"454\":1}}],[\"deg\",{\"1\":{\"454\":4}}],[\"dl>\",{\"1\":{\"406\":2}}],[\"dl\",{\"1\":{\"406\":1}}],[\"dosome\",{\"1\":{\"664\":1}}],[\"done\",{\"1\":{\"557\":2}}],[\"do\",{\"1\":{\"557\":1}}],[\"double\",{\"1\":{\"505\":2,\"598\":1}}],[\"docreatebean\",{\"1\":{\"925\":1}}],[\"docker等容器化技术\",{\"1\":{\"566\":1}}],[\"doc\",{\"1\":{\"558\":3,\"561\":1}}],[\"document\",{\"1\":{\"461\":1}}],[\"doctype\",{\"1\":{\"358\":1,\"387\":3,\"416\":1,\"423\":1,\"425\":2,\"431\":3,\"436\":1,\"441\":1,\"442\":1,\"453\":1}}],[\"domain\",{\"1\":{\"562\":1}}],[\"dom\",{\"1\":{\"353\":1}}],[\"di\",{\"1\":{\"884\":1}}],[\"dirs\",{\"1\":{\"714\":1}}],[\"direction\",{\"0\":{\"441\":1},\"1\":{\"440\":1,\"441\":2,\"442\":1,\"443\":1,\"457\":3}}],[\"directory\",{\"1\":{\"331\":1,\"332\":1}}],[\"dictionary\",{\"1\":{\"563\":1}}],[\"distanceunit\",{\"1\":{\"824\":1}}],[\"distance=new\",{\"1\":{\"824\":1}}],[\"distance=\",{\"1\":{\"824\":1}}],[\"distance\",{\"1\":{\"824\":8}}],[\"discardoldestpolicy\",{\"1\":{\"664\":1}}],[\"discardpolicy\",{\"1\":{\"664\":1}}],[\"discovery\",{\"1\":{\"970\":1}}],[\"discovery的自动发现和master节点选举机制\",{\"1\":{\"564\":1}}],[\"discovery的组件来进行集群的自动发现和master节点选举\",{\"1\":{\"564\":1}}],[\"discovery中master节点选举的实现方式\",{\"1\":{\"564\":1}}],[\"disabled\",{\"1\":{\"373\":1}}],[\"dispatcherservlet将响应返回给客户端\",{\"1\":{\"895\":1}}],[\"dispatcherservlet会将模型数据传递给视图对象\",{\"1\":{\"895\":1}}],[\"dispatcherservlet会将请求转发给该处理器\",{\"1\":{\"895\":1}}],[\"dispatcherservlet接收到请求后\",{\"1\":{\"895\":1}}],[\"dispatcherservlet接收请求\",{\"1\":{\"895\":1}}],[\"dispatcherservlet\",{\"1\":{\"894\":1}}],[\"dispaly\",{\"1\":{\"353\":1}}],[\"display值为flow\",{\"1\":{\"465\":1}}],[\"display属性\",{\"0\":{\"379\":1}}],[\"display\",{\"1\":{\"349\":1,\"353\":1,\"358\":2,\"374\":1,\"379\":4,\"380\":1,\"396\":1,\"419\":1,\"431\":1,\"433\":1,\"436\":1,\"441\":1,\"442\":1,\"453\":1,\"463\":1}}],[\"div+div>p>span^^^^h1\",{\"1\":{\"414\":1}}],[\"div+div>p>span^h1\",{\"1\":{\"414\":1}}],[\"div+p+ul>li\",{\"1\":{\"414\":1}}],[\"div>h1+p\",{\"1\":{\"414\":1}}],[\"div>\",{\"1\":{\"358\":2,\"369\":1,\"371\":8,\"372\":1,\"373\":13,\"374\":2,\"377\":1,\"387\":4,\"410\":1,\"416\":1,\"423\":1,\"425\":5,\"431\":23,\"436\":4,\"441\":4,\"442\":6,\"453\":24,\"461\":1,\"463\":3}}],[\"div顶部对齐\",{\"1\":{\"349\":1}}],[\"div\",{\"1\":{\"348\":2,\"357\":1,\"369\":1,\"371\":2,\"372\":1,\"373\":1,\"378\":1,\"414\":1,\"423\":1}}],[\"durability\",{\"1\":{\"802\":1}}],[\"durability持久性\",{\"1\":{\"802\":1}}],[\"duration\",{\"1\":{\"456\":2,\"457\":3}}],[\"dump内存\",{\"1\":{\"737\":1}}],[\"dump之后通过mat检查是否存在大量由于反射生成的代理类\",{\"1\":{\"737\":1}}],[\"dump出堆文件\",{\"1\":{\"735\":1}}],[\"dump\",{\"1\":{\"729\":4}}],[\"dummyhead\",{\"1\":{\"504\":8,\"507\":4}}],[\"du\",{\"0\":{\"332\":1},\"1\":{\"332\":4}}],[\"df\",{\"0\":{\"331\":1},\"1\":{\"331\":2}}],[\"d\",{\"1\":{\"96\":1,\"299\":1,\"513\":2,\"516\":2,\"517\":2,\"518\":2,\"519\":2,\"520\":2,\"539\":2,\"557\":2}}],[\"褐色\",{\"1\":{\"96\":1,\"171\":1}}],[\"化妆及造型\",{\"0\":{\"124\":1}}],[\"化妆\",{\"1\":{\"95\":1}}],[\"沉着\",{\"1\":{\"93\":1}}],[\"沉默\",{\"1\":{\"93\":1,\"127\":1}}],[\"庄重\",{\"1\":{\"93\":1}}],[\"洁白\",{\"1\":{\"93\":1}}],[\"后来由阿里云继续维护和开发\",{\"1\":{\"974\":1}}],[\"后来者居上\",{\"1\":{\"347\":1}}],[\"后进先出\",{\"1\":{\"682\":1}}],[\"后进先出的栈相关的操作\",{\"1\":{\"521\":1}}],[\"后申请的线程可能会先获取到锁\",{\"1\":{\"660\":1}}],[\"后续对该文档的读取操作就能看到最近写入的变更\",{\"1\":{\"565\":1}}],[\"后依然没有收到回复\",{\"1\":{\"552\":1}}],[\"后局部\",{\"1\":{\"404\":1}}],[\"后面不能加聚合函数\",{\"1\":{\"746\":1}}],[\"后面的按正序排序就行了\",{\"1\":{\"497\":1}}],[\"后面学习了模块化打包工具会自动添加浏览器前缀\",{\"1\":{\"464\":1}}],[\"后面设置的生效\",{\"1\":{\"377\":1}}],[\"后面是具体要压缩文件\",{\"1\":{\"326\":1}}],[\"后代选择器\",{\"0\":{\"370\":1}}],[\"后退\",{\"1\":{\"93\":1}}],[\"后期ps\",{\"0\":{\"246\":1}}],[\"后期lr\",{\"0\":{\"245\":1}}],[\"后期\",{\"1\":{\"87\":1,\"171\":2}}],[\"坚定\",{\"1\":{\"93\":1,\"145\":1}}],[\"寒冷\",{\"1\":{\"93\":1}}],[\"抗拒\",{\"1\":{\"93\":1}}],[\"忧郁\",{\"1\":{\"93\":1}}],[\"专业\",{\"1\":{\"93\":1}}],[\"清理或复制工作\",{\"1\":{\"693\":1}}],[\"清理边界外所有的空间\",{\"1\":{\"691\":1}}],[\"清除和复制算法\",{\"1\":{\"693\":1}}],[\"清除或标记\",{\"1\":{\"692\":1}}],[\"清除算法\",{\"1\":{\"707\":1}}],[\"清除算法执行完成后\",{\"1\":{\"691\":1}}],[\"清除算法一样\",{\"1\":{\"691\":1}}],[\"清除算法的确可以应用在老年代中\",{\"1\":{\"691\":1}}],[\"清除\",{\"1\":{\"689\":1,\"691\":2}}],[\"清除浮动的方法\",{\"1\":{\"433\":1}}],[\"清除浮动的目的是\",{\"1\":{\"432\":1}}],[\"清除浮动后\",{\"1\":{\"433\":1}}],[\"清除浮动\",{\"0\":{\"433\":1}}],[\"清除默认样式\",{\"1\":{\"406\":1}}],[\"清晨\",{\"1\":{\"275\":1}}],[\"清冷\",{\"1\":{\"144\":1}}],[\"清新自然\",{\"1\":{\"142\":1}}],[\"清新\",{\"1\":{\"93\":1}}],[\"清爽\",{\"1\":{\"93\":1,\"127\":1}}],[\"清晰度\",{\"1\":{\"288\":1}}],[\"清晰\",{\"1\":{\"12\":1}}],[\"腐烂\",{\"1\":{\"93\":1}}],[\"病态\",{\"1\":{\"93\":1}}],[\"冰冷\",{\"1\":{\"93\":1}}],[\"深度分页与scroll\",{\"1\":{\"567\":1}}],[\"深度优先搜索和广度优先搜索\",{\"0\":{\"537\":1}}],[\"深入理解pixel\",{\"0\":{\"468\":1}}],[\"深入理解bfc\",{\"0\":{\"465\":1}}],[\"深色的背景相较亮色的背景更容易拍出暗调的片子\",{\"1\":{\"259\":1}}],[\"深色裙子\",{\"1\":{\"127\":1}}],[\"深红色\",{\"1\":{\"96\":1}}],[\"深绿色\",{\"1\":{\"96\":1}}],[\"深不可测\",{\"1\":{\"93\":1}}],[\"深沉\",{\"1\":{\"93\":3}}],[\"健康检查\",{\"1\":{\"971\":1}}],[\"健康\",{\"1\":{\"93\":1}}],[\"活泼\",{\"1\":{\"93\":1,\"142\":1}}],[\"轻量级锁采用的是自旋锁\",{\"1\":{\"672\":1}}],[\"轻量级锁\",{\"1\":{\"661\":2,\"672\":2}}],[\"轻薄粉底或素颜\",{\"1\":{\"124\":1}}],[\"轻松的\",{\"1\":{\"121\":1}}],[\"轻松\",{\"1\":{\"93\":1}}],[\"轻蔑\",{\"1\":{\"34\":1}}],[\"暴打mysql\",{\"1\":{\"837\":1}}],[\"暴力法\",{\"0\":{\"490\":1}}],[\"暴力\",{\"1\":{\"93\":1}}],[\"暴龙户外照明\",{\"1\":{\"85\":1}}],[\"疯狂\",{\"1\":{\"93\":1}}],[\"压根不生效\",{\"1\":{\"392\":1}}],[\"压缩率就会越高\",{\"1\":{\"872\":1}}],[\"压缩比高\",{\"1\":{\"872\":1}}],[\"压缩链表获取链表长度时不用再遍历整个链表\",{\"1\":{\"853\":1}}],[\"压缩算法的\",{\"1\":{\"709\":1}}],[\"压缩算法的最终效果等同于标记\",{\"1\":{\"691\":1}}],[\"压缩算法要低于复制算法\",{\"1\":{\"691\":1}}],[\"压缩\",{\"1\":{\"691\":2}}],[\"压缩与优化\",{\"1\":{\"563\":1}}],[\"压缩解压缩\",{\"1\":{\"544\":1}}],[\"压缩名称在前\",{\"1\":{\"326\":1}}],[\"压缩文件\",{\"1\":{\"326\":1}}],[\"压缩的文件列表\",{\"1\":{\"326\":1}}],[\"压迫\",{\"1\":{\"279\":1}}],[\"压迫感\",{\"1\":{\"33\":1}}],[\"压暗该压暗的地方\",{\"1\":{\"255\":1}}],[\"压抑等情感时\",{\"1\":{\"133\":1}}],[\"压抑\",{\"1\":{\"93\":2}}],[\"血腥\",{\"1\":{\"93\":1}}],[\"危险\",{\"1\":{\"93\":1,\"279\":1}}],[\"喜庆\",{\"1\":{\"93\":1}}],[\"暧昧\",{\"1\":{\"93\":1}}],[\"退缩\",{\"1\":{\"93\":1}}],[\"内置的限流过滤器是基于令牌桶算法或漏桶算法实现的\",{\"1\":{\"936\":1}}],[\"内置了多种优化过后的数据类型\",{\"1\":{\"814\":1}}],[\"内部维护一个固定长度\",{\"1\":{\"822\":1}}],[\"内部的核心类库\",{\"1\":{\"714\":1}}],[\"内部样式\",{\"1\":{\"347\":2}}],[\"内边距padding\",{\"0\":{\"385\":1}}],[\"内边距\",{\"1\":{\"383\":1,\"392\":1}}],[\"内容相同的字符串\",{\"1\":{\"611\":1}}],[\"内容为\",{\"1\":{\"610\":1}}],[\"内容被正式写入新的段\",{\"1\":{\"561\":1}}],[\"内容如下\",{\"1\":{\"557\":1}}],[\"内容元素\",{\"1\":{\"459\":1}}],[\"内容有行高\",{\"1\":{\"458\":1}}],[\"内容撑起来高度\",{\"1\":{\"458\":1}}],[\"内容width\",{\"0\":{\"384\":1}}],[\"内容\",{\"1\":{\"383\":1,\"392\":1,\"414\":1}}],[\"内容不要彩页或图案\",{\"1\":{\"126\":1}}],[\"内联样式\",{\"1\":{\"377\":1}}],[\"内存中申请一块内存空间\",{\"1\":{\"890\":1}}],[\"内存中的变更会被刷入新的段并使之可搜索\",{\"1\":{\"565\":1}}],[\"内存中的未持久化数据不会丢失\",{\"1\":{\"561\":1}}],[\"内存淘汰机制了解么\",{\"0\":{\"830\":1}}],[\"内存优化\",{\"1\":{\"822\":1}}],[\"内存的访问速度是磁盘的上千倍\",{\"1\":{\"814\":1}}],[\"内存重分配\",{\"1\":{\"738\":1}}],[\"内存占用等信息\",{\"1\":{\"738\":1}}],[\"内存占用等\",{\"1\":{\"738\":1}}],[\"内存泄露问题\",{\"1\":{\"663\":1}}],[\"内存栅障\",{\"1\":{\"659\":1}}],[\"内存屏障之后的所有读操作都能获得内存屏障之前的所有写操作的最新结果\",{\"1\":{\"659\":1}}],[\"内存屏障之前的所有写操作都要回写到主内存\",{\"1\":{\"659\":1}}],[\"内存屏障其实就是一种jvm指令\",{\"1\":{\"659\":1}}],[\"内存屏障\",{\"0\":{\"659\":1},\"1\":{\"590\":1,\"658\":1,\"659\":1}}],[\"内存操作\",{\"1\":{\"590\":1}}],[\"内存和存储\",{\"1\":{\"567\":1}}],[\"内存缓冲区中的数据将被清空\",{\"1\":{\"561\":1}}],[\"内存缓冲\",{\"1\":{\"561\":1}}],[\"内存\",{\"1\":{\"328\":1,\"521\":2,\"727\":1}}],[\"内存使用率\",{\"1\":{\"328\":1}}],[\"内景较外景更容易拍出暗调的片子\",{\"1\":{\"259\":1}}],[\"内在束缚\",{\"1\":{\"127\":1}}],[\"内在情感的统一\",{\"0\":{\"30\":1}}],[\"内敛\",{\"1\":{\"93\":1}}],[\"热点规则\",{\"1\":{\"964\":1}}],[\"热烈\",{\"1\":{\"93\":1}}],[\"热情\",{\"1\":{\"14\":1,\"92\":1,\"93\":2}}],[\"温柔\",{\"1\":{\"93\":1,\"125\":1,\"144\":1}}],[\"温暖\",{\"1\":{\"93\":1}}],[\"阳光通过大树就能产生斑波的光影感\",{\"1\":{\"231\":1}}],[\"阳光\",{\"1\":{\"93\":1}}],[\"青\",{\"1\":{\"282\":2}}],[\"青春\",{\"1\":{\"142\":1}}],[\"青春片具有相对高饱和或高明度的特点\",{\"1\":{\"92\":1}}],[\"青春片常用的影调效果\",{\"1\":{\"84\":1}}],[\"青色和蓝色混合就是青蓝色\",{\"1\":{\"284\":1}}],[\"青色\",{\"1\":{\"93\":1,\"96\":1}}],[\"波长短\",{\"1\":{\"93\":1}}],[\"波长长\",{\"1\":{\"93\":1}}],[\"黄\",{\"1\":{\"97\":1,\"282\":2}}],[\"黄色与绿色混合就是黄绿色\",{\"1\":{\"284\":1}}],[\"黄色和蓝色为互补色\",{\"1\":{\"283\":1}}],[\"黄色\",{\"1\":{\"93\":2,\"96\":1}}],[\"黄金螺旋线\",{\"1\":{\"279\":1}}],[\"黄金分割线位置也不同\",{\"1\":{\"279\":1}}],[\"黄金分割点\",{\"1\":{\"54\":1}}],[\"黄金时刻\",{\"1\":{\"81\":1}}],[\"暖色调\",{\"1\":{\"93\":1}}],[\"暖色\",{\"1\":{\"93\":1}}],[\"暖调\",{\"1\":{\"84\":1,\"259\":1,\"278\":1}}],[\"缺少bottom\",{\"1\":{\"385\":1}}],[\"缺少left\",{\"1\":{\"385\":2}}],[\"缺少光泽和明亮的调子\",{\"1\":{\"92\":1}}],[\"缺点\",{\"1\":{\"76\":2,\"503\":1,\"585\":1,\"637\":2,\"672\":1,\"689\":1,\"690\":1,\"691\":1,\"693\":1,\"707\":1,\"792\":1,\"793\":2,\"801\":1,\"833\":1,\"942\":2}}],[\"通知到所有带有\",{\"1\":{\"972\":1}}],[\"通知所有rm提交分支事务\",{\"1\":{\"968\":1}}],[\"通知所有\",{\"1\":{\"967\":1}}],[\"通知\",{\"1\":{\"967\":1}}],[\"通知了\",{\"1\":{\"671\":3}}],[\"通用的注解\",{\"1\":{\"905\":1}}],[\"通俗理解\",{\"1\":{\"744\":2,\"890\":2}}],[\"通信\",{\"1\":{\"564\":1,\"953\":1}}],[\"通配选择器\",{\"1\":{\"377\":1}}],[\"通常嵌入在应用服务中\",{\"1\":{\"968\":1}}],[\"通常为数据库的默认隔离级别\",{\"1\":{\"899\":1}}],[\"通常为\",{\"1\":{\"822\":1}}],[\"通常\",{\"1\":{\"804\":1}}],[\"通常表示为\",{\"1\":{\"714\":1}}],[\"通常被用于暂停执行\",{\"1\":{\"653\":1}}],[\"通常被用于线程间交互\",{\"1\":{\"653\":1}}],[\"通常被认为总是相同的大小\",{\"1\":{\"467\":1}}],[\"通常是通过threadlocal或者其他语言特性的上下文传播机制\",{\"1\":{\"977\":1}}],[\"通常是轮询或基于权重选择\",{\"1\":{\"975\":1}}],[\"通常是基于内存的高性能数据存储方案\",{\"1\":{\"971\":1}}],[\"通常是在初始化客户端时通过\",{\"1\":{\"970\":1}}],[\"通常是周期性的\",{\"1\":{\"970\":1}}],[\"通常是一个jsp\",{\"1\":{\"895\":1}}],[\"通常是浏览器\",{\"1\":{\"895\":1}}],[\"通常是非聚簇索引\",{\"1\":{\"793\":1}}],[\"通常是现场时间的业务对象\",{\"1\":{\"743\":1}}],[\"通常是\",{\"1\":{\"564\":1}}],[\"通常会有一个全局的版本分配器来为每一行数据设置版本号\",{\"1\":{\"776\":1}}],[\"通常会和两个属性一起使用\",{\"1\":{\"463\":1}}],[\"通常会影响到标准流中其他元素的定位效果\",{\"1\":{\"422\":1}}],[\"通常用来表示一个打印图像或者显示器上像素的密度\",{\"1\":{\"468\":1}}],[\"通常用来设置一些元素的尺寸或者位置\",{\"1\":{\"463\":1}}],[\"通常用于应用启动后的额外初始化任务\",{\"1\":{\"926\":1}}],[\"通常用于计算元素的大小或位置\",{\"1\":{\"463\":1}}],[\"通常用于html和js数据之间的传递\",{\"1\":{\"461\":1}}],[\"通常用于元素和元素之间的间距\",{\"1\":{\"387\":1}}],[\"通常用于设置边框和内容之间的间距\",{\"1\":{\"385\":1}}],[\"通常我们使用flexbox来进行布局的方案称之为flex布局\",{\"1\":{\"435\":1}}],[\"通常在head元素中\",{\"1\":{\"351\":1}}],[\"通常使用小抓手\",{\"1\":{\"290\":1}}],[\"通常应用在地平线\",{\"1\":{\"217\":1}}],[\"通常具有饱和度相对较低\",{\"1\":{\"92\":1}}],[\"通过定时任务在业务不繁忙的时候做数据兜底\",{\"1\":{\"984\":1}}],[\"通过grpc或者http等方式发送给oap服务器\",{\"1\":{\"977\":1}}],[\"通过gcviewer或者\",{\"1\":{\"735\":1}}],[\"通过健康检查插件可以检测服务实例的实际健康状况\",{\"1\":{\"971\":1}}],[\"通过集成nacos\",{\"1\":{\"971\":1}}],[\"通过集成的\",{\"1\":{\"970\":1}}],[\"通过两阶段提交\",{\"1\":{\"968\":1}}],[\"通过ribbon\",{\"1\":{\"953\":1}}],[\"通过redisson新建出来的锁key\",{\"1\":{\"842\":1}}],[\"通过调用\",{\"1\":{\"926\":1}}],[\"通过三级缓存机制巧妙地解决了setter注入的循环依赖问题\",{\"1\":{\"924\":1}}],[\"通过注解或者一些简单的配置就能在spring\",{\"1\":{\"922\":1}}],[\"通过处理器映射器\",{\"1\":{\"895\":1}}],[\"通过修改其字节码生成子类来处理\",{\"1\":{\"892\":1}}],[\"通过实现initializingbean和disposablebean接口\",{\"1\":{\"890\":1}}],[\"通过xml或注解配置\",{\"1\":{\"885\":1}}],[\"通过以上的方式\",{\"1\":{\"977\":1}}],[\"通过以上机制\",{\"1\":{\"884\":1}}],[\"通过以上步骤\",{\"1\":{\"738\":1}}],[\"通过<bean>标签或\",{\"1\":{\"884\":1}}],[\"通过地方查找附近\",{\"1\":{\"824\":1}}],[\"通过经度\",{\"1\":{\"824\":1}}],[\"通过公式转换\",{\"1\":{\"822\":1}}],[\"通过sorted\",{\"1\":{\"815\":1}}],[\"通过select\",{\"1\":{\"789\":1}}],[\"通过约束\",{\"1\":{\"802\":1}}],[\"通过创建唯一性索引\",{\"1\":{\"792\":1}}],[\"通过事务的可见性来保证事务能看到自己应该看到的版本\",{\"1\":{\"776\":1}}],[\"通过栈信息我们可以知道线程在执行哪个方法或代码块\",{\"1\":{\"738\":1}}],[\"通过jmap命令\",{\"1\":{\"737\":1}}],[\"通过thread类自带的中断api方法实现\",{\"1\":{\"671\":1}}],[\"通过threadpoolexecutor\",{\"1\":{\"664\":1}}],[\"通过atomicboolean\",{\"1\":{\"671\":1}}],[\"通过volatile变量实现\",{\"1\":{\"671\":1}}],[\"通过检查中断标志位\",{\"1\":{\"671\":1}}],[\"通过原子方式用新值\",{\"1\":{\"669\":1}}],[\"通过版本号机制或cas算法实现\",{\"1\":{\"669\":1}}],[\"通过一个计数器实现\",{\"1\":{\"667\":1}}],[\"通过cas完成对state值的修改\",{\"1\":{\"665\":1}}],[\"通过内置的\",{\"1\":{\"665\":1}}],[\"通过内置的fifo队列来完成资源获取线程的排队工作\",{\"1\":{\"665\":1}}],[\"通过executor框架的工具类executors来创建\",{\"1\":{\"664\":1}}],[\"通过这种方式\",{\"1\":{\"895\":1,\"968\":1}}],[\"通过这样的设计\",{\"1\":{\"822\":1}}],[\"通过这样的结构\",{\"1\":{\"563\":1}}],[\"通过这些内存屏障指令\",{\"1\":{\"659\":1}}],[\"通过hash算法变成固定长度的输出\",{\"1\":{\"638\":1}}],[\"通过http\",{\"1\":{\"561\":1}}],[\"通过使用继承\",{\"1\":{\"604\":1}}],[\"通过继承实现\",{\"1\":{\"589\":1}}],[\"通过接口实现\",{\"1\":{\"589\":1}}],[\"通过类加载器xxxclassloader\",{\"1\":{\"586\":1}}],[\"通过对象实例instance\",{\"1\":{\"586\":1}}],[\"通过分析慢查询日志\",{\"1\":{\"566\":1}}],[\"通过添加更多的节点到集群中\",{\"1\":{\"566\":1}}],[\"通过npm包管理下载less工具\",{\"1\":{\"469\":1}}],[\"通过预处理器自己独有的语法\",{\"1\":{\"469\":1}}],[\"通过\",{\"1\":{\"466\":1,\"550\":1,\"588\":1,\"737\":1,\"884\":1,\"923\":3,\"963\":1}}],[\"通过子元素\",{\"1\":{\"430\":1}}],[\"通过济南项目的历练\",{\"1\":{\"308\":1}}],[\"通过肢体语言表达作者的意图\",{\"1\":{\"147\":1}}],[\"通过改变外在的因素来控制色彩的变化\",{\"1\":{\"87\":1}}],[\"通过控制距离关系控制光比\",{\"1\":{\"79\":1}}],[\"呈现出的视觉感受\",{\"1\":{\"92\":1}}],[\"隐藏事务id已经创建了\",{\"1\":{\"797\":1}}],[\"隐藏事务id\",{\"1\":{\"797\":1}}],[\"隐藏字段\",{\"1\":{\"776\":1,\"797\":2}}],[\"隐藏在对象内部\",{\"1\":{\"604\":1}}],[\"隐藏元素\",{\"1\":{\"379\":1}}],[\"隐退感\",{\"1\":{\"92\":1}}],[\"隐喻\",{\"1\":{\"19\":1,\"191\":1}}],[\"萧瑟\",{\"1\":{\"92\":1}}],[\"颓废\",{\"1\":{\"92\":1,\"143\":1}}],[\"浓烈\",{\"1\":{\"92\":1}}],[\"彩度\",{\"1\":{\"92\":1}}],[\"彩色影调\",{\"1\":{\"84\":1}}],[\"饱和度越低\",{\"1\":{\"92\":1}}],[\"饱和度越高\",{\"1\":{\"92\":1}}],[\"饱和度取决于该色中含色成分和消色成分\",{\"1\":{\"92\":1}}],[\"饱和度\",{\"0\":{\"92\":1},\"1\":{\"288\":1,\"290\":1,\"291\":1}}],[\"是资源管理器\",{\"1\":{\"968\":1}}],[\"是全局事务的发起者\",{\"1\":{\"968\":1}}],[\"是全部都增加\",{\"1\":{\"288\":1}}],[\"是固定窗口计数器的升级版\",{\"1\":{\"947\":1}}],[\"是对try阶段预留资源的释放\",{\"1\":{\"942\":1}}],[\"是对dt的描述\",{\"1\":{\"406\":1}}],[\"是应用层的两阶段提交\",{\"1\":{\"942\":1}}],[\"是个工厂\",{\"1\":{\"927\":1}}],[\"是如何实现自动装配的\",{\"0\":{\"923\":1}}],[\"是如下方法计算高度的\",{\"1\":{\"465\":1}}],[\"是我们存在于时间之内\",{\"1\":{\"919\":1}}],[\"是rest风格的控制器\",{\"1\":{\"906\":1}}],[\"是基于动态代理的\",{\"1\":{\"892\":1}}],[\"是spring\",{\"1\":{\"927\":1}}],[\"是spring提供的注解\",{\"1\":{\"888\":1}}],[\"是spring框架的核心特性之一\",{\"1\":{\"884\":1}}],[\"是ziplist和linkedlist的结合体\",{\"1\":{\"854\":1}}],[\"是保证最终一致性的解决方案\",{\"1\":{\"846\":1}}],[\"是肯定无\",{\"1\":{\"833\":1}}],[\"是可能有\",{\"1\":{\"833\":1}}],[\"是除了system与const之外最好的join方式\",{\"1\":{\"796\":1}}],[\"是const的一种特例\",{\"1\":{\"796\":1}}],[\"是cpu或编译器在对内存随机访问的操作中的一个同步点\",{\"1\":{\"659\":1}}],[\"是查询中select\",{\"1\":{\"796\":1}}],[\"是当今收集器技术发展的最前沿成果之一\",{\"1\":{\"708\":1}}],[\"是在线程创建时创建\",{\"1\":{\"682\":1}}],[\"是不占用空间的\",{\"1\":{\"764\":1}}],[\"是不一样的\",{\"1\":{\"681\":1}}],[\"是不是就立刻停止\",{\"1\":{\"671\":1}}],[\"是线程私有的\",{\"1\":{\"680\":1,\"682\":1}}],[\"是什么\",{\"0\":{\"864\":1},\"1\":{\"670\":1,\"671\":1,\"822\":1,\"823\":1,\"833\":1,\"836\":1,\"837\":1,\"857\":1}}],[\"是用来构建锁或者其它同步器组件的重量级基础框架及整个juc体系的基石\",{\"1\":{\"665\":1}}],[\"是强引用\",{\"1\":{\"663\":1}}],[\"是api层面的锁\",{\"1\":{\"662\":1}}],[\"是关键字属于jvm层面\",{\"1\":{\"662\":1}}],[\"是java虚拟机提供的轻量级同步机制\",{\"1\":{\"658\":1}}],[\"是让当前线程暂停执行\",{\"1\":{\"655\":1}}],[\"是让获得对象锁的线程实现等待\",{\"1\":{\"654\":1}}],[\"是thread类的静态本地方法\",{\"1\":{\"653\":1}}],[\"是为了保证n\",{\"1\":{\"632\":1}}],[\"是为了减少hash碰撞\",{\"1\":{\"632\":1}}],[\"是直接追加到末尾\",{\"1\":{\"622\":1}}],[\"是直接创建的字符串字面量\",{\"1\":{\"611\":1}}],[\"是由两个字符串字面量\",{\"1\":{\"611\":1}}],[\"是由最底层的块上边缘和最底层块盒子的下边缘之间的距离\",{\"1\":{\"465\":1}}],[\"是通过\",{\"1\":{\"611\":3}}],[\"是索引的基本单位\",{\"1\":{\"563\":1}}],[\"是面向报文的\",{\"1\":{\"550\":1}}],[\"是面向字节流的\",{\"1\":{\"550\":1}}],[\"是无状态服务\",{\"1\":{\"550\":1}}],[\"是\",{\"1\":{\"522\":4,\"842\":1,\"972\":1}}],[\"是整个数据结构存储的所有其他数据\",{\"1\":{\"522\":1}}],[\"是双端队列的意思\",{\"1\":{\"521\":1}}],[\"是发动机这个类的对象\",{\"1\":{\"521\":1}}],[\"是有能力在数组中的任何位置添加或删除元素的\",{\"1\":{\"521\":1}}],[\"是的\",{\"1\":{\"521\":1}}],[\"是新的方法\",{\"1\":{\"520\":2}}],[\"是最简单的动态数据结构\",{\"1\":{\"502\":1}}],[\"是指被ioc容器所管理的对象\",{\"1\":{\"885\":1}}],[\"是指算法需要消耗的内存空间\",{\"1\":{\"485\":1}}],[\"是指执行算法所需要的计算工作量\",{\"1\":{\"484\":1}}],[\"是一种分布式唯一id生成算法\",{\"1\":{\"938\":1}}],[\"是一种数据集\",{\"1\":{\"822\":1}}],[\"是一种数据同步技术\",{\"1\":{\"800\":1}}],[\"是一定要满足的\",{\"1\":{\"933\":1}}],[\"是一款基于region内存布局的\",{\"1\":{\"709\":1}}],[\"是一类同步屏障指令\",{\"1\":{\"659\":1}}],[\"是一门css扩展语言\",{\"1\":{\"469\":1}}],[\"是一个开源的可观测性平台\",{\"1\":{\"977\":1}}],[\"是一个特殊的bean\",{\"1\":{\"927\":1}}],[\"是一个非常小的内存空间\",{\"1\":{\"680\":1}}],[\"是一个提供开发和执行\",{\"1\":{\"594\":1}}],[\"是一个\",{\"1\":{\"521\":1}}],[\"是一个能大幅度提高前端开发效率的一个工具\",{\"1\":{\"413\":1}}],[\"是一个缩写属性\",{\"1\":{\"366\":1}}],[\"是行高的顶部和底部的距离\",{\"1\":{\"465\":1}}],[\"是形变的意思\",{\"1\":{\"454\":1}}],[\"是flex\",{\"1\":{\"452\":1}}],[\"是单行还是多行\",{\"1\":{\"442\":1}}],[\"是父元素中的第奇数个子元素\",{\"1\":{\"373\":1}}],[\"是父元素中的第偶数个子元素\",{\"1\":{\"373\":1}}],[\"是选择父元素中的第一个子元素\",{\"1\":{\"373\":1}}],[\"是选择器的一种\",{\"1\":{\"373\":1}}],[\"是已中性灰为界限\",{\"1\":{\"288\":1}}],[\"是人物想与外界产生对话的重要媒介\",{\"1\":{\"127\":1}}],[\"是否满足某些条件等来决定是否自动配置某个组件\",{\"1\":{\"923\":1}}],[\"是否存在某个bean\",{\"1\":{\"923\":1}}],[\"是否支持mvcc\",{\"1\":{\"765\":1}}],[\"是否支持外键\",{\"1\":{\"765\":1}}],[\"是否支持事务\",{\"1\":{\"765\":1}}],[\"是否支持快速随机访问\",{\"1\":{\"622\":1}}],[\"是否支撑行级锁\",{\"1\":{\"765\":1}}],[\"是否是同时执行\",{\"1\":{\"650\":1}}],[\"是否线程安全\",{\"1\":{\"622\":1}}],[\"是否可以被重写\",{\"0\":{\"603\":1}}],[\"是否可靠传输\",{\"1\":{\"550\":1}}],[\"是否提供广播或多播服务\",{\"1\":{\"550\":1}}],[\"是否有状态\",{\"1\":{\"550\":1}}],[\"是否面向连接\",{\"1\":{\"550\":1}}],[\"是否自动播放\",{\"1\":{\"460\":1}}],[\"是否需要预加载视频\",{\"1\":{\"460\":2}}],[\"是否需要俯仰机位来规避杂乱的环境\",{\"1\":{\"46\":1}}],[\"是否静音播放\",{\"1\":{\"460\":2}}],[\"是否视频自动播放\",{\"1\":{\"460\":1}}],[\"是否显示控制栏\",{\"1\":{\"460\":2}}],[\"是否开放\",{\"1\":{\"121\":1}}],[\"是否与服装匹配\",{\"1\":{\"120\":1}}],[\"是洋红色\",{\"1\":{\"88\":1}}],[\"是黄色\",{\"1\":{\"88\":1}}],[\"是青色\",{\"1\":{\"88\":1}}],[\"=oom\",{\"1\":{\"680\":1}}],[\"=name\",{\"1\":{\"603\":1}}],[\"=null\",{\"1\":{\"507\":1}}],[\"=10\",{\"1\":{\"599\":1,\"600\":1}}],[\"=16\",{\"1\":{\"596\":1}}],[\"=e\",{\"1\":{\"517\":1}}],[\"=6\",{\"1\":{\"507\":1}}],[\"=0\",{\"1\":{\"506\":1}}],[\"===========================\",{\"1\":{\"667\":1}}],[\"===\",{\"1\":{\"658\":1}}],[\"==和equals的区别\",{\"0\":{\"606\":1}}],[\"==\",{\"1\":{\"490\":1,\"494\":4,\"497\":1,\"504\":2,\"506\":4,\"507\":6,\"509\":2,\"513\":7,\"514\":6,\"516\":8,\"517\":7,\"518\":4,\"519\":4,\"520\":11,\"539\":5,\"582\":1,\"606\":3,\"611\":10,\"670\":1}}],[\"=ο\",{\"1\":{\"484\":1}}],[\"=\",{\"0\":{\"610\":1,\"961\":1},\"1\":{\"88\":1,\"282\":3,\"347\":1,\"393\":1,\"423\":1,\"425\":1,\"430\":1,\"461\":1,\"489\":4,\"491\":2,\"493\":2,\"494\":5,\"497\":10,\"504\":32,\"505\":9,\"506\":18,\"507\":30,\"509\":12,\"513\":23,\"514\":11,\"516\":23,\"517\":20,\"518\":23,\"519\":26,\"520\":31,\"521\":2,\"522\":18,\"523\":11,\"527\":5,\"528\":6,\"531\":3,\"532\":3,\"539\":15,\"573\":1,\"575\":2,\"579\":2,\"582\":2,\"586\":3,\"587\":13,\"588\":3,\"596\":3,\"599\":3,\"606\":4,\"609\":2,\"610\":1,\"611\":6,\"623\":3,\"633\":1,\"644\":7,\"645\":5,\"658\":1,\"663\":12,\"664\":6,\"666\":2,\"667\":6,\"668\":2,\"669\":1,\"670\":20,\"671\":15,\"720\":1,\"751\":5,\"753\":4,\"794\":2,\"798\":1,\"807\":2,\"822\":5,\"824\":9,\"833\":1,\"840\":1,\"842\":2,\"872\":4,\"889\":1,\"896\":1,\"915\":2,\"919\":1,\"951\":2,\"960\":2,\"961\":1,\"963\":2,\"982\":3}}],[\"蓝原色\",{\"1\":{\"295\":1}}],[\"蓝+绿\",{\"1\":{\"282\":1}}],[\"蓝色和洋红色混合就是蓝紫色\",{\"1\":{\"284\":1}}],[\"蓝色\",{\"1\":{\"88\":1,\"93\":2,\"96\":1,\"281\":1}}],[\"蓝\",{\"1\":{\"88\":2,\"282\":1,\"289\":1}}],[\"蓝调\",{\"1\":{\"84\":1}}],[\"蓝调时刻\",{\"1\":{\"81\":2}}],[\"绿原色\",{\"1\":{\"295\":1}}],[\"绿色和青色混合就是青绿色\",{\"1\":{\"284\":1}}],[\"绿色和洋红色为互补色\",{\"1\":{\"283\":1}}],[\"绿色\",{\"1\":{\"88\":1,\"93\":2,\"96\":2,\"281\":1}}],[\"绿\",{\"0\":{\"106\":1},\"1\":{\"88\":2,\"97\":1,\"282\":1,\"289\":1}}],[\"绿调\",{\"1\":{\"84\":1}}],[\"红黑树\",{\"1\":{\"620\":1,\"621\":1}}],[\"红黑数\",{\"1\":{\"539\":1}}],[\"红原色\",{\"1\":{\"295\":1}}],[\"红+蓝\",{\"1\":{\"282\":1}}],[\"红+绿+蓝=白色\",{\"1\":{\"282\":1}}],[\"红+绿\",{\"1\":{\"97\":1,\"282\":1}}],[\"红墙拍摄\",{\"0\":{\"231\":1}}],[\"红绳都是挂在高出的\",{\"1\":{\"229\":1}}],[\"红绳许愿墙\",{\"0\":{\"229\":1}}],[\"红绿蓝\",{\"1\":{\"96\":1}}],[\"红色和黄色混合就是橙色\",{\"1\":{\"284\":1}}],[\"红色和青色为互补色\",{\"1\":{\"283\":1}}],[\"红色+蓝色\",{\"0\":{\"105\":1}}],[\"红色\",{\"1\":{\"88\":1,\"93\":2,\"96\":2,\"281\":1}}],[\"红\",{\"0\":{\"106\":1},\"1\":{\"88\":2,\"282\":1}}],[\"红黄蓝\",{\"1\":{\"88\":1}}],[\"红调\",{\"1\":{\"84\":1}}],[\"天才基本法\",{\"1\":{\"919\":1}}],[\"天安门\",{\"1\":{\"824\":5}}],[\"天气\",{\"1\":{\"87\":1,\"95\":1}}],[\"天空呈现蓝紫色\",{\"1\":{\"81\":1}}],[\"场地及元素解读\",{\"1\":{\"127\":1}}],[\"场地情感表达\",{\"1\":{\"123\":1}}],[\"场地\",{\"0\":{\"116\":1},\"1\":{\"112\":1,\"120\":1,\"127\":1}}],[\"场地选择河边\",{\"1\":{\"127\":1}}],[\"场地选择\",{\"1\":{\"87\":1}}],[\"场景选择\",{\"1\":{\"259\":1}}],[\"场景五\",{\"1\":{\"233\":1}}],[\"场景四\",{\"1\":{\"233\":1}}],[\"场景三\",{\"1\":{\"233\":1}}],[\"场景二\",{\"1\":{\"233\":1}}],[\"场景一\",{\"1\":{\"233\":1}}],[\"场景实操\",{\"0\":{\"226\":1}}],[\"场景情绪与人物情绪的冲突\",{\"1\":{\"212\":1}}],[\"场景中出现的元素色彩的和谐\",{\"1\":{\"148\":1}}],[\"场景中的色彩密切相关\",{\"1\":{\"84\":1}}],[\"场景参考\",{\"1\":{\"120\":1}}],[\"场景的构建\",{\"1\":{\"93\":1}}],[\"场景\",{\"1\":{\"28\":1,\"127\":1,\"154\":1,\"189\":1}}],[\"场景设定\",{\"1\":{\"14\":1}}],[\"白\",{\"1\":{\"279\":1}}],[\"白衬衫\",{\"1\":{\"127\":1}}],[\"白平衡偏移\",{\"1\":{\"101\":1}}],[\"白平衡\",{\"1\":{\"87\":1}}],[\"白色色阶比高光范围更大\",{\"1\":{\"288\":1}}],[\"白色色阶\",{\"1\":{\"288\":1}}],[\"白色\",{\"1\":{\"85\":1,\"88\":1,\"93\":1}}],[\"白色主导\",{\"1\":{\"84\":1}}],[\"四个方法\",{\"1\":{\"925\":1}}],[\"四次挥手\",{\"1\":{\"552\":1}}],[\"四层模型是什么\",{\"0\":{\"545\":1}}],[\"四看自己\",{\"1\":{\"299\":1}}],[\"四周是水面\",{\"1\":{\"127\":1}}],[\"四\",{\"0\":{\"86\":1,\"263\":1},\"1\":{\"454\":1}}],[\"四季更迭\",{\"1\":{\"17\":1}}],[\"蜡烛在前作前景拍摄\",{\"1\":{\"127\":1}}],[\"蜡烛点烟拍半身拍特写\",{\"1\":{\"127\":1}}],[\"蜡烛\",{\"1\":{\"85\":1,\"127\":1}}],[\"闪光灯\",{\"1\":{\"85\":1}}],[\"店铺\",{\"1\":{\"85\":1,\"125\":1,\"126\":1}}],[\"打卡上下班\",{\"1\":{\"823\":1}}],[\"打印gc日志\",{\"1\":{\"735\":1}}],[\"打印jvm的参数\",{\"1\":{\"719\":1}}],[\"打印设置的xx选项及值\",{\"0\":{\"719\":1}}],[\"打开redis配置文件\",{\"1\":{\"831\":1}}],[\"打开jstask\",{\"1\":{\"738\":1}}],[\"打开\",{\"1\":{\"352\":1}}],[\"打开高频图层\",{\"1\":{\"256\":1}}],[\"打光从上面和平视打光更为合适\",{\"1\":{\"85\":1}}],[\"打破平衡\",{\"0\":{\"65\":1}}],[\"推荐理由\",{\"1\":{\"849\":1}}],[\"推荐写法\",{\"1\":{\"807\":1}}],[\"推荐双指针法\",{\"0\":{\"494\":1}}],[\"推荐使用spring的\",{\"1\":{\"664\":1}}],[\"推荐使用\",{\"0\":{\"473\":1},\"1\":{\"664\":1}}],[\"推荐将自定义属性定义在html中\",{\"1\":{\"463\":1}}],[\"推荐方式\",{\"1\":{\"453\":1}}],[\"推荐\",{\"0\":{\"849\":1},\"1\":{\"191\":1,\"330\":1,\"433\":1,\"455\":1,\"664\":1,\"671\":1,\"861\":1}}],[\"推荐黄光+白光\",{\"1\":{\"85\":1}}],[\"推荐购买二合一反光板\",{\"1\":{\"85\":1}}],[\"推荐80cm\",{\"1\":{\"85\":1}}],[\"塑造立体感\",{\"1\":{\"85\":1}}],[\"塑造的情绪越浓\",{\"1\":{\"34\":1}}],[\"吸色\",{\"1\":{\"85\":1}}],[\"复用一个或几个线程\",{\"1\":{\"864\":1}}],[\"复用\",{\"1\":{\"864\":1,\"869\":1}}],[\"复杂业务场景\",{\"1\":{\"815\":1}}],[\"复杂度为0\",{\"1\":{\"637\":1}}],[\"复杂查询\",{\"0\":{\"558\":1}}],[\"复位阴影\",{\"1\":{\"291\":1}}],[\"复位高光\",{\"1\":{\"291\":1}}],[\"复盘拍摄\",{\"0\":{\"266\":1}}],[\"复制流程\",{\"1\":{\"801\":1}}],[\"复制\",{\"1\":{\"691\":1}}],[\"复制的成本也将很高\",{\"1\":{\"691\":1}}],[\"复制过去以后保证空间的连续性\",{\"1\":{\"690\":1}}],[\"复制算法的高效性是建立在存活对象少\",{\"1\":{\"691\":1}}],[\"复制算法\",{\"0\":{\"690\":1},\"1\":{\"703\":1}}],[\"复制分片\",{\"1\":{\"561\":1}}],[\"复制两个图层\",{\"1\":{\"256\":1}}],[\"复制图层\",{\"1\":{\"6\":1}}],[\"复古\",{\"1\":{\"85\":1,\"114\":1}}],[\"皮肤透亮的风格\",{\"1\":{\"85\":1}}],[\"汉服\",{\"0\":{\"144\":1},\"1\":{\"85\":1,\"122\":1}}],[\"银色\",{\"1\":{\"85\":1}}],[\"浅棕\",{\"1\":{\"171\":1}}],[\"浅咖\",{\"1\":{\"124\":1}}],[\"浅红色\",{\"1\":{\"96\":1}}],[\"浅绿色\",{\"1\":{\"96\":1}}],[\"浅灰色至黑色\",{\"1\":{\"84\":1}}],[\"浅蓝色\",{\"1\":{\"81\":1}}],[\"梦幻\",{\"1\":{\"84\":1}}],[\"长度由alloc控制\",{\"1\":{\"852\":1}}],[\"长城\",{\"1\":{\"824\":3}}],[\"长的文本也能快速地计算出哈希值\",{\"1\":{\"638\":1}}],[\"长久以来\",{\"1\":{\"435\":1}}],[\"长在高出的花的时候\",{\"1\":{\"232\":1}}],[\"长焦远距离拍摄大景\",{\"1\":{\"238\":1}}],[\"长焦\",{\"1\":{\"227\":1}}],[\"长焦+低角度+同一元素的背景\",{\"1\":{\"227\":1}}],[\"长焦镜头平拍时\",{\"1\":{\"206\":1}}],[\"长焦镜头\",{\"1\":{\"205\":1}}],[\"长焦镜头在横向空间上取景元素少\",{\"1\":{\"191\":1}}],[\"长焦镜头下\",{\"1\":{\"40\":1}}],[\"长调\",{\"1\":{\"84\":1}}],[\"硬盘\",{\"1\":{\"804\":1}}],[\"硬优化\",{\"1\":{\"804\":1}}],[\"硬件资源配置与集群扩展\",{\"1\":{\"567\":1}}],[\"硬件升级与扩展\",{\"1\":{\"566\":1}}],[\"硬\",{\"1\":{\"125\":1}}],[\"硬调\",{\"1\":{\"84\":2,\"278\":1}}],[\"硬光\",{\"0\":{\"78\":1}}],[\"软状态\",{\"1\":{\"934\":1}}],[\"软优化\",{\"1\":{\"804\":1}}],[\"软引用\",{\"1\":{\"663\":1}}],[\"软糯的连衣裙\",{\"1\":{\"125\":1}}],[\"软\",{\"1\":{\"125\":1}}],[\"软调\",{\"1\":{\"84\":1}}],[\"软光\",{\"0\":{\"79\":1}}],[\"灰阶的平滑程度\",{\"1\":{\"279\":1}}],[\"灰调\",{\"1\":{\"278\":1}}],[\"灰色\",{\"1\":{\"92\":1,\"93\":1,\"98\":1}}],[\"灰色主导\",{\"1\":{\"84\":1}}],[\"灰尘\",{\"1\":{\"82\":1,\"199\":1}}],[\"低延迟\",{\"1\":{\"707\":1}}],[\"低很多\",{\"1\":{\"550\":1}}],[\"低视角拍摄\",{\"1\":{\"279\":1}}],[\"低15度\",{\"1\":{\"276\":1}}],[\"低频\",{\"1\":{\"256\":3}}],[\"低角度\",{\"1\":{\"227\":1}}],[\"低机位置\",{\"1\":{\"276\":1}}],[\"低机位仰拍\",{\"1\":{\"232\":1,\"236\":1,\"243\":1}}],[\"低机位\",{\"1\":{\"224\":1,\"279\":1}}],[\"低头容易出双下巴\",{\"1\":{\"169\":1}}],[\"低头\",{\"1\":{\"129\":1,\"156\":1,\"157\":1,\"158\":1,\"179\":1,\"224\":1,\"236\":1}}],[\"低饱和\",{\"1\":{\"126\":1}}],[\"低饱和配色\",{\"0\":{\"107\":1}}],[\"低饱和度\",{\"1\":{\"92\":1}}],[\"低明度的特点\",{\"1\":{\"92\":1}}],[\"低反差\",{\"1\":{\"84\":1}}],[\"低调\",{\"1\":{\"84\":2,\"278\":1}}],[\"低速快门+高速运动\",{\"1\":{\"70\":1}}],[\"黑名单校验\",{\"1\":{\"833\":1}}],[\"黑暗\",{\"1\":{\"279\":1}}],[\"黑\",{\"1\":{\"279\":1}}],[\"黑色比阴影的范围更大\",{\"1\":{\"288\":1}}],[\"黑色色阶\",{\"1\":{\"288\":1}}],[\"黑色\",{\"0\":{\"104\":1},\"1\":{\"85\":1,\"93\":1,\"98\":1}}],[\"黑色主导\",{\"1\":{\"84\":1}}],[\"黑白\",{\"1\":{\"92\":1}}],[\"黑白主导挤压灰色\",{\"1\":{\"84\":1}}],[\"黑白灰相对均衡分布\",{\"1\":{\"84\":1}}],[\"黑白灰在画面中的占比\",{\"1\":{\"84\":1}}],[\"黑白影调\",{\"1\":{\"84\":1}}],[\"冷热数据分离\",{\"1\":{\"566\":1}}],[\"冷暖明暗\",{\"1\":{\"260\":1}}],[\"冷暖对比\",{\"1\":{\"97\":1}}],[\"冷暖对比制造氛围感\",{\"1\":{\"83\":1}}],[\"冷酷的疏离感\",{\"1\":{\"127\":1}}],[\"冷漠\",{\"1\":{\"93\":1}}],[\"冷色调\",{\"1\":{\"93\":1}}],[\"冷色\",{\"1\":{\"93\":1}}],[\"冷静\",{\"1\":{\"92\":1,\"93\":2,\"145\":1}}],[\"冷调\",{\"1\":{\"84\":1,\"127\":1,\"259\":1,\"278\":1}}],[\"色温\",{\"1\":{\"288\":1}}],[\"色温的控制\",{\"1\":{\"235\":1}}],[\"色环上位置等距的三种色彩组合构成三色和谐关系\",{\"1\":{\"96\":1}}],[\"色环上位置相对的两个色相叫做互补色\",{\"1\":{\"96\":1}}],[\"色环中相距90度的色彩称为相似色\",{\"1\":{\"96\":1}}],[\"色值\",{\"0\":{\"91\":1}}],[\"色相60度理论\",{\"0\":{\"285\":1}}],[\"色相环上相距甚远120度\",{\"1\":{\"97\":1}}],[\"色相并未发生改变\",{\"1\":{\"91\":1}}],[\"色相是不同波长的光在物理上的视觉反映\",{\"1\":{\"90\":1}}],[\"色相\",{\"0\":{\"90\":1},\"1\":{\"290\":1,\"291\":2}}],[\"色调的建立是视觉材料组织的结果\",{\"1\":{\"95\":1}}],[\"色调\",{\"1\":{\"84\":1,\"188\":1,\"259\":1,\"288\":1}}],[\"色彩分为红\",{\"1\":{\"289\":1}}],[\"色彩分类\",{\"1\":{\"20\":1}}],[\"色彩调整区域\",{\"1\":{\"288\":1}}],[\"色彩原理关系\",{\"1\":{\"288\":1}}],[\"色彩原理\",{\"0\":{\"281\":1}}],[\"色彩比例\",{\"1\":{\"278\":1}}],[\"色彩搭配\",{\"1\":{\"264\":1}}],[\"色彩过渡\",{\"1\":{\"256\":1}}],[\"色彩参考\",{\"1\":{\"120\":1}}],[\"色彩不同\",{\"1\":{\"120\":1}}],[\"色彩不再重要\",{\"1\":{\"92\":1}}],[\"色彩关系\",{\"1\":{\"99\":1}}],[\"色彩秩序构建\",{\"0\":{\"94\":1}}],[\"色彩是塑造风格的手段之一\",{\"1\":{\"93\":1}}],[\"色彩是由光线照射在物体上呈现出的颜色\",{\"1\":{\"87\":1}}],[\"色彩环境很少单独存在\",{\"1\":{\"92\":1}}],[\"色彩环境\",{\"1\":{\"92\":2,\"259\":1}}],[\"色彩呈现出来的鲜艳程度\",{\"1\":{\"92\":1}}],[\"色彩呈现出来的相貌\",{\"1\":{\"90\":1}}],[\"色彩的鲜艳程度\",{\"1\":{\"290\":1}}],[\"色彩的相貌\",{\"1\":{\"290\":1}}],[\"色彩的主观还原和控制\",{\"0\":{\"101\":1}}],[\"色彩的对比存在于\",{\"1\":{\"97\":1}}],[\"色彩的对比可以突出主体\",{\"1\":{\"97\":1}}],[\"色彩的情感\",{\"1\":{\"93\":1}}],[\"色彩的情绪性\",{\"0\":{\"93\":1},\"1\":{\"259\":1}}],[\"色彩的冷暖\",{\"1\":{\"93\":1}}],[\"色彩的明亮程度\",{\"1\":{\"290\":1}}],[\"色彩的明暗构建空间关系\",{\"1\":{\"99\":1}}],[\"色彩的明暗程度\",{\"1\":{\"91\":1}}],[\"色彩的明度与饱和度\",{\"1\":{\"92\":1}}],[\"色彩的浓度原色的饱和度最高\",{\"1\":{\"92\":1}}],[\"色彩的高度值高\",{\"1\":{\"91\":1}}],[\"色彩的三种属性\",{\"0\":{\"89\":1}}],[\"色彩三原色\",{\"1\":{\"88\":1}}],[\"色彩\",{\"0\":{\"86\":1},\"1\":{\"14\":1,\"18\":1,\"28\":1,\"49\":1,\"50\":1,\"51\":1,\"53\":1,\"278\":1}}],[\"着重加重眼尾\",{\"1\":{\"171\":1}}],[\"着重色彩搭配\",{\"1\":{\"83\":1}}],[\"着重刻画人物\",{\"1\":{\"40\":1}}],[\"纵向增加空间感\",{\"1\":{\"83\":1}}],[\"烟花\",{\"1\":{\"273\":1}}],[\"烟\",{\"1\":{\"126\":1,\"199\":1}}],[\"烟饼\",{\"1\":{\"82\":1,\"126\":1}}],[\"烟雾\",{\"1\":{\"82\":1}}],[\"水位线低\",{\"1\":{\"279\":1}}],[\"水位线高\",{\"1\":{\"279\":1}}],[\"水\",{\"1\":{\"279\":2}}],[\"水花\",{\"1\":{\"273\":1}}],[\"水面\",{\"1\":{\"217\":1}}],[\"水平居中\",{\"1\":{\"387\":2}}],[\"水平线构图法\",{\"0\":{\"217\":1}}],[\"水平方向还可以设值\",{\"1\":{\"401\":1}}],[\"水平方向的偏移\",{\"1\":{\"390\":1}}],[\"水平方向的角度\",{\"1\":{\"34\":1}}],[\"水平方向上的margin\",{\"1\":{\"387\":1}}],[\"水平方向\",{\"1\":{\"76\":1}}],[\"水给人以冰冷\",{\"1\":{\"127\":1}}],[\"水果\",{\"1\":{\"126\":1}}],[\"水滴\",{\"1\":{\"82\":1,\"199\":1}}],[\"必须规定只能自己删除自己的锁\",{\"1\":{\"840\":1}}],[\"必须有超时机制或者撤销操作\",{\"1\":{\"839\":1}}],[\"必须要setnx+过期时间在同一行\",{\"1\":{\"840\":1}}],[\"必须要在代码层面finally释放锁\",{\"1\":{\"840\":1}}],[\"必须要有个兜底的方案\",{\"1\":{\"829\":1}}],[\"必须要加上\",{\"1\":{\"728\":1}}],[\"必须使用is\",{\"1\":{\"764\":1}}],[\"必须使用定位\",{\"1\":{\"455\":1}}],[\"必须完全依赖于主键\",{\"1\":{\"744\":1}}],[\"必须处理\",{\"1\":{\"571\":1}}],[\"必须原地修改\",{\"1\":{\"496\":1}}],[\"必须指定要使用的媒体类型\",{\"1\":{\"466\":1}}],[\"必须将整个行高包裹进去\",{\"1\":{\"458\":1}}],[\"必须是直接子代\",{\"1\":{\"370\":1}}],[\"必须跟在font\",{\"1\":{\"366\":1}}],[\"必备条件\",{\"1\":{\"82\":1}}],[\"必要时需要对人物背光面部进行补光\",{\"1\":{\"76\":1}}],[\"丁达尔光\",{\"0\":{\"82\":1}}],[\"灯光\",{\"1\":{\"81\":1}}],[\"灯光高度与相机高度相近\",{\"1\":{\"76\":1}}],[\"东方的天空变成浅紫色\",{\"1\":{\"81\":1}}],[\"残余大气折射的光线\",{\"1\":{\"81\":1}}],[\"柔软\",{\"1\":{\"279\":1}}],[\"柔调\",{\"1\":{\"278\":1}}],[\"柔和光线\",{\"1\":{\"85\":1}}],[\"柔和\",{\"1\":{\"81\":1}}],[\"柔光版\",{\"1\":{\"85\":1}}],[\"柔光\",{\"0\":{\"79\":1}}],[\"柔光伞\",{\"1\":{\"78\":1}}],[\"需检查失败的原因\",{\"1\":{\"982\":1}}],[\"需根据数据规模和查询需求平衡考虑\",{\"1\":{\"566\":1}}],[\"需求说明\",{\"1\":{\"823\":1}}],[\"需求\",{\"0\":{\"582\":1},\"1\":{\"373\":1,\"466\":1,\"670\":1}}],[\"需要调用服务时\",{\"1\":{\"971\":1}}],[\"需要调用notify\",{\"1\":{\"653\":1}}],[\"需要在每个方法配置一个\",{\"1\":{\"961\":1}}],[\"需要在命令窗口执行\",{\"1\":{\"807\":1}}],[\"需要有一个兜底的方法\",{\"1\":{\"960\":1}}],[\"需要修改配置\",{\"1\":{\"952\":1}}],[\"需要从桶中获取一个令牌\",{\"1\":{\"949\":1}}],[\"需要为每台机器分配一个唯一的id\",{\"1\":{\"938\":1}}],[\"需要为一个类定义一个默认的比较规则\",{\"1\":{\"625\":1}}],[\"需要和数据库中的值相同\",{\"1\":{\"844\":1}}],[\"需要设置key的过期时间\",{\"1\":{\"840\":1}}],[\"需要创建临时表来存储查询的结果\",{\"1\":{\"796\":1}}],[\"需要回表\",{\"1\":{\"793\":1}}],[\"需要造成系统长时间的停顿\",{\"1\":{\"693\":1}}],[\"需要全程暂停用户应用程序\",{\"1\":{\"691\":1}}],[\"需要使用其他的算法\",{\"1\":{\"691\":1}}],[\"需要两倍的内存空间\",{\"1\":{\"690\":1}}],[\"需要停止整个应用程序\",{\"1\":{\"689\":1}}],[\"需要被回收\",{\"1\":{\"687\":1}}],[\"需要把类\",{\"1\":{\"683\":1}}],[\"需要先获取锁\",{\"1\":{\"671\":1}}],[\"需要\",{\"1\":{\"670\":2}}],[\"需要配合lock\",{\"1\":{\"662\":1}}],[\"需要整体完整\",{\"1\":{\"657\":1}}],[\"需要等待锁释放\",{\"1\":{\"651\":1}}],[\"需要结合上述策略进行优化配置和设计\",{\"1\":{\"567\":1}}],[\"需要综合运用硬件升级\",{\"1\":{\"566\":1}}],[\"需要减小和的值\",{\"1\":{\"494\":1}}],[\"需要增加和的值\",{\"1\":{\"494\":1}}],[\"需要定义大量的id\",{\"1\":{\"469\":1}}],[\"需要让元素向上位移自身的50\",{\"1\":{\"455\":1}}],[\"需要让元素向下位移父元素的50\",{\"1\":{\"455\":1}}],[\"需要让人物进入到花枝中\",{\"1\":{\"234\":1}}],[\"需要让人物靠近背景\",{\"1\":{\"231\":1}}],[\"需要同时符合两个选择器条件\",{\"1\":{\"372\":1}}],[\"需要将块级元素转换为行内元素\",{\"1\":{\"358\":1}}],[\"需要打光\",{\"1\":{\"275\":1}}],[\"需要三脚架\",{\"1\":{\"273\":1}}],[\"需要三脚架固定\",{\"1\":{\"273\":1}}],[\"需要快门速度\",{\"1\":{\"273\":2}}],[\"需要超高速快门\",{\"1\":{\"273\":1}}],[\"需要道具\",{\"1\":{\"206\":1}}],[\"需要注明摄影师\",{\"1\":{\"122\":1}}],[\"需要注意\",{\"1\":{\"916\":1}}],[\"需要注意的是padding\",{\"1\":{\"387\":1}}],[\"需要注意将右侧文件处理\",{\"1\":{\"287\":1}}],[\"需要注意画面色彩层次感\",{\"1\":{\"96\":1}}],[\"需要注意选景的重要性\",{\"1\":{\"95\":1}}],[\"需要注意人在空间中的动态\",{\"1\":{\"37\":1}}],[\"需注意人脑袋的比例和形体的比例\",{\"1\":{\"207\":1}}],[\"需注意周边光源的色彩和方向\",{\"1\":{\"81\":1}}],[\"需注意背景的选择及光比\",{\"1\":{\"81\":1}}],[\"曝光度\",{\"1\":{\"288\":1}}],[\"曝光补偿无效\",{\"1\":{\"277\":1}}],[\"曝光补偿有效果\",{\"1\":{\"277\":1}}],[\"曝光补偿有效\",{\"1\":{\"277\":2}}],[\"曝光三要素\",{\"0\":{\"272\":1}}],[\"曝光\",{\"1\":{\"87\":1}}],[\"曝光控制\",{\"1\":{\"79\":1}}],[\"曝光准备\",{\"1\":{\"12\":1}}],[\"细枝末节的情绪感受\",{\"0\":{\"198\":1}}],[\"细腻\",{\"1\":{\"79\":1}}],[\"细节情绪\",{\"1\":{\"93\":1}}],[\"细节\",{\"0\":{\"292\":1},\"1\":{\"19\":1,\"45\":1,\"292\":1}}],[\"室外拍摄时\",{\"1\":{\"79\":1}}],[\"室内环境一般\",{\"1\":{\"275\":1}}],[\"室内光线充裕\",{\"1\":{\"275\":1}}],[\"室内外的光线所呈现的氛围感也不相同\",{\"1\":{\"81\":1}}],[\"室内拍摄我们也要遵循人物迎合光线\",{\"1\":{\"224\":1}}],[\"室内拍摄\",{\"1\":{\"79\":1}}],[\"室内拍摄不补光\",{\"1\":{\"79\":1}}],[\"室内\",{\"1\":{\"51\":1,\"275\":1}}],[\"阴\",{\"1\":{\"120\":1}}],[\"阴天\",{\"1\":{\"275\":1}}],[\"阴天的光线比较平淡\",{\"1\":{\"233\":1}}],[\"阴天的色彩相较晴天的色彩更为灰暗\",{\"1\":{\"92\":1}}],[\"阴天拍樱花\",{\"0\":{\"243\":1}}],[\"阴天拍摄多选景\",{\"1\":{\"233\":1}}],[\"阴天拍梅花\",{\"0\":{\"233\":1}}],[\"阴天所看到的物体的色彩是固有色\",{\"1\":{\"87\":1}}],[\"阴天光线均匀\",{\"1\":{\"83\":1}}],[\"阴天光线\",{\"1\":{\"79\":1}}],[\"阴雨天\",{\"0\":{\"83\":1}}],[\"阴影的颜色\",{\"1\":{\"390\":1}}],[\"阴影比黑色的范围更广泛\",{\"1\":{\"288\":1}}],[\"阴影\",{\"1\":{\"254\":1,\"288\":1,\"294\":1,\"295\":1}}],[\"阴影相对柔和\",{\"1\":{\"81\":1}}],[\"阴影轮廓模糊\",{\"1\":{\"79\":1}}],[\"阴影在物体的背后\",{\"1\":{\"76\":1}}],[\"反应式容器或无容器\",{\"1\":{\"926\":1}}],[\"反转\",{\"1\":{\"884\":1}}],[\"反转链表\",{\"0\":{\"509\":1}}],[\"反过来降级不可以\",{\"1\":{\"853\":1}}],[\"反射优缺点\",{\"0\":{\"585\":1}}],[\"反序列化\",{\"1\":{\"584\":1}}],[\"反衬\",{\"1\":{\"279\":1}}],[\"反面\",{\"1\":{\"276\":1}}],[\"反选\",{\"1\":{\"262\":1}}],[\"反季拍摄\",{\"1\":{\"212\":1}}],[\"反之用hashtable\",{\"1\":{\"853\":1}}],[\"反之\",{\"1\":{\"92\":1,\"715\":1,\"738\":1}}],[\"反之亦然\",{\"1\":{\"91\":1,\"599\":1}}],[\"反光板\",{\"1\":{\"85\":1}}],[\"反光伞+柔光屏\",{\"1\":{\"78\":1}}],[\"反差比较小\",{\"1\":{\"84\":1}}],[\"反向\",{\"1\":{\"6\":1}}],[\"控制权交给外部环境\",{\"1\":{\"884\":1}}],[\"控制\",{\"1\":{\"884\":1}}],[\"控制反转\",{\"1\":{\"884\":2}}],[\"控制内存使用\",{\"1\":{\"736\":1}}],[\"控制台打印\",{\"1\":{\"588\":1}}],[\"控制整体影调\",{\"1\":{\"254\":1}}],[\"控制色彩的因素\",{\"1\":{\"87\":1}}],[\"控制好角度和光线可以拍到伦勃朗光\",{\"1\":{\"81\":1}}],[\"控制光比\",{\"1\":{\"81\":1}}],[\"控制灯光与拍摄主体的距离\",{\"1\":{\"78\":1}}],[\"控制方法\",{\"1\":{\"51\":1}}],[\"纱等透光材质对光线进行柔和处理\",{\"1\":{\"78\":1}}],[\"避免了协调者单点问题\",{\"1\":{\"942\":1}}],[\"避免了脏读\",{\"1\":{\"802\":1}}],[\"避免索引失效\",{\"1\":{\"794\":1}}],[\"避免内存抖动\",{\"1\":{\"738\":1}}],[\"避免类的重复加载\",{\"1\":{\"715\":1}}],[\"避免要把某些数据一直通过参数传递\",{\"1\":{\"663\":1}}],[\"避免代码重排序\",{\"1\":{\"659\":1}}],[\"避免热点\",{\"1\":{\"566\":1}}],[\"避免呆板的人物摆拍\",{\"1\":{\"225\":1}}],[\"避免拍摄正面脸或低头\",{\"1\":{\"208\":1}}],[\"避免失调\",{\"1\":{\"207\":1}}],[\"避免头发丝过长\",{\"1\":{\"170\":1}}],[\"避免仰拍视角\",{\"1\":{\"168\":1}}],[\"避免手伸的过直或过高\",{\"1\":{\"163\":1}}],[\"避免躺姿\",{\"1\":{\"159\":1}}],[\"避免含胸驼背\",{\"1\":{\"156\":1}}],[\"避免刻意看镜头\",{\"1\":{\"149\":1}}],[\"避免过于明显的摆拍感\",{\"1\":{\"135\":1}}],[\"避免过于宽松和长的服装遮住手腕及脚腕\",{\"1\":{\"133\":1}}],[\"避免过于日常的服装\",{\"1\":{\"125\":1}}],[\"避免臃肿或过于修身\",{\"1\":{\"133\":1}}],[\"避免摆拍痕迹太重\",{\"1\":{\"126\":1}}],[\"避免道具过多过砸\",{\"1\":{\"126\":1}}],[\"避免包裹性较强或过于宽松\",{\"1\":{\"125\":1}}],[\"避免嘴唇边缘太锋利\",{\"1\":{\"124\":1}}],[\"避免玫红\",{\"1\":{\"124\":1}}],[\"避免有人白嫖照片\",{\"1\":{\"122\":1}}],[\"避免明度饱和度过于相近导致的主体背景不分\",{\"1\":{\"96\":1}}],[\"避免人脸形成过于明显的难看阴影\",{\"1\":{\"78\":1}}],[\"避免繁琐的外在\",{\"1\":{\"14\":1}}],[\"强制输出线程堆栈\",{\"1\":{\"731\":1}}],[\"强制将线程私有工作内存的数据刷回主物理内存\",{\"1\":{\"659\":1}}],[\"强引用\",{\"1\":{\"663\":1}}],[\"强一致性往往需要牺牲性能和可用性为代价\",{\"1\":{\"565\":1}}],[\"强大\",{\"1\":{\"279\":1}}],[\"强光找阴影\",{\"1\":{\"236\":1}}],[\"强化\",{\"1\":{\"276\":1}}],[\"强化空间\",{\"1\":{\"191\":1}}],[\"强化观众心理感受的重要手段之一\",{\"1\":{\"191\":1}}],[\"强化与环境\",{\"1\":{\"153\":1}}],[\"强化人的情感\",{\"1\":{\"14\":1}}],[\"强烈的情绪表达\",{\"0\":{\"146\":1}}],[\"强调任务的弹性分配\",{\"1\":{\"974\":1}}],[\"强调弹性和可扩展性\",{\"1\":{\"974\":1}}],[\"强调画面环境感的\",{\"1\":{\"278\":1}}],[\"强调明暗对比\",{\"1\":{\"191\":1}}],[\"强调抓拍感\",{\"1\":{\"135\":1}}],[\"强调亮部和暗部的光比\",{\"1\":{\"78\":1}}],[\"强弱都会发生变化\",{\"1\":{\"81\":1}}],[\"强硬光\",{\"1\":{\"81\":1}}],[\"强硬\",{\"1\":{\"78\":1}}],[\"直到桶满为止\",{\"1\":{\"949\":1}}],[\"直到垃圾收集完成\",{\"1\":{\"693\":1}}],[\"直到最后一个线程到达屏障时\",{\"1\":{\"668\":1}}],[\"直到遍历完整个数组\",{\"1\":{\"494\":1}}],[\"直到有充足的空间为止\",{\"1\":{\"430\":1}}],[\"直到自己的边界紧贴着包含块\",{\"1\":{\"430\":1}}],[\"直到它滚动到某个阈值点\",{\"1\":{\"426\":1}}],[\"直线\",{\"1\":{\"279\":2}}],[\"直径不能过大\",{\"1\":{\"171\":1}}],[\"直径避免过大\",{\"1\":{\"124\":1}}],[\"直接拒绝访问\",{\"1\":{\"957\":1}}],[\"直接从一级缓存里面拿到b\",{\"1\":{\"925\":1}}],[\"直接拿到len值就可以了\",{\"1\":{\"853\":1}}],[\"直接上redisson\",{\"1\":{\"840\":1}}],[\"直接将表都删掉\",{\"1\":{\"745\":1}}],[\"直接返回\",{\"1\":{\"715\":1}}],[\"直接返回字符串常量池中字符串对象\",{\"1\":{\"609\":1}}],[\"直接使用默认的forkjoinpool\",{\"1\":{\"670\":1}}],[\"直接使用自然光拍摄\",{\"1\":{\"79\":1}}],[\"直接丢弃掉\",{\"1\":{\"664\":1}}],[\"直接执行\",{\"1\":{\"656\":1}}],[\"直接相加得到的\",{\"1\":{\"611\":1}}],[\"直接把元素放入队列就好了\",{\"1\":{\"522\":1}}],[\"直接学习scss\",{\"1\":{\"469\":1}}],[\"直接子元素只能是dt\",{\"1\":{\"406\":1}}],[\"直接子代选择器\",{\"1\":{\"370\":1}}],[\"直接\",{\"1\":{\"370\":1,\"964\":1}}],[\"直接翻译\",{\"1\":{\"358\":1}}],[\"直接自然光拍摄\",{\"1\":{\"79\":1}}],[\"直射的太阳光\",{\"1\":{\"78\":1}}],[\"直射光线\",{\"1\":{\"82\":1}}],[\"直射光\",{\"1\":{\"78\":1}}],[\"直视镜头时对眼神表达要求高\",{\"1\":{\"156\":1}}],[\"直视镜头时\",{\"1\":{\"34\":1}}],[\"垂直居中\",{\"1\":{\"455\":1}}],[\"垂直居中总结\",{\"0\":{\"455\":1}}],[\"垂直于平面拍摄\",{\"1\":{\"279\":1}}],[\"垂直线构图法\",{\"0\":{\"218\":1}}],[\"垂直面直视镜头或偏向一侧\",{\"1\":{\"156\":1}}],[\"垂直方向的间距由margin属性决定\",{\"1\":{\"465\":1}}],[\"垂直方向的偏移\",{\"1\":{\"390\":1}}],[\"垂直方向还可以设值\",{\"1\":{\"401\":1}}],[\"垂直方向上的具体位置\",{\"1\":{\"401\":1}}],[\"垂直方向上相邻的2个margin\",{\"1\":{\"387\":1}}],[\"垂直方向\",{\"1\":{\"76\":1}}],[\"垂直高度的角度\",{\"1\":{\"34\":1}}],[\"如增大fetch\",{\"1\":{\"981\":1}}],[\"如elasticsearch\",{\"1\":{\"977\":1}}],[\"如http请求头\",{\"1\":{\"977\":1}}],[\"如hystrix\",{\"1\":{\"956\":1}}],[\"如悲观锁或者乐观锁\",{\"1\":{\"975\":1}}],[\"如mysql\",{\"1\":{\"971\":1}}],[\"如rt响应时间\",{\"1\":{\"956\":1}}],[\"如json\",{\"1\":{\"953\":1}}],[\"如java虚拟机运行错误\",{\"1\":{\"571\":1}}],[\"如tomcat或jetty\",{\"1\":{\"926\":1}}],[\"如terms聚合\",{\"1\":{\"567\":1}}],[\"如事务处理\",{\"1\":{\"892\":1}}],[\"如servlet容器\",{\"1\":{\"926\":1}}],[\"如singleton\",{\"1\":{\"884\":1}}],[\"如synchronized\",{\"1\":{\"660\":1}}],[\"如外键约束\",{\"1\":{\"802\":1}}],[\"如删除语句指定了limit而没有使用order\",{\"1\":{\"801\":1}}],[\"如数据库连接池\",{\"1\":{\"664\":1}}],[\"如数组\",{\"1\":{\"526\":1}}],[\"如偏向锁\",{\"1\":{\"661\":1}}],[\"如通知或中断\",{\"1\":{\"651\":1}}],[\"如空指针异常\",{\"1\":{\"571\":1}}],[\"如field\",{\"1\":{\"567\":1}}],[\"如cpu\",{\"1\":{\"567\":1}}],[\"如定期删除旧索引\",{\"1\":{\"566\":1}}],[\"如索引创建\",{\"1\":{\"564\":1}}],[\"如词频\",{\"1\":{\"563\":1}}],[\"如应用程序\",{\"1\":{\"561\":1}}],[\"如以下代码在java是正确的\",{\"1\":{\"521\":1}}],[\"如background\",{\"1\":{\"463\":1}}],[\"如下布局如何解决对齐问题\",{\"1\":{\"453\":1}}],[\"如果消息发送失败\",{\"1\":{\"982\":1}}],[\"如果消息头是8k\",{\"1\":{\"872\":1}}],[\"如果配置了健康检查和负载均衡策略\",{\"1\":{\"971\":1}}],[\"如果你需要处理大量分布式任务\",{\"1\":{\"974\":1}}],[\"如果你的任务调度需求比较简单\",{\"1\":{\"974\":1}}],[\"如果你不是使用\",{\"1\":{\"970\":1}}],[\"如果你想使用栈这种数据结构\",{\"1\":{\"521\":1}}],[\"如果连续多次探测失败\",{\"1\":{\"970\":1}}],[\"如果服务实例能正确响应探测请求\",{\"1\":{\"970\":1}}],[\"如果服务实例在指定的时间间隔内没有向\",{\"1\":{\"970\":1}}],[\"如果成功则处理该请求\",{\"1\":{\"949\":1}}],[\"如果成功删除或更新\",{\"1\":{\"849\":1}}],[\"如果桶满了\",{\"1\":{\"949\":1}}],[\"如果桶中没有足够的令牌\",{\"1\":{\"949\":1}}],[\"如果桶中有足够的令牌\",{\"1\":{\"949\":1}}],[\"如果准备阶段所有事物参与者都预留资源成功\",{\"1\":{\"942\":1}}],[\"如果机器数量过多会增加管理成本\",{\"1\":{\"938\":1}}],[\"如果系统时钟发生回拨\",{\"1\":{\"938\":1}}],[\"如果要代理的对象\",{\"1\":{\"892\":1}}],[\"如果要拍摄正面时注意人物面部补光\",{\"1\":{\"76\":1}}],[\"如果槽位是16384个\",{\"1\":{\"872\":1}}],[\"如果槽位是65536个\",{\"1\":{\"872\":1}}],[\"如果多个哨兵节点一致认为主节点故障\",{\"1\":{\"871\":1}}],[\"如果保存的数据要求安全性比较高的话\",{\"1\":{\"862\":1}}],[\"如果redis保存的数据丢失一些也没有什么影响的化\",{\"1\":{\"862\":1}}],[\"如果redis中无数据\",{\"1\":{\"844\":1}}],[\"如果redis中有数据\",{\"1\":{\"844\":1}}],[\"如果至少有10000个key发生变化\",{\"1\":{\"859\":1}}],[\"如果至少有10个key发生变化\",{\"1\":{\"859\":1}}],[\"如果至少有1个key发生变化\",{\"1\":{\"859\":1}}],[\"如果业务应用中读取数据库和写缓存的时间不好估算\",{\"1\":{\"849\":1}}],[\"如果a线程正在更新数据库或更新数据库失败\",{\"1\":{\"848\":1}}],[\"如果线程还持有锁\",{\"1\":{\"842\":1}}],[\"如果线程间存在锁竞争\",{\"1\":{\"672\":1}}],[\"如果布隆过滤器判断一个元素不在一个集合中\",{\"1\":{\"833\":1}}],[\"如果上面都没被删除到\",{\"1\":{\"829\":1}}],[\"如果分表不能满足\",{\"1\":{\"804\":1}}],[\"如果查询所需要的数据不在该非聚集索引中完全包含\",{\"1\":{\"798\":1}}],[\"如果查询中包含额外的信息需要从原始文档中提取\",{\"1\":{\"562\":1}}],[\"如果该行未被更新\",{\"1\":{\"797\":1}}],[\"如果隐藏事务id大于未提交的事务中最小的事务id并且小于未提交的事务中最小的事务id\",{\"1\":{\"797\":1}}],[\"如果隐藏事务id大于应该分配给下一个事务的id值\",{\"1\":{\"797\":1}}],[\"如果隐藏事务id小于未提交的事务中最小的事务id\",{\"1\":{\"797\":1}}],[\"如果为null\",{\"1\":{\"796\":1}}],[\"如果这几个位置全都是1\",{\"1\":{\"833\":1}}],[\"如果这一列为null\",{\"1\":{\"796\":1}}],[\"如果这个div中有图片\",{\"1\":{\"458\":1}}],[\"如果这个适合我们不得不拍摄\",{\"1\":{\"235\":1}}],[\"如果表使用的引擎对于表行数统计是精确的\",{\"1\":{\"796\":1}}],[\"如果行引用其他行的并集结果\",{\"1\":{\"796\":1}}],[\"如果数据库首先使用name的索引来定位到name=\",{\"1\":{\"798\":1}}],[\"如果数据太多\",{\"1\":{\"793\":1}}],[\"如果数组有一个升序的子序列\",{\"1\":{\"497\":1}}],[\"如果数组是按照降序排列的\",{\"1\":{\"497\":1}}],[\"如果是web应用程序\",{\"1\":{\"926\":1}}],[\"如果是递增的\",{\"1\":{\"793\":1}}],[\"如果是兄弟关系\",{\"1\":{\"427\":1}}],[\"如果读取的记录正在执行update\",{\"1\":{\"788\":1}}],[\"如果操作的索引是唯一索引或主键\",{\"1\":{\"785\":1}}],[\"如果where条件中字段没有命中唯一索引或索引失效的话\",{\"1\":{\"785\":1}}],[\"如果full\",{\"1\":{\"738\":1}}],[\"如果发现任务正在执行或已完成\",{\"1\":{\"975\":1}}],[\"如果发现有大量的对象晋升到了老年代并长期存在\",{\"1\":{\"738\":1}}],[\"如果发现某个对象在其header中没有标记为可达对象\",{\"1\":{\"689\":1}}],[\"如果大部分对象都是瞬时对象\",{\"1\":{\"738\":1}}],[\"如果调用到本地方法的话\",{\"1\":{\"731\":1}}],[\"如果进程执行的是\",{\"1\":{\"726\":1}}],[\"如果通过以上3条路径都没能成功加载\",{\"1\":{\"715\":1}}],[\"如果当前没有事务\",{\"1\":{\"898\":4}}],[\"如果当前存在事务\",{\"1\":{\"898\":7}}],[\"如果当前加载器的父类加载器为空\",{\"1\":{\"715\":1}}],[\"如果当前元素大于0\",{\"1\":{\"494\":1}}],[\"如果父类加载器可以完成类加载任务\",{\"1\":{\"715\":1}}],[\"如果出现分析过程中对象引用关系还在不断变化\",{\"1\":{\"710\":1}}],[\"如果出现java\",{\"1\":{\"683\":1}}],[\"如果说收集算法是内存回收的方法论\",{\"1\":{\"701\":1}}],[\"如果一次性将所有的垃圾进行处理\",{\"1\":{\"693\":1}}],[\"如果一个索引包含\",{\"1\":{\"793\":1}}],[\"如果一个记录已经被加了排他锁\",{\"1\":{\"775\":1}}],[\"如果一个类加载器在接到加载类的请求时\",{\"1\":{\"715\":1}}],[\"如果一个类没有声明构造方法\",{\"0\":{\"602\":1},\"1\":{\"602\":1}}],[\"如果一个region中存活对象的总大小超过了该region容量的50\",{\"1\":{\"708\":1}}],[\"如果一个操作happens\",{\"1\":{\"657\":1}}],[\"如果一个操作执行的结果需要对另一个操作可见性\",{\"1\":{\"657\":1}}],[\"如果一个元素拥有滚动机制\",{\"1\":{\"402\":1}}],[\"如果一个属性具备继承性\",{\"1\":{\"376\":1}}],[\"如果依然使用复制算法\",{\"1\":{\"691\":1}}],[\"如果执行的是一个native方法\",{\"1\":{\"680\":1}}],[\"如果执行程序已关闭\",{\"1\":{\"664\":1}}],[\"如果同步方法\",{\"1\":{\"672\":2}}],[\"如果始终得不到锁竞争的线程\",{\"1\":{\"672\":1}}],[\"如果指定线程池\",{\"1\":{\"670\":1}}],[\"如果相等\",{\"1\":{\"669\":1}}],[\"如果自己加了异常\",{\"1\":{\"661\":1}}],[\"如果重试一定次数没有成功\",{\"1\":{\"849\":1}}],[\"如果重排序之后的执行结果与按照happens\",{\"1\":{\"657\":1}}],[\"如果重写\",{\"1\":{\"607\":1}}],[\"如果我们需要定义多个不同的比较规则或者对已经存在的类进行排序并且无法修改源代码\",{\"1\":{\"625\":1}}],[\"如果我们希望一个元素可以跳出标准流\",{\"1\":{\"422\":1}}],[\"如果在\",{\"1\":{\"985\":1}}],[\"如果在exec命令执行前\",{\"1\":{\"878\":1}}],[\"如果在指定位置i\",{\"1\":{\"622\":1}}],[\"如果在一个阳光灿烂的中午拍摄出有虚化的小花\",{\"1\":{\"275\":1}}],[\"如果存在则返回该常量池中的引用\",{\"1\":{\"611\":1}}],[\"如果字符串常量池中没有保存对应的字符串引用\",{\"1\":{\"611\":1}}],[\"如果字符串常量池中保存了对应的字符串对象的引用\",{\"1\":{\"611\":1}}],[\"如果字符串常量池不存在\",{\"1\":{\"610\":1}}],[\"如果参数是引用类型\",{\"1\":{\"587\":1}}],[\"如果参数是基本类型的话\",{\"1\":{\"587\":1}}],[\"如果聚合中使用到了脚本\",{\"1\":{\"567\":1}}],[\"如果请求中的版本号与服务器上实际的文档版本号不匹配\",{\"1\":{\"565\":1}}],[\"如果搜索请求中包含了聚合\",{\"1\":{\"562\":1}}],[\"如果少了第三次挥手\",{\"1\":{\"552\":1}}],[\"如果比最小得索引小\",{\"1\":{\"527\":1}}],[\"如果\",{\"1\":{\"520\":1,\"521\":1,\"663\":1,\"744\":2}}],[\"如果tail\",{\"1\":{\"519\":2}}],[\"如果没找到\",{\"1\":{\"497\":1}}],[\"如果没有设置主键且该表没有唯一非空索引时\",{\"1\":{\"797\":1}}],[\"如果没有\",{\"1\":{\"737\":1}}],[\"如果没有找到明显的内存泄漏\",{\"1\":{\"737\":1}}],[\"如果没有找到符合条件的两个数\",{\"1\":{\"491\":1}}],[\"如果没有第四次挥手\",{\"1\":{\"552\":1}}],[\"如果没有阳光就寻找前景\",{\"1\":{\"231\":1}}],[\"如果和大于0\",{\"1\":{\"494\":1}}],[\"如果和小于0\",{\"1\":{\"494\":1}}],[\"如果三数之和等于目标和\",{\"1\":{\"494\":1}}],[\"如果三数之和大于目标和\",{\"1\":{\"494\":1}}],[\"如果三数之和小于目标和\",{\"1\":{\"494\":1}}],[\"如果有则延长过期时间\",{\"1\":{\"842\":1}}],[\"如果有\",{\"1\":{\"715\":1}}],[\"如果有些字段不想被序列化可以用transient\",{\"1\":{\"584\":1}}],[\"如果有浮动元素\",{\"1\":{\"465\":1}}],[\"如果有绝对定位元素\",{\"1\":{\"465\":1}}],[\"如果有block\",{\"1\":{\"465\":1}}],[\"如果只有inline\",{\"1\":{\"465\":1}}],[\"如果只设置了1个方向\",{\"1\":{\"401\":1}}],[\"如果设置y位移\",{\"1\":{\"454\":1}}],[\"如果设置x位移\",{\"1\":{\"454\":1}}],[\"如果水平方向剩余空间不够显示浮动元素\",{\"1\":{\"430\":1}}],[\"如果元素是向左或者向右浮动\",{\"1\":{\"430\":1}}],[\"如果不设置最大内存大小或者设置最大内存大小为0\",{\"1\":{\"831\":1}}],[\"如果不是主键索引\",{\"1\":{\"793\":1}}],[\"如果不是兄弟关系\",{\"1\":{\"427\":1}}],[\"如果不为空\",{\"1\":{\"715\":1}}],[\"如果不相等\",{\"1\":{\"669\":1}}],[\"如果不等\",{\"1\":{\"669\":1}}],[\"如果不够就会发生扩容\",{\"1\":{\"623\":1}}],[\"如果不存在元素e\",{\"1\":{\"513\":1,\"516\":1,\"539\":1}}],[\"如果不存在下一个更大的排列\",{\"1\":{\"496\":1}}],[\"如果不省略\",{\"1\":{\"366\":1}}],[\"如果希望绝对定位元素在定位参照对象中居中显示\",{\"1\":{\"425\":1}}],[\"如果希望绝对定位元素的宽高和定位参照对象一样\",{\"1\":{\"425\":1}}],[\"如果希望子元素相对\",{\"1\":{\"425\":1}}],[\"如果找不到这样的祖先元素\",{\"1\":{\"425\":1}}],[\"如果手动来编写效果会非常低\",{\"1\":{\"413\":1}}],[\"如果块级元素的底部线和父元素的底部线重写\",{\"1\":{\"387\":1}}],[\"如果块级元素的顶部线和父元素的顶部线重叠\",{\"1\":{\"387\":1}}],[\"如果后代元素自己有设置该属性\",{\"1\":{\"376\":1}}],[\"如果降低某个地方的颜色\",{\"1\":{\"289\":1}}],[\"如果想进一步追踪特定方法的执行情况\",{\"1\":{\"738\":1}}],[\"如果想压暗一张照片的暗部\",{\"1\":{\"288\":1}}],[\"如果想要提亮一张照片的暗部\",{\"1\":{\"288\":1}}],[\"如果需要提高画面亮部\",{\"1\":{\"288\":1}}],[\"如果选择降低画面亮部\",{\"1\":{\"288\":1}}],[\"如果拍一个在夜晚跑步的人\",{\"1\":{\"275\":1}}],[\"如果涂的太亮\",{\"1\":{\"257\":1}}],[\"如果光线太强\",{\"1\":{\"236\":1}}],[\"如果随手一拍\",{\"1\":{\"230\":1}}],[\"如进行衍生\",{\"1\":{\"122\":1}}],[\"如有事推迟请至少提前1天告知\",{\"1\":{\"122\":1}}],[\"如\",{\"1\":{\"96\":3,\"625\":1,\"632\":1,\"669\":1,\"926\":1,\"953\":1,\"972\":2}}],[\"如何保证消息不重复消费\",{\"0\":{\"984\":1}}],[\"如何保证消息不丢失\",{\"0\":{\"982\":1}}],[\"如何保证消息顺序消费\",{\"0\":{\"983\":1}}],[\"如何走出人生的艰难时刻\",{\"1\":{\"919\":1}}],[\"如何拥有高质量的关系\",{\"1\":{\"919\":1}}],[\"如何让心智变得更成熟\",{\"1\":{\"919\":1}}],[\"如何让这行文字在div内部垂直居中\",{\"1\":{\"365\":1}}],[\"如何养成一个新习惯\",{\"1\":{\"919\":1}}],[\"如何配置bean的作用域呢\",{\"1\":{\"889\":1}}],[\"如何查看redis内存情况\",{\"1\":{\"831\":1}}],[\"如何查看默认垃圾收集器\",{\"0\":{\"700\":1}}],[\"如何修改redis内存设置\",{\"1\":{\"831\":1}}],[\"如何设置修改\",{\"0\":{\"831\":1}}],[\"如何设置最大线程数\",{\"1\":{\"664\":1}}],[\"如何判断数据是否过期\",{\"0\":{\"825\":1}}],[\"如何使用中断标识停止线程\",{\"1\":{\"671\":1}}],[\"如何停止\",{\"1\":{\"671\":1}}],[\"如何实现乐观锁\",{\"1\":{\"669\":1}}],[\"如何创建线程池\",{\"1\":{\"664\":1}}],[\"如何解决并发事务带来的问题\",{\"0\":{\"774\":1}}],[\"如何解决原子性\",{\"1\":{\"658\":1}}],[\"如何解决呢\",{\"1\":{\"387\":1}}],[\"如何调优\",{\"0\":{\"566\":1}}],[\"如何拿到队列尾的那个元素\",{\"1\":{\"522\":1}}],[\"如何动画\",{\"1\":{\"456\":1}}],[\"如何收缩\",{\"1\":{\"450\":1}}],[\"如何清除浮动呢\",{\"1\":{\"433\":1}}],[\"如何获取精灵图的位置http\",{\"1\":{\"419\":1}}],[\"如何防止margin\",{\"1\":{\"387\":1}}],[\"如何知道一个属性是否具有继承性\",{\"1\":{\"376\":1}}],[\"如何选择出新的master\",{\"1\":{\"871\":1}}],[\"如何选择rdb\",{\"0\":{\"862\":1}}],[\"如何选择\",{\"1\":{\"279\":1}}],[\"如何正确驾驭广角\",{\"0\":{\"244\":1}}],[\"如何正确的学习一组\",{\"1\":{\"19\":1}}],[\"如何进行高效的美姿和引导\",{\"0\":{\"224\":1}}],[\"如何讲故事\",{\"0\":{\"190\":1}}],[\"如何通过人与环境\",{\"1\":{\"189\":1}}],[\"如何表达\",{\"1\":{\"189\":1}}],[\"如何策划一场特定情绪拍摄\",{\"0\":{\"189\":1}}],[\"如何引导模特\",{\"0\":{\"129\":1}}],[\"如何和模特快速建立信任进入拍摄状态\",{\"0\":{\"128\":1}}],[\"如何确定拍摄场地\",{\"0\":{\"121\":1}}],[\"如何确定创作流程\",{\"0\":{\"113\":1}}],[\"如何建立自己的摄影风格\",{\"0\":{\"24\":1}}],[\"如何培养自己的审美\",{\"0\":{\"16\":1}}],[\"逆光不同光线的尝试\",{\"1\":{\"241\":1}}],[\"逆光面拍摄角度\",{\"1\":{\"235\":1}}],[\"逆光芦苇的拍摄\",{\"0\":{\"235\":1}}],[\"逆光拍摄\",{\"1\":{\"82\":1}}],[\"逆光拍摄时注意面部补光\",{\"1\":{\"81\":1}}],[\"逆光或侧逆光拍摄的情况下\",{\"1\":{\"79\":1}}],[\"逆光\",{\"1\":{\"76\":1}}],[\"距离相对于line\",{\"1\":{\"458\":1}}],[\"距离空间感\",{\"1\":{\"279\":1}}],[\"距离\",{\"1\":{\"276\":1}}],[\"距离感\",{\"1\":{\"93\":2,\"125\":1}}],[\"距离光源远的面部形成倒三角的亮部\",{\"1\":{\"76\":1}}],[\"距离关系\",{\"1\":{\"33\":2,\"205\":1}}],[\"伦脖郎光\",{\"1\":{\"76\":1}}],[\"侧边栏元素\",{\"1\":{\"459\":1}}],[\"侧光位置拍摄\",{\"1\":{\"236\":1}}],[\"侧视\",{\"1\":{\"179\":1}}],[\"侧躺时\",{\"1\":{\"159\":1}}],[\"侧躺\",{\"1\":{\"159\":1}}],[\"侧向一边\",{\"1\":{\"158\":1}}],[\"侧卧\",{\"1\":{\"150\":1}}],[\"侧逆光拍摄时面部光影相对柔和\",{\"1\":{\"81\":1}}],[\"侧逆光\",{\"1\":{\"76\":1}}],[\"侧面低机位拍摄\",{\"1\":{\"239\":1}}],[\"侧面+前景+长焦镜头拍摄\",{\"1\":{\"229\":1}}],[\"侧面镜头增大人物与环境的交流感\",{\"1\":{\"157\":1}}],[\"侧面正面\",{\"1\":{\"127\":1}}],[\"侧面\",{\"0\":{\"157\":1},\"1\":{\"34\":1,\"151\":1,\"276\":1}}],[\"特别在结合\",{\"1\":{\"972\":1}}],[\"特别适用于线上生产环境下的问题排查\",{\"1\":{\"738\":1}}],[\"特别是innodb存储引擎\",{\"1\":{\"802\":1}}],[\"特别是对于聚合操作\",{\"1\":{\"567\":1}}],[\"特别是对于fielddata缓存\",{\"1\":{\"566\":1}}],[\"特别是在处理大量唯一键时更加高效\",{\"1\":{\"567\":1}}],[\"特\",{\"1\":{\"276\":1}}],[\"特殊的唯一索引\",{\"1\":{\"793\":1}}],[\"特殊符合\",{\"1\":{\"469\":1}}],[\"特殊题材除外\",{\"1\":{\"161\":1}}],[\"特殊\",{\"1\":{\"95\":1}}],[\"特点\",{\"1\":{\"76\":1,\"78\":1,\"79\":1,\"708\":1,\"833\":1}}],[\"特写和局部来表现意境\",{\"1\":{\"234\":1}}],[\"特写10\",{\"1\":{\"45\":1}}],[\"特写镜头具有极强的视觉冲击力\",{\"1\":{\"43\":1}}],[\"特写\",{\"0\":{\"42\":1},\"1\":{\"44\":1,\"191\":2,\"242\":1,\"276\":1}}],[\"日志管理\",{\"1\":{\"892\":1}}],[\"日活统计\",{\"1\":{\"823\":1}}],[\"日均百万级订单交易系统如何设置jvm参数\",{\"1\":{\"738\":1}}],[\"日常妆要求\",{\"1\":{\"124\":1}}],[\"日系少女\",{\"0\":{\"142\":1}}],[\"日系电影感\",{\"1\":{\"114\":1}}],[\"日系\",{\"1\":{\"85\":1,\"114\":1,\"123\":1,\"187\":1}}],[\"日落后半小时\",{\"1\":{\"81\":1}}],[\"日落时的光线较日出更为柔和\",{\"1\":{\"81\":1}}],[\"日落前30分钟\",{\"1\":{\"81\":1}}],[\"日落前半小时左右\",{\"1\":{\"76\":1}}],[\"日落前2\",{\"1\":{\"76\":1}}],[\"日出前的15分钟左右至日出1小时左右\",{\"1\":{\"81\":1}}],[\"日出前后\",{\"1\":{\"81\":1}}],[\"日出之前及太阳下山后前后更容易拍出暗调的片子\",{\"1\":{\"259\":1}}],[\"日出之前\",{\"1\":{\"81\":1}}],[\"日出后半小时\",{\"1\":{\"76\":1}}],[\"日出后1\",{\"1\":{\"76\":1}}],[\"选举\",{\"1\":{\"871\":1}}],[\"选举过程中\",{\"1\":{\"564\":1}}],[\"选中前三个\",{\"1\":{\"373\":1}}],[\"选中高频图层\",{\"1\":{\"256\":1}}],[\"选取某个点\",{\"1\":{\"290\":1}}],[\"选高光比较合适\",{\"1\":{\"288\":1}}],[\"选景思路上尽量寻找从高到低的落差\",{\"1\":{\"233\":1}}],[\"选景决定了照片的基调和呈现效果\",{\"1\":{\"121\":1}}],[\"选景原则\",{\"1\":{\"121\":1}}],[\"选择哪一个更好主要取决于您的实际需求\",{\"1\":{\"974\":1}}],[\"选择出一个新的主节点\",{\"1\":{\"871\":1}}],[\"选择对应消耗cpu高的进程进行attach\",{\"1\":{\"738\":1}}],[\"选择\",{\"1\":{\"565\":1}}],[\"选择排序每次遍历i\",{\"1\":{\"530\":1}}],[\"选择排序法\",{\"0\":{\"525\":1}}],[\"选择某个元素的首行\",{\"1\":{\"374\":1}}],[\"选择特定的一个元素\",{\"1\":{\"374\":1}}],[\"选择box中div的元素\",{\"1\":{\"373\":1}}],[\"选择器的权重\",{\"1\":{\"377\":1}}],[\"选择器组\",{\"0\":{\"372\":1}}],[\"选择器以>分割\",{\"1\":{\"370\":1}}],[\"选择器以空格分割\",{\"1\":{\"370\":1}}],[\"选择器二\",{\"1\":{\"370\":1,\"371\":1}}],[\"选择器一\",{\"1\":{\"370\":1,\"371\":1}}],[\"选择器\",{\"0\":{\"348\":1},\"1\":{\"463\":1}}],[\"选择更精彩的画面\",{\"1\":{\"279\":1}}],[\"选择背景\",{\"1\":{\"279\":1}}],[\"选择背景干净好看\",{\"1\":{\"240\":1}}],[\"选择新建图层\",{\"1\":{\"262\":1}}],[\"选择橡皮擦工具\",{\"1\":{\"257\":1}}],[\"选择柔边缘\",{\"1\":{\"257\":1}}],[\"选择柔光时间段或打柔光\",{\"1\":{\"76\":1}}],[\"选择画笔\",{\"1\":{\"257\":1}}],[\"选择混合器画笔工具\",{\"1\":{\"256\":1}}],[\"选择低频\",{\"1\":{\"256\":2}}],[\"选择模式为柔光\",{\"1\":{\"255\":1}}],[\"选择尺码合适的衣服\",{\"1\":{\"174\":1}}],[\"选择的着装\",{\"1\":{\"140\":1}}],[\"选择适合该风格该主题的服装\",{\"1\":{\"125\":1}}],[\"选择开阔的场地拍摄\",{\"1\":{\"81\":1}}],[\"选择光线相对柔和时进行拍摄\",{\"1\":{\"76\":1}}],[\"选用白色画笔\",{\"1\":{\"6\":1}}],[\"戏剧感\",{\"1\":{\"76\":1}}],[\"全表扫描\",{\"1\":{\"796\":1}}],[\"全称\",{\"1\":{\"730\":1,\"743\":1,\"942\":1}}],[\"全局提交\",{\"1\":{\"968\":1}}],[\"全局提交时\",{\"1\":{\"968\":1}}],[\"全局事务协调器\",{\"1\":{\"967\":1,\"968\":1}}],[\"全局属性data\",{\"0\":{\"461\":1}}],[\"全局清晰\",{\"1\":{\"274\":1}}],[\"全部键里面含有1的有多少个\",{\"1\":{\"823\":1}}],[\"全部选择\",{\"1\":{\"820\":1}}],[\"全部字母小写\",{\"1\":{\"356\":1}}],[\"全部字母大写\",{\"1\":{\"356\":1}}],[\"全部可调\",{\"1\":{\"277\":1}}],[\"全部磨皮\",{\"1\":{\"254\":1}}],[\"全自动\",{\"1\":{\"277\":1}}],[\"全\",{\"1\":{\"276\":1}}],[\"全调\",{\"1\":{\"84\":1}}],[\"全侧光\",{\"1\":{\"76\":1}}],[\"全景+中近景+肢体特写\",{\"1\":{\"191\":1}}],[\"全景10\",{\"1\":{\"45\":1}}],[\"全景\",{\"1\":{\"37\":1,\"44\":1,\"276\":2}}],[\"全景系列\",{\"0\":{\"37\":1}}],[\"三大组件\",{\"0\":{\"967\":1}}],[\"三阶段提交协议\",{\"1\":{\"942\":1}}],[\"三个map\",{\"1\":{\"925\":1}}],[\"三级缓存\",{\"0\":{\"925\":1}}],[\"三步调用\",{\"1\":{\"869\":1}}],[\"三范式在第二范式基础上\",{\"1\":{\"744\":1}}],[\"三者都是set接口的实现类\",{\"1\":{\"626\":1}}],[\"三者的异同\",{\"0\":{\"626\":1}}],[\"三次挥手行不行\",{\"1\":{\"552\":1}}],[\"三次握手的目的是建立可靠的通信信道\",{\"1\":{\"552\":1}}],[\"三次握手\",{\"1\":{\"552\":2}}],[\"三数之和\",{\"0\":{\"492\":1}}],[\"三值语法\",{\"1\":{\"452\":1}}],[\"三看竞争\",{\"1\":{\"299\":1}}],[\"三分法\",{\"1\":{\"278\":1}}],[\"三分构图法\",{\"0\":{\"219\":1},\"1\":{\"234\":1}}],[\"三分构图\",{\"0\":{\"54\":1}}],[\"三庭比例\",{\"0\":{\"168\":1}}],[\"三庭\",{\"1\":{\"165\":1}}],[\"三庭五眼\",{\"0\":{\"165\":1},\"1\":{\"254\":1}}],[\"三色和谐关系\",{\"1\":{\"96\":1}}],[\"三原色的叠加\",{\"1\":{\"88\":1}}],[\"三\",{\"0\":{\"75\":1,\"805\":1},\"1\":{\"454\":1,\"456\":1}}],[\"无论\",{\"1\":{\"822\":1}}],[\"无论内容多少\",{\"1\":{\"384\":2}}],[\"无法处理超过预设速率的突发请求\",{\"1\":{\"948\":1}}],[\"无法进行高效扫描\",{\"1\":{\"793\":1}}],[\"无法卸载\",{\"1\":{\"737\":1}}],[\"无法唤醒\",{\"1\":{\"671\":1}}],[\"无法定义变量\",{\"1\":{\"469\":1}}],[\"无返回结果\",{\"1\":{\"670\":1}}],[\"无返回值\",{\"1\":{\"670\":2}}],[\"无锁\",{\"1\":{\"669\":2}}],[\"无事可做超过一定时间就会收缩到corepoolsize大小\",{\"1\":{\"664\":1}}],[\"无需中心节点\",{\"1\":{\"974\":1}}],[\"无需直接调用nacos\",{\"1\":{\"971\":1}}],[\"无需阻塞等待所有连接\",{\"1\":{\"866\":1}}],[\"无需存储实际的元素值\",{\"1\":{\"822\":1}}],[\"无需加锁也无需等待\",{\"1\":{\"660\":1,\"669\":1}}],[\"无需调用\",{\"1\":{\"603\":1}}],[\"无序\",{\"1\":{\"620\":1}}],[\"无序不可重复\",{\"1\":{\"617\":1}}],[\"无序列表\",{\"1\":{\"406\":1}}],[\"无密码执行方式\",{\"1\":{\"557\":1}}],[\"无差错\",{\"1\":{\"550\":1}}],[\"无连接\",{\"1\":{\"546\":1}}],[\"无参数的构造函数\",{\"1\":{\"513\":1,\"516\":1,\"539\":1}}],[\"无特殊要求\",{\"1\":{\"433\":1}}],[\"无\",{\"1\":{\"403\":1,\"833\":1}}],[\"无任何装饰线\",{\"1\":{\"355\":1}}],[\"无表情\",{\"1\":{\"150\":1}}],[\"无上限\",{\"1\":{\"122\":1}}],[\"无色搭配\",{\"0\":{\"98\":1}}],[\"无色彩\",{\"1\":{\"92\":1}}],[\"无暇\",{\"1\":{\"93\":1}}],[\"无关\",{\"1\":{\"74\":1}}],[\"无力\",{\"1\":{\"33\":1}}],[\"而唯一接收到这条消息的参与者同时也宕机了\",{\"1\":{\"942\":1}}],[\"而bean\",{\"1\":{\"924\":1}}],[\"而b+树插入新节点可能导致节点分裂\",{\"1\":{\"857\":1}}],[\"而在实例化过程中遇到循环依赖会导致死锁\",{\"1\":{\"924\":1}}],[\"而在自动提交模式下\",{\"1\":{\"802\":1}}],[\"而proxy为invocationhandler实现类动态创建一个符合某一接口的代理实例\",{\"1\":{\"892\":1}}],[\"而对于没有实现接口的对象\",{\"1\":{\"892\":1}}],[\"而会立即返回\",{\"1\":{\"865\":1}}],[\"而这一切对用户完全透明\",{\"1\":{\"852\":1}}],[\"而当前读是悲观锁实现的基础\",{\"1\":{\"797\":1}}],[\"而索引一般在内存中\",{\"1\":{\"796\":1}}],[\"而覆盖索引就是把要查询出的列和索引是对应的\",{\"1\":{\"793\":1}}],[\"而无需回表查询\",{\"1\":{\"793\":1}}],[\"而null是需要占用空间的\",{\"1\":{\"764\":1}}],[\"而threadlocalmap可以存储以threadlocal为\",{\"1\":{\"663\":1}}],[\"而线程b是不知道线程a已经修改过的\",{\"1\":{\"658\":1}}],[\"而wait\",{\"1\":{\"653\":1}}],[\"而hash值的空间远小于输入的空间\",{\"1\":{\"638\":1}}],[\"而arraylist可以通过元素快速获取元素对象\",{\"1\":{\"622\":1}}],[\"而基本类型不能作为泛型的参数\",{\"1\":{\"599\":1}}],[\"而基本类型不能表示空值\",{\"1\":{\"599\":1}}],[\"而非未来\",{\"1\":{\"919\":1}}],[\"而非严格的强一致性\",{\"1\":{\"565\":1}}],[\"而非将看到的一切都拍下来\",{\"1\":{\"74\":1}}],[\"而我这边只能一直等待你说话\",{\"1\":{\"552\":1}}],[\"而三次握手最主要的目的就是双方确认自己与对方的发送与接收是正常的\",{\"1\":{\"552\":1}}],[\"而\",{\"1\":{\"551\":1,\"565\":1,\"611\":2,\"663\":2}}],[\"而组合关系描述的是\",{\"1\":{\"521\":1}}],[\"而应该是组合关系\",{\"1\":{\"521\":1}}],[\"而vector作为动态数组\",{\"1\":{\"521\":1}}],[\"而直接使用size\",{\"1\":{\"518\":2}}],[\"而必须给body再设置一个font\",{\"1\":{\"473\":1}}],[\"而inline\",{\"1\":{\"465\":1}}],[\"而其中的文字是有行高的\",{\"1\":{\"458\":1}}],[\"而不得不在内存或磁盘上进行外部排序操作\",{\"1\":{\"796\":1}}],[\"而不管有多少宽度\",{\"1\":{\"435\":1}}],[\"而不是硬编码在应用程序代码中\",{\"1\":{\"884\":1}}],[\"而不是仅依赖其中的一部分\",{\"1\":{\"744\":1}}],[\"而不是整个堆空间\",{\"1\":{\"694\":1}}],[\"而不是无论什么情况都使用重量级锁\",{\"1\":{\"672\":1}}],[\"而不是像synchronized\",{\"1\":{\"662\":1}}],[\"而不是转换为红黑树\",{\"1\":{\"631\":1}}],[\"而不是复用字符串常量池中的\",{\"1\":{\"611\":1}}],[\"而不是一次性加载所有数据\",{\"1\":{\"567\":1}}],[\"而不是capacity\",{\"1\":{\"518\":1}}],[\"而不是随着它的内容滚动\",{\"1\":{\"402\":1}}],[\"而不是给子元素设置\",{\"1\":{\"358\":1}}],[\"而且在执行完内存回收后还会产生内存碎片\",{\"1\":{\"691\":1}}],[\"而且在数据传递时\",{\"1\":{\"550\":1}}],[\"而且第一个操作的执行顺序排在第二个操作之前\",{\"1\":{\"657\":1}}],[\"而且相对于rem还更加有优势\",{\"1\":{\"473\":1}}],[\"而且这2个定位元素必须有设置z\",{\"1\":{\"427\":1}}],[\"而且父元素不脱离标准流\",{\"1\":{\"425\":1}}],[\"而是通过\",{\"1\":{\"972\":1}}],[\"而是存储上一个节点长度和当前长度\",{\"1\":{\"853\":1}}],[\"而是为事务提供一个快照视图\",{\"1\":{\"802\":1}}],[\"而是会去读取行的一个快照\",{\"1\":{\"788\":1}}],[\"而是把这个请求任务委托给父类加载器去完成\",{\"1\":{\"715\":1}}],[\"而是把这个请求委派给父类完成\",{\"1\":{\"679\":1}}],[\"而是暂时保留在内存中\",{\"1\":{\"561\":1}}],[\"而是破坏了栈这种数据结构的封装\",{\"1\":{\"521\":1}}],[\"而是一种感觉\",{\"1\":{\"187\":1}}],[\"而是处在设计好的情境当中表演\",{\"1\":{\"149\":1}}],[\"而是在一定的光照条件下\",{\"1\":{\"92\":1}}],[\"而是自我内心情感的探索\",{\"1\":{\"30\":1}}],[\"而是有意识的进行画面组织\",{\"1\":{\"14\":1}}],[\"而是多方面因素的共同作用\",{\"1\":{\"14\":1}}],[\"双亲委派机制在java\",{\"1\":{\"715\":1}}],[\"双亲委派机制\",{\"0\":{\"715\":1}}],[\"双亲委派\",{\"1\":{\"679\":1}}],[\"双向链表\",{\"1\":{\"619\":1}}],[\"双端队列的实现\",{\"0\":{\"520\":1}}],[\"双值语法\",{\"1\":{\"452\":1}}],[\"双曲线修图\",{\"0\":{\"257\":1}}],[\"双曲线\",{\"1\":{\"254\":1}}],[\"双眼皮贴\",{\"1\":{\"171\":1}}],[\"双下巴\",{\"1\":{\"159\":1}}],[\"双重曝光\",{\"0\":{\"72\":1}}],[\"双人\",{\"1\":{\"57\":1}}],[\"b顺利初始化完毕\",{\"1\":{\"925\":1}}],[\"b实例化的时候发现需要a\",{\"1\":{\"925\":1}}],[\"b两对象在三级缓存中的迁移说明\",{\"1\":{\"925\":1}}],[\"b也通过setter方法注入依赖于bean\",{\"1\":{\"924\":1}}],[\"b依赖c\",{\"1\":{\"924\":1}}],[\"bgsave\",{\"1\":{\"860\":1}}],[\"bgc\",{\"1\":{\"466\":2}}],[\"bkry\",{\"1\":{\"808\":3}}],[\"b+tree叶子节点使用了双向链表链接\",{\"1\":{\"793\":1}}],[\"b+tree\",{\"1\":{\"793\":1}}],[\"b树\",{\"1\":{\"793\":1}}],[\"btree\",{\"1\":{\"751\":2}}],[\"by之后\",{\"1\":{\"746\":1}}],[\"by\",{\"1\":{\"746\":3,\"796\":3,\"801\":1}}],[\"bytes参数\",{\"1\":{\"981\":1}}],[\"bytes\",{\"1\":{\"663\":2}}],[\"byte\",{\"1\":{\"598\":1,\"599\":1,\"663\":4}}],[\"bb\",{\"1\":{\"606\":2,\"609\":1}}],[\"b为另一个引用\",{\"1\":{\"606\":1}}],[\"b=\",{\"1\":{\"595\":2}}],[\"brokenbarrierexception\",{\"1\":{\"668\":1}}],[\"brain\",{\"1\":{\"564\":1}}],[\"break区别\",{\"0\":{\"597\":1}}],[\"breaker\",{\"1\":{\"567\":2}}],[\"break\",{\"1\":{\"494\":1,\"531\":1,\"597\":2,\"671\":1}}],[\"burstcapacity\",{\"1\":{\"936\":1}}],[\"buf\",{\"1\":{\"852\":1}}],[\"buffer中\",{\"1\":{\"796\":1}}],[\"buffer\",{\"1\":{\"561\":2,\"796\":2,\"804\":1}}],[\"bucket\",{\"1\":{\"567\":1,\"644\":2,\"822\":1}}],[\"button\",{\"1\":{\"410\":3}}],[\"button>\",{\"1\":{\"410\":1}}],[\"bfc的高度是auto的情况下\",{\"1\":{\"465\":1}}],[\"bfc解决高度塌陷需要满足两个条件\",{\"1\":{\"465\":1}}],[\"bfc可以解决浮动高度塌陷\",{\"1\":{\"465\":1}}],[\"bfc有什么作用\",{\"1\":{\"465\":1}}],[\"bfc\",{\"1\":{\"465\":2}}],[\"beat\",{\"1\":{\"970\":2}}],[\"beans初始化完成后被执行\",{\"1\":{\"926\":1}}],[\"beans\",{\"1\":{\"926\":3}}],[\"bean相关\",{\"0\":{\"903\":1}}],[\"beanfactory和factorybean的区别\",{\"0\":{\"927\":1}}],[\"beanfactory\",{\"1\":{\"900\":1,\"927\":1}}],[\"bean>\",{\"1\":{\"889\":1}}],[\"bean的生命周期未结束\",{\"1\":{\"925\":1}}],[\"bean的生命周期了解么\",{\"0\":{\"890\":1}}],[\"bean的作用域有哪些\",{\"0\":{\"889\":1}}],[\"bean的定义与注册\",{\"1\":{\"884\":1}}],[\"bean\",{\"0\":{\"885\":1},\"1\":{\"664\":1,\"884\":1,\"888\":1,\"889\":1,\"902\":2,\"907\":2,\"908\":1,\"972\":5}}],[\"begin\",{\"1\":{\"753\":2,\"807\":1}}],[\"between\",{\"1\":{\"444\":1,\"446\":1,\"453\":1}}],[\"before内存够用\",{\"1\":{\"663\":1}}],[\"before另一个操作\",{\"1\":{\"657\":1}}],[\"before总原则\",{\"1\":{\"657\":1}}],[\"before关系来执行的结果一致\",{\"1\":{\"657\":1}}],[\"before关系\",{\"1\":{\"657\":2}}],[\"before原则制定的顺序来执行\",{\"1\":{\"657\":1}}],[\"before原则\",{\"1\":{\"657\":1}}],[\"before\",{\"1\":{\"374\":3,\"588\":2,\"659\":1,\"663\":2}}],[\"babe\",{\"1\":{\"679\":1}}],[\"barrier\",{\"1\":{\"668\":1}}],[\"backdrop\",{\"1\":{\"463\":2}}],[\"backwards\",{\"1\":{\"457\":1}}],[\"background\",{\"0\":{\"398\":1,\"399\":1,\"400\":1,\"401\":1,\"402\":1,\"403\":1},\"1\":{\"348\":1,\"349\":1,\"358\":2,\"369\":1,\"374\":1,\"387\":6,\"398\":2,\"400\":3,\"401\":3,\"403\":5,\"419\":3,\"425\":4,\"431\":10,\"436\":1,\"441\":4,\"442\":6,\"453\":9,\"456\":1,\"457\":1,\"462\":1,\"463\":8,\"466\":1,\"469\":2}}],[\"basically\",{\"1\":{\"934\":1}}],[\"basis的值\",{\"1\":{\"452\":2}}],[\"basis的简写\",{\"1\":{\"452\":1}}],[\"basis用来设置flex\",{\"1\":{\"451\":1}}],[\"basis\",{\"0\":{\"451\":1},\"1\":{\"440\":1,\"452\":2}}],[\"bash\",{\"1\":{\"557\":1}}],[\"base理论\",{\"0\":{\"932\":1,\"934\":1}}],[\"baseexception\",{\"1\":{\"896\":2}}],[\"based\",{\"1\":{\"504\":1,\"564\":1}}],[\"baseline是最后一行文本的x的下方\",{\"1\":{\"458\":1}}],[\"baseline都是谁呢\",{\"1\":{\"458\":1}}],[\"baseline\",{\"1\":{\"445\":1,\"448\":1,\"458\":1}}],[\"banana\",{\"1\":{\"410\":1,\"833\":1}}],[\"baidu\",{\"1\":{\"410\":1}}],[\"bloomfilter\",{\"1\":{\"833\":6}}],[\"bloomfilter<string>\",{\"1\":{\"833\":1}}],[\"blockhandler\",{\"1\":{\"963\":3}}],[\"blockingqueue<runnable>\",{\"1\":{\"664\":1}}],[\"blocked\",{\"1\":{\"651\":1}}],[\"block有文本时\",{\"1\":{\"458\":1}}],[\"block元素浮动后\",{\"1\":{\"430\":1}}],[\"block元素\",{\"1\":{\"430\":1}}],[\"block\",{\"1\":{\"349\":1,\"358\":2,\"374\":1,\"379\":2,\"419\":1,\"431\":1,\"433\":1,\"458\":1,\"463\":1}}],[\"blcok默认的baseline是margin\",{\"1\":{\"458\":1}}],[\"blur\",{\"1\":{\"390\":1,\"463\":5}}],[\"blueviolet\",{\"1\":{\"453\":1}}],[\"blue\",{\"1\":{\"369\":1,\"373\":3,\"391\":1,\"431\":2,\"463\":4}}],[\"book\",{\"1\":{\"919\":1}}],[\"books\",{\"1\":{\"919\":2}}],[\"boot启动的大致流程\",{\"1\":{\"926\":1}}],[\"boot会根据配置自动创建和配置嵌入式web服务器\",{\"1\":{\"926\":1}}],[\"boot会自动扫描项目中的依赖和配置\",{\"1\":{\"923\":1}}],[\"boot的核心特性之一\",{\"1\":{\"926\":1}}],[\"boot的自动装配是基于条件化配置的\",{\"1\":{\"923\":1}}],[\"boot的自动装配是通过\",{\"1\":{\"923\":1}}],[\"boot的自动配置机制\",{\"1\":{\"923\":1}}],[\"boot中有大量的自动配置类\",{\"1\":{\"923\":1}}],[\"boot下实现某块功能\",{\"1\":{\"922\":1}}],[\"boot\",{\"1\":{\"738\":3,\"923\":3,\"926\":7,\"970\":1}}],[\"bootstrapclassloader\",{\"1\":{\"714\":1}}],[\"bootstrap\",{\"1\":{\"679\":1}}],[\"bool\",{\"1\":{\"558\":1,\"559\":1}}],[\"boolean\",{\"1\":{\"504\":2,\"505\":2,\"506\":2,\"512\":1,\"513\":4,\"514\":2,\"516\":5,\"517\":2,\"518\":1,\"519\":1,\"520\":1,\"522\":4,\"523\":3,\"539\":2,\"598\":1,\"671\":3,\"715\":1,\"728\":1,\"840\":1}}],[\"boolean类型\",{\"1\":{\"460\":6,\"671\":1}}],[\"both\",{\"1\":{\"433\":3}}],[\"bottom用来设置元素的具体位置\",{\"1\":{\"423\":1}}],[\"bottom进行定位\",{\"1\":{\"423\":1,\"424\":1,\"425\":1}}],[\"bottom没有任何作用\",{\"1\":{\"422\":1}}],[\"bottom的底部\",{\"1\":{\"458\":1}}],[\"bottom的\",{\"1\":{\"387\":1}}],[\"bottom传递\",{\"1\":{\"387\":1}}],[\"bottom\",{\"1\":{\"383\":1,\"385\":3,\"386\":3,\"387\":4,\"401\":2,\"416\":1,\"423\":1,\"424\":1,\"425\":7,\"431\":1,\"455\":1,\"458\":1,\"469\":1}}],[\"boder用于设置盒子的边框\",{\"1\":{\"386\":1}}],[\"body>\",{\"1\":{\"358\":1,\"387\":3,\"416\":1,\"423\":1,\"425\":2,\"431\":3,\"436\":1,\"441\":1,\"442\":1,\"453\":1}}],[\"body\",{\"1\":{\"358\":2,\"362\":1,\"372\":1,\"404\":1,\"417\":1,\"431\":2,\"466\":3,\"916\":1}}],[\"bordered\",{\"1\":{\"469\":2}}],[\"bordercolor\",{\"1\":{\"469\":2}}],[\"borderwidth\",{\"1\":{\"469\":2}}],[\"border也可以做图形\",{\"1\":{\"416\":1}}],[\"border图形\",{\"0\":{\"416\":1}}],[\"border都布置在width\",{\"1\":{\"393\":2}}],[\"border都包括top\",{\"1\":{\"383\":1}}],[\"border\",{\"1\":{\"383\":1,\"386\":16,\"387\":2,\"393\":2,\"416\":5,\"431\":1,\"469\":4}}],[\"box会在垂直方向上一个挨着一个排布\",{\"1\":{\"465\":1}}],[\"box都是在ifc中布局的\",{\"1\":{\"465\":1}}],[\"box都是在bfc中布局的\",{\"1\":{\"465\":1}}],[\"boxe1\",{\"1\":{\"461\":2}}],[\"boxes顶部对齐\",{\"1\":{\"458\":1}}],[\"boxes一定会想办法包裹住当前行中所有的内容\",{\"1\":{\"458\":1}}],[\"boxes有一个特性\",{\"1\":{\"458\":1}}],[\"boxes的存在\",{\"1\":{\"458\":1}}],[\"box底部对齐\",{\"1\":{\"458\":1}}],[\"box2\",{\"1\":{\"374\":1,\"380\":2,\"469\":1}}],[\"box1\",{\"1\":{\"374\":1,\"469\":1}}],[\"box\",{\"0\":{\"390\":1,\"393\":1},\"1\":{\"370\":2,\"372\":3,\"373\":4,\"374\":1,\"377\":3,\"380\":1,\"387\":9,\"388\":1,\"390\":2,\"391\":1,\"393\":2,\"396\":3,\"398\":1,\"400\":1,\"401\":1,\"403\":1,\"416\":4,\"423\":1,\"424\":1,\"425\":4,\"426\":1,\"431\":2,\"436\":2,\"441\":2,\"442\":2,\"453\":5,\"454\":5,\"455\":1,\"456\":2,\"457\":1,\"458\":1,\"461\":2,\"462\":1,\"463\":5,\"469\":5,\"472\":1}}],[\"bold\",{\"1\":{\"363\":1}}],[\"bitcount\",{\"1\":{\"823\":2}}],[\"bitmap的偏移量是从零开始算的\",{\"1\":{\"823\":1}}],[\"bitmap支持的最大位数是2的32位\",{\"1\":{\"823\":1}}],[\"bitmap\",{\"0\":{\"823\":1},\"1\":{\"872\":1}}],[\"birthdate\",{\"1\":{\"807\":2}}],[\"bigkeys\",{\"1\":{\"874\":1}}],[\"bigint\",{\"1\":{\"751\":1}}],[\"bigdata\",{\"2\":{\"343\":1}}],[\"binary\",{\"1\":{\"801\":1}}],[\"binlog记录\",{\"1\":{\"801\":1}}],[\"binlog\",{\"1\":{\"799\":1,\"801\":1}}],[\"bin目录下\",{\"1\":{\"732\":1}}],[\"bin\",{\"1\":{\"557\":1}}],[\"bisque\",{\"1\":{\"441\":1,\"442\":1,\"453\":1}}],[\"billfish\",{\"1\":{\"20\":1}}],[\"b处理\",{\"1\":{\"257\":2}}],[\"b\",{\"1\":{\"70\":1,\"96\":1,\"281\":1,\"493\":2,\"586\":1,\"587\":6,\"606\":3,\"670\":6,\"793\":1,\"794\":2,\"924\":1}}],[\"其底层实现分布式链路追踪的核心原理主要包括以下几个方面\",{\"1\":{\"977\":1}}],[\"其底层实现服务注册和发现的过程主要包括以下几个关键步骤和技术要点\",{\"1\":{\"971\":1}}],[\"其工作原理可以简单描述为\",{\"1\":{\"953\":1}}],[\"其次redis集群的主节点一般都不会超过1000个\",{\"1\":{\"872\":1}}],[\"其本质原理还是select的方法\",{\"1\":{\"868\":1}}],[\"其本质可以看成是一种排序好的数据结构\",{\"1\":{\"791\":1}}],[\"其发展可以分select\",{\"1\":{\"864\":1}}],[\"其内存占用始终固定在\",{\"1\":{\"822\":1}}],[\"其实这个参数解决不了内存问题\",{\"1\":{\"737\":1}}],[\"其实也是改变了色彩的饱和度\",{\"1\":{\"91\":1}}],[\"其相应输出位于右侧列\",{\"1\":{\"496\":1}}],[\"其中包括任务的执行状态\",{\"1\":{\"975\":1}}],[\"其中包含了处理结果和视图名称\",{\"1\":{\"895\":1}}],[\"其中\",{\"1\":{\"963\":1}}],[\"其中通常会调用\",{\"1\":{\"926\":1}}],[\"其中invocationhandler是一个接口\",{\"1\":{\"892\":1}}],[\"其中验证\",{\"1\":{\"712\":1}}],[\"其中数组下标计算方式为\",{\"1\":{\"632\":1}}],[\"其中n为集群内有资格成为master的节点总数\",{\"1\":{\"564\":1}}],[\"其中n是数组的长度\",{\"1\":{\"494\":1}}],[\"其中有一个主分片和若干副本分片\",{\"1\":{\"561\":1}}],[\"其中的一个处在静止状态\",{\"1\":{\"70\":1}}],[\"其计算和表示方法与时间复杂度类似\",{\"1\":{\"485\":1}}],[\"其顶部将与所在行的顶部对齐\",{\"1\":{\"430\":1}}],[\"其余露出皮肤需要磨皮的地方也应该磨皮\",{\"1\":{\"254\":1}}],[\"其余角度构图避免拍摄模特正脸\",{\"1\":{\"159\":1}}],[\"其他副本称为follower\",{\"1\":{\"982\":1}}],[\"其他执行器此时尝试领取同一任务时就会发现任务已被锁定\",{\"1\":{\"975\":1}}],[\"其他的线程走到这一步拿不到锁就等着\",{\"1\":{\"848\":1}}],[\"其他线程阻塞\",{\"1\":{\"669\":1}}],[\"其他候选节点开始进行master选举\",{\"1\":{\"564\":1}}],[\"其他多余的元素一定要空间等分\",{\"1\":{\"444\":1}}],[\"其他内容在同一行显示\",{\"1\":{\"378\":1}}],[\"其他技巧\",{\"1\":{\"352\":1}}],[\"其他补光工具\",{\"1\":{\"85\":1}}],[\"其他\",{\"1\":{\"6\":1}}],[\"admin\",{\"1\":{\"975\":1}}],[\"addcallback\",{\"1\":{\"982\":1}}],[\"addr\",{\"1\":{\"970\":1}}],[\"addsingleton\",{\"1\":{\"925\":1}}],[\"addfront\",{\"1\":{\"520\":3}}],[\"addfirst\",{\"1\":{\"504\":2,\"505\":1,\"513\":2,\"516\":2,\"539\":1}}],[\"addlast\",{\"1\":{\"504\":1,\"513\":5,\"516\":5,\"520\":3,\"539\":4}}],[\"add\",{\"1\":{\"494\":1,\"504\":4,\"513\":4,\"516\":4,\"521\":1,\"522\":13,\"539\":4,\"623\":1,\"753\":5,\"754\":1,\"758\":1,\"793\":2,\"807\":1,\"808\":2,\"822\":1,\"824\":1}}],[\"a创建过程中需要b\",{\"1\":{\"925\":1}}],[\"a通过setter方法注入依赖于bean\",{\"1\":{\"924\":1}}],[\"a依赖b\",{\"1\":{\"924\":1}}],[\"aop就会使用jdk\",{\"1\":{\"892\":1}}],[\"aop\",{\"0\":{\"891\":1},\"1\":{\"892\":3,\"900\":1}}],[\"aof持久化的实时性更好\",{\"1\":{\"861\":1}}],[\"aof持久化\",{\"0\":{\"861\":1}}],[\"aof\",{\"1\":{\"859\":1}}],[\"ahead\",{\"1\":{\"802\":1}}],[\"a20表示显示匹配行之后的20行文本内容\",{\"1\":{\"738\":1}}],[\"a20\",{\"1\":{\"738\":1}}],[\"await\",{\"1\":{\"667\":3,\"668\":1,\"671\":4}}],[\"awareness功能\",{\"1\":{\"566\":1}}],[\"aqs使用一个volatile的int类型的成员变量来表示同步状态\",{\"1\":{\"665\":1}}],[\"aqs的原理\",{\"1\":{\"665\":1}}],[\"aqs是什么\",{\"1\":{\"665\":1}}],[\"aqs\",{\"0\":{\"665\":1}}],[\"aquamarine\",{\"1\":{\"441\":1,\"442\":1,\"453\":1}}],[\"at模式能够在分布式环境下模拟出类似于传统数据库acid特性的一致性事务行为\",{\"1\":{\"968\":1}}],[\"at\",{\"1\":{\"968\":3}}],[\"ats\",{\"1\":{\"807\":2}}],[\"ato\",{\"1\":{\"658\":1}}],[\"atomicity\",{\"1\":{\"802\":1}}],[\"atomicity原子性\",{\"1\":{\"802\":1}}],[\"atomicinteger\",{\"1\":{\"658\":2,\"660\":1,\"669\":1}}],[\"atomicboolean\",{\"1\":{\"671\":5}}],[\"atomicstampedreference<>\",{\"1\":{\"658\":1}}],[\"atomicstampedreference<integer>\",{\"1\":{\"658\":1}}],[\"atomicstampedreference\",{\"1\":{\"658\":1,\"669\":1}}],[\"atomicreference\",{\"1\":{\"658\":1}}],[\"attachment\",{\"0\":{\"402\":1},\"1\":{\"403\":1}}],[\"ab循环依赖问题只要a的注入方式是setter且singleton\",{\"1\":{\"924\":1}}],[\"aba\",{\"1\":{\"669\":1}}],[\"aba问题解决\",{\"1\":{\"658\":1}}],[\"aba问题\",{\"1\":{\"658\":1}}],[\"abortpolicy\",{\"1\":{\"664\":1}}],[\"abstractqueuedsynchronizer是抽象的队列同步器\",{\"1\":{\"665\":1}}],[\"abstractmap<k\",{\"1\":{\"644\":1}}],[\"absolute\",{\"1\":{\"422\":1,\"425\":6}}],[\"abc123\",{\"1\":{\"670\":1}}],[\"abc\",{\"0\":{\"610\":1},\"1\":{\"670\":1}}],[\"ab\",{\"1\":{\"606\":4,\"609\":5}}],[\"a++时\",{\"1\":{\"595\":1}}],[\"a先自增+1\",{\"1\":{\"595\":1}}],[\"aa==bb\",{\"1\":{\"609\":1}}],[\"aa\",{\"1\":{\"582\":1,\"606\":2,\"609\":1}}],[\"aajianhaoti\",{\"1\":{\"417\":1}}],[\"apache\",{\"1\":{\"953\":1,\"977\":1}}],[\"api可以实现高效的深分页\",{\"1\":{\"567\":1}}],[\"api等工具持续监控集群健康状况\",{\"1\":{\"566\":1}}],[\"api\",{\"1\":{\"566\":1,\"567\":1,\"970\":1,\"971\":1}}],[\"api发送搜索请求到集群中的任意节点\",{\"1\":{\"562\":1}}],[\"api向elasticsearch发送一个index\",{\"1\":{\"561\":1}}],[\"appconfig\",{\"1\":{\"908\":1}}],[\"appclassloader\",{\"1\":{\"679\":1,\"714\":1}}],[\"approximation\",{\"1\":{\"567\":1}}],[\"appid\",{\"1\":{\"558\":1}}],[\"apptype\",{\"1\":{\"558\":2}}],[\"applytoeither\",{\"1\":{\"670\":1}}],[\"applicationrunner\",{\"1\":{\"926\":1}}],[\"applicationlistener\",{\"1\":{\"926\":2,\"972\":1}}],[\"applicationcontext\",{\"1\":{\"884\":1,\"900\":1,\"926\":3}}],[\"application\",{\"1\":{\"557\":2,\"724\":1,\"889\":1,\"916\":1,\"926\":3,\"970\":2}}],[\"apple\",{\"1\":{\"410\":1,\"833\":2}}],[\"appendsync\",{\"1\":{\"861\":1}}],[\"appendfsync\",{\"1\":{\"861\":2}}],[\"appendonly\",{\"1\":{\"861\":1}}],[\"append\",{\"1\":{\"504\":2,\"505\":2,\"506\":3,\"507\":2,\"513\":10,\"516\":10,\"517\":5,\"518\":5,\"519\":5,\"520\":5,\"539\":5,\"859\":1}}],[\"agent会对服务产生的spans进行采样\",{\"1\":{\"977\":1}}],[\"agent\",{\"1\":{\"977\":2}}],[\"age等\",{\"1\":{\"798\":1}}],[\"age\",{\"1\":{\"670\":3,\"746\":1,\"754\":1,\"755\":1,\"756\":1}}],[\"age=\",{\"1\":{\"461\":1}}],[\"aggregation\",{\"1\":{\"567\":1}}],[\"aggregations\",{\"1\":{\"562\":1,\"567\":3}}],[\"aggs\",{\"1\":{\"558\":2}}],[\"acquire\",{\"1\":{\"666\":2}}],[\"account\",{\"1\":{\"557\":1}}],[\"acks的默认值为1\",{\"1\":{\"982\":1}}],[\"ack=y+1\",{\"1\":{\"552\":3}}],[\"ack=x+1\",{\"1\":{\"552\":2}}],[\"ack\",{\"1\":{\"552\":6}}],[\"action=\",{\"1\":{\"410\":2}}],[\"action\",{\"1\":{\"410\":1}}],[\"active必须放在\",{\"1\":{\"373\":1}}],[\"active也能用在其他元素上\",{\"1\":{\"373\":1}}],[\"active\",{\"1\":{\"373\":3,\"431\":2,\"807\":2}}],[\"aspect\",{\"1\":{\"892\":1}}],[\"as\",{\"1\":{\"746\":1}}],[\"async\",{\"1\":{\"670\":2}}],[\"asymptotic\",{\"1\":{\"484\":1}}],[\"aslist\",{\"1\":{\"494\":1}}],[\"aside\",{\"1\":{\"459\":1}}],[\"annotationconfigreactivewebserverapplicationcontext\",{\"1\":{\"926\":1}}],[\"annotationconfigservletwebserverapplicationcontext\",{\"1\":{\"926\":1}}],[\"analysis\",{\"1\":{\"730\":1,\"977\":1}}],[\"an\",{\"1\":{\"517\":2,\"518\":1,\"519\":1,\"520\":2}}],[\"and\",{\"1\":{\"466\":2,\"513\":1,\"516\":1,\"522\":2,\"539\":1,\"565\":1,\"753\":4,\"878\":1}}],[\"animation是animation\",{\"1\":{\"457\":1}}],[\"animation的使用分成两个步骤\",{\"1\":{\"457\":1}}],[\"animation\",{\"1\":{\"457\":23}}],[\"animation动画\",{\"0\":{\"457\":1}}],[\"author\",{\"1\":{\"504\":1,\"505\":2,\"506\":1,\"513\":3,\"514\":1,\"516\":3,\"517\":1,\"522\":4,\"523\":3,\"539\":1}}],[\"automatic\",{\"1\":{\"968\":1}}],[\"autoconfigure包的meta\",{\"1\":{\"923\":1}}],[\"autowired默认的注入方式为bytype\",{\"1\":{\"888\":1}}],[\"autowired和\",{\"0\":{\"888\":1}}],[\"autowired注解可以实现自动装配\",{\"1\":{\"884\":1}}],[\"autowired\",{\"0\":{\"904\":1},\"1\":{\"824\":1,\"887\":1,\"888\":4}}],[\"autoplay\",{\"1\":{\"460\":2}}],[\"auto或initial\",{\"1\":{\"452\":1}}],[\"autofocus>\",{\"1\":{\"461\":1}}],[\"autofocus\",{\"1\":{\"410\":1,\"461\":1}}],[\"auto\",{\"1\":{\"358\":2,\"387\":3,\"400\":2,\"420\":1,\"425\":2,\"431\":2,\"448\":1,\"451\":1,\"455\":3,\"460\":2,\"751\":1,\"884\":1,\"926\":1,\"984\":1}}],[\"auto档\",{\"1\":{\"277\":1}}],[\"audio\",{\"1\":{\"460\":1}}],[\"audio元素\",{\"0\":{\"460\":1}}],[\"arthas可以帮助我们快速定位到消耗cpu资源过高的线程以及引起问题的具体方法调用\",{\"1\":{\"738\":1}}],[\"arthas可以帮助我们迅速定位问题所在\",{\"1\":{\"738\":1}}],[\"arthas会列出当前机器上的java进程列表\",{\"1\":{\"738\":1}}],[\"arthas\",{\"1\":{\"738\":3}}],[\"arthas是一款阿里巴巴开源的java诊断工具\",{\"1\":{\"738\":1}}],[\"article\",{\"1\":{\"459\":1}}],[\"area\",{\"0\":{\"681\":1}}],[\"args\",{\"1\":{\"505\":2,\"506\":1,\"507\":2,\"513\":2,\"514\":1,\"516\":2,\"517\":1,\"518\":1,\"519\":1,\"520\":1,\"522\":2,\"523\":1,\"528\":1,\"539\":1,\"582\":1,\"587\":1,\"588\":2,\"663\":2,\"666\":1,\"667\":1,\"668\":1,\"670\":3,\"671\":5,\"824\":4,\"833\":1,\"926\":2,\"936\":1}}],[\"arr1\",{\"1\":{\"582\":2}}],[\"arraydeque\",{\"1\":{\"521\":1}}],[\"arrayqueue\",{\"1\":{\"516\":11,\"517\":5,\"522\":4}}],[\"arrayqueue类\",{\"1\":{\"516\":1}}],[\"array\",{\"1\":{\"513\":33,\"516\":33,\"539\":15,\"579\":2}}],[\"array类\",{\"1\":{\"513\":1,\"516\":1}}],[\"arraylist<integer>\",{\"1\":{\"623\":2}}],[\"arraylist<>\",{\"1\":{\"494\":1}}],[\"arraylist构造方法有三个\",{\"1\":{\"623\":1}}],[\"arraylist的扩容机制\",{\"0\":{\"623\":1}}],[\"arraylist采用数组存储\",{\"1\":{\"622\":1}}],[\"arraylist底层使用的是object数组\",{\"1\":{\"622\":1}}],[\"arraylist和linkedlist的区别\",{\"0\":{\"622\":1}}],[\"arraylist\",{\"1\":{\"494\":1,\"619\":1,\"623\":6}}],[\"arraystack\",{\"1\":{\"513\":6}}],[\"arraystack类\",{\"1\":{\"513\":1}}],[\"arrays\",{\"1\":{\"494\":2,\"528\":1}}],[\"arr\",{\"1\":{\"490\":2,\"491\":2,\"507\":6,\"527\":8,\"528\":12,\"530\":2,\"531\":8,\"532\":6,\"579\":1,\"582\":4}}],[\"around\",{\"1\":{\"444\":1,\"446\":1}}],[\"a元素等\",{\"1\":{\"454\":1}}],[\"axis方向上有剩余size时\",{\"1\":{\"449\":1}}],[\"axis方向的size\",{\"1\":{\"445\":1}}],[\"axis上的对齐方式\",{\"1\":{\"444\":1,\"446\":1}}],[\"axis的方向\",{\"1\":{\"441\":1}}],[\"axis\",{\"1\":{\"441\":1,\"445\":1,\"450\":1,\"451\":1}}],[\"a><\",{\"1\":{\"431\":11}}],[\"always\",{\"1\":{\"861\":1}}],[\"alibaba\",{\"1\":{\"738\":1,\"931\":4,\"970\":1}}],[\"align都具有继承性\",{\"1\":{\"376\":1}}],[\"align\",{\"0\":{\"358\":1,\"445\":1,\"446\":1,\"448\":1,\"458\":1},\"1\":{\"349\":1,\"358\":3,\"387\":1,\"431\":1,\"440\":3,\"445\":1,\"446\":1,\"455\":2,\"458\":3}}],[\"algorithm\",{\"1\":{\"504\":1,\"505\":2,\"506\":1,\"513\":3,\"516\":3,\"517\":1,\"522\":4,\"523\":3,\"539\":1}}],[\"allkeys\",{\"1\":{\"832\":3}}],[\"alloc\",{\"1\":{\"852\":1}}],[\"allocation\",{\"1\":{\"566\":1}}],[\"allof\",{\"1\":{\"667\":1,\"670\":4}}],[\"allfutures\",{\"1\":{\"667\":2}}],[\"all\",{\"1\":{\"456\":2,\"466\":1,\"565\":3,\"645\":1,\"667\":1,\"796\":3,\"982\":2}}],[\"altert\",{\"1\":{\"789\":1}}],[\"alter\",{\"1\":{\"753\":2,\"754\":1,\"755\":1,\"756\":1,\"758\":1,\"760\":1,\"793\":2,\"808\":5}}],[\"alt=\",{\"1\":{\"425\":1}}],[\"alt\",{\"1\":{\"383\":1,\"416\":1,\"426\":1,\"431\":1,\"442\":1,\"444\":6,\"807\":1}}],[\"after内存不够\",{\"1\":{\"663\":2}}],[\"after内存够用\",{\"1\":{\"663\":3}}],[\"after伪元素\",{\"1\":{\"433\":1}}],[\"after\",{\"1\":{\"374\":4,\"433\":1,\"565\":1,\"588\":2,\"663\":2}}],[\"available\",{\"1\":{\"934\":1}}],[\"availability\",{\"1\":{\"933\":1}}],[\"av\",{\"1\":{\"277\":1}}],[\"a\",{\"1\":{\"70\":1,\"96\":1,\"277\":1,\"299\":1,\"373\":4,\"378\":1,\"392\":1,\"404\":1,\"431\":2,\"469\":1,\"493\":2,\"521\":2,\"587\":6,\"606\":4,\"669\":1,\"670\":4,\"794\":1,\"924\":1,\"925\":1,\"933\":1}}],[\"快照\",{\"1\":{\"859\":1}}],[\"快照即记录的历史版本\",{\"1\":{\"788\":1}}],[\"快照读存储在哪里呢\",{\"1\":{\"797\":1}}],[\"快照读是mvcc实现的基础\",{\"1\":{\"797\":1}}],[\"快照读情况下\",{\"1\":{\"788\":1}}],[\"快照读\",{\"1\":{\"788\":1,\"797\":1}}],[\"快捷健\",{\"1\":{\"352\":1}}],[\"快捷键e\",{\"1\":{\"257\":1}}],[\"快捷键ctrl+g\",{\"1\":{\"256\":1}}],[\"快捷键x\",{\"1\":{\"255\":1}}],[\"快捷键b\",{\"1\":{\"255\":1}}],[\"快捷键\",{\"0\":{\"248\":1},\"1\":{\"250\":1}}],[\"快\",{\"1\":{\"273\":1}}],[\"快门优先挡位\",{\"1\":{\"277\":1}}],[\"快门5秒\",{\"1\":{\"273\":1}}],[\"快门慢\",{\"1\":{\"273\":4}}],[\"快门快\",{\"1\":{\"273\":4}}],[\"快门速度可调\",{\"1\":{\"277\":1}}],[\"快门速度自动\",{\"1\":{\"277\":1}}],[\"快门速度\",{\"1\":{\"273\":2}}],[\"快门速度1\",{\"1\":{\"273\":1}}],[\"快门速度慢\",{\"1\":{\"273\":1}}],[\"快门速度快\",{\"1\":{\"273\":1}}],[\"快门\",{\"0\":{\"273\":1},\"1\":{\"275\":2}}],[\"快门控制\",{\"0\":{\"70\":1}}],[\"快速去除人物雀斑\",{\"0\":{\"6\":1}}],[\"寻找有通道感有纵深的位置\",{\"1\":{\"236\":1}}],[\"寻找距离墙比较近\",{\"1\":{\"231\":1}}],[\"寻找红墙旁边有大树或者竹林的位置\",{\"1\":{\"231\":1}}],[\"寻找\",{\"1\":{\"68\":1,\"127\":1}}],[\"荷兰角\",{\"1\":{\"66\":1}}],[\"躁动\",{\"1\":{\"66\":1}}],[\"该模式的延迟会很高\",{\"1\":{\"982\":1}}],[\"该实例在整个web应用中有效\",{\"1\":{\"889\":1}}],[\"该实例仅在当前全局会话内有效\",{\"1\":{\"889\":1}}],[\"该实例仅在当前会话内有效\",{\"1\":{\"889\":1}}],[\"该实例仅在当前http请求内有效\",{\"1\":{\"889\":1}}],[\"该ip地址访问首页的次数=\",{\"1\":{\"822\":1}}],[\"该级别可以防止脏读\",{\"1\":{\"781\":1}}],[\"该命令将每隔1秒\",{\"1\":{\"727\":1}}],[\"该接口最终会调用java\",{\"1\":{\"715\":1}}],[\"该方法也仅仅是将线程对象的中断标识设成true\",{\"1\":{\"671\":1}}],[\"该资源任意一个时刻只由一个线程占用\",{\"1\":{\"652\":1}}],[\"该程序能正确执行吗\",{\"0\":{\"602\":1}}],[\"该节点就被选为新的master节点\",{\"1\":{\"564\":1}}],[\"该图像是由从原点发出的两种或者多种颜色之间的逐步过渡组成\",{\"1\":{\"463\":1}}],[\"该种构图方式人物看向画外\",{\"1\":{\"64\":1}}],[\"该点称之为视点\",{\"1\":{\"33\":1}}],[\"使其保持稳定\",{\"1\":{\"948\":1}}],[\"使其能够对外提供http服务\",{\"1\":{\"926\":1}}],[\"使此hash值更散列\",{\"1\":{\"640\":1}}],[\"使得复杂的微服务架构中的请求路径变得透明和可追溯\",{\"1\":{\"977\":1}}],[\"使得服务间调用变得更加简洁\",{\"1\":{\"953\":1}}],[\"使得开发者可以快速构建和部署微服务应用\",{\"1\":{\"926\":1}}],[\"使得web应用程序的开发更加模块化和灵活\",{\"1\":{\"895\":1}}],[\"使得redis集群的管理更加简单和可靠\",{\"1\":{\"871\":1}}],[\"使得此点之前的所有读写操作都执行后才可以开始执行此点之后的操作\",{\"1\":{\"659\":1}}],[\"使得所有的强制转换都是自动隐式实现的\",{\"1\":{\"578\":1}}],[\"使得子类继承了父类所有公有方法\",{\"1\":{\"521\":1}}],[\"使得它们的和等于0减去第一个数\",{\"1\":{\"494\":1}}],[\"使得\",{\"1\":{\"493\":1}}],[\"使得画面更加干净\",{\"1\":{\"227\":1}}],[\"使之汇聚到画面的焦点\",{\"1\":{\"222\":1}}],[\"使画面中的景物形成轴对称或者中心对称\",{\"1\":{\"220\":1}}],[\"使画面呈现一定的色彩倾向\",{\"1\":{\"95\":1}}],[\"使肩部变高\",{\"1\":{\"175\":1}}],[\"使人的脸更加立体\",{\"1\":{\"166\":1}}],[\"使视网膜收缩\",{\"1\":{\"93\":1}}],[\"使用探针\",{\"1\":{\"977\":1}}],[\"使用客户端主动上报心跳的方式\",{\"1\":{\"970\":1}}],[\"使用数据库默认的隔禅级别\",{\"1\":{\"899\":1}}],[\"使用注解\",{\"1\":{\"896\":1}}],[\"使用注意\",{\"1\":{\"373\":1}}],[\"使用以及销毁等阶段\",{\"1\":{\"884\":1}}],[\"使用watch命令\",{\"1\":{\"879\":1}}],[\"使用单进程就能实现同时处理多个客户端的连接\",{\"1\":{\"864\":1}}],[\"使用压缩列表保存时哈希集合中单个元素的最大长度\",{\"1\":{\"853\":1}}],[\"使用压缩列表保存时哈希表集合中的最大元素个数\",{\"1\":{\"853\":1}}],[\"使用互斥锁\",{\"1\":{\"848\":1}}],[\"使用guava库中的bloomfilter类\",{\"1\":{\"833\":1}}],[\"使用512m内存就可以存储42\",{\"1\":{\"823\":1}}],[\"使用普通索引作为查询条件\",{\"1\":{\"796\":1}}],[\"使用表中的多个字段创建索引\",{\"1\":{\"793\":1}}],[\"使用索引也不一定能够带来很大提升\",{\"1\":{\"792\":1}}],[\"使用dashboard命令可以直观地看到系统的总体运行情况\",{\"1\":{\"738\":1}}],[\"使用div元素来实现\",{\"1\":{\"406\":1}}],[\"使用中间件提高程序效率\",{\"1\":{\"736\":1}}],[\"使用阿里arthas\",{\"1\":{\"735\":1}}],[\"使用内存分析工具分析文件\",{\"1\":{\"735\":1}}],[\"使用2\",{\"1\":{\"729\":1}}],[\"使用1\",{\"1\":{\"729\":1}}],[\"使用new关键字为其创建对象实例\",{\"1\":{\"712\":1}}],[\"使用了读屏障\",{\"1\":{\"709\":1}}],[\"使用了cas\",{\"1\":{\"658\":1}}],[\"使用这种方式\",{\"1\":{\"693\":1}}],[\"使用自旋会消耗cpu\",{\"1\":{\"672\":1}}],[\"使用set实现抽奖系统如何做\",{\"1\":{\"819\":1}}],[\"使用signal\",{\"1\":{\"671\":1}}],[\"使用scroll\",{\"1\":{\"567\":1}}],[\"使用juc包中condition的await\",{\"1\":{\"671\":1}}],[\"使用java7之后的try\",{\"1\":{\"573\":1}}],[\"使用object中的notify\",{\"1\":{\"671\":1}}],[\"使用object中的wait\",{\"1\":{\"671\":1}}],[\"使用的屏障\",{\"1\":{\"668\":1}}],[\"使用完\",{\"1\":{\"663\":1}}],[\"使用tt\",{\"1\":{\"738\":1}}],[\"使用threadlocal来存储和管理数据库会话的\",{\"1\":{\"663\":1}}],[\"使用top的值\",{\"1\":{\"385\":1}}],[\"使用方法\",{\"1\":{\"662\":1}}],[\"使用方式\",{\"1\":{\"466\":1}}],[\"使用arthas\",{\"1\":{\"738\":1}}],[\"使用atomicinteger\",{\"1\":{\"658\":1}}],[\"使用aggs\",{\"1\":{\"567\":1}}],[\"使用mat等工具分析一下\",{\"1\":{\"737\":1}}],[\"使用map\",{\"1\":{\"633\":2}}],[\"使用media属性为style\",{\"1\":{\"466\":1}}],[\"使用指南\",{\"2\":{\"591\":1,\"612\":1,\"646\":1,\"739\":1,\"880\":1}}],[\"使用要慎重\",{\"1\":{\"590\":1}}],[\"使用场景\",{\"0\":{\"579\":1},\"1\":{\"833\":1}}],[\"使用elasticsearch自带的cluster\",{\"1\":{\"566\":1}}],[\"使用em单位\",{\"1\":{\"361\":1}}],[\"使用过滤器bitset查询\",{\"1\":{\"566\":1}}],[\"使用精确查询或过滤条件缩小搜索范围\",{\"1\":{\"566\":1}}],[\"使用递归实现\",{\"1\":{\"509\":1}}],[\"使用虚拟头节点\",{\"1\":{\"507\":1}}],[\"使用双指针方法来查找另外两个数\",{\"1\":{\"494\":1}}],[\"使用双指针查找另外两个数\",{\"1\":{\"494\":1}}],[\"使用less工具对代码进行编译\",{\"1\":{\"469\":1}}],[\"使用相对单位的好处\",{\"1\":{\"467\":1}}],[\"使用于打印模式\",{\"1\":{\"466\":1}}],[\"使用keyframes定义动画序列\",{\"1\":{\"457\":1}}],[\"使用completablefuture也可以实现countdownlatch功能\",{\"1\":{\"667\":1}}],[\"使用composite聚合代替terms聚合\",{\"1\":{\"567\":1}}],[\"使用colspan\",{\"1\":{\"409\":1}}],[\"使用curator等工具进行索引管理和维护\",{\"1\":{\"566\":1}}],[\"使用css定义的变量\",{\"1\":{\"463\":1}}],[\"使用clear属性\",{\"1\":{\"433\":1}}],[\"使用requestratelimitergatewayfilterfactory来配置基于令牌桶算法的限流策略\",{\"1\":{\"936\":1}}],[\"使用rowspan\",{\"1\":{\"409\":1}}],[\"使用right的值\",{\"1\":{\"385\":1}}],[\"使用元素语义化的方式实现\",{\"1\":{\"406\":1}}],[\"使用元素的名称\",{\"1\":{\"368\":1}}],[\"使用列表元素\",{\"1\":{\"406\":1}}],[\"使用伪元素的过程中\",{\"1\":{\"374\":1}}],[\"使用举例\",{\"1\":{\"373\":1}}],[\"使用\",{\"0\":{\"951\":1,\"966\":1},\"1\":{\"368\":2,\"371\":2,\"661\":1,\"664\":1,\"712\":1,\"737\":1,\"890\":2,\"918\":1}}],[\"使用率\",{\"1\":{\"328\":1}}],[\"使用配置文件校正\",{\"1\":{\"293\":1}}],[\"使用曲线\",{\"1\":{\"262\":1}}],[\"使用短焦镜头时\",{\"1\":{\"207\":1}}],[\"使用道具\",{\"1\":{\"169\":1}}],[\"使用慢门拍摄人物奔跑\",{\"1\":{\"127\":1}}],[\"使用需符合拍摄主题\",{\"1\":{\"126\":1}}],[\"使用前侧光\",{\"1\":{\"81\":1}}],[\"使用补光设备\",{\"1\":{\"79\":1}}],[\"使用补光灯对人脸进行补光\",{\"1\":{\"79\":1}}],[\"使用反光板对人脸进行补光\",{\"1\":{\"79\":1}}],[\"使用漫反射\",{\"1\":{\"78\":1}}],[\"使用窗帘\",{\"1\":{\"78\":1}}],[\"使用柔光镜或欧根纱拍摄\",{\"1\":{\"78\":1}}],[\"使用最多的光线\",{\"1\":{\"76\":1}}],[\"使用该种构图方式应注意风格及情绪表达\",{\"1\":{\"60\":1}}],[\"使模特头部置于画面底部\",{\"1\":{\"60\":1}}],[\"稳定性和安全性\",{\"1\":{\"564\":1}}],[\"稳定\",{\"1\":{\"57\":1,\"279\":3}}],[\"亭廊等建筑进行构图\",{\"1\":{\"56\":1}}],[\"门口\",{\"1\":{\"79\":1}}],[\"门缝\",{\"1\":{\"56\":1}}],[\"门框\",{\"1\":{\"56\":1,\"160\":1}}],[\"门框的遮挡\",{\"1\":{\"33\":1}}],[\"框起来的构图方式\",{\"1\":{\"223\":1}}],[\"框架中用到的设计模式\",{\"0\":{\"900\":1}}],[\"框架\",{\"1\":{\"884\":1}}],[\"框架式构图法\",{\"0\":{\"223\":1}}],[\"框架构图\",{\"0\":{\"56\":1}}],[\"框中框\",{\"1\":{\"56\":1}}],[\"可视化展示\",{\"1\":{\"977\":1}}],[\"可根据实际需要调整\",{\"1\":{\"970\":1}}],[\"可选配置\",{\"1\":{\"953\":1}}],[\"可选的withscores参数表示是否同时返回成员的分数\",{\"1\":{\"821\":1}}],[\"可选的类型\",{\"1\":{\"561\":1}}],[\"可用性\",{\"1\":{\"933\":1}}],[\"可用内存\",{\"1\":{\"330\":1}}],[\"可标注任意类为spring组件\",{\"1\":{\"905\":1}}],[\"可串行化\",{\"0\":{\"781\":1}}],[\"可预测的停顿时间模型\",{\"1\":{\"708\":1}}],[\"可达性分析算法中枚举根节点\",{\"1\":{\"710\":1}}],[\"可达性分析算法\",{\"0\":{\"687\":1}}],[\"可通过\",{\"1\":{\"684\":1}}],[\"可循环\",{\"1\":{\"668\":1}}],[\"可中断\",{\"1\":{\"662\":1}}],[\"可重复读隔离级别下\",{\"1\":{\"785\":1}}],[\"可重复读\",{\"0\":{\"780\":1},\"1\":{\"782\":1}}],[\"可重复的\",{\"1\":{\"617\":2}}],[\"可重入锁\",{\"1\":{\"660\":1,\"669\":1}}],[\"可见性\",{\"1\":{\"657\":1}}],[\"可定制排序\",{\"1\":{\"625\":1}}],[\"可指定多个\",{\"1\":{\"588\":1}}],[\"可靠性问题\",{\"1\":{\"942\":1}}],[\"可靠\",{\"1\":{\"546\":1}}],[\"可否原地完成\",{\"1\":{\"526\":1}}],[\"可是\",{\"1\":{\"522\":1}}],[\"可行性\",{\"1\":{\"482\":1}}],[\"可能是\",{\"1\":{\"916\":1}}],[\"可能是由于年轻代太小\",{\"1\":{\"738\":1}}],[\"可能无法释放锁\",{\"1\":{\"840\":1}}],[\"可能要记录更多的内容\",{\"1\":{\"801\":1}}],[\"可能用到的索引\",{\"1\":{\"796\":2}}],[\"可能导致哈希桶重新分配\",{\"1\":{\"793\":1}}],[\"可能存在内存泄漏\",{\"1\":{\"737\":1}}],[\"可能会使用如下形式\",{\"1\":{\"970\":1}}],[\"可能会导致生成的id不唯一\",{\"1\":{\"938\":1}}],[\"可能会导致脏读\",{\"1\":{\"778\":1}}],[\"可能会调用业务逻辑组件来处理请求\",{\"1\":{\"895\":1}}],[\"可能会二次查询\",{\"1\":{\"793\":1}}],[\"可能会依赖同一个第三方类库的不同版本\",{\"1\":{\"716\":1}}],[\"可能会遇到性能下降\",{\"1\":{\"566\":1}}],[\"可能交替执行\",{\"1\":{\"698\":1}}],[\"可能采用跳跃列表\",{\"1\":{\"563\":1}}],[\"可能还会根据指针或主键再到数据文件或表中查询\",{\"1\":{\"793\":1}}],[\"可能还会执行二次排序\",{\"1\":{\"562\":1}}],[\"可能还需要结合具体的业务场景和日志分析\",{\"1\":{\"738\":1}}],[\"可能还有一些数据没有发完\",{\"1\":{\"552\":1}}],[\"可能出现资源未释放或数据丢失的风险\",{\"1\":{\"552\":1}}],[\"可能的附加值\",{\"1\":{\"470\":1}}],[\"可能背景图片部分看不见\",{\"1\":{\"400\":1}}],[\"可改变元素的大小\",{\"1\":{\"454\":1}}],[\"可有可无\",{\"1\":{\"403\":1}}],[\"可穿挂脖裙\",{\"1\":{\"174\":1}}],[\"可仰拍弱化额头存在感\",{\"1\":{\"171\":1}}],[\"可平拍\",{\"1\":{\"163\":1}}],[\"可适当使用对角线构图\",{\"1\":{\"159\":1}}],[\"可爱\",{\"1\":{\"142\":1}}],[\"可爱活力\",{\"1\":{\"142\":1}}],[\"可额外对画面进行补光\",{\"1\":{\"81\":1}}],[\"可修饰面部瑕疵\",{\"1\":{\"76\":1}}],[\"可利用仰拍用植物做前景构图丰富画面层次\",{\"1\":{\"55\":1}}],[\"可以将收集到的分布式链路信息以拓扑图和调用链详情等形式展现出来\",{\"1\":{\"977\":1}}],[\"可以将参数设置为系统可用内存的70\",{\"1\":{\"804\":1}}],[\"可以实现服务降级\",{\"1\":{\"953\":1}}],[\"可以实现清除浮动的效果\",{\"1\":{\"465\":1}}],[\"可以轻松集成到各种系统中\",{\"1\":{\"938\":1}}],[\"可以生成4096个id\",{\"1\":{\"938\":1}}],[\"可以分配1024台机器\",{\"1\":{\"938\":1}}],[\"可以分为checked\",{\"1\":{\"571\":1}}],[\"可以避免脏读和不可重复读\",{\"1\":{\"899\":1}}],[\"可以避免脏读\",{\"1\":{\"899\":1}}],[\"可以对资源进行限流\",{\"1\":{\"963\":1}}],[\"可以对bean的初始化和销毁过程进行定制化操作\",{\"1\":{\"890\":1}}],[\"可以对基本类型进行更多的操作\",{\"1\":{\"599\":1}}],[\"可以产生2的16次方=65536个\",{\"1\":{\"872\":1}}],[\"可以防止脑裂么\",{\"1\":{\"871\":1}}],[\"可以一次管理更多的client\",{\"1\":{\"868\":1}}],[\"可以监视多个描述符\",{\"1\":{\"866\":1}}],[\"可以选择使用rdb\",{\"1\":{\"862\":1}}],[\"可以把要删除或者要更新的值暂存消息队列中\",{\"1\":{\"849\":1}}],[\"可以解决下面类似需求\",{\"1\":{\"823\":1}}],[\"可以从消息队列中重新读取\",{\"1\":{\"849\":1}}],[\"可以从这些计数中得出一个近似的基数\",{\"1\":{\"822\":1}}],[\"可以从以下几个方面进行调优和部署策略调整\",{\"1\":{\"566\":1}}],[\"可以估算出大概率下集合基数的大小\",{\"1\":{\"822\":1}}],[\"可以先看分表是否满足业务的需求和未来增长\",{\"1\":{\"804\":1}}],[\"可以为空\",{\"1\":{\"793\":1}}],[\"可以阻止脏读和不可重复读\",{\"1\":{\"780\":1}}],[\"可以阻止脏读\",{\"1\":{\"779\":1}}],[\"可以重复执行\",{\"0\":{\"753\":1}}],[\"可以用69年\",{\"1\":{\"938\":1}}],[\"可以用来设置年轻代与老年代的相对大小\",{\"1\":{\"738\":1}}],[\"可以用于优化内存使用和计算效率\",{\"1\":{\"567\":1}}],[\"可以显示c\",{\"1\":{\"731\":1}}],[\"可以显示本地或者远程虚拟机进程中的类装载\",{\"1\":{\"727\":1}}],[\"可以让在程序运行前打印出用户手动设置或者jvm自动设置的xx选项\",{\"1\":{\"719\":1}}],[\"可以让模特做抬头\",{\"1\":{\"224\":1}}],[\"可以有多个子节点\",{\"1\":{\"793\":1}}],[\"可以有多个gc线程同时工作\",{\"1\":{\"708\":1}}],[\"可以有效的避开人群和杂乱\",{\"1\":{\"227\":1}}],[\"可以有效的减少到背景拍到的内容\",{\"1\":{\"227\":1}}],[\"可以帮助我们简化异步编程的复杂性\",{\"1\":{\"670\":1}}],[\"可以帮助我们在前期化妆和修图的时候对人物的面部进行调整\",{\"1\":{\"166\":1}}],[\"可以被其他bean或组件使用\",{\"1\":{\"890\":1}}],[\"可以被设置为\",{\"1\":{\"669\":1}}],[\"可以被搜索到\",{\"1\":{\"561\":1}}],[\"可以理解为只是threadlocalmap的封装\",{\"1\":{\"663\":1}}],[\"可以精确唤醒\",{\"1\":{\"662\":1}}],[\"可以保证不止一个broker接收到消息\",{\"1\":{\"982\":1}}],[\"可以保证的是\",{\"1\":{\"833\":1}}],[\"可以保证数据库表中每一行数据的唯一性\",{\"1\":{\"792\":1}}],[\"可以保证被它修饰的方法或者代码块在任意时刻只能有一个线程执行\",{\"1\":{\"661\":1}}],[\"可以保证即使你所在的城市很少有好看的景\",{\"1\":{\"35\":1}}],[\"可以直接调用thread类中的run方法吗\",{\"0\":{\"656\":1}}],[\"可以直接操作内存\",{\"1\":{\"590\":1}}],[\"可以提高代码的重用\",{\"1\":{\"604\":1}}],[\"可以快速地创建新的类\",{\"1\":{\"604\":1}}],[\"可以同时定义多个泛型\",{\"1\":{\"579\":1}}],[\"可以不处理\",{\"1\":{\"571\":1}}],[\"可以考虑时间序列索引模式\",{\"1\":{\"567\":1}}],[\"可以考虑采用批处理的方式\",{\"1\":{\"567\":1}}],[\"可以考虑使用bitset\",{\"1\":{\"566\":1}}],[\"可以考虑使用ssd硬盘\",{\"1\":{\"566\":1}}],[\"可以限制聚合上下文的内存使用\",{\"1\":{\"567\":1}}],[\"可以设定size限制返回的桶数\",{\"1\":{\"567\":1}}],[\"可以设置多个值\",{\"1\":{\"454\":1}}],[\"可以设置任意非负数字\",{\"1\":{\"449\":1,\"450\":1}}],[\"可以设置任意整数\",{\"1\":{\"447\":1}}],[\"可以设置3个值\",{\"1\":{\"402\":1}}],[\"可以设置具体的数值\",{\"1\":{\"401\":1}}],[\"可以设置父盒子的overflow\",{\"1\":{\"387\":1}}],[\"可以设置父盒子的box\",{\"1\":{\"387\":1}}],[\"可以设置最大宽度和最小宽度\",{\"1\":{\"384\":1}}],[\"可以设置透明度\",{\"1\":{\"380\":1}}],[\"可以设置宽度和高度\",{\"1\":{\"379\":2}}],[\"可以设置1个或者多个字体名称\",{\"1\":{\"362\":1}}],[\"可以采用滚动索引\",{\"1\":{\"566\":1}}],[\"可以是一个单词\",{\"1\":{\"563\":1}}],[\"可以\",{\"1\":{\"526\":1}}],[\"可以满足在两段进行插入和删除\",{\"1\":{\"521\":1}}],[\"可以在周期性数据输岀时\",{\"1\":{\"727\":1}}],[\"可以在输出信息前加上一个timestamp列\",{\"1\":{\"727\":1}}],[\"可以在指定的时间后自行返回而不是像waiting那样一直等待\",{\"1\":{\"651\":1}}],[\"可以在1这个位置插入一个666\",{\"1\":{\"521\":1}}],[\"可以在下面留言\",{\"1\":{\"0\":1}}],[\"可以具备rem之前所有的优点\",{\"1\":{\"473\":1}}],[\"可以动态的修改html的font\",{\"1\":{\"472\":1}}],[\"可以使文本或其他元素的大小与页面上的其他内容相对应\",{\"1\":{\"467\":1}}],[\"可以使用trace命令\",{\"1\":{\"738\":1}}],[\"可以使用thread命令\",{\"1\":{\"738\":1}}],[\"可以使用comparator接口\",{\"1\":{\"625\":1}}],[\"可以使用comparable接口\",{\"1\":{\"625\":1}}],[\"可以使用不同的索引或者ilm\",{\"1\":{\"566\":1}}],[\"可以使用\",{\"1\":{\"457\":1,\"908\":1}}],[\"可以使用margin\",{\"1\":{\"422\":1}}],[\"可以使用道具遮挡的方式进行拍摄\",{\"1\":{\"208\":1}}],[\"可以使用前侧光侧光光位拍摄让面部更立体\",{\"1\":{\"172\":1}}],[\"可以根据预先设定的规则\",{\"1\":{\"956\":1}}],[\"可以根据配置的负载均衡策略选择目标服务实例\",{\"1\":{\"953\":1}}],[\"可以根据数据规模的变化自动调整索引层次\",{\"1\":{\"857\":1}}],[\"可以根据设备类型来修改页面\",{\"1\":{\"466\":1}}],[\"可以根据需求购买假发片\",{\"1\":{\"124\":1}}],[\"可以决定\",{\"1\":{\"456\":1}}],[\"可以看作是相对定位和固定\",{\"1\":{\"426\":1}}],[\"可以给绝对定位元素设置以下属性\",{\"1\":{\"425\":2}}],[\"可以给模特看\",{\"1\":{\"128\":1}}],[\"可以随意设置宽高\",{\"1\":{\"425\":1}}],[\"可以随意调换顺序\",{\"1\":{\"366\":1}}],[\"可以任意切换颜色\",{\"1\":{\"418\":1}}],[\"可以简写border\",{\"1\":{\"386\":1}}],[\"可以包含其他任何元素\",{\"1\":{\"379\":1}}],[\"可以争对首字母设置属性\",{\"1\":{\"374\":1}}],[\"可以省略\",{\"1\":{\"366\":1}}],[\"可以通过实现该接口定义横切逻辑\",{\"1\":{\"892\":1}}],[\"可以通过\",{\"1\":{\"888\":1,\"890\":2}}],[\"可以通过watch命令配合multi\",{\"1\":{\"879\":1}}],[\"可以通过window\",{\"1\":{\"468\":1}}],[\"可以通过修改config\",{\"1\":{\"842\":1}}],[\"可以通过参数\",{\"1\":{\"683\":1}}],[\"可以通过回调的方式处理计算结果\",{\"1\":{\"670\":1}}],[\"可以通过left\",{\"1\":{\"423\":1,\"424\":1,\"425\":1}}],[\"可以通过position属性来进行设置\",{\"1\":{\"422\":1}}],[\"可以通过增删css来调试网页样式\",{\"1\":{\"352\":1}}],[\"可以通过删除某些元素来查看网页结构\",{\"1\":{\"352\":1}}],[\"可以通过改变高低机位控制\",{\"1\":{\"76\":1}}],[\"可以控制某一种颜色的变化\",{\"1\":{\"290\":1}}],[\"可以调整页面或者调试工具的字体大小\",{\"1\":{\"352\":1}}],[\"可以调整颜色\",{\"1\":{\"289\":1}}],[\"可以调大iso\",{\"1\":{\"275\":1}}],[\"可以拍剪影\",{\"1\":{\"241\":1}}],[\"可以拍特写\",{\"1\":{\"224\":1}}],[\"可以利用衣袖进行遮挡\",{\"1\":{\"236\":1}}],[\"可以多选择拍摄大场景\",{\"1\":{\"235\":1}}],[\"可以多拍背和锁骨\",{\"1\":{\"175\":1}}],[\"可以微笑拍侧脸\",{\"1\":{\"173\":1}}],[\"可以化咬唇妆\",{\"1\":{\"168\":1}}],[\"可以加卧蚕弱化人物中庭的比例\",{\"1\":{\"168\":1}}],[\"可以双脚离地翘起\",{\"1\":{\"161\":1}}],[\"可以正面看镜头\",{\"1\":{\"156\":1}}],[\"可以靠近的\",{\"1\":{\"125\":1}}],[\"可以和模特商量共同修改\",{\"1\":{\"122\":1}}],[\"可以作为被摄物体的轮廓光比\",{\"1\":{\"76\":1}}],[\"可以平衡画面\",{\"1\":{\"64\":1}}],[\"环境配置来源于多个地方\",{\"1\":{\"926\":1}}],[\"环境亮度较弱\",{\"1\":{\"275\":1}}],[\"环境亮度一般\",{\"1\":{\"275\":1}}],[\"环境亮度足够\",{\"1\":{\"275\":1}}],[\"环境光线好的地方拍\",{\"1\":{\"273\":1}}],[\"环境的美好\",{\"1\":{\"212\":1}}],[\"环境的大而空与人物的小和实形成对比\",{\"1\":{\"127\":1}}],[\"环境状态与人物状态的冲突\",{\"1\":{\"212\":1}}],[\"环境中要规避的元素\",{\"1\":{\"121\":1}}],[\"环境中可利用的元素\",{\"1\":{\"121\":1}}],[\"环境中植物矮小时\",{\"1\":{\"55\":1}}],[\"环境\",{\"1\":{\"95\":1,\"185\":1}}],[\"环境色局部调色\",{\"1\":{\"254\":1}}],[\"环境色和道具的对比\",{\"1\":{\"97\":1}}],[\"环境色和服装色的对比\",{\"1\":{\"97\":1}}],[\"环境色\",{\"1\":{\"87\":1,\"95\":1}}],[\"环境氛围感加强\",{\"1\":{\"69\":1}}],[\"环境简洁程度\",{\"1\":{\"46\":1}}],[\"在确定执行任务的执行器时\",{\"1\":{\"975\":1}}],[\"在确定主题和风格的前提下\",{\"1\":{\"122\":1}}],[\"在集群部署模式下\",{\"1\":{\"971\":1}}],[\"在本地事务提交前\",{\"1\":{\"968\":1}}],[\"在上面的例子中\",{\"1\":{\"963\":1}}],[\"在一些框架\",{\"1\":{\"956\":1}}],[\"在一个事务内的所有操作要么全部成功提交\",{\"1\":{\"802\":1}}],[\"在一个记录了书籍和作者信息的表中\",{\"1\":{\"744\":1}}],[\"在一个浏览器中\",{\"1\":{\"470\":1}}],[\"在try阶段是将下单的库存给锁住\",{\"1\":{\"942\":1}}],[\"在协调者和参与者中引入超时机制\",{\"1\":{\"942\":1}}],[\"在经过一段时间的同步后\",{\"1\":{\"934\":1}}],[\"在此基础上\",{\"1\":{\"933\":1}}],[\"在此阶段\",{\"1\":{\"708\":5}}],[\"在skywalking中\",{\"1\":{\"977\":1}}],[\"在spring\",{\"1\":{\"895\":1,\"953\":1}}],[\"在stack的1\",{\"1\":{\"521\":1}}],[\"在调用具体方法前调用invokehandler来处理\",{\"1\":{\"892\":1}}],[\"在属性设置完成后\",{\"1\":{\"890\":1}}],[\"在实例化之后\",{\"1\":{\"890\":1}}],[\"在实际操作中\",{\"1\":{\"802\":1}}],[\"在实际应用中\",{\"1\":{\"738\":1}}],[\"在当前websocket会话内有效\",{\"1\":{\"889\":1}}],[\"在事物执行失败后\",{\"1\":{\"879\":1}}],[\"在事务执行期间\",{\"1\":{\"802\":1}}],[\"在事务提交前\",{\"1\":{\"802\":1}}],[\"在60秒\",{\"1\":{\"859\":1}}],[\"在64位操作系统下不限制内存大小\",{\"1\":{\"831\":1}}],[\"在300秒\",{\"1\":{\"859\":1}}],[\"在900秒\",{\"1\":{\"859\":1}}],[\"在存储数据很小的情况下\",{\"1\":{\"853\":1}}],[\"在业务程序运行的时候\",{\"1\":{\"848\":1}}],[\"在更新缓存\",{\"0\":{\"847\":1}}],[\"在可重复读\",{\"1\":{\"802\":1}}],[\"在主库和从库上的执行结构可能是不一样的\",{\"1\":{\"801\":1}}],[\"在同一时刻失效\",{\"1\":{\"835\":1}}],[\"在同一时刻\",{\"1\":{\"797\":1}}],[\"在同一个bfc中\",{\"1\":{\"465\":1}}],[\"在from中出现的子查询将被标记为derived\",{\"1\":{\"796\":1}}],[\"在union中\",{\"1\":{\"796\":1}}],[\"在索引列上进行计算\",{\"1\":{\"794\":1}}],[\"在innodb存储引擎中\",{\"1\":{\"793\":1}}],[\"在查询时\",{\"1\":{\"789\":1}}],[\"在执行update\",{\"1\":{\"785\":1}}],[\"在执行更新或删除操作时\",{\"1\":{\"565\":1}}],[\"在随后的查询中\",{\"1\":{\"772\":1}}],[\"在第一阶段和第二阶段中插入了一个准备阶段\",{\"1\":{\"942\":1}}],[\"在第一次删除缓存值后\",{\"1\":{\"848\":1}}],[\"在第一个事务中的两次读数据之间\",{\"1\":{\"771\":1}}],[\"在第index个位置插入一个新元素e\",{\"1\":{\"513\":1,\"516\":1,\"539\":1}}],[\"在这个事务还没结束时\",{\"1\":{\"771\":1}}],[\"在这个阶段\",{\"1\":{\"561\":1}}],[\"在满足1nf和2nf的基础上\",{\"1\":{\"744\":1}}],[\"在满足1nf的基础上\",{\"1\":{\"744\":1}}],[\"在发生垃圾回收时打印内存回收详细的日志\",{\"1\":{\"724\":1}}],[\"在某些情况下\",{\"1\":{\"716\":1}}],[\"在内存中生成一个代表该类的\",{\"1\":{\"714\":1}}],[\"在用户不可见的情况下\",{\"1\":{\"710\":1}}],[\"在尽可能对吞吐量影响不大的前提下\",{\"1\":{\"709\":1}}],[\"在混合回收阶段之后\",{\"1\":{\"708\":1}}],[\"在并发清理阶段结束后\",{\"1\":{\"708\":1}}],[\"在并发标记阶段结束后\",{\"1\":{\"708\":1}}],[\"在并发情况下\",{\"0\":{\"565\":1}}],[\"在初始标记之后\",{\"1\":{\"708\":1}}],[\"在相同条件下\",{\"1\":{\"694\":1}}],[\"在垃圾回收都会让应用程序所有的线程都会挂起\",{\"1\":{\"693\":1}}],[\"在垃圾回收的时候\",{\"1\":{\"663\":1}}],[\"在函数的栈内存中分配\",{\"1\":{\"682\":1}}],[\"在不同虚拟机里头实现\",{\"1\":{\"681\":1}}],[\"在不存在锁竞争的时候进入同步方法\",{\"1\":{\"672\":1}}],[\"在任务调度过程中\",{\"1\":{\"975\":1}}],[\"在任何时候都可能被回收\",{\"1\":{\"663\":1}}],[\"在任职2年多的期间内\",{\"1\":{\"308\":1}}],[\"在线程中传递数据\",{\"1\":{\"663\":1}}],[\"在java8中\",{\"1\":{\"670\":1}}],[\"在java中\",{\"1\":{\"521\":1}}],[\"在jmm中\",{\"1\":{\"657\":1}}],[\"在redis\",{\"1\":{\"859\":1}}],[\"在resize中再赋值给\",{\"1\":{\"645\":1}}],[\"在retina屏幕中\",{\"1\":{\"468\":1}}],[\"在已知节点的情况下\",{\"1\":{\"637\":1}}],[\"在头尾插入或删除不受元素位置的影响\",{\"1\":{\"622\":1}}],[\"在堆内存中分配空间\",{\"1\":{\"610\":1}}],[\"在堆中创建字符串对象\",{\"1\":{\"609\":1}}],[\"在接口名称后面紧跟泛型<>\",{\"1\":{\"579\":1}}],[\"在方法void\",{\"1\":{\"579\":1}}],[\"在catch里面执行system\",{\"1\":{\"572\":1}}],[\"在cross\",{\"1\":{\"445\":2}}],[\"在节点级别先执行部分聚合\",{\"1\":{\"567\":1}}],[\"在分布式系统中\",{\"1\":{\"565\":1,\"977\":1}}],[\"在搜索时\",{\"1\":{\"565\":1}}],[\"在每个数据库操作之前\",{\"1\":{\"968\":1}}],[\"在每个volatile读操作的后面插入一个loadstore屏障\",{\"1\":{\"659\":1}}],[\"在每个volatile读操作的后面插入一个loadload屏障\",{\"1\":{\"659\":1}}],[\"在每个volatile写操作的后面插入一个storeload屏障\",{\"1\":{\"659\":1}}],[\"在每个volatile写操作的前面插入一个storestore屏障\",{\"1\":{\"659\":1}}],[\"在每个分片上\",{\"1\":{\"562\":1}}],[\"在每个位置上选择一个数字作为第一个数\",{\"1\":{\"494\":1}}],[\"在整个过程中\",{\"1\":{\"561\":1,\"562\":1}}],[\"在文档进入内存缓冲的同时\",{\"1\":{\"561\":1}}],[\"在elasticsearch集群中\",{\"1\":{\"564\":1}}],[\"在elasticsearch的倒排索引中\",{\"1\":{\"563\":1}}],[\"在elasticsearch\",{\"1\":{\"561\":1}}],[\"在传输过程中会进行bitmap压缩\",{\"1\":{\"872\":1}}],[\"在传递数据之前\",{\"1\":{\"550\":1}}],[\"在传送数据之前不需要先建立连接\",{\"1\":{\"550\":1}}],[\"在传送数据之前必须先建立连接\",{\"1\":{\"550\":1}}],[\"在\",{\"1\":{\"523\":1,\"588\":1,\"657\":1,\"822\":1,\"842\":1,\"968\":1,\"972\":1}}],[\"在下面的双端队列的测试中\",{\"1\":{\"520\":1}}],[\"在所有元素前添加一个新元素\",{\"1\":{\"513\":1,\"516\":1,\"539\":1}}],[\"在链表中删除index位置的元素\",{\"1\":{\"504\":1}}],[\"在链表中间添加元素\",{\"1\":{\"503\":1}}],[\"在链表头添加新的元素e\",{\"1\":{\"504\":1}}],[\"在链表头添加元素图例\",{\"1\":{\"503\":1}}],[\"在链表的index\",{\"1\":{\"504\":1}}],[\"在选择的第一个数后面的子数组部分中\",{\"1\":{\"494\":1}}],[\"在选景上我们一定要选择暗部背景\",{\"1\":{\"228\":1}}],[\"在选景这块我们更多的是找干净的门店做背景\",{\"1\":{\"227\":1}}],[\"在利用1rem计算相对于整个屏幕的尺寸大小\",{\"1\":{\"473\":1}}],[\"在移动端通常将视口划分三种\",{\"1\":{\"470\":1}}],[\"在pc端页面\",{\"1\":{\"470\":1}}],[\"在pc端也几乎已经完全普及和使用\",{\"1\":{\"435\":1}}],[\"在less中\",{\"1\":{\"469\":1}}],[\"在设备像素之上\",{\"1\":{\"468\":1}}],[\"在设定的剧情内\",{\"1\":{\"129\":1}}],[\"在使用媒体查询时\",{\"1\":{\"466\":1}}],[\"在bfc中\",{\"1\":{\"465\":2}}],[\"在弹性布局中\",{\"1\":{\"445\":1}}],[\"在main\",{\"1\":{\"444\":1,\"449\":1,\"450\":1,\"451\":1}}],[\"在父内容里面垂直居中一个块内容\",{\"1\":{\"435\":1}}],[\"在父元素最后增加一个空的块级子元素\",{\"1\":{\"433\":1}}],[\"在父元素中设置text\",{\"1\":{\"387\":1}}],[\"在标准流中\",{\"1\":{\"422\":1}}],[\"在后缀为\",{\"1\":{\"413\":1}}],[\"在前端开发过程中\",{\"1\":{\"413\":1}}],[\"在最终标记之后\",{\"1\":{\"708\":1}}],[\"在最上面的单元格协商rowspan属性\",{\"1\":{\"409\":1}}],[\"在最左边的单元格写上colspan属性\",{\"1\":{\"409\":1}}],[\"在开发一个网站过程中\",{\"1\":{\"406\":1}}],[\"在开发中通常为了给元素设置相同的样式\",{\"1\":{\"372\":1}}],[\"在开发中通常为了精准选择某一个元素\",{\"1\":{\"372\":1}}],[\"在元素前面插入内容\",{\"1\":{\"374\":1}}],[\"在远一点上一家的化主要从事叉车平台开发\",{\"1\":{\"308\":1}}],[\"在哪查看\",{\"0\":{\"831\":1}}],[\"在哪\",{\"1\":{\"279\":1}}],[\"在保证质量的前提下\",{\"1\":{\"265\":1}}],[\"在工具顶部选择\",{\"1\":{\"256\":1}}],[\"在高频图层进行\",{\"1\":{\"256\":1}}],[\"在图层上方将正常改为线性光\",{\"1\":{\"256\":1}}],[\"在正午的时刻是不太适合拍摄的\",{\"1\":{\"235\":1}}],[\"在构图上不要带到一些高亮的区域\",{\"1\":{\"228\":1}}],[\"在特色景区拍照我们最重要就是要做到规避杂乱\",{\"1\":{\"227\":1}}],[\"在美姿引导过程我们不要生拉硬套更大的是发现没\",{\"1\":{\"224\":1}}],[\"在拍摄中遇到有阳光的时候人物都要去迎合光线的方向\",{\"1\":{\"242\":1}}],[\"在拍摄的过程中多注意细节的调节\",{\"1\":{\"224\":1}}],[\"在拍摄的时候多变化模特的状态\",{\"1\":{\"224\":1}}],[\"在拍摄过程中不断的对模特进行鼓励\",{\"1\":{\"224\":1}}],[\"在进行主节点选择时\",{\"1\":{\"871\":1}}],[\"在进行gc的时候\",{\"1\":{\"689\":1}}],[\"在进行美姿的时候\",{\"1\":{\"224\":1}}],[\"在进步和变化中确定自己的喜好\",{\"1\":{\"26\":1}}],[\"在照片中制造冲突\",{\"0\":{\"212\":1}}],[\"在情绪统一的环境下\",{\"1\":{\"135\":1}}],[\"在画面构建色彩明暗关系\",{\"0\":{\"99\":1}}],[\"在画面中构建色彩的对比\",{\"0\":{\"97\":1}}],[\"在画面中构建色彩的和谐\",{\"0\":{\"96\":1}}],[\"在阴影下拍摄\",{\"1\":{\"78\":1}}],[\"在电影\",{\"1\":{\"66\":1}}],[\"在纵向空间上构建前中后景的关系\",{\"1\":{\"55\":1}}],[\"氛围感构建手法可多种叠加使用\",{\"1\":{\"203\":1}}],[\"氛围感构建\",{\"0\":{\"192\":1}}],[\"氛围感的构建方法\",{\"1\":{\"53\":1}}],[\"氛围\",{\"1\":{\"120\":1}}],[\"氛围越浓\",{\"1\":{\"34\":1}}],[\"空对象缓存\",{\"1\":{\"836\":1}}],[\"空格\",{\"1\":{\"462\":1}}],[\"空镜头\",{\"1\":{\"191\":2}}],[\"空间整合\",{\"1\":{\"708\":1}}],[\"空间复杂度\",{\"0\":{\"485\":1}}],[\"空间色\",{\"1\":{\"95\":1}}],[\"空间介质的利用\",{\"0\":{\"199\":1}}],[\"空间介质\",{\"1\":{\"82\":1}}],[\"空间纵深感减弱\",{\"1\":{\"76\":1,\"83\":1}}],[\"空间排布影响照片的平衡\",{\"1\":{\"51\":1}}],[\"空景\",{\"1\":{\"45\":1}}],[\"材质\",{\"1\":{\"51\":1}}],[\"下次执行时间等\",{\"1\":{\"975\":1}}],[\"下的所有\",{\"1\":{\"714\":1}}],[\"下面是spring\",{\"1\":{\"895\":1}}],[\"下面会分析到这个方法\",{\"1\":{\"645\":1}}],[\"下面\",{\"1\":{\"521\":1}}],[\"下一个排列就是\",{\"1\":{\"497\":1}}],[\"下一个排列就是将数组升序排列\",{\"1\":{\"497\":1}}],[\"下一个排列\",{\"0\":{\"495\":1}}],[\"下载arthas\",{\"1\":{\"738\":1}}],[\"下载node环境\",{\"1\":{\"469\":1}}],[\"下载代码\",{\"1\":{\"418\":1}}],[\"下拉选择框\",{\"1\":{\"410\":1}}],[\"下内边距\",{\"1\":{\"385\":1,\"387\":1}}],[\"下划线\",{\"1\":{\"355\":1}}],[\"下颌线轮廓不够突出时\",{\"1\":{\"208\":1}}],[\"下颌线更加清晰\",{\"1\":{\"173\":1}}],[\"下颌线拉伸\",{\"1\":{\"169\":1}}],[\"下庭过短\",{\"1\":{\"168\":1}}],[\"下庭过长\",{\"1\":{\"168\":1}}],[\"下重上轻\",{\"1\":{\"51\":1}}],[\"下巴刻意前倾\",{\"1\":{\"173\":1}}],[\"下巴短\",{\"1\":{\"168\":1}}],[\"下巴\",{\"1\":{\"43\":1}}],[\"当配置acks\",{\"1\":{\"982\":1}}],[\"当配置发生变更时\",{\"1\":{\"972\":1}}],[\"当消息堆积量达到一定水平立刻通知运维团队\",{\"1\":{\"981\":1}}],[\"当调度中心根据cron表达式计算出某个任务应该被执行时\",{\"1\":{\"975\":1}}],[\"当调用这个方法时\",{\"1\":{\"953\":1}}],[\"当调用exec命令执行事务时\",{\"1\":{\"877\":1}}],[\"当其他组件依赖这个\",{\"1\":{\"972\":1}}],[\"当客户端\",{\"1\":{\"971\":1}}],[\"当服务实例启动时\",{\"1\":{\"971\":1}}],[\"当请求到达时\",{\"1\":{\"949\":2}}],[\"当水超过桶流量则丢弃\",{\"1\":{\"948\":1}}],[\"当滑动窗口的格子划分的越多\",{\"1\":{\"947\":1}}],[\"当所有准备工作完成后\",{\"1\":{\"926\":1}}],[\"当哨兵检测到主节点故障时\",{\"1\":{\"871\":1}}],[\"当pollfds数组中有事件发生\",{\"1\":{\"868\":1}}],[\"当某条连接有新的数据可以处理时\",{\"1\":{\"866\":1}}],[\"当取负值的时候\",{\"1\":{\"854\":1}}],[\"当程序没有成功删除或更新时\",{\"1\":{\"849\":1}}],[\"当向\",{\"1\":{\"822\":1}}],[\"当key存在的时候\",{\"1\":{\"817\":1}}],[\"当key不存在的时候\",{\"1\":{\"817\":1}}],[\"当事务提交时\",{\"1\":{\"802\":1}}],[\"当事务回滚时用于将数据恢复到修改前的样子\",{\"1\":{\"797\":1}}],[\"当执行如下查询\",{\"1\":{\"798\":1}}],[\"当spring容器关闭时\",{\"1\":{\"890\":1}}],[\"当spring容器启动时\",{\"1\":{\"890\":1}}],[\"当sql查询仅依赖于非聚集索引\",{\"1\":{\"798\":1}}],[\"当synchronized代码执行完后系统会自动\",{\"1\":{\"662\":1}}],[\"当读取记录时\",{\"1\":{\"797\":1}}],[\"当使用索引等值查询时\",{\"1\":{\"796\":1}}],[\"当使用到联合索引时\",{\"1\":{\"796\":1}}],[\"当联表查询时\",{\"1\":{\"796\":1}}],[\"当查到索引对应的指针或主键后\",{\"1\":{\"793\":1}}],[\"当java应用程序出现cpu使用率过高的问题时\",{\"1\":{\"738\":1}}],[\"当正常输出的请求不被响应时\",{\"1\":{\"731\":1}}],[\"当对象的年龄大于设置的这个值时就进入老年代\",{\"1\":{\"721\":1}}],[\"当越来越多的对象晋升到老年代old\",{\"1\":{\"708\":1}}],[\"当eden空间耗尽时\",{\"1\":{\"708\":1}}],[\"当该区域满时\",{\"1\":{\"690\":1}}],[\"当一个执行器领取到任务准备执行时\",{\"1\":{\"975\":1}}],[\"当一个类或者方法被标记为\",{\"1\":{\"972\":1}}],[\"当一个类收到类加载请求\",{\"1\":{\"679\":1}}],[\"当一个接口存在多个实现类的情况下\",{\"1\":{\"888\":1}}],[\"当一个对象到\",{\"1\":{\"687\":1}}],[\"当一个节点连续几次未能收到另一个节点的ping消息时\",{\"1\":{\"564\":1}}],[\"当且仅当\",{\"1\":{\"669\":1}}],[\"当计数器的值为0时\",{\"1\":{\"667\":1}}],[\"当线程数大于核心线程数时\",{\"1\":{\"664\":1}}],[\"当我们内存不够用的时候\",{\"1\":{\"663\":2}}],[\"当实际大小超过阈值时\",{\"1\":{\"644\":1}}],[\"当数组长度大于64时才会转换红黑树\",{\"1\":{\"644\":1}}],[\"当桶\",{\"1\":{\"644\":2}}],[\"当hashmap中的元素数量超过当前容量乘以0\",{\"1\":{\"643\":1}}],[\"当添加46元素时\",{\"1\":{\"623\":1}}],[\"当添加31元素时数组容量从30扩容到45\",{\"1\":{\"623\":1}}],[\"当21元素添加时数组容量从20扩容到30\",{\"1\":{\"623\":1}}],[\"当目标对象不存在接口时\",{\"1\":{\"589\":1}}],[\"当选票数\",{\"1\":{\"564\":1}}],[\"当当前master节点宕机或者网络分区导致失去联系时\",{\"1\":{\"564\":1}}],[\"当当前元素位置进行微调\",{\"1\":{\"423\":1}}],[\"当用户发起一个搜索请求时\",{\"1\":{\"563\":1}}],[\"当达到一定条件时\",{\"1\":{\"561\":1}}],[\"当达到这个阈值点时\",{\"1\":{\"426\":1}}],[\"当分片所在节点接收到索引请求后\",{\"1\":{\"561\":1}}],[\"当左指针小于右指针时\",{\"1\":{\"494\":1}}],[\"当flex\",{\"1\":{\"436\":1,\"445\":1,\"449\":1,\"450\":1}}],[\"当画布滚动时\",{\"1\":{\"424\":1}}],[\"当然\",{\"1\":{\"376\":1}}],[\"当前进\",{\"1\":{\"865\":1}}],[\"当前读和快照读\",{\"1\":{\"797\":1}}],[\"当前读和快照读的区别\",{\"0\":{\"788\":1}}],[\"当前读\",{\"1\":{\"788\":1,\"797\":1}}],[\"当前线程的中断标识为true\",{\"1\":{\"671\":1}}],[\"当前线程放弃更新\",{\"1\":{\"669\":1}}],[\"当前flex局部中所有的元素都会被垂直居中\",{\"1\":{\"455\":1}}],[\"当前登录用户数\",{\"1\":{\"329\":1}}],[\"当前时间\",{\"1\":{\"329\":1}}],[\"当前早晨确认时间\",{\"1\":{\"122\":1}}],[\"当下最需要解决的问题是什么\",{\"1\":{\"267\":1}}],[\"当下的情绪\",{\"1\":{\"22\":1}}],[\"当光比过大时\",{\"1\":{\"76\":1}}],[\"当光比非常强时\",{\"1\":{\"76\":1}}],[\"当拍摄背景为墙面时\",{\"1\":{\"68\":1}}],[\"当照片中出现杂乱需要避免的物体时\",{\"1\":{\"51\":1}}],[\"前后端传值\",{\"0\":{\"914\":1}}],[\"前后对比\",{\"1\":{\"6\":1}}],[\"前缀零计数\",{\"1\":{\"822\":1}}],[\"前一张表的行在当前这张表中只有一行与之对应\",{\"1\":{\"796\":1}}],[\"前\",{\"1\":{\"746\":1}}],[\"前面四种算法\",{\"1\":{\"693\":1}}],[\"前面不管我们自己编写的js\",{\"1\":{\"473\":1}}],[\"前20次添加不会发生扩容\",{\"1\":{\"623\":1}}],[\"前端\",{\"0\":{\"476\":1},\"1\":{\"310\":1},\"2\":{\"475\":1}}],[\"前期色调的建立\",{\"1\":{\"259\":1}}],[\"前期影调的建立\",{\"1\":{\"259\":1}}],[\"前期定调\",{\"0\":{\"259\":1}}],[\"前期准备垫肩神器\",{\"1\":{\"175\":1}}],[\"前期提亮鼻基底\",{\"1\":{\"172\":1}}],[\"前期化妆使鼻子更立体\",{\"1\":{\"172\":1}}],[\"前期化妆\",{\"1\":{\"152\":1,\"171\":1}}],[\"前期参数调整+后期调色\",{\"1\":{\"101\":1}}],[\"前侧光\",{\"1\":{\"76\":1}}],[\"前景色\",{\"1\":{\"349\":1}}],[\"前景\",{\"1\":{\"136\":1,\"233\":1,\"279\":1}}],[\"前景构图\",{\"0\":{\"55\":1}}],[\"前景遮挡\",{\"1\":{\"51\":1,\"279\":1}}],[\"有限的时间范围\",{\"1\":{\"938\":1}}],[\"有什么用\",{\"1\":{\"871\":1}}],[\"有什么想吐槽的\",{\"1\":{\"0\":1}}],[\"有什么想问的\",{\"1\":{\"0\":1}}],[\"有什么想说的\",{\"1\":{\"0\":1}}],[\"有个兜底终止跳出方案\",{\"1\":{\"839\":1}}],[\"有个compare\",{\"1\":{\"625\":1}}],[\"有个compareto方法\",{\"1\":{\"625\":1}}],[\"有漏网之鱼\",{\"1\":{\"829\":1}}],[\"有误差\",{\"1\":{\"822\":1}}],[\"有可能导致请求因缓存缺失而访问数据库\",{\"1\":{\"849\":1}}],[\"有可能是多个列的长度和\",{\"1\":{\"796\":1}}],[\"有可能会合并为1个margin\",{\"1\":{\"387\":1}}],[\"有点像卡死的感觉\",{\"1\":{\"710\":1}}],[\"有点类似linux系统的管道分隔符传参数\",{\"1\":{\"670\":1}}],[\"有关gc产生的停顿也越长\",{\"1\":{\"694\":1}}],[\"有事找我爸\",{\"1\":{\"679\":1}}],[\"有异常也可以往下一步走\",{\"1\":{\"670\":1}}],[\"有返回值\",{\"1\":{\"670\":2}}],[\"有阻塞就需要排队\",{\"1\":{\"665\":1}}],[\"有aba问题\",{\"1\":{\"660\":1}}],[\"有没有一种方式整合上面两种数据结构的优势\",{\"0\":{\"638\":1}}],[\"有序进行\",{\"1\":{\"958\":1}}],[\"有序集合\",{\"0\":{\"821\":1}}],[\"有序性\",{\"1\":{\"657\":1}}],[\"有序\",{\"1\":{\"617\":1,\"620\":1}}],[\"有序可重复\",{\"1\":{\"617\":1}}],[\"有序列表直接子元素只能是li\",{\"1\":{\"406\":1}}],[\"有序列表\",{\"1\":{\"406\":1}}],[\"有用户名密码的执行方式\",{\"1\":{\"557\":1}}],[\"有确认\",{\"1\":{\"550\":1}}],[\"有穷性\",{\"1\":{\"482\":1}}],[\"有时结果没出来\",{\"1\":{\"670\":1}}],[\"有时被称为pel\",{\"1\":{\"468\":1}}],[\"有时候我们会看到css属性前面带有\",{\"1\":{\"464\":1}}],[\"有内容\",{\"1\":{\"458\":1}}],[\"有三个取值\",{\"1\":{\"442\":1}}],[\"有4个取值\",{\"1\":{\"441\":1}}],[\"有4个常用值\",{\"1\":{\"379\":1}}],[\"有\",{\"1\":{\"403\":1,\"833\":1}}],[\"有如下几种\",{\"1\":{\"455\":1}}],[\"有如下几个值\",{\"1\":{\"399\":1,\"400\":1}}],[\"有如下取值\",{\"1\":{\"355\":1,\"356\":1,\"385\":1}}],[\"有四个值\",{\"1\":{\"390\":1}}],[\"有些记忆\",{\"1\":{\"309\":1}}],[\"有效防止了分布式环境下任务的并发执行问题\",{\"1\":{\"975\":1}}],[\"有效利用多核计算能力\",{\"1\":{\"708\":1}}],[\"有效字符串需满足\",{\"1\":{\"514\":1}}],[\"有效激励\",{\"0\":{\"305\":1}}],[\"有效授权\",{\"0\":{\"303\":1}}],[\"有效决策\",{\"0\":{\"302\":1}}],[\"有效沟通和协作管理\",{\"0\":{\"301\":1}}],[\"有效拍摄策划\",{\"0\":{\"110\":1}}],[\"有绿色和洋红控制\",{\"1\":{\"288\":1}}],[\"有力量\",{\"1\":{\"279\":1}}],[\"有规律\",{\"1\":{\"279\":1}}],[\"有噪点\",{\"1\":{\"275\":1}}],[\"有目的的进行拍摄\",{\"1\":{\"265\":1}}],[\"有前景就带前景\",{\"1\":{\"242\":1}}],[\"有视觉重心\",{\"1\":{\"231\":1}}],[\"有氛围\",{\"1\":{\"231\":1}}],[\"有一个\",{\"1\":{\"521\":1,\"972\":1}}],[\"有一个承担还是aa\",{\"1\":{\"122\":1}}],[\"有一定量优质作品及粉丝量\",{\"1\":{\"125\":1}}],[\"有眼缘能合得来的模特会长期合作\",{\"1\":{\"122\":1}}],[\"有意识的突出主体\",{\"1\":{\"50\":1}}],[\"明确管理任务和目标\",{\"1\":{\"299\":1}}],[\"明确情绪状态\",{\"1\":{\"189\":1}}],[\"明确的表现人物的形体动作是全景画面的重要作用\",{\"1\":{\"37\":1}}],[\"明媚的\",{\"1\":{\"121\":1}}],[\"明快\",{\"1\":{\"92\":1,\"93\":2}}],[\"明度的相似性\",{\"1\":{\"97\":1}}],[\"明度是光线强度的表现\",{\"1\":{\"91\":1}}],[\"明度\",{\"0\":{\"91\":1}}],[\"明亮度\",{\"1\":{\"290\":1}}],[\"明亮\",{\"1\":{\"84\":1}}],[\"明暗对比反差更强了\",{\"1\":{\"288\":1}}],[\"明暗调整区域\",{\"1\":{\"288\":1}}],[\"明暗关系\",{\"1\":{\"99\":1}}],[\"明暗相差3个或3个层级以内\",{\"1\":{\"84\":1}}],[\"明暗相差3\",{\"1\":{\"84\":1}}],[\"明暗相差5个层级以上\",{\"1\":{\"84\":1}}],[\"明暗间缺少过渡\",{\"1\":{\"78\":1}}],[\"明暗分明\",{\"1\":{\"76\":1}}],[\"明暗\",{\"1\":{\"50\":1,\"51\":1}}],[\"抽奖\",{\"1\":{\"819\":2}}],[\"抽象化的氛围\",{\"1\":{\"49\":1}}],[\"抽离故事之外观看被摄主体\",{\"1\":{\"34\":1}}],[\"几乎可以忽略不记\",{\"1\":{\"680\":1}}],[\"几乎所有的动作都是经过精心设计的\",{\"1\":{\"135\":1}}],[\"几个非常好用的css函数\",{\"1\":{\"463\":1}}],[\"几何关系\",{\"1\":{\"49\":1}}],[\"几年摸爬滚打\",{\"1\":{\"2\":1}}],[\"物理日志\",{\"1\":{\"799\":1}}],[\"物理层\",{\"1\":{\"544\":1}}],[\"物理\",{\"1\":{\"468\":1}}],[\"物体显得柔软\",{\"1\":{\"79\":1}}],[\"物体线条分明\",{\"1\":{\"78\":1}}],[\"物\",{\"1\":{\"49\":1}}],[\"物哀美学\",{\"0\":{\"213\":1}}],[\"物哀\",{\"1\":{\"17\":1}}],[\"陪体本身要具有一定的观赏性或象征意味\",{\"1\":{\"71\":1}}],[\"陪体\",{\"1\":{\"49\":1}}],[\"影响范围\",{\"1\":{\"292\":1}}],[\"影像成分\",{\"0\":{\"49\":1}}],[\"影调+色调\",{\"1\":{\"92\":1}}],[\"影调的建立与光线布置\",{\"1\":{\"84\":1}}],[\"影调指画面的明暗基调和层次\",{\"1\":{\"84\":1}}],[\"影调\",{\"1\":{\"14\":1,\"19\":1,\"28\":1,\"84\":1,\"123\":1,\"188\":1,\"189\":1,\"191\":1,\"278\":1}}],[\"914402\",{\"1\":{\"824\":2}}],[\"915119\",{\"1\":{\"824\":2}}],[\"924091\",{\"1\":{\"824\":2}}],[\"9200\",{\"1\":{\"557\":1}}],[\"9亿的字节信息\",{\"1\":{\"823\":1}}],[\"900\",{\"1\":{\"859\":1}}],[\"90deg\",{\"1\":{\"454\":1}}],[\"90度角度拍摄\",{\"1\":{\"33\":1}}],[\"9\",{\"0\":{\"61\":1,\"72\":1,\"125\":1,\"201\":1,\"235\":1,\"520\":1,\"525\":1,\"526\":1,\"527\":1,\"528\":1,\"529\":1,\"530\":1,\"531\":1,\"532\":1,\"552\":1,\"602\":1,\"645\":1,\"657\":1,\"718\":1,\"719\":1,\"720\":1,\"721\":1,\"722\":1,\"723\":1,\"724\":1,\"760\":1,\"798\":1,\"843\":1,\"925\":1,\"950\":1},\"1\":{\"48\":1,\"122\":1,\"191\":1,\"489\":2,\"497\":2,\"523\":2,\"582\":1,\"663\":2,\"808\":1,\"818\":2,\"821\":1}}],[\"常变量放在堆内存中\",{\"1\":{\"683\":1}}],[\"常在类和接口中使用\",{\"1\":{\"580\":1}}],[\"常在集合中使用\",{\"1\":{\"580\":1}}],[\"常规显示\",{\"1\":{\"364\":1}}],[\"常规解压\",{\"1\":{\"326\":1}}],[\"常规题材\",{\"1\":{\"273\":1}}],[\"常见注册中心\",{\"1\":{\"933\":1}}],[\"常见于order\",{\"1\":{\"796\":1}}],[\"常见脚本创建\",{\"0\":{\"750\":1,\"806\":1}}],[\"常见使用\",{\"1\":{\"727\":1}}],[\"常见相对单位\",{\"1\":{\"467\":1}}],[\"常见媒体类型\",{\"1\":{\"466\":1}}],[\"常见取值\",{\"1\":{\"429\":1}}],[\"常见值\",{\"1\":{\"422\":1,\"462\":1}}],[\"常见emment语法\",{\"0\":{\"414\":1}}],[\"常见emmet语法\",{\"0\":{\"412\":1}}],[\"常见列表\",{\"0\":{\"407\":1}}],[\"常见的css预处理器\",{\"1\":{\"469\":1}}],[\"常见的函数有\",{\"1\":{\"454\":1}}],[\"常见的布尔属性有disabled\",{\"1\":{\"410\":1}}],[\"常见的font\",{\"1\":{\"376\":1}}],[\"常见的伪元素\",{\"1\":{\"374\":1}}],[\"常见的伪类有\",{\"1\":{\"373\":1}}],[\"常见的取值\",{\"1\":{\"363\":1}}],[\"常见的值有\",{\"1\":{\"796\":1}}],[\"常见的值\",{\"1\":{\"358\":1}}],[\"常见属性\",{\"0\":{\"349\":1},\"1\":{\"410\":1,\"460\":2}}],[\"常见命令\",{\"1\":{\"332\":1}}],[\"常见风格\",{\"0\":{\"141\":1}}],[\"常见构图方法\",{\"1\":{\"278\":1}}],[\"常见构图\",{\"1\":{\"53\":1}}],[\"常见比例\",{\"1\":{\"48\":1}}],[\"常用于使用主键或唯一索引的所有字段作为连表条件\",{\"1\":{\"796\":1}}],[\"常用于拍特写\",{\"1\":{\"54\":1}}],[\"常用值normal和reverse\",{\"1\":{\"457\":1}}],[\"常用单位deg\",{\"1\":{\"454\":1}}],[\"常用的解决方案\",{\"1\":{\"425\":1}}],[\"常用设置\",{\"1\":{\"361\":1}}],[\"常用命令\",{\"1\":{\"328\":1,\"329\":1,\"330\":1,\"331\":1,\"818\":1}}],[\"常用道具\",{\"1\":{\"126\":1}}],[\"常用色彩搭配\",{\"0\":{\"102\":1}}],[\"常用补光工具\",{\"0\":{\"85\":1}}],[\"常用\",{\"0\":{\"107\":1,\"355\":1,\"365\":1,\"918\":1,\"919\":1},\"1\":{\"34\":1}}],[\"常用镜头\",{\"1\":{\"34\":1}}],[\"画画图\",{\"1\":{\"519\":1}}],[\"画框法\",{\"1\":{\"278\":1}}],[\"画质\",{\"1\":{\"274\":1}}],[\"画笔尽量调小一点\",{\"1\":{\"257\":1}}],[\"画笔\",{\"1\":{\"254\":1}}],[\"画幅也包含了情绪\",{\"1\":{\"191\":1}}],[\"画幅\",{\"1\":{\"191\":1}}],[\"画幅比例\",{\"0\":{\"48\":1}}],[\"画眼线拉长眼睛视觉上看起来不鼓\",{\"1\":{\"171\":1}}],[\"画卧蚕提亮卧蚕\",{\"1\":{\"171\":1}}],[\"画积大小\",{\"1\":{\"51\":1}}],[\"画面安排\",{\"1\":{\"278\":1}}],[\"画面更有动感\",{\"1\":{\"273\":1}}],[\"画面更自然\",{\"1\":{\"34\":1}}],[\"画面清晰\",{\"1\":{\"273\":1}}],[\"画面拖影\",{\"1\":{\"273\":1}}],[\"画面拖\",{\"1\":{\"273\":1}}],[\"画面不拖\",{\"1\":{\"273\":1}}],[\"画面亮\",{\"1\":{\"273\":1,\"274\":2,\"275\":1}}],[\"画面暗\",{\"1\":{\"273\":1,\"274\":2,\"275\":1}}],[\"画面就亮\",{\"1\":{\"273\":1,\"274\":1}}],[\"画面就暗了\",{\"1\":{\"274\":1}}],[\"画面就暗\",{\"1\":{\"273\":1}}],[\"画面非常杂乱\",{\"1\":{\"230\":1}}],[\"画面左右平衡\",{\"1\":{\"216\":1}}],[\"画面张力构建\",{\"0\":{\"204\":1}}],[\"画面的层次感\",{\"1\":{\"191\":1}}],[\"画面的影调关系\",{\"1\":{\"92\":1}}],[\"画面的影调直接影响到情绪的表达\",{\"1\":{\"84\":1}}],[\"画面涵盖全景\",{\"1\":{\"191\":1}}],[\"画面整体色彩统一\",{\"1\":{\"100\":1}}],[\"画面要有主色调\",{\"0\":{\"95\":1}}],[\"画面有扩张感\",{\"1\":{\"93\":1}}],[\"画面有明显区分的着光区和背光区\",{\"1\":{\"84\":1}}],[\"画面中以垂直的线条为主\",{\"1\":{\"218\":1}}],[\"画面中的色彩组成\",{\"1\":{\"87\":1}}],[\"画面中受光面大于阴影面\",{\"1\":{\"84\":1}}],[\"画面中黑白灰的组成层次\",{\"1\":{\"84\":1}}],[\"画面具有不同寻常的张力\",{\"1\":{\"70\":1}}],[\"画面呈现一定的倾斜\",{\"1\":{\"66\":1}}],[\"画面失衡构图法\",{\"0\":{\"66\":1}}],[\"画面可以同时包含仰俯关系\",{\"1\":{\"33\":1}}],[\"基数估算\",{\"1\":{\"822\":1}}],[\"基数\",{\"1\":{\"822\":1}}],[\"基数统计\",{\"0\":{\"822\":1},\"1\":{\"822\":1}}],[\"基线对齐\",{\"1\":{\"458\":1}}],[\"基线\",{\"1\":{\"365\":1}}],[\"基于zookeeper实现分布式协调\",{\"1\":{\"974\":1}}],[\"基于所有桶中存储的最大前缀零计数的分布\",{\"1\":{\"822\":1}}],[\"基于reactor模式设计开发了一套高效的事件处理模型\",{\"1\":{\"814\":1}}],[\"基于内存\",{\"1\":{\"814\":1}}],[\"基于主键索引查询一定不需要回表\",{\"1\":{\"793\":1}}],[\"基于老年代垃圾回收的特性\",{\"1\":{\"691\":1}}],[\"基于hashmap实现\",{\"1\":{\"626\":1}}],[\"基于\",{\"1\":{\"551\":1}}],[\"基于ssl\",{\"1\":{\"549\":1}}],[\"基于tcp协议\",{\"1\":{\"549\":1}}],[\"基于vector的栈的实现\",{\"1\":{\"521\":1}}],[\"基于父元素的font\",{\"1\":{\"361\":1}}],[\"基于视觉的统一\",{\"0\":{\"28\":1}}],[\"基础知识\",{\"0\":{\"742\":1}}],[\"基础曝光调整\",{\"1\":{\"260\":1}}],[\"基础定调\",{\"1\":{\"254\":1}}],[\"基础参数调整\",{\"1\":{\"254\":1}}],[\"基础人像摆姿\",{\"0\":{\"138\":1}}],[\"基础构图法\",{\"1\":{\"120\":1}}],[\"基本追踪单元\",{\"1\":{\"977\":1}}],[\"基本可用\",{\"1\":{\"934\":1}}],[\"基本命令\",{\"1\":{\"822\":1,\"823\":1}}],[\"基本原理\",{\"0\":{\"801\":1},\"1\":{\"949\":1}}],[\"基本上都是创建了大量的线程导致的\",{\"1\":{\"737\":1}}],[\"基本语法\",{\"1\":{\"727\":1,\"728\":1,\"729\":1,\"731\":1}}],[\"基本思想\",{\"1\":{\"693\":1}}],[\"基本类型用它们对应的引用类型包装起来\",{\"1\":{\"599\":1}}],[\"基本类型的值可以直接赋值给对应的包装类型\",{\"1\":{\"599\":1}}],[\"基本类型和包装类型的区别\",{\"0\":{\"599\":1}}],[\"基本用不到\",{\"1\":{\"358\":1}}],[\"基本面板\",{\"0\":{\"288\":1}}],[\"基本的运用方法\",{\"1\":{\"279\":1}}],[\"基本都是要考虑局部取景\",{\"1\":{\"232\":1}}],[\"基本形体动作\",{\"1\":{\"150\":1}}],[\"基本要求\",{\"1\":{\"124\":1}}],[\"基本构图法\",{\"0\":{\"47\":1}}],[\"观念摄影\",{\"0\":{\"147\":1}}],[\"观众注意力集中在景上\",{\"1\":{\"69\":1}}],[\"观众弱小等心里感受\",{\"1\":{\"34\":1}}],[\"观察者模式\",{\"1\":{\"900\":1}}],[\"观察人物面部特点\",{\"1\":{\"254\":1}}],[\"观察人物的五官适合正脸或侧脸\",{\"1\":{\"46\":1}}],[\"观察照片主要颜色\",{\"1\":{\"254\":1}}],[\"观察照片\",{\"0\":{\"253\":1},\"1\":{\"253\":1}}],[\"观察调整模特形体\",{\"1\":{\"162\":1}}],[\"观察取景器里的成像\",{\"1\":{\"151\":1}}],[\"观察模特\",{\"1\":{\"46\":1}}],[\"观察环境\",{\"1\":{\"46\":1}}],[\"8k\",{\"1\":{\"872\":1}}],[\"81\",{\"1\":{\"822\":2}}],[\"8种基本类型的变量+对象的引用变量+实例方法都是\",{\"1\":{\"682\":1}}],[\"8种数据类型\",{\"0\":{\"598\":1}}],[\"8后\",{\"1\":{\"664\":1}}],[\"8采用数组+链表+红黑树\",{\"1\":{\"634\":1}}],[\"8以前\",{\"1\":{\"631\":1}}],[\"8以后改为node\",{\"1\":{\"634\":1}}],[\"8以后\",{\"1\":{\"631\":1}}],[\"8以后hashmap采用链表+数组+红黑树\",{\"1\":{\"628\":1}}],[\"8以后当链表长度大于8\",{\"1\":{\"621\":1}}],[\"8只是构造一个空的数组\",{\"1\":{\"623\":1}}],[\"8之前是数组+链表组成\",{\"1\":{\"621\":1}}],[\"8>>3\",{\"1\":{\"596\":1}}],[\"8848\",{\"1\":{\"970\":1}}],[\"88\",{\"1\":{\"557\":1}}],[\"8px\",{\"1\":{\"374\":2,\"423\":1}}],[\"80px\",{\"1\":{\"431\":1,\"453\":3}}],[\"800px\",{\"1\":{\"425\":4,\"431\":1,\"442\":1,\"466\":3}}],[\"800\",{\"1\":{\"275\":2}}],[\"80\",{\"1\":{\"275\":1,\"804\":1}}],[\"85\",{\"1\":{\"48\":1,\"191\":1}}],[\"8\",{\"0\":{\"46\":1,\"60\":1,\"71\":1,\"124\":1,\"154\":1,\"200\":1,\"223\":1,\"234\":1,\"261\":1,\"262\":1,\"509\":1,\"512\":1,\"513\":1,\"514\":1,\"515\":1,\"516\":1,\"517\":1,\"518\":1,\"519\":2,\"520\":1,\"521\":1,\"522\":1,\"523\":1,\"551\":1,\"590\":1,\"601\":1,\"644\":1,\"656\":1,\"709\":1,\"711\":1,\"712\":1,\"713\":1,\"714\":1,\"715\":1,\"716\":1,\"733\":1,\"759\":1,\"797\":1,\"824\":1,\"838\":1,\"924\":1,\"945\":1},\"1\":{\"122\":1,\"274\":1,\"275\":2,\"358\":1,\"373\":2,\"387\":3,\"416\":1,\"423\":1,\"425\":2,\"431\":3,\"436\":1,\"441\":1,\"442\":1,\"453\":1,\"497\":2,\"582\":1,\"596\":1,\"632\":1,\"644\":1,\"683\":1,\"721\":1,\"853\":1,\"872\":2}}],[\"多路复用机制\",{\"1\":{\"866\":1}}],[\"多路\",{\"1\":{\"864\":1,\"869\":1}}],[\"多路平衡查找树\",{\"1\":{\"793\":1}}],[\"多表join\",{\"1\":{\"804\":1}}],[\"多版本并发控制\",{\"1\":{\"797\":1}}],[\"多版本并发控制的方法\",{\"1\":{\"776\":1}}],[\"多合一故障处理工具\",{\"1\":{\"733\":1}}],[\"多余的空闲线程存活的最长时间\",{\"1\":{\"664\":1}}],[\"多态\",{\"1\":{\"604\":2}}],[\"多阶段的过程\",{\"1\":{\"562\":1}}],[\"多对多\",{\"1\":{\"550\":1}}],[\"多对一\",{\"1\":{\"550\":1}}],[\"多行\",{\"1\":{\"442\":2}}],[\"多行文本框\",{\"1\":{\"410\":1}}],[\"多行文字显示省略号\",{\"0\":{\"396\":1}}],[\"多个bean之间相互依赖\",{\"1\":{\"924\":1}}],[\"多个文件描述符只有一次\",{\"1\":{\"867\":1}}],[\"多个连接共用一个阻塞对象\",{\"1\":{\"866\":1}}],[\"多个客户端连接\",{\"1\":{\"864\":1}}],[\"多个线程同时去查询数据库的这条数据\",{\"1\":{\"848\":1}}],[\"多个服务间保证同一时刻同一时间段内同一用户只能有一个请求\",{\"1\":{\"841\":1}}],[\"多个经度\",{\"1\":{\"824\":1}}],[\"多个垃圾收集线程并行工作\",{\"1\":{\"697\":1}}],[\"多个泛型用\",{\"1\":{\"579\":1}}],[\"多个值\",{\"1\":{\"461\":1}}],[\"多个\",{\"1\":{\"414\":1}}],[\"多个行内级元素可以在父元素的同一行中显示\",{\"1\":{\"378\":1}}],[\"多个景别\",{\"1\":{\"46\":1}}],[\"多条黄金分割线运用\",{\"1\":{\"279\":1}}],[\"多变化构图和视角\",{\"1\":{\"241\":1}}],[\"多改变构图\",{\"1\":{\"238\":1}}],[\"多利用逆光和侧逆光拍摄\",{\"1\":{\"235\":1}}],[\"多采用相机的长焦\",{\"1\":{\"234\":1}}],[\"多引导人物和环境进行自然的互动\",{\"1\":{\"225\":1}}],[\"多机位\",{\"1\":{\"191\":1}}],[\"多样的情绪表达\",{\"1\":{\"185\":1}}],[\"多种道具结合使用时需场景匹配\",{\"1\":{\"126\":1}}],[\"多要几张日常的照片\",{\"1\":{\"123\":1}}],[\"多备选2\",{\"1\":{\"122\":1}}],[\"多观察\",{\"1\":{\"121\":1}}],[\"多拍摄实战\",{\"0\":{\"265\":1}}],[\"多拍摄侧面和半身的照片\",{\"1\":{\"237\":1}}],[\"多拍大景\",{\"1\":{\"238\":1}}],[\"多拍水面\",{\"1\":{\"238\":1}}],[\"多拍侧面\",{\"1\":{\"236\":1}}],[\"多拍侧脸\",{\"1\":{\"159\":1}}],[\"多拍侧脸轮廓\",{\"1\":{\"76\":1}}],[\"多拍正面\",{\"1\":{\"173\":1}}],[\"多拍正侧脸侧脸\",{\"1\":{\"172\":1}}],[\"多拍正脸正侧脸\",{\"1\":{\"169\":1}}],[\"多拍几张观察区别\",{\"1\":{\"46\":1}}],[\"多角度\",{\"1\":{\"45\":1}}],[\"多景别拍摄\",{\"1\":{\"177\":1,\"191\":2}}],[\"多景别\",{\"1\":{\"45\":1}}],[\"腰靠\",{\"1\":{\"160\":1}}],[\"腰\",{\"1\":{\"43\":1}}],[\"腰以上\",{\"1\":{\"40\":1}}],[\"脚步动起来\",{\"1\":{\"224\":1}}],[\"脚部动作\",{\"1\":{\"161\":1}}],[\"脚尖不能歪曲\",{\"1\":{\"158\":1}}],[\"脚腕\",{\"1\":{\"133\":1}}],[\"脚\",{\"1\":{\"43\":1,\"150\":1,\"191\":1}}],[\"肢体所展现的是精神的外化\",{\"1\":{\"209\":1}}],[\"肢体或环境的配合构建画面张力\",{\"1\":{\"206\":1}}],[\"肢体不能挤在一起\",{\"1\":{\"174\":1}}],[\"肢体放松\",{\"1\":{\"160\":1}}],[\"肢体形成三角形\",{\"1\":{\"158\":1}}],[\"肢体避免在照片中以直线或直面形式出现\",{\"1\":{\"154\":1}}],[\"肢体的摆放\",{\"1\":{\"150\":1}}],[\"肢体动作拆解\",{\"1\":{\"191\":1}}],[\"肢体动作\",{\"1\":{\"142\":1,\"143\":1,\"144\":1}}],[\"肢体\",{\"1\":{\"53\":1,\"156\":1}}],[\"肢体特写\",{\"1\":{\"43\":1}}],[\"肢体语言的力量\",{\"0\":{\"209\":1}}],[\"肢体语言\",{\"1\":{\"19\":1,\"120\":1}}],[\"耳朵\",{\"1\":{\"43\":1,\"191\":1}}],[\"嘴呼吸\",{\"1\":{\"173\":1}}],[\"嘴唇很丰满\",{\"1\":{\"173\":1}}],[\"嘴唇来表达\",{\"1\":{\"152\":1}}],[\"嘴凸下巴短\",{\"1\":{\"173\":1}}],[\"嘴巴都可以用来表达复杂的情绪\",{\"1\":{\"211\":1}}],[\"嘴巴咬着花\",{\"1\":{\"182\":1}}],[\"嘴巴张一道缝\",{\"1\":{\"173\":1}}],[\"嘴巴后缩下巴往前伸露齿笑加仰头\",{\"1\":{\"173\":1}}],[\"嘴巴放松\",{\"1\":{\"173\":1}}],[\"嘴巴不要化太满\",{\"1\":{\"168\":1}}],[\"嘴巴\",{\"0\":{\"173\":1},\"1\":{\"43\":1,\"191\":1}}],[\"嘴角抽动\",{\"1\":{\"40\":1}}],[\"眼距过短\",{\"1\":{\"171\":1}}],[\"眼距过宽\",{\"1\":{\"171\":1}}],[\"眼头用哑光高光点一下\",{\"1\":{\"171\":1}}],[\"眼球与鼻梁之间的凹面\",{\"1\":{\"166\":1}}],[\"眼窝\",{\"1\":{\"166\":1}}],[\"眼神寻找焦点\",{\"1\":{\"157\":1}}],[\"眼神饱含的情绪和眼神的方向\",{\"1\":{\"153\":1}}],[\"眼神的方向\",{\"0\":{\"153\":1}}],[\"眼神\",{\"1\":{\"147\":1,\"211\":1}}],[\"眼神慵懒\",{\"1\":{\"143\":1}}],[\"眼神温柔\",{\"1\":{\"142\":1}}],[\"眼神不知道看向哪里\",{\"1\":{\"131\":1}}],[\"眼神表情\",{\"1\":{\"93\":1}}],[\"眼神方向\",{\"0\":{\"179\":1},\"1\":{\"40\":1,\"156\":1}}],[\"眼睛不能睁太大\",{\"1\":{\"171\":1}}],[\"眼睛太大\",{\"1\":{\"171\":1}}],[\"眼睛太小\",{\"1\":{\"171\":1}}],[\"眼睛小的一边可以靠近镜头\",{\"1\":{\"171\":1}}],[\"眼睛外凸\",{\"1\":{\"171\":1}}],[\"眼睛是人像摄影中非常关键的部分\",{\"1\":{\"153\":1}}],[\"眼睛微抬起\",{\"1\":{\"145\":1}}],[\"眼睛所看到的物体的色相并非一成不变\",{\"1\":{\"90\":1}}],[\"眼睛\",{\"1\":{\"43\":1,\"191\":1}}],[\"或导入其他配置类\",{\"1\":{\"902\":1}}],[\"或is\",{\"1\":{\"764\":1}}],[\"或jconsole\",{\"1\":{\"735\":1}}],[\"或返回值前面需要加泛型<e>\",{\"1\":{\"579\":1}}],[\"或\",{\"1\":{\"563\":1,\"565\":1,\"738\":1,\"926\":3,\"953\":1,\"970\":1,\"972\":2}}],[\"或毫秒\",{\"1\":{\"456\":1}}],[\"或打直或弯曲形成三角形\",{\"1\":{\"159\":1}}],[\"或与环境\",{\"1\":{\"157\":1}}],[\"或与观众的距离\",{\"1\":{\"125\":1}}],[\"或有运动趋势\",{\"1\":{\"149\":1}}],[\"或者中断事务\",{\"1\":{\"942\":2}}],[\"或者一致性\",{\"1\":{\"933\":1}}],[\"或者对数据进行增删改都会进行当前读\",{\"1\":{\"797\":1}}],[\"或者子查询\",{\"1\":{\"796\":1}}],[\"或者说覆盖\",{\"1\":{\"793\":1}}],[\"或者说叙事手段\",{\"1\":{\"187\":1}}],[\"或者4\",{\"1\":{\"738\":1}}],[\"或者\",{\"1\":{\"653\":1,\"657\":1,\"970\":1}}],[\"或者translog大小超过阈值\",{\"1\":{\"561\":1}}],[\"或者字符串device\",{\"1\":{\"470\":2}}],[\"或者视图端口的大小\",{\"1\":{\"467\":1}}],[\"或者其他浮动元素的边界为止\",{\"1\":{\"430\":1}}],[\"或者始终保持在浏览器视窗内的同一位置\",{\"1\":{\"422\":1}}],[\"或者随着包含它的区块滚动\",{\"1\":{\"402\":1}}],[\"或者是通过\",{\"1\":{\"362\":1}}],[\"或者设置margin\",{\"1\":{\"358\":1}}],[\"或者按照alt\",{\"1\":{\"251\":1}}],[\"或者从低到高的仰拍\",{\"1\":{\"233\":1}}],[\"或者选择有纵深感的通道作为背景\",{\"1\":{\"228\":1}}],[\"或者使用道具遮挡下巴或面部\",{\"1\":{\"159\":1}}],[\"或者写信\",{\"1\":{\"127\":1}}],[\"或者利用镜子拍摄\",{\"1\":{\"57\":1}}],[\"或具有共同的叙事能力\",{\"1\":{\"126\":1}}],[\"或用红色的道具作为点缀\",{\"1\":{\"97\":1}}],[\"或用来拍摄重要的物件细节\",{\"1\":{\"43\":1}}],[\"或提高iso\",{\"1\":{\"81\":1}}],[\"或影响主体的要素\",{\"1\":{\"74\":1}}],[\"或利用环境当中的曲线线条\",{\"1\":{\"62\":1}}],[\"或人物肢体局部占据整个画面\",{\"1\":{\"43\":1}}],[\"或坚定\",{\"1\":{\"34\":1}}],[\"广州艺联相机行\",{\"1\":{\"280\":1}}],[\"广角拍摄\",{\"1\":{\"244\":1}}],[\"广角拍摄将机位降到腰部\",{\"1\":{\"236\":1}}],[\"广角\",{\"1\":{\"208\":1}}],[\"广角镜头可以代入环境\",{\"1\":{\"191\":1}}],[\"广角镜头则在刻画人物的同时\",{\"1\":{\"40\":1}}],[\"广告\",{\"1\":{\"23\":1}}],[\"中心化调度\",{\"1\":{\"975\":1}}],[\"中心构图法\",{\"0\":{\"216\":1}}],[\"中获取的配置\",{\"1\":{\"972\":1}}],[\"中国加油\",{\"1\":{\"919\":1}}],[\"中的bean默认都是单例的\",{\"1\":{\"900\":1}}],[\"中的\",{\"1\":{\"822\":1}}],[\"中的元素放回\",{\"1\":{\"523\":1}}],[\"中元素的总基数\",{\"1\":{\"822\":1}}],[\"中为\",{\"1\":{\"822\":1}}],[\"中查找对应的完整行记录\",{\"1\":{\"798\":1}}],[\"中引用的对象\",{\"1\":{\"687\":2}}],[\"中断只是一种协同机制\",{\"1\":{\"671\":1}}],[\"中断只是一种协作机制\",{\"1\":{\"671\":1}}],[\"中断相关的api方法\",{\"1\":{\"671\":1}}],[\"中断的过程完全需要程序员自己实现\",{\"1\":{\"671\":1}}],[\"中断\",{\"1\":{\"671\":1}}],[\"中断一个运行中的线程\",{\"1\":{\"671\":1}}],[\"中使用的\",{\"1\":{\"663\":1}}],[\"中间不会被其他命令插队\",{\"1\":{\"877\":1}}],[\"中间不可以被加塞或者被分割\",{\"1\":{\"657\":1}}],[\"中间兄弟不能断\",{\"1\":{\"794\":1}}],[\"中间调\",{\"1\":{\"84\":1}}],[\"中用于排序的接口\",{\"1\":{\"625\":1}}],[\"中list扩容了几次\",{\"1\":{\"623\":1}}],[\"中字符串常量池中的\",{\"1\":{\"610\":1}}],[\"中存在的队头阻塞问题\",{\"1\":{\"551\":1}}],[\"中存储的元素数量\",{\"1\":{\"520\":1}}],[\"中添加新元素\",{\"1\":{\"523\":1}}],[\"中除了队尾元素以外的最后一个元素\",{\"1\":{\"522\":1}}],[\"中取出一个元素\",{\"1\":{\"522\":1}}],[\"中取出的所有元素\",{\"1\":{\"522\":1}}],[\"中是否存在三个元素\",{\"1\":{\"493\":1}}],[\"中划线\",{\"1\":{\"355\":1}}],[\"中央构图法\",{\"1\":{\"279\":1}}],[\"中\",{\"1\":{\"276\":1,\"503\":1,\"561\":1,\"657\":1,\"663\":1,\"714\":1,\"801\":1,\"824\":1,\"842\":2,\"926\":1,\"956\":1}}],[\"中性灰修图\",{\"0\":{\"255\":1}}],[\"中性灰\",{\"1\":{\"254\":1}}],[\"中长焦拍摄特写\",{\"1\":{\"238\":1}}],[\"中焦\",{\"1\":{\"206\":1}}],[\"中庭过长时刘海不能太长\",{\"1\":{\"168\":1}}],[\"中庭过长\",{\"1\":{\"168\":1}}],[\"中立\",{\"1\":{\"93\":1}}],[\"中饱和度\",{\"1\":{\"92\":1}}],[\"中调\",{\"1\":{\"84\":1,\"278\":1}}],[\"中午\",{\"1\":{\"81\":1}}],[\"中近景\",{\"0\":{\"40\":1},\"1\":{\"44\":1}}],[\"中景60\",{\"1\":{\"45\":1}}],[\"中景可以刻画人物面部神态和情绪\",{\"1\":{\"40\":1}}],[\"中景更为平稳和客观\",{\"1\":{\"39\":1}}],[\"中景\",{\"0\":{\"39\":1},\"1\":{\"44\":1,\"191\":1,\"276\":1,\"279\":1}}],[\"但它们的设计理念和适用场景有所不同\",{\"1\":{\"974\":1}}],[\"但在实际应用中需要注意时钟回拨问题和机器id的管理\",{\"1\":{\"938\":1}}],[\"但在标准误差范围内\",{\"1\":{\"822\":1}}],[\"但每个应用都可以根据自身业务特点\",{\"1\":{\"934\":1}}],[\"但核心思路是简化应用配置\",{\"1\":{\"926\":1}}],[\"但性能较差\",{\"1\":{\"899\":1}}],[\"但仍可能出现幻读的问题\",{\"1\":{\"899\":1}}],[\"但可能会出现不可重复读和幻读的问题\",{\"1\":{\"899\":1}}],[\"但可以记录人的面部表情\",{\"1\":{\"34\":1}}],[\"但哈希碰撞的可能性就越小\",{\"1\":{\"822\":1}}],[\"但该索引只包含了name和对应的id值\",{\"1\":{\"798\":1}}],[\"但查询条件未遵守最左匹配原则\",{\"1\":{\"794\":1}}],[\"但幻读仍有可能发生\",{\"1\":{\"780\":1}}],[\"但volatile无法保证原子性\",{\"1\":{\"659\":1}}],[\"但由于\",{\"1\":{\"611\":1}}],[\"但也会消耗更多资源\",{\"1\":{\"566\":1}}],[\"但需要注意的是\",{\"1\":{\"565\":1}}],[\"但不能选择性地继承父类\",{\"1\":{\"604\":1}}],[\"但不使用size实现队列\",{\"0\":{\"519\":1}}],[\"但不可以自行修图\",{\"1\":{\"122\":1}}],[\"但是破坏了kafka的设计初衷\",{\"1\":{\"983\":1}}],[\"但是业务逻辑还没处理完怎么办\",{\"1\":{\"842\":1}}],[\"但是请求每次都会打到数据库上面去\",{\"1\":{\"836\":1}}],[\"但是判断结果为不存在的时候则一定不存在\",{\"1\":{\"833\":1}}],[\"但是如果数据库的数据量不大\",{\"1\":{\"792\":1}}],[\"但是幻读或不可重复读仍有可能发生\",{\"1\":{\"779\":1}}],[\"但是该算法不仅执行效率低下\",{\"1\":{\"691\":1}}],[\"但是在老年代\",{\"1\":{\"691\":1}}],[\"但是在移动端不一样\",{\"1\":{\"470\":1}}],[\"但是实例变量存在堆内存中\",{\"1\":{\"681\":1}}],[\"但是实际情况可能是\",{\"1\":{\"552\":1}}],[\"但是内部实现还是基于对象头的markword来实现的\",{\"1\":{\"672\":1}}],[\"但是内容撑起高度的本质是什么呢\",{\"1\":{\"458\":1}}],[\"但是任务\",{\"1\":{\"670\":1}}],[\"但是它是一个独立于常量池的新对象\",{\"1\":{\"610\":1}}],[\"但是父类中的私有属性和方法子类是无法访问\",{\"1\":{\"604\":1}}],[\"但是可以实现多个接口\",{\"1\":{\"605\":1}}],[\"但是可以提供一些可以被外界访问的方法来操作属性\",{\"1\":{\"604\":1}}],[\"但是可以重载\",{\"1\":{\"603\":1}}],[\"但是可以设置宽度和高度\",{\"1\":{\"436\":1}}],[\"但是很显然\",{\"1\":{\"521\":1}}],[\"但是要注意\",{\"1\":{\"520\":1}}],[\"但是\",{\"1\":{\"489\":1,\"693\":1,\"878\":1,\"919\":1,\"934\":1}}],[\"但是从来没有给出过bfc可以解决高度塌陷的原理或者权威的文档说明\",{\"1\":{\"465\":1}}],[\"但是为啥对齐方式千奇百怪呢\",{\"1\":{\"458\":1}}],[\"但是不保证100\",{\"1\":{\"871\":1}}],[\"但是不保证原子性\",{\"1\":{\"658\":1}}],[\"但是不能删除元素\",{\"1\":{\"833\":1}}],[\"但是不能解决定位元素高度塌陷问题\",{\"1\":{\"465\":1}}],[\"但是不适合区间查找\",{\"1\":{\"793\":1}}],[\"但是不好理解\",{\"1\":{\"455\":1}}],[\"但是不占据空间\",{\"1\":{\"392\":2}}],[\"但是这两种方法本身存在很大的局限性\",{\"1\":{\"435\":1}}],[\"但是需要子元素设置回来\",{\"1\":{\"430\":1}}],[\"但是明显的缺点是\",{\"1\":{\"422\":1}}],[\"但是我们更喜欢自由的div\",{\"1\":{\"406\":1}}],[\"但是图片保持宽高比\",{\"1\":{\"400\":1}}],[\"但是会占据空间\",{\"1\":{\"380\":1}}],[\"但是会暗一点\",{\"1\":{\"288\":1}}],[\"但是p元素不能包含其他块级元素\",{\"1\":{\"379\":1}}],[\"但是最终只有一个会生效\",{\"1\":{\"377\":1}}],[\"但是优点我们不需要考虑人物和光线的方向\",{\"1\":{\"233\":1}}],[\"但凡是有方向连续性的东西\",{\"1\":{\"222\":1}}],[\"但要注意内存使用量\",{\"1\":{\"566\":1}}],[\"但要尊重个体的差异化\",{\"1\":{\"166\":1}}],[\"但要揣摩运动趋势调整形体\",{\"1\":{\"162\":1}}],[\"但拍摄到面部依旧要注意面部表情\",{\"1\":{\"162\":1}}],[\"但拍摄弱化摆拍感\",{\"1\":{\"135\":1}}],[\"但依旧留有希望\",{\"1\":{\"127\":1}}],[\"但影子长度短\",{\"1\":{\"81\":1}}],[\"但构图不易出彩\",{\"1\":{\"53\":1}}],[\"但缺少情绪渲染和视觉冲击力\",{\"1\":{\"39\":1}}],[\"也是最安全的\",{\"1\":{\"982\":1}}],[\"也是用于流量整形和限速\",{\"1\":{\"949\":1}}],[\"也是影响照片影调的因素之一\",{\"1\":{\"92\":1}}],[\"也能通过redo\",{\"1\":{\"802\":1}}],[\"也能够让画面更加的干净\",{\"1\":{\"223\":1}}],[\"也会耗费一定空间\",{\"1\":{\"792\":1}}],[\"也即将要执行的代码\",{\"1\":{\"680\":1}}],[\"也提供了转换和组合的方法\",{\"1\":{\"670\":1}}],[\"也可能代表一个完成阶段\",{\"1\":{\"670\":1}}],[\"也可能是由多个阶段一起触发\",{\"1\":{\"670\":1}}],[\"也可以是基于比例或条件触发的\",{\"1\":{\"977\":1}}],[\"也可以是语言特定的sdk\",{\"1\":{\"977\":1}}],[\"也可以是相对的\",{\"1\":{\"351\":1}}],[\"也可以通过访问\",{\"1\":{\"972\":1}}],[\"也可以把它称为标记\",{\"1\":{\"691\":1}}],[\"也可以叫同步点\",{\"1\":{\"668\":1}}],[\"也可以用父类的功能\",{\"1\":{\"604\":1}}],[\"也可以执行\",{\"1\":{\"602\":1}}],[\"也可以理解成\",{\"1\":{\"519\":1}}],[\"也可以使用\",{\"1\":{\"463\":1}}],[\"也可以使用道具\",{\"1\":{\"34\":1}}],[\"也可以设置多张\",{\"1\":{\"398\":1}}],[\"也可以设置宽度和高度\",{\"1\":{\"379\":1}}],[\"也可以省略\",{\"1\":{\"366\":1}}],[\"也可以去掉a元素默认的下划线\",{\"1\":{\"355\":1}}],[\"也可以调整明暗\",{\"1\":{\"289\":1}}],[\"也可以仰拍\",{\"1\":{\"279\":1}}],[\"也可以从侧面延伸\",{\"1\":{\"244\":1}}],[\"也可以从侧面拍摄\",{\"1\":{\"232\":1}}],[\"也可以降低机位\",{\"1\":{\"238\":1}}],[\"也可以让光线漏出一点拍摄星芒效果\",{\"1\":{\"237\":1}}],[\"也可以利用近处的花朵作为前景\",{\"1\":{\"239\":1}}],[\"也可以利用花丛做前景\",{\"1\":{\"232\":1}}],[\"也可以利用顺光+侧顺光拍摄\",{\"1\":{\"232\":1}}],[\"也可以拍到一些顶部的屋檐做前景\",{\"1\":{\"231\":1}}],[\"也可以拍全身\",{\"1\":{\"224\":1}}],[\"也可以身体微侧一只脚在上另一只在下制造线条层次感\",{\"1\":{\"161\":1}}],[\"也叫单例池\",{\"1\":{\"925\":1}}],[\"也叫组合索引或复合索引\",{\"1\":{\"793\":1}}],[\"也叫递归锁\",{\"1\":{\"660\":1}}],[\"也叫写后读\",{\"1\":{\"659\":1}}],[\"也称内存栅栏\",{\"1\":{\"659\":1}}],[\"也称hash\",{\"1\":{\"638\":1}}],[\"也称倒排列表\",{\"1\":{\"563\":1}}],[\"也称为色彩的亮度\",{\"1\":{\"91\":1}}],[\"也推荐使用\",{\"1\":{\"521\":1}}],[\"也只能从一端取出元素\",{\"1\":{\"512\":1}}],[\"也包括更强大的控制语句\",{\"1\":{\"469\":1}}],[\"也没设置宽高\",{\"1\":{\"425\":1}}],[\"也就是业务逻辑的每个分支都需要实现try\",{\"1\":{\"942\":1}}],[\"也就是每隔\",{\"1\":{\"842\":1}}],[\"也就是hash冲突\",{\"1\":{\"833\":1}}],[\"也就是说slots越小\",{\"1\":{\"872\":1}}],[\"也就是说一个或一组线程处理多个tcp连接\",{\"1\":{\"864\":1}}],[\"也就是说在数据库中执行的sql会原封不动的记录到binlog中\",{\"1\":{\"801\":1}}],[\"也就是说从右往左\",{\"1\":{\"497\":1}}],[\"也就是通过主键再查找一次\",{\"1\":{\"793\":1}}],[\"也就是得到类\",{\"1\":{\"712\":1}}],[\"也就是直接在调用execute方法的线程中运行\",{\"1\":{\"664\":1}}],[\"也就是\",{\"1\":{\"610\":1}}],[\"也就是属性\",{\"1\":{\"604\":1}}],[\"也就是搜索结果的起始位置和返回的数量\",{\"1\":{\"562\":1}}],[\"也就是可以以此为基础\",{\"1\":{\"521\":1}}],[\"也就是逻辑像素\",{\"1\":{\"468\":1}}],[\"也就是block\",{\"1\":{\"465\":1}}],[\"也就是position值为relative\",{\"1\":{\"425\":1}}],[\"也就是上右下左\",{\"1\":{\"385\":1}}],[\"也就是降低亮部\",{\"1\":{\"288\":1}}],[\"也成功通过公司晋升答辩升级到了高级开发工程师\",{\"1\":{\"308\":1}}],[\"也不需要强制保持严格的平衡\",{\"1\":{\"857\":1}}],[\"也不需要获得对象锁\",{\"1\":{\"655\":1}}],[\"也不需要给html设置这样一个font\",{\"1\":{\"473\":1}}],[\"也不影响用户获取完整的网页内容信息\",{\"1\":{\"403\":1}}],[\"也不是主体\",{\"1\":{\"184\":1}}],[\"也不似近景特写镜头有强烈的情感色彩\",{\"1\":{\"39\":1}}],[\"也都是精心设计过的\",{\"1\":{\"149\":1}}],[\"也集中在人和环境的关系上\",{\"1\":{\"39\":1}}],[\"主动刷新接口\",{\"1\":{\"972\":1}}],[\"主启动类增加\",{\"1\":{\"951\":1}}],[\"主从+哨兵\",{\"1\":{\"835\":1}}],[\"主从复制的基本原理和配置步骤如下\",{\"1\":{\"800\":1}}],[\"主数据库开启二进制日志\",{\"1\":{\"801\":1}}],[\"主键索引不能为null\",{\"1\":{\"793\":1}}],[\"主键索引字段的所有值都是唯一的\",{\"1\":{\"793\":1}}],[\"主键索引\",{\"1\":{\"793\":1,\"798\":1}}],[\"主键id\",{\"1\":{\"751\":1}}],[\"主管java程序的运行\",{\"1\":{\"682\":1}}],[\"主线程结束\",{\"1\":{\"670\":2}}],[\"主分片完成写入后\",{\"1\":{\"565\":1}}],[\"主分片完成索引和持久化后\",{\"1\":{\"561\":1}}],[\"主分片或副本分片\",{\"1\":{\"562\":1}}],[\"主轴\",{\"1\":{\"441\":1}}],[\"主要功能有push\",{\"1\":{\"818\":1}}],[\"主要是单线程事件循环和io多路复用\",{\"1\":{\"814\":1}}],[\"主要是用来做可见性判断\",{\"1\":{\"797\":1}}],[\"主要是where后面的条件优化\",{\"1\":{\"794\":1}}],[\"主要区分普通查询\",{\"1\":{\"796\":1}}],[\"主要为了解决幻读\",{\"1\":{\"785\":1}}],[\"主要负责加载\",{\"1\":{\"714\":1}}],[\"主要用于字段和方法上的注入\",{\"1\":{\"888\":1}}],[\"主要用于判断一个元素是否在集合中\",{\"1\":{\"833\":1}}],[\"主要用于状态统计\",{\"1\":{\"823\":1}}],[\"主要用于屏幕\",{\"1\":{\"466\":1}}],[\"主要用来加载\",{\"1\":{\"714\":1}}],[\"主要用来构建锁和同步器\",{\"1\":{\"665\":1}}],[\"主要作用\",{\"1\":{\"663\":1,\"732\":1}}],[\"主要解决的是多个线程之间访问资源的同步性\",{\"1\":{\"661\":1}}],[\"主要原因有\",{\"1\":{\"406\":1}}],[\"主要包含\",{\"1\":{\"383\":1}}],[\"主要有三个要素组成\",{\"1\":{\"743\":1}}],[\"主要有\",{\"1\":{\"259\":1,\"276\":1,\"696\":1,\"697\":1,\"698\":1}}],[\"主要决定了人在场景中位置\",{\"1\":{\"37\":1}}],[\"主图突出\",{\"1\":{\"216\":1}}],[\"主流电影画幅\",{\"1\":{\"191\":1}}],[\"主色+白色\",{\"1\":{\"98\":1}}],[\"主色\",{\"0\":{\"98\":1}}],[\"主色调\",{\"1\":{\"95\":1,\"260\":1}}],[\"主次鲜明\",{\"1\":{\"51\":1}}],[\"主体对称可以使用\",{\"1\":{\"279\":1}}],[\"主体清晰\",{\"1\":{\"273\":1}}],[\"主体沿画面对角线的方向排列\",{\"1\":{\"221\":1}}],[\"主体放在画面中心\",{\"1\":{\"216\":1}}],[\"主体是人与环境的关系\",{\"1\":{\"184\":1}}],[\"主体与陪体构图法\",{\"0\":{\"71\":1}}],[\"主体与陪体在画面中的结构和组成关系\",{\"1\":{\"50\":1}}],[\"主体突出明确\",{\"1\":{\"53\":1}}],[\"主体明确\",{\"1\":{\"51\":1}}],[\"主体\",{\"1\":{\"49\":1,\"278\":1}}],[\"主题阐释与拍摄手法\",{\"1\":{\"127\":1}}],[\"主题导向型\",{\"1\":{\"127\":1}}],[\"主题\",{\"0\":{\"114\":1},\"1\":{\"19\":1,\"120\":1}}],[\"以保证服务注册和查询的高效率\",{\"1\":{\"971\":1}}],[\"以保持较高的查询效率\",{\"1\":{\"857\":1}}],[\"以一定速率流出水\",{\"1\":{\"948\":1}}],[\"以防止过载和保护后端服务\",{\"1\":{\"936\":1}}],[\"以非事务方式执行操作\",{\"1\":{\"898\":2}}],[\"以选择最适合的实例作为新的主节点\",{\"1\":{\"871\":1}}],[\"以给定的经纬度为中心\",{\"1\":{\"824\":2}}],[\"以确保数据的正确性和完整性\",{\"1\":{\"802\":1}}],[\"以确保聚合性能\",{\"1\":{\"567\":1}}],[\"以此为基础来进行估算\",{\"1\":{\"848\":1}}],[\"以此来保证分布式事务的一致性\",{\"1\":{\"968\":1}}],[\"以此来防止多个事务对同一资源的并发访问引发的问题\",{\"1\":{\"802\":1}}],[\"以此来判断节点是否存活以及网络连接状况\",{\"1\":{\"564\":1}}],[\"以此实现非锁定读\",{\"1\":{\"797\":1}}],[\"以避免频繁的full\",{\"1\":{\"738\":1}}],[\"以避免重复的三元组\",{\"1\":{\"494\":2}}],[\"以低延迟为首要目标的一款垃圾收集器\",{\"1\":{\"709\":1}}],[\"以方便执行器执行\",{\"1\":{\"683\":1}}],[\"以便于后续查询和展示\",{\"1\":{\"977\":1}}],[\"以便在服务器重启或集群环境下保持服务实例列表的一致性\",{\"1\":{\"971\":1}}],[\"以便快速回收\",{\"1\":{\"738\":1}}],[\"以便及时发现问题并作出相应调整\",{\"1\":{\"567\":1}}],[\"以便更方便地使用双指针方法\",{\"1\":{\"494\":1}}],[\"以减少网络开销\",{\"1\":{\"566\":1}}],[\"以下\",{\"1\":{\"782\":1}}],[\"以下简述elasticsearch\",{\"1\":{\"564\":1}}],[\"以下是\",{\"1\":{\"822\":1,\"968\":1}}],[\"以下是mysql如何实现事务的简述\",{\"1\":{\"802\":1}}],[\"以下是如何使用arthas来分析cpu过高的问题\",{\"1\":{\"738\":1}}],[\"以下是搜索过程的详细步骤\",{\"1\":{\"562\":1}}],[\"以下是elasticsearch索引文档的一个简化版详细流程\",{\"1\":{\"561\":1}}],[\"以下是一些例子\",{\"1\":{\"496\":1}}],[\"以反映对输入数据加工后的结果\",{\"1\":{\"482\":1}}],[\"以满足正常在一个移动端窗口的布局\",{\"1\":{\"470\":1}}],[\"以\",{\"1\":{\"436\":1,\"794\":1}}],[\"以block\",{\"1\":{\"436\":1}}],[\"以达到灵活布局的效果\",{\"1\":{\"429\":1}}],[\"以完全覆盖铺满元素\",{\"1\":{\"400\":1}}],[\"以背景图本身大小显示\",{\"1\":{\"400\":1}}],[\"以人类可读的方式\",{\"1\":{\"332\":1}}],[\"以人类可读的方式显示磁盘空间利用情况\",{\"1\":{\"331\":1}}],[\"以人类可读的方式显示内存使用情况\",{\"1\":{\"330\":1}}],[\"以mb为单位\",{\"1\":{\"330\":1}}],[\"以上就是spring\",{\"1\":{\"926\":1}}],[\"以上\",{\"1\":{\"782\":1}}],[\"以上组成\",{\"1\":{\"282\":1}}],[\"以上都不是\",{\"1\":{\"13\":1}}],[\"以后遇到这种特色建筑时候\",{\"1\":{\"242\":1}}],[\"以及可选的parent\",{\"1\":{\"977\":1}}],[\"以及相关的元数据\",{\"1\":{\"977\":1}}],[\"以及实现disposablebean接口或定义destroy\",{\"1\":{\"884\":1}}],[\"以及读写分离等功能\",{\"1\":{\"800\":1}}],[\"以及被\",{\"1\":{\"714\":1}}],[\"以及shard\",{\"1\":{\"567\":1}}],[\"以及对拍摄者的鼓励\",{\"1\":{\"224\":1}}],[\"以及确定该服装身份下合适的美姿和状态\",{\"1\":{\"109\":1}}],[\"以横屏拍摄为主\",{\"1\":{\"191\":1}}],[\"以眼睛长度为单位\",{\"1\":{\"165\":1}}],[\"以摄影师想法为主导\",{\"1\":{\"122\":1}}],[\"以红色为主色的服装进行配色\",{\"1\":{\"97\":1}}],[\"以某个颜色为主导\",{\"1\":{\"95\":1}}],[\"以景来烘托情绪\",{\"1\":{\"37\":1}}],[\"以景为主\",{\"1\":{\"37\":1}}],[\"大家排队\",{\"1\":{\"958\":1}}],[\"大家可以想象\",{\"1\":{\"521\":1}}],[\"大key的数据迁移到数据库\",{\"1\":{\"875\":1}}],[\"大于上面两个默认值时会使用跳表\",{\"1\":{\"856\":1}}],[\"大批缓存同时到期\",{\"1\":{\"835\":1}}],[\"大大加快数据的检索速度\",{\"1\":{\"792\":1}}],[\"大对象直接进入老年代\",{\"1\":{\"684\":1}}],[\"大小固定\",{\"1\":{\"637\":1}}],[\"大小眼\",{\"1\":{\"171\":1}}],[\"大数据处理首页处理等弱交互场景\",{\"1\":{\"697\":1}}],[\"大数据\",{\"0\":{\"340\":1},\"1\":{\"310\":1},\"2\":{\"344\":1}}],[\"大\",{\"1\":{\"279\":1}}],[\"大方向的色调调整\",{\"1\":{\"254\":1}}],[\"大树拍摄\",{\"0\":{\"241\":1}}],[\"大角度小角度\",{\"1\":{\"178\":1}}],[\"大多数情况下\",{\"1\":{\"792\":1}}],[\"大多数的电影影调为低调和中调\",{\"1\":{\"191\":1}}],[\"大多数会溜肩\",{\"1\":{\"175\":1}}],[\"大多数静态的照片\",{\"1\":{\"149\":1}}],[\"大地色消肿\",{\"1\":{\"171\":1}}],[\"大臂与小臂之间呈一定角度而非直线\",{\"1\":{\"156\":1}}],[\"大笑\",{\"1\":{\"150\":1}}],[\"大幅度动作\",{\"1\":{\"142\":1}}],[\"大景\",{\"1\":{\"127\":1}}],[\"大裙摆设计感裙子\",{\"1\":{\"125\":1}}],[\"大胆一点\",{\"1\":{\"122\":1}}],[\"大学城\",{\"1\":{\"122\":1}}],[\"大晴天\",{\"1\":{\"78\":1}}],[\"大特写\",{\"0\":{\"43\":1},\"1\":{\"44\":1,\"45\":1}}],[\"大全景\",{\"1\":{\"37\":1,\"44\":1}}],[\"大量的请求同时查询一个key时\",{\"1\":{\"837\":1}}],[\"大量重复代码\",{\"1\":{\"469\":1}}],[\"大量收集样片\",{\"1\":{\"123\":1}}],[\"大量拍摄自己喜欢风格的创作\",{\"0\":{\"27\":1}}],[\"大量阅片\",{\"0\":{\"19\":1}}],[\"远全\",{\"1\":{\"276\":1}}],[\"远全中近特\",{\"1\":{\"177\":1}}],[\"远\",{\"1\":{\"276\":1}}],[\"远离镜头一侧的脸不能占比太小\",{\"1\":{\"156\":1}}],[\"远景拍摄\",{\"1\":{\"276\":1}}],[\"远景\",{\"1\":{\"37\":1,\"44\":1}}],[\"远距离+长焦拍摄人物的全身\",{\"1\":{\"236\":1}}],[\"远距离\",{\"1\":{\"224\":1}}],[\"远距\",{\"1\":{\"33\":1}}],[\"​\",{\"1\":{\"35\":1,\"153\":1,\"160\":1,\"229\":1,\"232\":3,\"236\":1,\"241\":1,\"242\":1,\"257\":2,\"279\":1,\"480\":1,\"481\":1,\"484\":1,\"514\":1,\"548\":1,\"662\":1,\"664\":1,\"666\":1,\"670\":2,\"699\":1,\"719\":1,\"729\":1,\"738\":1,\"924\":1}}],[\"要读取哪个快照呢\",{\"1\":{\"797\":1}}],[\"要相对较高\",{\"1\":{\"738\":1}}],[\"要获取结果必须等待\",{\"1\":{\"670\":1}}],[\"要修改变量\",{\"1\":{\"669\":1}}],[\"要更新的变量值\",{\"1\":{\"669\":1}}],[\"要求左右子树的树高差绝对值不能超过1\",{\"1\":{\"793\":1}}],[\"要求三个方法执行都只需要1秒\",{\"1\":{\"670\":1}}],[\"要求至少有多少个节点在线并且互相可达\",{\"1\":{\"564\":1}}],[\"要求元素的顶部低于之前生成的所有浮动元素的底部\",{\"1\":{\"433\":1}}],[\"要求元素的顶部低于之前生成的所有右浮动元素的底部\",{\"1\":{\"433\":1}}],[\"要求元素的顶部低于之前生成的所有左浮动元素的底部\",{\"1\":{\"433\":1}}],[\"要想保证缓存和数据库中的数据一致\",{\"1\":{\"845\":1}}],[\"要想拿到队尾的元素\",{\"1\":{\"522\":1}}],[\"要想让块级元素居中\",{\"1\":{\"358\":1}}],[\"要执行动画的css属性名称\",{\"1\":{\"456\":1}}],[\"要知道色彩关系理念\",{\"1\":{\"295\":1}}],[\"要为了漂亮\",{\"1\":{\"279\":1}}],[\"要为了简洁\",{\"1\":{\"279\":1}}],[\"要根据现场光线情况和环境情况\",{\"1\":{\"224\":1}}],[\"要注重人与环境的关系\",{\"1\":{\"184\":1}}],[\"要注意人物和光线的位置\",{\"1\":{\"79\":1}}],[\"要么全部回滚\",{\"1\":{\"968\":1}}],[\"要么全部失败回滚\",{\"1\":{\"802\":1}}],[\"要么唤醒全部线程\",{\"1\":{\"662\":1}}],[\"要么随机唤醒一个线程\",{\"1\":{\"662\":1}}],[\"要么同时失败\",{\"1\":{\"657\":1}}],[\"要么同时成功\",{\"1\":{\"657\":1}}],[\"要么换景\",{\"1\":{\"51\":1}}],[\"要么用排除法给出的上面7个方法解决\",{\"1\":{\"51\":1}}],[\"要保证拍摄角度的多样性\",{\"1\":{\"35\":1}}],[\"要先了解摄影师传递的情绪或个人观点\",{\"1\":{\"14\":1}}],[\"同步与异步的理解\",{\"1\":{\"865\":1}}],[\"同步\",{\"1\":{\"865\":2}}],[\"同步保存操作\",{\"1\":{\"860\":1}}],[\"同步直写策略\",{\"1\":{\"845\":1}}],[\"同步块执行速度较长\",{\"1\":{\"672\":1}}],[\"同步块执行速度非常快\",{\"1\":{\"672\":1}}],[\"同义\",{\"1\":{\"373\":2}}],[\"同色系配色\",{\"0\":{\"108\":1}}],[\"同一把锁\",{\"1\":{\"671\":2}}],[\"同一端出\",{\"1\":{\"521\":1}}],[\"同一个节点的同一个线程如果获得锁之后\",{\"1\":{\"839\":1}}],[\"同一个样式表中\",{\"1\":{\"347\":1}}],[\"同一个场景可以近距离\",{\"1\":{\"224\":1}}],[\"同一时刻内\",{\"1\":{\"259\":1}}],[\"同一组拍摄中使用不同焦段镜头来强化视觉\",{\"1\":{\"191\":1}}],[\"同一\",{\"1\":{\"191\":1}}],[\"同一动作不同角度构图拆解\",{\"1\":{\"191\":1}}],[\"同一动作\",{\"1\":{\"191\":1}}],[\"同一动作眼神方向不同\",{\"1\":{\"179\":1}}],[\"同一道具的多样性使用\",{\"0\":{\"182\":1}}],[\"同一角度不同动作\",{\"1\":{\"177\":1}}],[\"同一场景同一动作的不同角度拍摄\",{\"1\":{\"177\":1}}],[\"同一场景内\",{\"1\":{\"35\":1}}],[\"同一色相的不同明度和饱和度的组合\",{\"1\":{\"96\":1}}],[\"同时兼顾良好的吞吐量\",{\"1\":{\"708\":1}}],[\"同时任务\",{\"1\":{\"670\":1}}],[\"同时有三个方法\",{\"1\":{\"670\":1}}],[\"同时\",{\"1\":{\"561\":1,\"562\":1,\"563\":1,\"566\":1,\"567\":1}}],[\"同时移动左右指针继续寻找下一个三元组\",{\"1\":{\"494\":1}}],[\"同时色彩饱和变高\",{\"1\":{\"288\":1}}],[\"同时保持水平线的横平竖直\",{\"1\":{\"242\":1}}],[\"同时靠近模特拍出大长腿\",{\"1\":{\"236\":1}}],[\"同时让画面饱满\",{\"1\":{\"221\":1}}],[\"同时注意选景\",{\"1\":{\"81\":1}}],[\"同时面部朝向画面更窄的一边\",{\"1\":{\"65\":1}}],[\"同个角度可拍摄不同景别\",{\"1\":{\"35\":1}}],[\"同样也会创建副本\",{\"1\":{\"587\":1}}],[\"同样可以使画面失衡\",{\"1\":{\"64\":1}}],[\"同样的景别\",{\"1\":{\"40\":1}}],[\"同样\",{\"1\":{\"34\":1}}],[\"谨慎使用\",{\"1\":{\"34\":1}}],[\"小练习\",{\"1\":{\"387\":1}}],[\"小\",{\"1\":{\"279\":1}}],[\"小景深\",{\"1\":{\"279\":1}}],[\"小景致\",{\"1\":{\"234\":1}}],[\"小溪河拍出水面雾化效果\",{\"1\":{\"273\":1}}],[\"小拱桥\",{\"0\":{\"230\":1}}],[\"小广角\",{\"1\":{\"208\":1}}],[\"小范围内重复动作\",{\"1\":{\"162\":1}}],[\"小红书等\",{\"1\":{\"122\":1}}],[\"小红书\",{\"1\":{\"121\":1,\"122\":1,\"124\":1}}],[\"小清新\",{\"1\":{\"85\":1,\"114\":1,\"123\":1}}],[\"小光圈拍摄\",{\"1\":{\"69\":1}}],[\"小全景\",{\"1\":{\"37\":1}}],[\"小角度的俯拍镜头更多的是简化构图及获得不同寻常的视角\",{\"1\":{\"34\":1}}],[\"小菜鸟一枚\",{\"1\":{\"2\":1}}],[\"不依赖zookeeper等分布式协调服务\",{\"1\":{\"974\":1}}],[\"不让客户端等待并立刻返回一个友好提示\",{\"1\":{\"956\":1}}],[\"不让div独占一行\",{\"1\":{\"349\":1}}],[\"不管请求何时到达\",{\"1\":{\"949\":1}}],[\"不管继承过来的属性权重的多少\",{\"1\":{\"376\":1}}],[\"不足之处\",{\"1\":{\"949\":1}}],[\"不足会被回收\",{\"1\":{\"663\":1}}],[\"不支持在构造函数或参数上使用\",{\"1\":{\"888\":1}}],[\"不支持事物回滚\",{\"1\":{\"878\":1}}],[\"不建议单独使用aof\",{\"1\":{\"862\":1}}],[\"不乱抢\",{\"1\":{\"839\":1}}],[\"不设置过期时间\",{\"1\":{\"837\":1}}],[\"不设分代的\",{\"1\":{\"709\":1}}],[\"不分库分表\",{\"1\":{\"804\":1}}],[\"不包含union\",{\"1\":{\"796\":1}}],[\"不包括记录本身\",{\"1\":{\"785\":1}}],[\"不为null的字段\",{\"1\":{\"794\":1}}],[\"不然索引会失效哦\",{\"1\":{\"794\":1}}],[\"不做回表操作\",{\"1\":{\"793\":1}}],[\"不合适\",{\"1\":{\"793\":1}}],[\"不仅要标记所有存活对象\",{\"1\":{\"691\":1}}],[\"不见不散\",{\"1\":{\"670\":1}}],[\"不是整数类型\",{\"1\":{\"855\":1}}],[\"不是集合也不保存数据\",{\"1\":{\"822\":1}}],[\"不是立刻stop打断\",{\"1\":{\"671\":1}}],[\"不是for循环里面\",{\"1\":{\"667\":1}}],[\"不是所有的节点都有资格成为master节点\",{\"1\":{\"564\":1}}],[\"不处理新任务\",{\"1\":{\"664\":1}}],[\"不存在同步的构造方法一说\",{\"1\":{\"661\":1}}],[\"不涉及到对象类\",{\"1\":{\"655\":1}}],[\"不剥夺条件\",{\"1\":{\"652\":1}}],[\"不一定回表查询\",{\"1\":{\"793\":1}}],[\"不一定是并行\",{\"1\":{\"698\":1}}],[\"不一定\",{\"1\":{\"572\":1}}],[\"不受检查异常\",{\"1\":{\"571\":2}}],[\"不行再阻塞\",{\"1\":{\"672\":1}}],[\"不行\",{\"1\":{\"552\":1}}],[\"不保证每次请求的可用性\",{\"1\":{\"933\":1}}],[\"不保证是否顺序到达\",{\"1\":{\"550\":1}}],[\"不保证数据传输的可靠性\",{\"1\":{\"546\":1}}],[\"不重复\",{\"1\":{\"550\":1}}],[\"不丢失\",{\"1\":{\"550\":1}}],[\"不应该是继承关系\",{\"1\":{\"521\":1}}],[\"不浪费空间\",{\"0\":{\"518\":1}}],[\"不使用递归实现\",{\"1\":{\"509\":1}}],[\"不使用虚拟头节点\",{\"1\":{\"507\":1}}],[\"不会影响系统的性能\",{\"1\":{\"938\":1}}],[\"不会对命令进行语法校验\",{\"1\":{\"878\":1}}],[\"不会阻塞当前进\",{\"1\":{\"865\":1}}],[\"不会阻塞redis主线程\",{\"1\":{\"860\":1}}],[\"不会驱逐任何key\",{\"1\":{\"832\":1}}],[\"不会存在部分执行的现象\",{\"1\":{\"802\":1}}],[\"不会导致主从不一致问题\",{\"1\":{\"801\":1}}],[\"不会利用索引\",{\"1\":{\"794\":1}}],[\"不会传递给父类加载器\",{\"1\":{\"716\":1}}],[\"不会在整个回收阶段发生完全阻塞应用程序的情况\",{\"1\":{\"708\":1}}],[\"不会停顿用户线程\",{\"1\":{\"707\":1}}],[\"不会停止线程\",{\"1\":{\"671\":1}}],[\"不会出现脏读\",{\"1\":{\"899\":1}}],[\"不会出现\",{\"1\":{\"690\":1}}],[\"不会发生内存溢出\",{\"1\":{\"680\":1}}],[\"不会消耗cpu\",{\"1\":{\"672\":1}}],[\"不会被清理掉\",{\"1\":{\"663\":1}}],[\"不会创建副本\",{\"1\":{\"587\":1}}],[\"不会产生两个独立的master节点\",{\"1\":{\"564\":1}}],[\"不会因为设置html的font\",{\"1\":{\"473\":1}}],[\"不会拍到背后的高亮区域\",{\"1\":{\"236\":1}}],[\"不需要使用jps命令来查询\",{\"1\":{\"732\":1}}],[\"不需要停顿用户线程\",{\"1\":{\"698\":1}}],[\"不需要用户去手动释放锁\",{\"1\":{\"662\":1}}],[\"不需要给出任何确认\",{\"1\":{\"550\":1}}],[\"不需要处理固定容量的问题\",{\"1\":{\"503\":1}}],[\"不需要去计算html的font\",{\"1\":{\"473\":1}}],[\"不需要手动添加\",{\"1\":{\"464\":1}}],[\"不需要整张脸磨皮\",{\"1\":{\"254\":1}}],[\"不用回表\",{\"1\":{\"796\":1}}],[\"不用如何\",{\"1\":{\"663\":1}}],[\"不用计算\",{\"1\":{\"453\":1}}],[\"不用粉色系眼影\",{\"1\":{\"171\":1}}],[\"不浮动\",{\"1\":{\"429\":1}}],[\"不再对外提供服务发现\",{\"1\":{\"970\":1}}],[\"不再是存储一天的签到记录\",{\"1\":{\"823\":1}}],[\"不再会被使用的对象或者变量占用的内存不能被回收\",{\"1\":{\"663\":1}}],[\"不再给父元素汇报宽高数据\",{\"1\":{\"425\":1}}],[\"不再严格区分块级元素和行内级元素\",{\"1\":{\"436\":1}}],[\"不再严格区分块级\",{\"1\":{\"425\":1}}],[\"不再严格按照从上到下\",{\"1\":{\"425\":1}}],[\"不再受标准流的约束\",{\"1\":{\"425\":1}}],[\"不脱标\",{\"1\":{\"423\":1}}],[\"不便于实现元素层叠的效果\",{\"1\":{\"422\":1}}],[\"不平铺\",{\"1\":{\"399\":1}}],[\"不占用空间\",{\"1\":{\"388\":1}}],[\"不过需要注意的是\",{\"1\":{\"387\":1}}],[\"不过一般仅设置一次\",{\"0\":{\"362\":1}}],[\"不影响子元素\",{\"1\":{\"380\":1}}],[\"不可见\",{\"1\":{\"797\":1}}],[\"不可中断\",{\"1\":{\"662\":1}}],[\"不可分割\",{\"1\":{\"657\":1}}],[\"不可重复读和幻读的问题\",{\"1\":{\"899\":2}}],[\"不可重复读和幻读的区别\",{\"0\":{\"773\":1}}],[\"不可重复读和幻读等问题\",{\"1\":{\"802\":1}}],[\"不可重复读和幻读\",{\"1\":{\"781\":1}}],[\"不可重复读的重点是内容修改或者记录减少\",{\"1\":{\"773\":1}}],[\"不可重复读\",{\"0\":{\"771\":1},\"1\":{\"778\":1}}],[\"不可重复\",{\"1\":{\"617\":1}}],[\"不可能再找到和为0的三元组\",{\"1\":{\"494\":1}}],[\"不可以设置宽度和高度\",{\"1\":{\"379\":1}}],[\"不可以省略\",{\"1\":{\"366\":1}}],[\"不可以调换顺序\",{\"1\":{\"366\":1}}],[\"不可靠近\",{\"1\":{\"93\":1}}],[\"不断优化流程\",{\"1\":{\"299\":1}}],[\"不断优化以客户为中心的商业模式\",{\"1\":{\"299\":1}}],[\"不拍\",{\"1\":{\"276\":1}}],[\"不透明度和流量开到100\",{\"1\":{\"262\":1}}],[\"不符合人物性格\",{\"1\":{\"212\":1}}],[\"不能保证在高并发场景下一定能成功锁定资源\",{\"1\":{\"878\":1}}],[\"不能私下unlock别人的锁\",{\"1\":{\"839\":1}}],[\"不能因为某一个节点挂了而出现获取锁和释放锁失败的情况\",{\"1\":{\"839\":1}}],[\"不能删除元素\",{\"1\":{\"833\":1}}],[\"不能单独使用\",{\"1\":{\"746\":1}}],[\"不能相互依赖\",{\"1\":{\"744\":1}}],[\"不能\",{\"1\":{\"661\":1}}],[\"不能被重写\",{\"1\":{\"603\":1}}],[\"不能想着拍大拍全\",{\"1\":{\"234\":1}}],[\"不能显胸太大\",{\"1\":{\"174\":1}}],[\"不能穿过于宽松的衣服\",{\"1\":{\"174\":1}}],[\"不能过于结块\",{\"1\":{\"170\":1}}],[\"不能长过下巴\",{\"1\":{\"170\":1}}],[\"不能露发际线\",{\"1\":{\"168\":1}}],[\"不能拆分其他内容\",{\"1\":{\"154\":1}}],[\"不能决定风格\",{\"1\":{\"93\":1}}],[\"不笑\",{\"1\":{\"150\":1}}],[\"不经易感\",{\"1\":{\"145\":1}}],[\"不知道怎样让自己的照片看起来自然\",{\"1\":{\"131\":1}}],[\"不知道怎么做什么样的动作合适或者好看\",{\"1\":{\"131\":1}}],[\"不知道怎么让自己的美姿看起来更加多样化\",{\"1\":{\"131\":1}}],[\"不知道是什么样的情绪状态\",{\"1\":{\"131\":1}}],[\"不推荐使用\",{\"1\":{\"946\":1}}],[\"不推荐使用stack类\",{\"1\":{\"521\":1}}],[\"不推荐\",{\"1\":{\"125\":1,\"361\":1,\"430\":1,\"433\":2,\"664\":1}}],[\"不确定模特适合什么风格时\",{\"1\":{\"123\":1}}],[\"不允许突发流量\",{\"1\":{\"948\":1}}],[\"不允许重复\",{\"1\":{\"819\":1}}],[\"不允许多个事务同时获取\",{\"1\":{\"775\":1,\"787\":1}}],[\"不允许分割\",{\"1\":{\"767\":1}}],[\"不允许把内存屏障之后的指令重排序到内存屏障之前\",{\"1\":{\"659\":1}}],[\"不允许外部对象直接访问对象的内部信息\",{\"1\":{\"604\":1}}],[\"不允许单词超屏时自动换行\",{\"1\":{\"462\":1}}],[\"不允许摄影师删除\",{\"1\":{\"122\":1}}],[\"不允许进行二次更改\",{\"1\":{\"122\":1}}],[\"不适合以摄影师想法主导\",{\"1\":{\"122\":1}}],[\"不要反了\",{\"1\":{\"671\":1}}],[\"不要将content省略\",{\"1\":{\"374\":1}}],[\"不要盲目凭感觉拍摄\",{\"1\":{\"265\":1}}],[\"不要进行太大幅度的改动\",{\"1\":{\"254\":1}}],[\"不要为了拍而拍\",{\"1\":{\"189\":1}}],[\"不要超出画框外\",{\"1\":{\"149\":1}}],[\"不要紧张\",{\"1\":{\"128\":1}}],[\"不要用假花\",{\"1\":{\"126\":1}}],[\"不要粗浓黑眼线和一片式假睫毛\",{\"1\":{\"124\":1}}],[\"不要害羞\",{\"1\":{\"122\":1}}],[\"不要频繁切换场地\",{\"1\":{\"35\":1}}],[\"不补光的情况下人脸尽量面向天空\",{\"1\":{\"83\":1}}],[\"不稳定\",{\"1\":{\"66\":1}}],[\"不安\",{\"1\":{\"66\":1,\"127\":1}}],[\"不似远景开阔宏大\",{\"1\":{\"39\":1}}],[\"不同\",{\"1\":{\"626\":1}}],[\"不同点是\",{\"1\":{\"373\":1}}],[\"不同道具的使用\",{\"1\":{\"264\":1}}],[\"不同空镜头交代人物所处的环境\",{\"1\":{\"191\":1}}],[\"不同五官人群前期化妆\",{\"0\":{\"167\":1}}],[\"不同五官人群拍摄技巧\",{\"0\":{\"164\":1},\"1\":{\"136\":1}}],[\"不同风格不同主题的拍摄\",{\"1\":{\"140\":1,\"147\":1}}],[\"不同主题和风格的照片情绪不同\",{\"1\":{\"134\":1}}],[\"不同的是\",{\"1\":{\"949\":1}}],[\"不同的数据可能出现相同的hash值\",{\"1\":{\"833\":1}}],[\"不同的应用程序\",{\"1\":{\"716\":1}}],[\"不同的代码抽到不同的class\",{\"1\":{\"404\":1}}],[\"不同的空间感\",{\"1\":{\"242\":1}}],[\"不同的内容\",{\"1\":{\"225\":1}}],[\"不同的拍摄场地具有不同的情绪和调性\",{\"1\":{\"121\":1}}],[\"不同的光区构建不同的空间色彩和情感\",{\"1\":{\"99\":1}}],[\"不同的光塑造不同的情绪\",{\"1\":{\"75\":1}}],[\"不同饱和度的色彩\",{\"1\":{\"92\":1}}],[\"不同时间光的高度不同\",{\"1\":{\"120\":1}}],[\"不同时间段内\",{\"1\":{\"81\":1}}],[\"不同时间内\",{\"1\":{\"81\":1}}],[\"不同景别+不同角度+不同动作\",{\"1\":{\"35\":1}}],[\"不同于平角镜头\",{\"1\":{\"34\":1}}],[\"不好的标准\",{\"1\":{\"12\":1}}],[\"俯拍视角区别于平拍视角\",{\"1\":{\"207\":1}}],[\"俯拍视角\",{\"0\":{\"207\":1}}],[\"俯拍\",{\"1\":{\"151\":1,\"178\":1}}],[\"俯拍人物\",{\"1\":{\"60\":1}}],[\"俯拍的角度越大\",{\"1\":{\"34\":1}}],[\"俯拍镜头具有强烈的主观色彩\",{\"1\":{\"34\":1}}],[\"俯拍镜头\",{\"1\":{\"34\":1}}],[\"俯角和仰角的角度越大\",{\"1\":{\"205\":1}}],[\"俯角\",{\"1\":{\"34\":1}}],[\"俯仰角度的变化\",{\"1\":{\"178\":1}}],[\"俯仰关系\",{\"1\":{\"33\":1,\"205\":1}}],[\"俯仰高度\",{\"1\":{\"33\":1,\"35\":1}}],[\"拍动物\",{\"1\":{\"279\":1}}],[\"拍儿童\",{\"1\":{\"279\":1}}],[\"拍好比拍到重要\",{\"1\":{\"275\":1}}],[\"拍好看的照片给对方看\",{\"1\":{\"128\":1}}],[\"拍到比拍好重要\",{\"1\":{\"275\":1}}],[\"拍全身\",{\"1\":{\"244\":1}}],[\"拍照的照片色彩光感都会比较普通\",{\"1\":{\"233\":1}}],[\"拍出自然感\",{\"1\":{\"236\":1}}],[\"拍出自然流露的照片\",{\"1\":{\"225\":1}}],[\"拍出温暖柔和的逆光芦苇氛围感\",{\"1\":{\"235\":1}}],[\"拍出虚化和纵深感\",{\"1\":{\"229\":1}}],[\"拍构图\",{\"1\":{\"225\":1}}],[\"拍半身或特写时可以使用前景构图或道具遮挡\",{\"1\":{\"174\":1}}],[\"拍时可以使用道具遮挡\",{\"1\":{\"173\":1}}],[\"拍躺姿时\",{\"1\":{\"159\":1}}],[\"拍背影脚的摆放\",{\"1\":{\"158\":1}}],[\"拍正脸的时候\",{\"1\":{\"234\":1}}],[\"拍正脸\",{\"1\":{\"156\":1}}],[\"拍正侧脸时注意两边脸比例\",{\"1\":{\"156\":1}}],[\"拍侧脸为主\",{\"1\":{\"34\":1}}],[\"拍摄风格\",{\"1\":{\"276\":1}}],[\"拍摄追焦效果\",{\"1\":{\"273\":1}}],[\"拍摄雨丝\",{\"1\":{\"273\":1}}],[\"拍摄半身的时候要随时改变拍摄角度\",{\"1\":{\"244\":1}}],[\"拍摄不同焦段不同构图不同的空间感\",{\"1\":{\"242\":1}}],[\"拍摄剪影时\",{\"1\":{\"237\":1}}],[\"拍摄特写的时候人物的手势多和镜头互动\",{\"1\":{\"244\":1}}],[\"拍摄特写的时候我们记得找身后是暗部的桥洞\",{\"1\":{\"242\":1}}],[\"拍摄特写的时候我们多选择暗部背景\",{\"1\":{\"235\":1}}],[\"拍摄特写\",{\"1\":{\"236\":1}}],[\"拍摄特写时\",{\"1\":{\"232\":1}}],[\"拍摄背景2\",{\"1\":{\"236\":1}}],[\"拍摄背景1\",{\"1\":{\"236\":1}}],[\"拍摄背景\",{\"1\":{\"235\":1}}],[\"拍摄背面及侧面\",{\"1\":{\"162\":1}}],[\"拍摄目的\",{\"1\":{\"235\":1}}],[\"拍摄场景\",{\"1\":{\"233\":1}}],[\"拍摄场地\",{\"1\":{\"190\":1}}],[\"拍摄思路3\",{\"1\":{\"231\":1}}],[\"拍摄思路2\",{\"1\":{\"231\":1}}],[\"拍摄思路1\",{\"1\":{\"231\":1}}],[\"拍摄思路\",{\"1\":{\"230\":1,\"232\":1,\"234\":1,\"235\":1,\"236\":2,\"237\":1,\"238\":1,\"239\":1,\"240\":1,\"241\":1,\"242\":1,\"243\":1,\"244\":1}}],[\"拍摄思想\",{\"1\":{\"229\":1}}],[\"拍摄人景合一的感觉\",{\"1\":{\"229\":1}}],[\"拍摄\",{\"0\":{\"214\":1}}],[\"拍摄者的观点\",{\"1\":{\"184\":1}}],[\"拍摄景别\",{\"0\":{\"177\":1}}],[\"拍摄技巧\",{\"0\":{\"167\":1}}],[\"拍摄全身时\",{\"1\":{\"161\":1}}],[\"拍摄侧面时\",{\"1\":{\"158\":1}}],[\"拍摄正面时\",{\"1\":{\"158\":1}}],[\"拍摄角度\",{\"0\":{\"151\":1}}],[\"拍摄可以尝试多使用\",{\"1\":{\"145\":1}}],[\"拍摄较为日常场景\",{\"1\":{\"126\":1}}],[\"拍摄的照片会作为摄影师作品在社交平台进行宣传\",{\"1\":{\"122\":1}}],[\"拍摄作品版权归摄影师所有\",{\"1\":{\"122\":1}}],[\"拍摄前一天\",{\"1\":{\"122\":1}}],[\"拍摄创作筹备不易\",{\"1\":{\"122\":1}}],[\"拍摄机位的多样性\",{\"0\":{\"178\":1}}],[\"拍摄机位\",{\"1\":{\"121\":1}}],[\"拍摄脚本\",{\"1\":{\"120\":1,\"127\":1}}],[\"拍摄策划要包含\",{\"1\":{\"120\":1}}],[\"拍摄策划\",{\"0\":{\"120\":1,\"127\":1},\"1\":{\"265\":1}}],[\"拍摄策划中分镜头脚本的描写\",{\"1\":{\"46\":1}}],[\"拍摄灵感从哪来\",{\"0\":{\"112\":1}}],[\"拍摄时需要有很好的节奏\",{\"1\":{\"224\":1}}],[\"拍摄时要给后期留够空间\",{\"1\":{\"174\":1}}],[\"拍摄时注意四肢形体的舒展\",{\"1\":{\"174\":1}}],[\"拍摄时可使用柔光将五官柔化\",{\"1\":{\"169\":1}}],[\"拍摄时可让被摄者低头\",{\"1\":{\"168\":1}}],[\"拍摄时间\",{\"1\":{\"120\":1,\"190\":1,\"259\":1}}],[\"拍摄时段\",{\"1\":{\"87\":1}}],[\"拍摄时尽量脸朝上让人物面光\",{\"1\":{\"79\":1}}],[\"拍摄逆光时注意背景是否过曝\",{\"1\":{\"76\":1}}],[\"拍摄tips\",{\"1\":{\"76\":4,\"78\":1,\"79\":1,\"81\":4,\"83\":1,\"158\":1,\"159\":1,\"160\":1,\"161\":1,\"162\":1,\"163\":1,\"170\":1}}],[\"拍摄斜侧面镜头注意模特两边面部比例不要过大\",{\"1\":{\"34\":1}}],[\"拍摄手法+道具使用+情绪状态\",{\"1\":{\"127\":1}}],[\"拍摄手法\",{\"1\":{\"18\":1,\"28\":1}}],[\"被监视的键发生了变化\",{\"1\":{\"878\":1}}],[\"被经常频繁用于连接的字段可以使用索引\",{\"1\":{\"794\":1}}],[\"被作为where条件查询的字段\",{\"1\":{\"794\":1}}],[\"被作为条件查询的字段\",{\"1\":{\"794\":1}}],[\"被频繁查询的字段\",{\"1\":{\"794\":1}}],[\"被唤醒\",{\"1\":{\"671\":3}}],[\"被唤醒了\",{\"1\":{\"671\":3}}],[\"被拒绝的任务\",{\"1\":{\"664\":1}}],[\"被代理类的方法\",{\"1\":{\"588\":1}}],[\"被称作有下界的通配符\",{\"1\":{\"581\":1}}],[\"被称作有上届的通配符\",{\"1\":{\"581\":1}}],[\"被称作无限定的通配符\",{\"1\":{\"581\":1}}],[\"被拍摄物体自身就符合垂直线特征\",{\"1\":{\"218\":1}}],[\"被拍摄主体显得高大\",{\"1\":{\"34\":1}}],[\"被摄物体亮面与暗面的受光比例\",{\"1\":{\"84\":1}}],[\"被摄主体与镜头的交流感减弱\",{\"1\":{\"34\":1}}],[\"仰拍人物角度过低时\",{\"1\":{\"208\":1}}],[\"仰拍视角区别于平拍视角\",{\"1\":{\"208\":1}}],[\"仰拍视角\",{\"0\":{\"208\":1}}],[\"仰拍时下颌线看起来是方形\",{\"1\":{\"169\":1}}],[\"仰拍\",{\"1\":{\"151\":1,\"178\":1}}],[\"仰拍的机位越低\",{\"1\":{\"34\":1}}],[\"仰拍镜头同样具有强烈的主观色彩\",{\"1\":{\"34\":1}}],[\"仰拍镜头\",{\"1\":{\"34\":1}}],[\"仰角\",{\"1\":{\"34\":1}}],[\"留存的记录数的百分比\",{\"1\":{\"796\":1}}],[\"留出想象空间\",{\"0\":{\"200\":1}}],[\"留白并非指空白\",{\"1\":{\"61\":1}}],[\"留白构图\",{\"0\":{\"61\":1}}],[\"留下好看的\",{\"1\":{\"51\":1}}],[\"留下更多情绪想象空间\",{\"1\":{\"34\":1}}],[\"留言板\",{\"0\":{\"0\":1},\"1\":{\"3\":1}}],[\"背\",{\"1\":{\"191\":1}}],[\"背上\",{\"1\":{\"182\":1}}],[\"背靠\",{\"1\":{\"160\":1}}],[\"背对镜头\",{\"1\":{\"127\":1}}],[\"背光面大\",{\"1\":{\"76\":1}}],[\"背光面和投影\",{\"1\":{\"76\":1}}],[\"背景也不会随着元素的内容滚动\",{\"1\":{\"402\":1}}],[\"背景将会随着元素的内容滚动\",{\"1\":{\"402\":1}}],[\"背景虚化\",{\"1\":{\"274\":3}}],[\"背景虚化模糊\",{\"1\":{\"273\":1}}],[\"背景色\",{\"1\":{\"254\":1,\"260\":1,\"349\":1}}],[\"背景色和肤色的对比\",{\"1\":{\"97\":1}}],[\"背景穿帮\",{\"1\":{\"253\":1}}],[\"背景都比较远\",{\"1\":{\"233\":1}}],[\"背景选择绿色的草地或树林\",{\"1\":{\"97\":1}}],[\"背景纯粹\",{\"1\":{\"51\":1}}],[\"背景\",{\"1\":{\"49\":1,\"227\":1,\"232\":1,\"233\":1,\"234\":1,\"262\":1,\"278\":1,\"279\":1,\"691\":1}}],[\"背部线条\",{\"1\":{\"43\":1}}],[\"背面\",{\"1\":{\"34\":1,\"151\":1}}],[\"背侧面\",{\"1\":{\"34\":1}}],[\"更好的方案\",{\"1\":{\"949\":1}}],[\"更快的io\",{\"1\":{\"804\":1}}],[\"更新代价比聚簇索引要小\",{\"1\":{\"793\":1}}],[\"更新代价大\",{\"1\":{\"793\":1}}],[\"更新表\",{\"0\":{\"752\":1,\"808\":1}}],[\"更新时间\",{\"1\":{\"751\":1}}],[\"更新会被复制到对应的副分片上\",{\"1\":{\"565\":1}}],[\"更常见的情况是大部分对象都是存活对象\",{\"1\":{\"691\":1}}],[\"更强的cpu处理能力有助于提高数据处理速度\",{\"1\":{\"566\":1}}],[\"更深入的理解递归\",{\"1\":{\"502\":1}}],[\"更深入的理解指针\",{\"1\":{\"502\":1}}],[\"更灵活的函数\",{\"1\":{\"469\":1}}],[\"更加不拘一格\",{\"1\":{\"406\":1}}],[\"更加的有层次感\",{\"1\":{\"223\":1}}],[\"更看重质量而非量\",{\"1\":{\"265\":1}}],[\"更利于表达人物主体\",{\"1\":{\"191\":1}}],[\"更多时候辅助构图\",{\"1\":{\"126\":1}}],[\"更多的内存\",{\"1\":{\"804\":1}}],[\"更多的交代环境\",{\"1\":{\"55\":1}}],[\"更多的时候使用高度较高的仰拍镜头来获得不同寻常的构图\",{\"1\":{\"34\":1}}],[\"更有活力或戏剧性\",{\"1\":{\"92\":1}}],[\"更有想象空间\",{\"1\":{\"61\":1}}],[\"更为真实\",{\"1\":{\"34\":1}}],[\"更是恶化拍摄面部轮廓相对立体的模特\",{\"1\":{\"34\":1}}],[\"更容易体现人物轮廓\",{\"1\":{\"34\":1}}],[\"与索引作比较的列或常量\",{\"1\":{\"796\":1}}],[\"与all类似\",{\"1\":{\"796\":1}}],[\"与align\",{\"1\":{\"446\":1}}],[\"与锁升级\",{\"0\":{\"672\":1}}],[\"与线程中断\",{\"0\":{\"671\":1}}],[\"与此线程有关的inheritablethreadlocal值\",{\"1\":{\"663\":1}}],[\"与此线程有关的threadlocal值\",{\"1\":{\"663\":1}}],[\"与数组相比\",{\"1\":{\"637\":1}}],[\"与基准线对齐\",{\"1\":{\"445\":1}}],[\"与cross\",{\"1\":{\"445\":2,\"446\":4}}],[\"与main\",{\"1\":{\"444\":4}}],[\"与\",{\"1\":{\"442\":1,\"446\":1,\"669\":2}}],[\"与小写字母x最底部对齐的线\",{\"1\":{\"365\":1}}],[\"与画外空间互动\",{\"0\":{\"180\":1}}],[\"与周围环境或道具互动\",{\"1\":{\"149\":1}}],[\"与外界对话的欲望\",{\"1\":{\"127\":1}}],[\"与外界的对话\",{\"1\":{\"127\":1}}],[\"与其他色彩相比较的环境中\",{\"1\":{\"92\":1}}],[\"与被摄主体处于同一直线上\",{\"1\":{\"76\":1}}],[\"与相机形成钝角夹角\",{\"1\":{\"76\":1}}],[\"与环境交流感更强\",{\"1\":{\"40\":1}}],[\"与观众有很强的交流感\",{\"1\":{\"40\":1}}],[\"与观众的交流感减弱\",{\"1\":{\"34\":1}}],[\"与镜头交流感强\",{\"1\":{\"34\":1}}],[\"相应的\",{\"1\":{\"972\":1}}],[\"相应的revents置位为1\",{\"1\":{\"868\":1}}],[\"相互隔离的\",{\"1\":{\"716\":1}}],[\"相同的数据会得到相同的值\",{\"1\":{\"638\":1}}],[\"相同\",{\"1\":{\"626\":1}}],[\"相同一个属性我们可以通过不同的选择器给它进行多次设置\",{\"1\":{\"377\":1}}],[\"相关联的\",{\"1\":{\"744\":1}}],[\"相关垃圾回收器参数\",{\"1\":{\"700\":1}}],[\"相关更改已经在集群中被妥善传播和同步\",{\"1\":{\"561\":1}}],[\"相关的更改会被复制到相应的副本分片上\",{\"1\":{\"561\":1}}],[\"相比数组\",{\"1\":{\"512\":1,\"515\":1}}],[\"相邻两个box之间的margin会折叠\",{\"1\":{\"465\":1}}],[\"相邻兄弟选择器\",{\"1\":{\"371\":1}}],[\"相反\",{\"1\":{\"442\":1}}],[\"相当于确定了整组照片的基调\",{\"1\":{\"114\":1}}],[\"相似色\",{\"1\":{\"96\":1}}],[\"相似色和谐关系\",{\"1\":{\"96\":1}}],[\"相对于html的font\",{\"1\":{\"467\":1}}],[\"相对于自身的font\",{\"1\":{\"467\":1}}],[\"相对于其他一些东西\",{\"1\":{\"467\":1}}],[\"相对于背景区\",{\"1\":{\"400\":1}}],[\"相对长度单位\",{\"1\":{\"467\":1}}],[\"相对定位应用场景在不影响其他元素位置的前提下\",{\"1\":{\"423\":1}}],[\"相对定位\",{\"0\":{\"423\":1},\"1\":{\"422\":1}}],[\"相对较强的强光环境\",{\"1\":{\"82\":1}}],[\"相对来说光比较小\",{\"1\":{\"81\":1}}],[\"相对正面镜头人在画面中的立体感更强\",{\"1\":{\"34\":1}}],[\"相机挡位\",{\"0\":{\"277\":1}}],[\"相机与相机取景框中的中心对焦点\",{\"1\":{\"276\":1}}],[\"相机的位置\",{\"1\":{\"276\":1}}],[\"相机的拍摄方向与光源方向相反\",{\"1\":{\"76\":1}}],[\"相机站在地处\",{\"1\":{\"233\":1}}],[\"相机\",{\"0\":{\"270\":1},\"1\":{\"9\":1},\"2\":{\"296\":1,\"297\":1}}],[\"表明自己的存活状态\",{\"1\":{\"971\":1}}],[\"表明查询使用了where\",{\"1\":{\"796\":1}}],[\"表明查询使用了覆盖索引\",{\"1\":{\"796\":1}}],[\"表后面新增字段\",{\"1\":{\"808\":1}}],[\"表结构优化\",{\"1\":{\"804\":1}}],[\"表中最多只有一行匹配的记录\",{\"1\":{\"796\":1}}],[\"表的访问方法\",{\"1\":{\"796\":1}}],[\"表级锁\",{\"0\":{\"784\":1},\"1\":{\"775\":1,\"789\":1}}],[\"表名\",{\"1\":{\"745\":3}}],[\"表单单元格\",{\"1\":{\"465\":1}}],[\"表单常见属性\",{\"0\":{\"411\":1}}],[\"表单\",{\"1\":{\"410\":1}}],[\"表单元素的标题\",{\"1\":{\"410\":1}}],[\"表单元素\",{\"0\":{\"410\":1}}],[\"表格合并\",{\"0\":{\"409\":1}}],[\"表格的标题\",{\"1\":{\"408\":1}}],[\"表格的页脚\",{\"1\":{\"408\":1}}],[\"表格的主体\",{\"1\":{\"408\":1}}],[\"表格的表头单元格\",{\"1\":{\"408\":1}}],[\"表格的表头\",{\"1\":{\"408\":1}}],[\"表格中的行\",{\"1\":{\"408\":1}}],[\"表格\",{\"1\":{\"408\":1}}],[\"表格元素\",{\"0\":{\"408\":1}}],[\"表示只有所有isr列表的副本全部收到消息时\",{\"1\":{\"982\":1}}],[\"表示都不压缩\",{\"1\":{\"854\":1}}],[\"表示一个quicklist两端不被压缩的节点个数\",{\"1\":{\"854\":1}}],[\"表示一个对象具有多种的状态\",{\"1\":{\"604\":1}}],[\"表示按照占用字节数来限定每个quicklist节点上的ziplist的长度\",{\"1\":{\"854\":1}}],[\"表示嵌入式的string\",{\"1\":{\"852\":1}}],[\"表示映射到该桶的元素越多\",{\"1\":{\"822\":1}}],[\"表示最后一次插入或更新该行的事务id\",{\"1\":{\"797\":1}}],[\"表示当被驱动表的没有使用索引的时候\",{\"1\":{\"796\":1}}],[\"表示当前选择器的父级\",{\"1\":{\"469\":1}}],[\"表示查询优化器选择使用了索引条件下推这个特性\",{\"1\":{\"796\":1}}],[\"表示mysql实际使用的索引的最大长度\",{\"1\":{\"796\":1}}],[\"表示实际用到的所有\",{\"1\":{\"796\":1}}],[\"表示显示线程级别的信息\",{\"1\":{\"738\":1}}],[\"表示显示详细的操作过程\",{\"1\":{\"326\":1}}],[\"表示打印出xx选项在运行程序时生效的值\",{\"1\":{\"719\":1}}],[\"表示打印出所有xx选项的默认值\",{\"1\":{\"719\":1}}],[\"表示所有的线程都执行完毕\",{\"1\":{\"667\":1}}],[\"表示持有锁的状态\",{\"1\":{\"665\":1}}],[\"表示进入同步代码前要获得给定class的锁\",{\"1\":{\"661\":1}}],[\"表示进入同步代码库前要获得给定对象的锁\",{\"1\":{\"661\":1}}],[\"表示该线程已经运行完毕\",{\"1\":{\"651\":1}}],[\"表示该线程需要等待其他线程做出一些特定动作\",{\"1\":{\"651\":1}}],[\"表示不确定的java类型\",{\"1\":{\"580\":1}}],[\"表示数值类型\",{\"1\":{\"580\":1}}],[\"表示值\",{\"1\":{\"580\":1}}],[\"表示健\",{\"1\":{\"580\":1}}],[\"表示java类\",{\"1\":{\"580\":1}}],[\"表示集合元素\",{\"1\":{\"580\":1}}],[\"表示接收到了断开连接的请求\",{\"1\":{\"552\":1}}],[\"表示层\",{\"1\":{\"544\":1}}],[\"表示动画的最终时刻\",{\"1\":{\"457\":1}}],[\"表示动画的第一时刻\",{\"1\":{\"457\":1}}],[\"表示x轴和y轴上的倾斜\",{\"1\":{\"454\":1}}],[\"表示x轴上的倾斜\",{\"1\":{\"454\":1}}],[\"表示旋转的角度\",{\"1\":{\"454\":1}}],[\"表示等于父元素font\",{\"1\":{\"361\":1}}],[\"表示创建新的\",{\"1\":{\"326\":1}}],[\"表示指定归档文件的名称\",{\"1\":{\"326\":1}}],[\"表示提前\",{\"1\":{\"326\":1}}],[\"表示使用gzip进行压缩或解压\",{\"1\":{\"326\":1}}],[\"表达式\",{\"1\":{\"318\":1}}],[\"表达同一场景和动作\",{\"1\":{\"151\":1}}],[\"表达情感不同\",{\"1\":{\"147\":1}}],[\"表达内心情感\",{\"1\":{\"40\":1}}],[\"表达宏观视野上的\",{\"1\":{\"37\":1}}],[\"表情道具\",{\"1\":{\"185\":1}}],[\"表情\",{\"1\":{\"40\":1,\"123\":1,\"162\":1}}],[\"表情相对不重要\",{\"1\":{\"37\":1}}],[\"表情的要求更高\",{\"1\":{\"34\":1}}],[\"表现人物的神态特征\",{\"1\":{\"43\":1}}],[\"表现手法\",{\"1\":{\"14\":1}}],[\"表现\",{\"1\":{\"14\":1,\"142\":1,\"143\":1,\"144\":1,\"145\":1,\"146\":1,\"147\":1}}],[\"正常使用+不需要锁块\",{\"1\":{\"671\":1}}],[\"正常\",{\"1\":{\"671\":1}}],[\"正常执行版\",{\"1\":{\"670\":1}}],[\"正常的最里面的for循环从第一个数的后面开始\",{\"1\":{\"490\":1}}],[\"正数为顺时针\",{\"1\":{\"454\":2}}],[\"正数往下偏移\",{\"1\":{\"390\":1}}],[\"正数往右偏移\",{\"1\":{\"390\":1}}],[\"正中间显示\",{\"1\":{\"358\":1}}],[\"正方形点击清理画笔\",{\"1\":{\"256\":1}}],[\"正确使用索引的一些建议\",{\"1\":{\"794\":1}}],[\"正确思路\",{\"1\":{\"230\":1}}],[\"正确的应该是\",{\"1\":{\"13\":1}}],[\"正视镜头\",{\"1\":{\"179\":1}}],[\"正向反馈\",{\"1\":{\"128\":1}}],[\"正午的阳光\",{\"1\":{\"235\":1}}],[\"正午的光线\",{\"1\":{\"78\":1}}],[\"正午时刻光线太强对比比较大\",{\"1\":{\"235\":1}}],[\"正午时刻\",{\"1\":{\"81\":1}}],[\"正侧面\",{\"0\":{\"156\":1},\"1\":{\"34\":2,\"151\":1}}],[\"正面拍摄或者高机位拍摄都会带到杂乱的背景\",{\"1\":{\"234\":1}}],[\"正面拍会露\",{\"1\":{\"161\":1}}],[\"正面需要模特控制面部表情和眼神方向等难度高\",{\"1\":{\"162\":1}}],[\"正面向前\",{\"1\":{\"158\":1}}],[\"正面向前或向侧面摆放\",{\"1\":{\"158\":1}}],[\"正面光\",{\"1\":{\"76\":1}}],[\"正面镜头并非要直视镜头\",{\"1\":{\"34\":1}}],[\"正面\",{\"1\":{\"34\":1,\"151\":1,\"276\":1}}],[\"上报的数据通常经过高效的序列化之后\",{\"1\":{\"977\":1}}],[\"上redis分布式锁setnx\",{\"1\":{\"840\":1}}],[\"上分布式\",{\"1\":{\"840\":1}}],[\"上述配置的具体键值可能会随着\",{\"1\":{\"970\":1}}],[\"上述executor\",{\"1\":{\"670\":1}}],[\"上述前缀也叫做浏览器私有前缀\",{\"1\":{\"464\":1}}],[\"上\",{\"1\":{\"663\":1,\"800\":1}}],[\"上的\",{\"1\":{\"926\":1}}],[\"上的结点数小于等于这个值时树转链表\",{\"1\":{\"644\":1}}],[\"上的结点数大于等于这个值时会转成红黑树\",{\"1\":{\"644\":1}}],[\"上的对齐方式\",{\"1\":{\"445\":1}}],[\"上亿量级\",{\"0\":{\"567\":1}}],[\"上图对应就是4\",{\"1\":{\"453\":1}}],[\"上一级\",{\"1\":{\"414\":1}}],[\"上内边距\",{\"1\":{\"385\":1,\"387\":1}}],[\"上划线\",{\"1\":{\"355\":1}}],[\"上面有bug\",{\"1\":{\"842\":1}}],[\"上面讲的是规范\",{\"1\":{\"681\":1}}],[\"上面简历网址就是个人搭建的博客网站\",{\"1\":{\"308\":1}}],[\"上面两种图片展现了情绪的递进\",{\"1\":{\"33\":1}}],[\"上下文中注册额外的\",{\"1\":{\"902\":1}}],[\"上下的margin是不生效的\",{\"1\":{\"392\":1}}],[\"上下会被撑起来\",{\"1\":{\"392\":2}}],[\"上下margin的折叠\",{\"1\":{\"387\":1}}],[\"上下牙齿对齐\",{\"1\":{\"173\":1}}],[\"上下左右\",{\"1\":{\"156\":1}}],[\"上庭过短\",{\"1\":{\"168\":1}}],[\"上庭过长\",{\"1\":{\"168\":1}}],[\"上半身不能太贴近地面\",{\"1\":{\"161\":1}}],[\"上浅下深\",{\"1\":{\"51\":1}}],[\"上小下大\",{\"1\":{\"51\":1}}],[\"上轻下重\",{\"1\":{\"51\":1}}],[\"上帝视角的主观镜头\",{\"1\":{\"60\":1}}],[\"上帝视角的镜头要结合具体拍摄风格及情绪表达使用\",{\"1\":{\"34\":1}}],[\"上帝视角\",{\"1\":{\"33\":1}}],[\"亲人视角\",{\"1\":{\"33\":1}}],[\"亲人的视角\",{\"1\":{\"33\":1}}],[\"偷窥视角\",{\"1\":{\"149\":1}}],[\"偷窥\",{\"1\":{\"33\":1}}],[\"宁静\",{\"1\":{\"33\":1}}],[\"平移\",{\"1\":{\"454\":2}}],[\"平铺\",{\"1\":{\"399\":1}}],[\"平时喜欢写博客\",{\"1\":{\"308\":1}}],[\"平面化\",{\"1\":{\"279\":1}}],[\"平平无奇\",{\"1\":{\"276\":1}}],[\"平视机位\",{\"1\":{\"276\":3}}],[\"平视或往上看15度左右\",{\"1\":{\"171\":1}}],[\"平视\",{\"1\":{\"157\":1}}],[\"平拍视角\",{\"0\":{\"206\":1}}],[\"平拍\",{\"1\":{\"151\":1,\"159\":1,\"178\":1}}],[\"平淡\",{\"1\":{\"84\":1}}],[\"平衡二叉树\",{\"1\":{\"793\":1}}],[\"平衡\",{\"1\":{\"57\":1,\"278\":1}}],[\"平角\",{\"1\":{\"34\":1}}],[\"平和\",{\"1\":{\"33\":1,\"34\":1,\"84\":1,\"93\":1}}],[\"平静水面下的暗涌\",{\"1\":{\"205\":1}}],[\"平静\",{\"1\":{\"13\":1,\"92\":1,\"93\":1,\"145\":1}}],[\"朋友\",{\"1\":{\"33\":2}}],[\"恋人视角\",{\"1\":{\"149\":1}}],[\"恋人\",{\"1\":{\"33\":1}}],[\"脆弱像残花\",{\"1\":{\"127\":1}}],[\"脆弱\",{\"1\":{\"33\":1}}],[\"摄影和游泳\",{\"1\":{\"308\":1}}],[\"摄影基础知识\",{\"0\":{\"271\":1}}],[\"摄影的底层逻辑就是光影的艺术\",{\"1\":{\"225\":1}}],[\"摄影师根据拍摄风格\",{\"1\":{\"152\":1}}],[\"摄影师以旁观者的视角\",{\"1\":{\"149\":1}}],[\"摄影师抓拍\",{\"1\":{\"135\":1}}],[\"摄影师给该组作品中的人物赋予人设\",{\"1\":{\"134\":1}}],[\"摄影师兼职化妆师\",{\"1\":{\"124\":1}}],[\"摄影师必须控场\",{\"1\":{\"122\":1}}],[\"摄影师有权对拍摄作品进行印刷\",{\"1\":{\"122\":1}}],[\"摄影师会对本次拍摄精修返图给模特\",{\"1\":{\"122\":1}}],[\"摄影师提供拍摄\",{\"1\":{\"122\":1}}],[\"摄影师要学会控场\",{\"1\":{\"122\":1}}],[\"摄影师所处的位置\",{\"1\":{\"33\":1}}],[\"摄影角度\",{\"0\":{\"32\":1}}],[\"视图对象会将模型数据渲染为最终的html页面\",{\"1\":{\"895\":1}}],[\"视图解析器等组件来实现请求的分发和处理\",{\"1\":{\"895\":1}}],[\"视图解析器负责将逻辑视图名称解析为实际的视图对象\",{\"1\":{\"895\":1}}],[\"视图解析器\",{\"1\":{\"894\":1,\"895\":1}}],[\"视频讲错了\",{\"1\":{\"689\":1}}],[\"视频播放的url地址\",{\"1\":{\"460\":1}}],[\"视网膜显示屏\",{\"1\":{\"468\":1}}],[\"视口高度的1\",{\"1\":{\"467\":1}}],[\"视口宽度的1\",{\"1\":{\"467\":1}}],[\"视拍摄成败而定\",{\"1\":{\"122\":1}}],[\"视线前方空间多\",{\"1\":{\"279\":1}}],[\"视线的平衡\",{\"0\":{\"64\":1}}],[\"视线的力量引起失衡\",{\"1\":{\"65\":1}}],[\"视线的力量\",{\"0\":{\"64\":1,\"65\":1},\"1\":{\"51\":1}}],[\"视线相对具有明确的方向性\",{\"1\":{\"54\":1}}],[\"视觉视口\",{\"1\":{\"470\":1}}],[\"视觉体验更加强烈\",{\"1\":{\"221\":1}}],[\"视觉上拉长眼距\",{\"1\":{\"171\":1}}],[\"视觉上缩短眼距\",{\"1\":{\"171\":1}}],[\"视觉上让人脸看起来更小更瘦\",{\"1\":{\"169\":1}}],[\"视觉张力较强\",{\"1\":{\"163\":1}}],[\"视觉冲击力强\",{\"1\":{\"97\":1,\"205\":1}}],[\"视觉冲击感强\",{\"1\":{\"93\":1}}],[\"视觉材料\",{\"1\":{\"95\":1}}],[\"视觉中心\",{\"1\":{\"54\":1,\"93\":1}}],[\"视觉均衡\",{\"1\":{\"51\":1}}],[\"视觉重量\",{\"1\":{\"51\":1}}],[\"视觉的统一即形式的统一\",{\"1\":{\"28\":1}}],[\"视点\",{\"0\":{\"33\":1},\"1\":{\"33\":1,\"205\":1}}],[\"二阶段无法解决的问题\",{\"1\":{\"942\":1}}],[\"二十二岁的林朝夕在父亲确诊阿尔茨海默病这天\",{\"1\":{\"919\":1}}],[\"二级索引就数据非聚簇索引\",{\"1\":{\"793\":1}}],[\"二次握手为啥不行\",{\"1\":{\"552\":1}}],[\"二次握手\",{\"1\":{\"552\":1}}],[\"二次构图\",{\"0\":{\"278\":1},\"1\":{\"51\":1,\"254\":1}}],[\"二分搜索树\",{\"1\":{\"539\":1}}],[\"二分查找\",{\"0\":{\"498\":1}}],[\"二叉树\",{\"1\":{\"539\":1,\"793\":1}}],[\"二叉树及递归\",{\"0\":{\"533\":1}}],[\"二看客户需求\",{\"1\":{\"299\":1}}],[\"二\",{\"0\":{\"31\":1,\"560\":1,\"749\":1},\"1\":{\"454\":1,\"455\":1,\"456\":1}}],[\"动态更新从\",{\"1\":{\"972\":1}}],[\"动态dns服务于一体的中间件\",{\"1\":{\"971\":1}}],[\"动态代理创建一个代理对象\",{\"1\":{\"972\":1}}],[\"动态代理\",{\"1\":{\"953\":1}}],[\"动态大小\",{\"1\":{\"637\":1}}],[\"动态规划\",{\"0\":{\"535\":1}}],[\"动态伪类\",{\"1\":{\"373\":1}}],[\"动画执行的次数\",{\"1\":{\"457\":1}}],[\"动画第一帧的位置\",{\"1\":{\"457\":1}}],[\"动画最后一帧的位置\",{\"1\":{\"457\":1}}],[\"动画曲线\",{\"1\":{\"457\":1}}],[\"动画\",{\"0\":{\"456\":1}}],[\"动静对比\",{\"1\":{\"70\":1}}],[\"动漫\",{\"1\":{\"29\":1}}],[\"动作拆解\",{\"1\":{\"189\":1,\"191\":1}}],[\"动作的组合叠加\",{\"0\":{\"181\":1}}],[\"动作幅度相对较小\",{\"1\":{\"144\":1}}],[\"动作幅度相对前者较小\",{\"1\":{\"143\":1}}],[\"动作参考\",{\"1\":{\"120\":1}}],[\"动作\",{\"1\":{\"19\":1,\"123\":1,\"146\":1,\"185\":1}}],[\"希腊神话\",{\"1\":{\"29\":1}}],[\"国外\",{\"1\":{\"29\":1}}],[\"国内\",{\"1\":{\"29\":1}}],[\"尝试从桶中获取一个令牌\",{\"1\":{\"949\":1}}],[\"尝试低机位或高机位拍摄\",{\"1\":{\"163\":1}}],[\"尝试融入自我表达\",{\"1\":{\"27\":1}}],[\"尝试各种风格\",{\"0\":{\"26\":1}}],[\"建表\",{\"0\":{\"557\":1}}],[\"建议同时开启rdb和aof持久化或者开启rdb和aof混合持久化\",{\"1\":{\"862\":1}}],[\"建议\",{\"1\":{\"387\":1}}],[\"建议顺序\",{\"1\":{\"373\":1}}],[\"建立索引的第一个字段不能丢失\",{\"1\":{\"794\":1}}],[\"建立create\",{\"1\":{\"557\":1}}],[\"建立三次握手流程\",{\"1\":{\"552\":1}}],[\"建立\",{\"1\":{\"544\":1}}],[\"建立阅片思维\",{\"1\":{\"264\":1}}],[\"建立信心\",{\"1\":{\"128\":1}}],[\"建立审美图库\",{\"0\":{\"20\":1}}],[\"建筑等场景拍摄\",{\"1\":{\"217\":1}}],[\"建筑\",{\"1\":{\"23\":1,\"278\":1}}],[\"文章点赞\",{\"1\":{\"819\":1}}],[\"文章配图\",{\"1\":{\"403\":1}}],[\"文档来配置心跳间隔等参数\",{\"1\":{\"970\":1}}],[\"文档列表\",{\"1\":{\"562\":1}}],[\"文档变得可见\",{\"1\":{\"561\":1}}],[\"文档的可视区域\",{\"1\":{\"424\":1}}],[\"文本的baseline是字母x的下方\",{\"1\":{\"458\":1}}],[\"文本倾斜显示\",{\"1\":{\"364\":1}}],[\"文本对齐的方式\",{\"1\":{\"358\":1}}],[\"文本缩进\",{\"1\":{\"357\":1}}],[\"文本中的每个单词以大写字母开头\",{\"1\":{\"356\":1}}],[\"文本变形\",{\"1\":{\"356\":1}}],[\"文件描述符\",{\"1\":{\"867\":1}}],[\"文件中声明的\",{\"1\":{\"926\":2}}],[\"文件中\",{\"1\":{\"557\":1}}],[\"文件相对图片较小\",{\"1\":{\"418\":1}}],[\"文件\",{\"1\":{\"326\":1,\"714\":1,\"970\":1}}],[\"文件压缩\",{\"0\":{\"325\":1}}],[\"文件操作\",{\"0\":{\"321\":1}}],[\"文艺\",{\"1\":{\"187\":1}}],[\"文艺电影感\",{\"1\":{\"114\":1}}],[\"文字可能会显示不完整\",{\"1\":{\"462\":1}}],[\"文字阴影\",{\"0\":{\"391\":1}}],[\"文字放不上默认换行\",{\"1\":{\"358\":1}}],[\"文字颜色\",{\"1\":{\"349\":1}}],[\"文字大小\",{\"1\":{\"349\":1}}],[\"文字\",{\"1\":{\"112\":1,\"458\":1}}],[\"文学\",{\"1\":{\"23\":1}}],[\"文化层次的最客观\",{\"1\":{\"182\":1}}],[\"文化\",{\"1\":{\"17\":1,\"112\":1}}],[\"7字节\",{\"1\":{\"797\":1}}],[\"7bcf\",{\"1\":{\"738\":2}}],[\"7个阶段\",{\"1\":{\"712\":1}}],[\"75f\",{\"1\":{\"644\":1}}],[\"75的值时候\",{\"1\":{\"643\":1}}],[\"7中\",{\"1\":{\"634\":1}}],[\"7默认初始容量为10\",{\"1\":{\"623\":1}}],[\"7兼容性\",{\"1\":{\"433\":1}}],[\"700\",{\"1\":{\"366\":1}}],[\"7649\",{\"1\":{\"280\":1}}],[\"7种常见的光位\",{\"1\":{\"76\":1}}],[\"7\",{\"0\":{\"23\":1,\"45\":1,\"59\":1,\"70\":1,\"101\":1,\"109\":1,\"123\":1,\"153\":1,\"163\":1,\"199\":1,\"222\":1,\"233\":1,\"258\":1,\"259\":1,\"260\":1,\"508\":1,\"518\":1,\"550\":1,\"567\":1,\"588\":1,\"600\":1,\"634\":1,\"643\":1,\"655\":1,\"708\":1,\"710\":1,\"732\":1,\"758\":1,\"796\":1,\"823\":1,\"834\":1,\"857\":1,\"921\":1,\"943\":1},\"1\":{\"122\":1,\"489\":2,\"497\":4,\"561\":1,\"582\":1,\"632\":1,\"634\":1,\"668\":1,\"819\":1}}],[\"瞬间的灵感\",{\"1\":{\"22\":1}}],[\"阶段性的状态\",{\"1\":{\"22\":1}}],[\"自适应地选择较优化的内部编码格式\",{\"1\":{\"852\":1}}],[\"自适应调节策略也是parallel\",{\"1\":{\"704\":1}}],[\"自行评估自己的项目的读数据业务逻辑的耗时\",{\"1\":{\"848\":1}}],[\"自旋锁cas\",{\"1\":{\"672\":1}}],[\"自旋锁spinlock\",{\"1\":{\"669\":1}}],[\"自旋锁\",{\"1\":{\"661\":1}}],[\"自动触发服务降级\",{\"1\":{\"956\":1}}],[\"自动配置是spring\",{\"1\":{\"926\":1}}],[\"自动配置类其实就是通过\",{\"1\":{\"923\":1}}],[\"自动配置类\",{\"1\":{\"923\":1}}],[\"自动扫描\",{\"1\":{\"923\":1}}],[\"自动装配和启动过程\",{\"1\":{\"926\":1}}],[\"自动装配原理\",{\"0\":{\"921\":1}}],[\"自动装配\",{\"1\":{\"884\":1}}],[\"自动装箱\",{\"1\":{\"599\":1}}],[\"自动在row和statement中互相切换选择一个他认为合适的格式进行记录\",{\"1\":{\"801\":1}}],[\"自动拆箱\",{\"1\":{\"599\":1}}],[\"自定义限流过滤器\",{\"1\":{\"936\":1}}],[\"自定义排序\",{\"1\":{\"630\":1}}],[\"自定义\",{\"1\":{\"588\":1}}],[\"自定义封装数组\",{\"1\":{\"539\":1}}],[\"自己启一个线程\",{\"1\":{\"848\":1}}],[\"自己退出了\",{\"1\":{\"671\":1}}],[\"自己发送\",{\"1\":{\"552\":3}}],[\"自己接收正常\",{\"1\":{\"552\":2}}],[\"自己的家具东西还没搬家进去\",{\"1\":{\"890\":1}}],[\"自己的学习和成长节奏是否需要调整\",{\"1\":{\"267\":1}}],[\"自己的拍摄机位也需要不断的做改变\",{\"1\":{\"224\":1}}],[\"自己放松一点\",{\"1\":{\"128\":1}}],[\"自然是要\",{\"1\":{\"654\":1}}],[\"自然排序固定\",{\"1\":{\"625\":1}}],[\"自然也能在同一端进\",{\"1\":{\"521\":1}}],[\"自然\",{\"0\":{\"135\":1}}],[\"自然光条件下\",{\"1\":{\"259\":1}}],[\"自然光\",{\"1\":{\"78\":1}}],[\"自我介绍\",{\"0\":{\"308\":1}}],[\"自我修炼\",{\"0\":{\"306\":1}}],[\"自我封闭与隔绝\",{\"1\":{\"127\":1}}],[\"自我隔绝\",{\"1\":{\"127\":2}}],[\"自我表达的欲望\",{\"1\":{\"22\":1}}],[\"自由变换工具\",{\"1\":{\"278\":2}}],[\"自由感舒适感\",{\"1\":{\"133\":1}}],[\"自由\",{\"1\":{\"14\":1,\"17\":1,\"142\":1,\"189\":1,\"209\":1}}],[\"6字节\",{\"1\":{\"797\":2}}],[\"6之后进行了优化\",{\"1\":{\"672\":1}}],[\"6之后synchronized底层做了哪些优化\",{\"1\":{\"661\":1}}],[\"6之前synchronized使用的是重量级锁\",{\"1\":{\"672\":1}}],[\"6个同学\",{\"1\":{\"667\":1}}],[\"6以后对锁的实现引入了大量的优化\",{\"1\":{\"661\":1}}],[\"64byte\",{\"1\":{\"853\":1}}],[\"64\",{\"1\":{\"644\":1}}],[\"666\",{\"1\":{\"521\":1}}],[\"66\",{\"1\":{\"457\":1}}],[\"6px\",{\"1\":{\"431\":1}}],[\"60px\",{\"1\":{\"453\":1}}],[\"600px\",{\"1\":{\"442\":1}}],[\"600|700\",{\"1\":{\"363\":1}}],[\"60\",{\"1\":{\"273\":2,\"550\":1,\"664\":2,\"859\":1}}],[\"6\",{\"0\":{\"22\":1,\"24\":1,\"30\":1,\"44\":1,\"58\":1,\"69\":1,\"100\":1,\"102\":1,\"108\":1,\"119\":1,\"122\":1,\"147\":1,\"152\":1,\"162\":1,\"173\":1,\"182\":1,\"198\":1,\"221\":1,\"232\":1,\"257\":1,\"320\":1,\"333\":1,\"502\":1,\"503\":1,\"504\":1,\"505\":1,\"506\":1,\"507\":2,\"508\":1,\"509\":1,\"517\":1,\"549\":1,\"566\":1,\"582\":1,\"587\":1,\"599\":1,\"633\":1,\"642\":1,\"654\":1,\"684\":1,\"694\":1,\"701\":1,\"702\":1,\"703\":1,\"704\":1,\"705\":1,\"706\":1,\"707\":2,\"708\":1,\"709\":1,\"724\":1,\"731\":1,\"748\":1,\"757\":1,\"789\":1,\"790\":1,\"822\":1,\"833\":1,\"856\":1,\"869\":1,\"890\":1,\"901\":1,\"941\":1},\"1\":{\"122\":1,\"274\":1,\"373\":2,\"454\":2,\"497\":1,\"507\":6,\"526\":2,\"528\":1,\"530\":1,\"588\":1,\"644\":1,\"666\":1,\"667\":1,\"669\":2,\"670\":1,\"819\":1,\"926\":1}}],[\"照片长款比不同\",{\"1\":{\"279\":1}}],[\"照片应讲清楚\",{\"1\":{\"279\":1}}],[\"照片更灵动\",{\"1\":{\"170\":1}}],[\"照片具有运动感或夸张的肢体表达\",{\"1\":{\"146\":1}}],[\"照片依旧有明显的明暗对比\",{\"1\":{\"79\":1}}],[\"照片传达处同样的情感内核\",{\"1\":{\"30\":1}}],[\"照片分类\",{\"0\":{\"20\":1}}],[\"照片好看的标准\",{\"0\":{\"13\":1}}],[\"景别拆解\",{\"1\":{\"191\":1}}],[\"景别控制\",{\"1\":{\"51\":1}}],[\"景别和景深决定了让观众看到什么\",{\"1\":{\"45\":1}}],[\"景别和焦段无关\",{\"0\":{\"36\":1}}],[\"景别的完整序列\",{\"0\":{\"44\":1}}],[\"景别\",{\"0\":{\"36\":1},\"1\":{\"19\":1,\"33\":1,\"191\":1}}],[\"景深\",{\"1\":{\"19\":1,\"274\":1}}],[\"虚拟机会触发一个混合的垃圾收集器\",{\"1\":{\"708\":1}}],[\"虚拟机栈\",{\"1\":{\"687\":1}}],[\"虚拟机自带的加载器\",{\"1\":{\"679\":1}}],[\"虚拟头节点\",{\"1\":{\"504\":1}}],[\"虚引用\",{\"1\":{\"663\":1}}],[\"虚实对比\",{\"1\":{\"279\":1}}],[\"虚实\",{\"1\":{\"19\":1,\"51\":1}}],[\"虚焦\",{\"1\":{\"12\":1}}],[\"焦段用的长一些\",{\"1\":{\"234\":1}}],[\"焦段和视点\",{\"0\":{\"205\":1}}],[\"焦段和景别\",{\"0\":{\"46\":1}}],[\"焦段的选择对表达主体的影响\",{\"1\":{\"191\":1}}],[\"焦段控制\",{\"1\":{\"51\":1}}],[\"焦段\",{\"1\":{\"19\":1,\"205\":1}}],[\"妆造不同\",{\"1\":{\"140\":1}}],[\"妆造\",{\"1\":{\"19\":1,\"123\":1}}],[\"妆容参考\",{\"1\":{\"120\":1}}],[\"妆容\",{\"1\":{\"14\":1,\"123\":1}}],[\"ioc实现原理\",{\"1\":{\"884\":1}}],[\"ioc的设计理念是将对象的创建和管理责任转移给容器\",{\"1\":{\"884\":1}}],[\"ioc的理解\",{\"0\":{\"884\":1}}],[\"ioc容器的核心接口\",{\"1\":{\"927\":1}}],[\"ioc容器担当了一个工厂的角色\",{\"1\":{\"884\":1}}],[\"ioc容器负责管理bean的完整生命周期\",{\"1\":{\"884\":1}}],[\"ioc容器通过依赖注入来管理bean间的依赖关系\",{\"1\":{\"884\":1}}],[\"ioc容器\",{\"1\":{\"884\":1}}],[\"ioc是一种设计思想\",{\"1\":{\"884\":1}}],[\"ioc\",{\"0\":{\"883\":1},\"1\":{\"884\":2}}],[\"io\",{\"1\":{\"738\":1}}],[\"io来分析日志信息\",{\"1\":{\"735\":1}}],[\"i2会直接创建新的对象\",{\"1\":{\"599\":1}}],[\"i2\",{\"1\":{\"599\":1}}],[\"i1使用了缓存中的对象\",{\"1\":{\"599\":1}}],[\"i1==i2\",{\"1\":{\"599\":1}}],[\"i1\",{\"1\":{\"599\":1}}],[\"ip地址\",{\"1\":{\"970\":1,\"971\":1}}],[\"ip=\",{\"1\":{\"822\":1}}],[\"ip\",{\"0\":{\"545\":1},\"1\":{\"822\":4}}],[\"illegalmonitorstateexception异常\",{\"1\":{\"671\":1}}],[\"illegalmonitorstateexception\",{\"1\":{\"671\":1}}],[\"illegalaccessexception\",{\"1\":{\"588\":1}}],[\"illegalargumentexception\",{\"1\":{\"504\":4,\"506\":2,\"507\":1,\"513\":6,\"516\":6,\"517\":2,\"518\":2,\"519\":2,\"520\":4,\"539\":6,\"645\":2}}],[\"illegal\",{\"1\":{\"513\":3,\"516\":3,\"539\":3,\"645\":2}}],[\"i减减\",{\"1\":{\"513\":1,\"516\":1,\"539\":1}}],[\"i==1\",{\"1\":{\"597\":2}}],[\"i=\",{\"1\":{\"513\":1,\"516\":1,\"530\":1,\"539\":1}}],[\"i=1\",{\"1\":{\"507\":1,\"623\":1}}],[\"i=0\",{\"1\":{\"490\":1,\"491\":1,\"504\":4,\"505\":3,\"513\":7,\"514\":1,\"516\":7,\"517\":3,\"527\":1,\"528\":1,\"531\":1,\"532\":1,\"539\":4,\"582\":2,\"597\":2,\"667\":2,\"668\":1}}],[\"i<7\",{\"1\":{\"668\":1}}],[\"i<6\",{\"1\":{\"667\":2}}],[\"i<=50\",{\"1\":{\"623\":1}}],[\"i<s\",{\"1\":{\"514\":1}}],[\"i<size\",{\"1\":{\"513\":5,\"516\":5,\"517\":1,\"539\":4}}],[\"i<\",{\"1\":{\"506\":1,\"513\":2,\"516\":2,\"517\":1,\"539\":1}}],[\"i<opcount\",{\"1\":{\"505\":2}}],[\"i<5\",{\"1\":{\"505\":1,\"597\":2}}],[\"i<index\",{\"1\":{\"504\":3}}],[\"i<array\",{\"1\":{\"513\":1,\"516\":1}}],[\"i<arr\",{\"1\":{\"490\":1,\"491\":1,\"507\":1,\"527\":1,\"528\":1,\"531\":1,\"532\":1,\"582\":2}}],[\"isheldbycurrentthread\",{\"1\":{\"842\":1}}],[\"islocked\",{\"1\":{\"842\":1}}],[\"isstop\",{\"1\":{\"671\":4}}],[\"isinterrupted\",{\"1\":{\"671\":1}}],[\"isnan\",{\"1\":{\"645\":1}}],[\"isvalid\",{\"1\":{\"514\":2}}],[\"is\",{\"1\":{\"506\":1,\"513\":5,\"516\":5,\"518\":1,\"519\":1,\"520\":2,\"521\":1,\"522\":2,\"539\":5,\"746\":1,\"807\":6,\"808\":3}}],[\"isempty\",{\"1\":{\"504\":1,\"505\":3,\"506\":4,\"512\":1,\"513\":4,\"514\":2,\"516\":5,\"517\":4,\"518\":3,\"519\":3,\"520\":6,\"522\":8,\"523\":14,\"539\":1}}],[\"isolation隔离性\",{\"1\":{\"802\":1}}],[\"isolation\",{\"1\":{\"782\":2,\"802\":1,\"899\":5,\"960\":1}}],[\"iso低\",{\"1\":{\"275\":1}}],[\"iso高\",{\"1\":{\"275\":1}}],[\"iso\",{\"0\":{\"275\":1},\"1\":{\"275\":3}}],[\"i+1\",{\"1\":{\"497\":3,\"517\":1}}],[\"i++\",{\"0\":{\"595\":1},\"1\":{\"490\":1,\"491\":1,\"494\":1,\"497\":1,\"504\":4,\"505\":3,\"506\":1,\"507\":1,\"513\":8,\"514\":1,\"516\":8,\"517\":2,\"527\":1,\"528\":1,\"531\":1,\"532\":1,\"539\":5,\"582\":2,\"597\":2,\"623\":1,\"658\":1,\"664\":1,\"666\":1,\"667\":2,\"668\":1,\"822\":1}}],[\"if\",{\"1\":{\"490\":1,\"491\":1,\"494\":4,\"497\":2,\"504\":6,\"506\":5,\"507\":4,\"509\":1,\"513\":13,\"514\":5,\"516\":14,\"517\":6,\"518\":6,\"519\":6,\"520\":11,\"523\":4,\"527\":1,\"528\":1,\"531\":1,\"539\":10,\"575\":1,\"582\":2,\"597\":2,\"645\":3,\"670\":2,\"671\":1,\"751\":1,\"753\":8,\"807\":2,\"842\":1}}],[\"ifc\",{\"1\":{\"465\":2}}],[\"ie等\",{\"1\":{\"464\":1}}],[\"ie6\",{\"1\":{\"433\":1}}],[\"i>=\",{\"1\":{\"513\":1,\"516\":1,\"539\":1}}],[\"i>\",{\"1\":{\"419\":1,\"453\":4}}],[\"immediate\",{\"1\":{\"807\":3}}],[\"imptime\",{\"1\":{\"557\":1}}],[\"implements\",{\"1\":{\"505\":1,\"506\":1,\"513\":1,\"516\":1,\"517\":1,\"518\":1,\"519\":1,\"588\":2,\"644\":1,\"663\":1,\"670\":1,\"936\":1}}],[\"import\",{\"1\":{\"466\":1,\"505\":1,\"514\":1,\"522\":8,\"523\":3,\"588\":3}}],[\"import使用不同的css规则\",{\"1\":{\"466\":1}}],[\"important\",{\"1\":{\"377\":2}}],[\"img是行内元素同时也是行内替换元素\",{\"1\":{\"379\":1}}],[\"img\",{\"1\":{\"378\":1,\"403\":1,\"463\":1,\"716\":1}}],[\"image常见的方式是通过url引入一个图片资源\",{\"1\":{\"463\":1}}],[\"image和img对比\",{\"1\":{\"403\":1}}],[\"images\",{\"1\":{\"351\":1,\"374\":1,\"398\":2,\"419\":1}}],[\"image\",{\"0\":{\"398\":1},\"1\":{\"6\":1,\"18\":1,\"33\":4,\"34\":11,\"35\":1,\"37\":2,\"39\":1,\"41\":1,\"42\":1,\"43\":1,\"45\":1,\"51\":1,\"53\":1,\"54\":2,\"55\":1,\"56\":1,\"57\":1,\"58\":1,\"59\":1,\"60\":1,\"61\":1,\"62\":1,\"64\":1,\"65\":1,\"66\":1,\"67\":2,\"68\":1,\"69\":1,\"70\":2,\"71\":1,\"72\":1,\"73\":1,\"76\":6,\"79\":1,\"81\":8,\"82\":1,\"83\":1,\"84\":3,\"90\":1,\"92\":3,\"95\":1,\"96\":4,\"97\":4,\"98\":1,\"103\":1,\"104\":1,\"105\":1,\"106\":1,\"107\":1,\"108\":1,\"109\":1,\"126\":1,\"127\":2,\"142\":1,\"143\":1,\"144\":1,\"145\":1,\"146\":1,\"147\":1,\"149\":2,\"153\":1,\"156\":2,\"157\":2,\"158\":2,\"159\":2,\"160\":1,\"161\":1,\"162\":1,\"163\":1,\"165\":1,\"166\":1,\"170\":2,\"172\":1,\"187\":3,\"191\":6,\"193\":1,\"194\":1,\"195\":1,\"196\":1,\"197\":1,\"198\":1,\"199\":1,\"200\":1,\"201\":2,\"202\":1,\"206\":1,\"207\":1,\"208\":1,\"210\":1,\"211\":1,\"216\":1,\"217\":1,\"218\":1,\"219\":2,\"220\":1,\"221\":1,\"222\":1,\"224\":1,\"227\":2,\"229\":1,\"230\":1,\"231\":3,\"232\":2,\"233\":8,\"234\":3,\"235\":1,\"236\":1,\"237\":1,\"238\":1,\"239\":1,\"240\":1,\"242\":2,\"243\":3,\"244\":1,\"255\":2,\"256\":4,\"257\":3,\"329\":1,\"398\":1,\"403\":4,\"419\":1,\"425\":1,\"439\":1,\"441\":1,\"453\":1,\"463\":6,\"503\":2,\"513\":1,\"516\":1,\"517\":2,\"521\":1,\"552\":2,\"638\":1,\"639\":1,\"659\":1,\"663\":1,\"670\":3,\"672\":2,\"677\":1,\"683\":1,\"689\":1,\"690\":1,\"691\":1,\"694\":1,\"701\":1,\"707\":1,\"712\":1,\"719\":3,\"723\":1,\"727\":1,\"728\":3,\"743\":1,\"803\":1,\"823\":2,\"833\":2,\"837\":2,\"852\":3,\"853\":1,\"854\":1,\"869\":1,\"925\":1,\"964\":2}}],[\"iterable<e>\",{\"1\":{\"579\":1}}],[\"iteration\",{\"1\":{\"457\":3}}],[\"item8\",{\"1\":{\"453\":7}}],[\"item7\",{\"1\":{\"453\":3}}],[\"item6\",{\"1\":{\"453\":5}}],[\"items如何扩展\",{\"1\":{\"449\":1}}],[\"items一致\",{\"1\":{\"448\":1}}],[\"items设置\",{\"1\":{\"448\":1}}],[\"items可以通过align\",{\"1\":{\"448\":1}}],[\"items的排布顺序\",{\"1\":{\"447\":1}}],[\"items的stretch类似\",{\"1\":{\"446\":1}}],[\"items在cross\",{\"1\":{\"446\":1}}],[\"items决定了flex\",{\"1\":{\"445\":1}}],[\"items与\",{\"1\":{\"444\":1}}],[\"items之间的距离\",{\"1\":{\"446\":1}}],[\"items之间的距离相等\",{\"1\":{\"444\":1,\"446\":2}}],[\"items之间距离的一半\",{\"1\":{\"444\":1,\"446\":1}}],[\"items上的css属性\",{\"1\":{\"440\":1}}],[\"items\",{\"0\":{\"445\":1},\"1\":{\"440\":1,\"441\":1,\"444\":4,\"445\":2,\"446\":3,\"448\":1,\"450\":2,\"451\":1,\"455\":1,\"817\":1}}],[\"item属性\",{\"0\":{\"438\":1,\"447\":1,\"448\":1,\"449\":1,\"450\":1,\"451\":1,\"452\":1}}],[\"item默认情况下是包裹内容的\",{\"1\":{\"436\":1}}],[\"item的布局将受flex\",{\"1\":{\"436\":1}}],[\"item时\",{\"1\":{\"436\":1}}],[\"item5\",{\"1\":{\"431\":1,\"442\":2,\"453\":3}}],[\"item4\",{\"1\":{\"431\":1,\"442\":2,\"453\":3}}],[\"item3\",{\"1\":{\"431\":1,\"441\":2,\"442\":2,\"453\":3}}],[\"item2\",{\"1\":{\"431\":1,\"441\":2,\"442\":2,\"447\":1,\"453\":3,\"463\":2}}],[\"item1\",{\"1\":{\"431\":1,\"441\":2,\"442\":2,\"447\":1,\"453\":3,\"463\":2}}],[\"item\",{\"1\":{\"373\":2,\"374\":4,\"395\":1,\"431\":35,\"436\":5,\"441\":4,\"442\":6,\"443\":1,\"453\":23,\"463\":3,\"557\":2}}],[\"itmes\",{\"1\":{\"444\":1}}],[\"italic\",{\"1\":{\"364\":1,\"366\":1}}],[\"id来标识调用层级和父子关系\",{\"1\":{\"977\":1}}],[\"id和span\",{\"1\":{\"977\":1}}],[\"ids进行逐一比较\",{\"1\":{\"797\":1}}],[\"ids\",{\"1\":{\"797\":1}}],[\"id值越大\",{\"1\":{\"796\":1}}],[\"id不同\",{\"1\":{\"796\":1}}],[\"id如果相同\",{\"1\":{\"796\":1}}],[\"idb文件就包含了该表的索引和数据\",{\"1\":{\"793\":1}}],[\"idx\",{\"1\":{\"751\":1}}],[\"id属性\",{\"1\":{\"414\":1}}],[\"id=\",{\"1\":{\"410\":2,\"889\":1}}],[\"id\",{\"1\":{\"368\":1,\"557\":2,\"738\":2,\"751\":3,\"757\":1,\"758\":1,\"759\":1,\"796\":2,\"797\":5,\"807\":2,\"808\":3,\"936\":1,\"951\":3,\"960\":1,\"977\":1}}],[\"id选择器\",{\"1\":{\"368\":1,\"377\":1}}],[\"ico\",{\"1\":{\"351\":1}}],[\"iconfont\",{\"1\":{\"418\":1}}],[\"icon\",{\"1\":{\"351\":2,\"374\":1,\"404\":1,\"419\":2}}],[\"inf\",{\"1\":{\"923\":2,\"926\":2}}],[\"information\",{\"1\":{\"753\":2}}],[\"info\",{\"1\":{\"557\":1,\"822\":2,\"831\":1,\"982\":1}}],[\"inject\",{\"1\":{\"887\":1}}],[\"injection\",{\"1\":{\"884\":3}}],[\"includecoordinates\",{\"1\":{\"824\":2}}],[\"includedistance\",{\"1\":{\"824\":2}}],[\"incrby\",{\"1\":{\"817\":1}}],[\"incr\",{\"1\":{\"817\":2}}],[\"increment\",{\"1\":{\"751\":1,\"817\":1,\"821\":1}}],[\"incremental\",{\"1\":{\"693\":1}}],[\"init\",{\"1\":{\"822\":1}}],[\"initialheapsize\",{\"1\":{\"721\":1}}],[\"initialization\",{\"1\":{\"712\":1,\"890\":1}}],[\"initializer\",{\"1\":{\"926\":1}}],[\"initialize\",{\"1\":{\"522\":2,\"664\":1}}],[\"initialcapacity\",{\"1\":{\"623\":1,\"645\":9}}],[\"initial\",{\"1\":{\"358\":1,\"387\":3,\"416\":1,\"423\":1,\"425\":2,\"431\":3,\"436\":1,\"441\":1,\"442\":1,\"453\":1,\"470\":1,\"644\":1,\"645\":1}}],[\"in的取值范围较大时会导致索引失效\",{\"1\":{\"794\":1}}],[\"innodb不锁定正在读取的数据\",{\"1\":{\"802\":1}}],[\"innodb支持行级锁\",{\"1\":{\"802\":1}}],[\"innodb是mysql中支持事务的标准引擎\",{\"1\":{\"802\":1}}],[\"innodb会使用该id来生成聚簇索引\",{\"1\":{\"797\":1}}],[\"innodb对mvcc的实现\",{\"1\":{\"797\":1}}],[\"innodb中的主键索引就属于聚簇索引\",{\"1\":{\"793\":1}}],[\"innodb存储引擎下\",{\"1\":{\"789\":1}}],[\"innodb都支持\",{\"1\":{\"765\":1}}],[\"innodb\",{\"1\":{\"751\":1,\"804\":2}}],[\"inheritablethreadlocals\",{\"1\":{\"663\":1}}],[\"inversion\",{\"1\":{\"884\":2}}],[\"inverted\",{\"1\":{\"563\":1}}],[\"invocationtargetexception\",{\"1\":{\"588\":2}}],[\"invocationhandler\",{\"1\":{\"588\":5}}],[\"invoked\",{\"1\":{\"663\":1,\"671\":1}}],[\"invoke\",{\"1\":{\"588\":3}}],[\"instantiation\",{\"1\":{\"890\":1}}],[\"instagram\",{\"1\":{\"19\":1}}],[\"insert\",{\"1\":{\"789\":1}}],[\"insertsort2\",{\"1\":{\"532\":1}}],[\"intset\",{\"1\":{\"855\":1}}],[\"into\",{\"1\":{\"807\":1}}],[\"int类型\",{\"0\":{\"527\":1}}],[\"interrupted\",{\"1\":{\"671\":2}}],[\"interruptedexception\",{\"1\":{\"663\":5,\"666\":1,\"667\":2,\"668\":1,\"670\":10,\"671\":15,\"822\":1}}],[\"interrupt\",{\"1\":{\"671\":2}}],[\"internallockleasetime\",{\"1\":{\"842\":2}}],[\"intern\",{\"0\":{\"611\":1},\"1\":{\"611\":8}}],[\"interval参数\",{\"1\":{\"727\":1}}],[\"interval\",{\"1\":{\"561\":1,\"565\":2,\"970\":2}}],[\"interfaces\",{\"1\":{\"588\":1}}],[\"interfacename2<m\",{\"1\":{\"579\":1}}],[\"interfacename<t>\",{\"1\":{\"579\":1}}],[\"interface\",{\"1\":{\"505\":1,\"506\":1,\"513\":1,\"516\":1,\"517\":1,\"579\":3,\"588\":1,\"687\":1,\"951\":1}}],[\"integer\",{\"1\":{\"505\":1,\"521\":1,\"528\":1,\"599\":5,\"633\":1,\"960\":1}}],[\"integer>\",{\"1\":{\"491\":1}}],[\"int\",{\"1\":{\"490\":7,\"491\":7,\"494\":5,\"497\":10,\"504\":10,\"505\":7,\"506\":4,\"507\":8,\"509\":4,\"512\":1,\"513\":48,\"514\":1,\"516\":49,\"517\":10,\"518\":9,\"519\":9,\"520\":11,\"522\":20,\"523\":13,\"527\":8,\"528\":5,\"531\":4,\"532\":2,\"539\":30,\"579\":1,\"582\":8,\"587\":5,\"597\":2,\"598\":1,\"599\":1,\"600\":1,\"622\":2,\"623\":3,\"644\":8,\"645\":2,\"664\":5,\"666\":1,\"667\":2,\"668\":2,\"670\":4,\"751\":1,\"754\":1,\"822\":1,\"852\":3}}],[\"in\",{\"1\":{\"456\":2,\"457\":1,\"512\":1,\"515\":1,\"557\":1,\"670\":4,\"671\":1,\"788\":1,\"796\":1,\"890\":1}}],[\"index的具体数值\",{\"1\":{\"427\":1}}],[\"index相等\",{\"1\":{\"427\":1}}],[\"index越大\",{\"1\":{\"427\":1}}],[\"index\",{\"0\":{\"427\":1},\"1\":{\"504\":14,\"513\":26,\"516\":26,\"520\":2,\"539\":26,\"566\":2,\"567\":1,\"622\":2,\"751\":1,\"757\":2,\"758\":2,\"759\":2,\"760\":2,\"796\":6}}],[\"indent\",{\"0\":{\"357\":1},\"1\":{\"357\":2}}],[\"input和label的关系\",{\"1\":{\"410\":1}}],[\"input\",{\"0\":{\"461\":1},\"1\":{\"410\":1,\"461\":1}}],[\"inline\",{\"1\":{\"349\":1,\"358\":2,\"374\":1,\"379\":2,\"419\":1,\"430\":2,\"431\":1,\"436\":2,\"458\":3,\"463\":1}}],[\"i\",{\"0\":{\"866\":1},\"1\":{\"262\":1,\"392\":1,\"419\":1,\"453\":2,\"490\":2,\"491\":4,\"494\":9,\"497\":21,\"504\":1,\"505\":1,\"506\":3,\"507\":1,\"513\":17,\"514\":1,\"516\":18,\"517\":8,\"518\":15,\"519\":16,\"520\":19,\"522\":6,\"527\":5,\"528\":5,\"530\":3,\"531\":3,\"532\":2,\"539\":12,\"557\":3,\"582\":4,\"597\":2,\"599\":2,\"623\":1,\"664\":3,\"666\":3,\"667\":2,\"668\":2,\"669\":4,\"801\":1,\"822\":2,\"864\":1,\"866\":1}}],[\"pgmerge\",{\"1\":{\"822\":1}}],[\"pfcount\",{\"1\":{\"822\":1}}],[\"pfadd\",{\"1\":{\"822\":1}}],[\"ptr\",{\"1\":{\"797\":1}}],[\"phase\",{\"1\":{\"562\":4}}],[\"pub\",{\"1\":{\"819\":5}}],[\"publishing\",{\"1\":{\"564\":1}}],[\"public\",{\"1\":{\"490\":1,\"491\":1,\"494\":1,\"497\":1,\"504\":22,\"505\":12,\"506\":16,\"507\":9,\"509\":4,\"513\":31,\"514\":3,\"516\":31,\"517\":12,\"518\":11,\"519\":11,\"520\":14,\"521\":1,\"522\":28,\"523\":21,\"527\":2,\"528\":3,\"531\":1,\"532\":1,\"539\":17,\"575\":4,\"579\":9,\"582\":3,\"587\":2,\"588\":8,\"600\":1,\"603\":1,\"644\":1,\"645\":4,\"661\":4,\"663\":8,\"664\":5,\"666\":1,\"667\":5,\"668\":1,\"670\":14,\"671\":13,\"822\":1,\"824\":8,\"833\":1,\"889\":1,\"896\":3,\"907\":1,\"908\":2,\"910\":1,\"915\":1,\"926\":1,\"936\":1,\"951\":1,\"960\":1,\"961\":1,\"963\":1}}],[\"push\",{\"1\":{\"505\":4,\"512\":1,\"513\":3,\"514\":1,\"521\":2,\"522\":15,\"523\":15}}],[\"putmapping\",{\"0\":{\"912\":1}}],[\"putmapentries\",{\"1\":{\"645\":1}}],[\"put数据原理分析\",{\"0\":{\"640\":1}}],[\"put\",{\"1\":{\"491\":1,\"557\":3,\"640\":1,\"824\":3,\"833\":2,\"916\":1}}],[\"purple\",{\"1\":{\"377\":1,\"431\":1,\"469\":1}}],[\"perm\",{\"1\":{\"683\":1}}],[\"permanent\",{\"1\":{\"683\":1}}],[\"permgen\",{\"1\":{\"681\":1}}],[\"personsingleton\",{\"1\":{\"907\":1}}],[\"personprototype\",{\"1\":{\"889\":1}}],[\"person\",{\"1\":{\"557\":1,\"851\":1,\"889\":2,\"907\":2}}],[\"percentage\",{\"1\":{\"400\":1,\"458\":1}}],[\"peek\",{\"1\":{\"505\":2,\"512\":1,\"513\":2,\"522\":7,\"523\":7}}],[\"pel\",{\"1\":{\"469\":1}}],[\"pid\",{\"1\":{\"721\":1,\"723\":1,\"728\":5,\"729\":2,\"731\":1,\"738\":2}}],[\"pipeline聚合可以在聚合结果的基础上进一步处理数据\",{\"1\":{\"567\":1}}],[\"pipeline\",{\"1\":{\"567\":1}}],[\"ping\",{\"1\":{\"564\":1,\"970\":1}}],[\"pinterest\",{\"1\":{\"19\":1}}],[\"pitem\",{\"1\":{\"557\":1}}],[\"picture\",{\"1\":{\"468\":1}}],[\"pix是picture的简写\",{\"1\":{\"468\":1}}],[\"ppi\",{\"0\":{\"468\":1},\"1\":{\"468\":1}}],[\"pxtorem\",{\"1\":{\"472\":4}}],[\"px是pixel的缩写\",{\"1\":{\"468\":1}}],[\"px\",{\"1\":{\"467\":1,\"472\":2,\"817\":2}}],[\"platform\",{\"1\":{\"977\":1}}],[\"placeholder=\",{\"1\":{\"461\":1}}],[\"placeholder\",{\"1\":{\"461\":1}}],[\"play\",{\"1\":{\"457\":1}}],[\"profile\",{\"1\":{\"919\":1}}],[\"prompt\",{\"1\":{\"807\":1}}],[\"prometheus+grafana等可视化工具\",{\"1\":{\"566\":1}}],[\"procedure\",{\"1\":{\"753\":6,\"953\":1}}],[\"proc\",{\"1\":{\"737\":1}}],[\"prototype\",{\"1\":{\"884\":1,\"889\":2}}],[\"protocol\",{\"1\":{\"546\":2}}],[\"protected\",{\"1\":{\"663\":1}}],[\"program\",{\"0\":{\"680\":1},\"1\":{\"611\":3}}],[\"programming\",{\"1\":{\"611\":9,\"892\":1}}],[\"proxy和invocationhandler\",{\"1\":{\"892\":1}}],[\"proxy\",{\"1\":{\"588\":3,\"892\":1}}],[\"properties\",{\"1\":{\"557\":1,\"920\":1,\"926\":1,\"970\":1}}],[\"propertysource\",{\"0\":{\"920\":1},\"1\":{\"920\":1}}],[\"property\",{\"1\":{\"456\":2,\"918\":1}}],[\"preserved\",{\"1\":{\"970\":2}}],[\"predicates\",{\"1\":{\"936\":1}}],[\"predestroy注解\",{\"1\":{\"890\":1}}],[\"predestroy注解或实现disposablebean接口来定义销毁方法\",{\"1\":{\"890\":1}}],[\"prefix\",{\"1\":{\"919\":1}}],[\"preparation\",{\"1\":{\"712\":1}}],[\"pre\",{\"1\":{\"509\":4}}],[\"prev\",{\"1\":{\"504\":12,\"507\":14}}],[\"preload\",{\"1\":{\"460\":2}}],[\"primary\",{\"1\":{\"751\":1,\"793\":1,\"796\":4,\"807\":2}}],[\"private\",{\"1\":{\"497\":2,\"504\":3,\"505\":2,\"506\":3,\"513\":3,\"516\":4,\"517\":4,\"518\":4,\"519\":3,\"520\":4,\"521\":1,\"522\":5,\"523\":4,\"539\":2,\"579\":2,\"588\":1,\"600\":1,\"644\":1,\"663\":1,\"664\":2,\"670\":3,\"671\":2,\"824\":1,\"842\":1,\"919\":2,\"920\":1}}],[\"printf\",{\"1\":{\"738\":1}}],[\"printarray\",{\"1\":{\"579\":1}}],[\"printstacktrace\",{\"1\":{\"573\":1,\"663\":7,\"666\":2,\"668\":2,\"670\":5,\"671\":15,\"822\":1}}],[\"println\",{\"1\":{\"505\":3,\"506\":2,\"507\":4,\"513\":5,\"514\":1,\"516\":5,\"517\":2,\"518\":2,\"519\":2,\"520\":3,\"522\":9,\"523\":4,\"528\":1,\"539\":2,\"573\":1,\"579\":1,\"582\":1,\"587\":4,\"588\":3,\"597\":2,\"599\":1,\"606\":4,\"609\":1,\"611\":5,\"633\":6,\"661\":2,\"663\":11,\"666\":2,\"667\":9,\"668\":2,\"670\":31,\"671\":19,\"833\":2}}],[\"print\",{\"1\":{\"466\":1,\"579\":1}}],[\"poll并没有通知用户态哪一个socket有数据\",{\"1\":{\"868\":1}}],[\"pollfds数组拷贝到了内核态\",{\"1\":{\"868\":1}}],[\"poll使用pollfd数组来代替select中的bitmap\",{\"1\":{\"868\":1}}],[\"poll\",{\"0\":{\"868\":1},\"1\":{\"866\":1,\"868\":1,\"981\":1}}],[\"point\",{\"1\":{\"824\":4}}],[\"point>\",{\"1\":{\"824\":1}}],[\"pointer\",{\"1\":{\"420\":1}}],[\"pool\",{\"1\":{\"681\":1,\"804\":1}}],[\"pool等\",{\"1\":{\"566\":1}}],[\"populatebean\",{\"1\":{\"925\":1}}],[\"population\",{\"1\":{\"890\":1}}],[\"pop等\",{\"1\":{\"818\":1}}],[\"pop\",{\"1\":{\"505\":4,\"512\":1,\"513\":3,\"514\":1,\"522\":11,\"523\":14}}],[\"possible\",{\"1\":{\"796\":2}}],[\"post\",{\"1\":{\"916\":1}}],[\"postmapping\",{\"0\":{\"911\":1}}],[\"postconstruct和\",{\"1\":{\"890\":1}}],[\"postconstruct注解或实现initializingbean接口来定义初始化方法\",{\"1\":{\"890\":1}}],[\"postcss\",{\"1\":{\"472\":1}}],[\"posting\",{\"1\":{\"563\":1}}],[\"postings\",{\"1\":{\"563\":1}}],[\"poster\",{\"1\":{\"460\":1}}],[\"positon\",{\"1\":{\"456\":1}}],[\"position值对比\",{\"1\":{\"426\":1}}],[\"position值不为static的元素\",{\"1\":{\"425\":1}}],[\"position\",{\"0\":{\"401\":1},\"1\":{\"374\":1,\"401\":3,\"403\":1,\"419\":1,\"423\":2,\"424\":1,\"425\":5,\"426\":1,\"455\":1,\"563\":1,\"824\":2}}],[\"png\",{\"1\":{\"398\":1,\"419\":1}}],[\"p>\",{\"1\":{\"372\":1,\"373\":1}}],[\"paymenthystirxcontroller\",{\"1\":{\"961\":1}}],[\"paymentinfo\",{\"1\":{\"960\":2}}],[\"paymentfeignservice\",{\"1\":{\"951\":1}}],[\"payment\",{\"1\":{\"951\":2,\"961\":1}}],[\"pause\",{\"1\":{\"708\":1}}],[\"partition\",{\"1\":{\"933\":1,\"982\":2,\"983\":1}}],[\"partitions\",{\"1\":{\"796\":2}}],[\"partial\",{\"1\":{\"567\":1}}],[\"par是parallel的缩写\",{\"1\":{\"703\":1}}],[\"parnew\",{\"0\":{\"703\":1},\"1\":{\"697\":1,\"723\":1}}],[\"parallelgcthreads\",{\"1\":{\"738\":1}}],[\"parallel\",{\"0\":{\"704\":1,\"706\":1},\"1\":{\"697\":3}}],[\"param\",{\"1\":{\"522\":1}}],[\"park\",{\"1\":{\"671\":2}}],[\"parse\",{\"1\":{\"353\":3}}],[\"package\",{\"1\":{\"504\":1,\"505\":2,\"506\":1,\"513\":3,\"516\":3,\"517\":1,\"522\":4,\"523\":3,\"539\":1}}],[\"password\",{\"1\":{\"410\":1}}],[\"padding对元素进行定位\",{\"1\":{\"422\":1}}],[\"padding一般是用来设置父子元素之间的间距\",{\"1\":{\"387\":1}}],[\"padding的例子\",{\"1\":{\"385\":1}}],[\"padding的其他值\",{\"1\":{\"385\":1}}],[\"padding值的个数\",{\"1\":{\"385\":1}}],[\"padding单独编写是一个缩写属性从0点钟方向开始\",{\"1\":{\"385\":1}}],[\"padding包括四个方向\",{\"1\":{\"385\":1}}],[\"padding属性用于设置盒子的内边距\",{\"1\":{\"385\":1}}],[\"padding\",{\"1\":{\"383\":2,\"385\":8,\"386\":1,\"387\":2,\"393\":3,\"406\":2,\"431\":1}}],[\"path=\",{\"1\":{\"936\":1}}],[\"pathvariable\",{\"0\":{\"915\":1},\"1\":{\"915\":2,\"951\":1}}],[\"path\",{\"1\":{\"331\":1,\"332\":1}}],[\"p\",{\"1\":{\"299\":1,\"372\":1,\"378\":1,\"469\":1,\"472\":1,\"738\":1,\"933\":1}}],[\"p档\",{\"1\":{\"277\":1}}],[\"pdd\",{\"1\":{\"125\":1,\"126\":1}}],[\"ps精细调色\",{\"1\":{\"260\":1}}],[\"ps常用快捷键\",{\"0\":{\"5\":1}}],[\"ps\",{\"0\":{\"4\":1,\"333\":1},\"1\":{\"278\":1,\"333\":1},\"2\":{\"7\":1,\"8\":1}}],[\"c依赖于a\",{\"1\":{\"924\":1}}],[\"cglib\",{\"1\":{\"972\":1}}],[\"cglib动态代理是利用asm开源包\",{\"1\":{\"892\":1}}],[\"cglib代理\",{\"1\":{\"589\":1,\"892\":1}}],[\"ctl\",{\"1\":{\"869\":1}}],[\"ctrl+\",{\"1\":{\"352\":1}}],[\"ctrl+g\",{\"1\":{\"255\":1}}],[\"ctrl+shift+alt+e\",{\"1\":{\"249\":1}}],[\"ctrl\",{\"1\":{\"6\":2,\"249\":1,\"262\":1,\"278\":1}}],[\"circuitbreaker\",{\"1\":{\"931\":1}}],[\"circle\",{\"1\":{\"824\":4}}],[\"city\",{\"1\":{\"824\":11}}],[\"ci\",{\"1\":{\"751\":3}}],[\"c++的堆栈\",{\"1\":{\"731\":1}}],[\"c++实现\",{\"1\":{\"714\":1}}],[\"cms收集器无法处理浮动垃圾\",{\"1\":{\"707\":1}}],[\"cms收集器对cpu资源非常敏感\",{\"1\":{\"707\":1}}],[\"cms的垃圾收集算法采用标记\",{\"1\":{\"707\":1}}],[\"cms\",{\"0\":{\"707\":1},\"1\":{\"698\":2}}],[\"cyclic\",{\"1\":{\"668\":1}}],[\"cyclicbarrier\",{\"0\":{\"668\":1},\"1\":{\"668\":4}}],[\"cust\",{\"1\":{\"746\":3}}],[\"customratelimiterfilter\",{\"1\":{\"936\":1}}],[\"customs\",{\"1\":{\"746\":1}}],[\"custommethods\",{\"1\":{\"664\":1}}],[\"customthreadpool\",{\"1\":{\"664\":3}}],[\"currenttimemillis\",{\"1\":{\"670\":6}}],[\"currentthread\",{\"1\":{\"663\":1,\"666\":2,\"667\":4,\"670\":4,\"671\":17}}],[\"current\",{\"1\":{\"670\":1,\"751\":3}}],[\"curl\",{\"1\":{\"557\":2}}],[\"cur\",{\"1\":{\"504\":18,\"506\":5,\"507\":9,\"509\":6}}],[\"cursor属性\",{\"0\":{\"420\":1}}],[\"ceye\",{\"1\":{\"557\":1}}],[\"center\",{\"1\":{\"358\":2,\"387\":1,\"401\":3,\"416\":1,\"431\":1,\"444\":1,\"445\":1,\"446\":1,\"448\":1,\"455\":3}}],[\"cd\",{\"1\":{\"557\":1}}],[\"cdn\",{\"1\":{\"469\":1}}],[\"cx1\",{\"1\":{\"820\":2}}],[\"cxhash\",{\"1\":{\"820\":4}}],[\"cx的id\",{\"1\":{\"818\":2}}],[\"cxlist\",{\"1\":{\"818\":3}}],[\"cx\",{\"1\":{\"461\":1,\"504\":1,\"505\":2,\"506\":1,\"513\":3,\"516\":3,\"517\":1,\"522\":4,\"523\":3,\"539\":1,\"586\":2,\"820\":5}}],[\"crc16实际有16bit\",{\"1\":{\"872\":1}}],[\"creator\",{\"1\":{\"797\":1}}],[\"createapplicationcontext\",{\"1\":{\"926\":1}}],[\"createdate\",{\"1\":{\"558\":1}}],[\"create\",{\"1\":{\"353\":1,\"737\":1,\"751\":2,\"753\":2,\"757\":1,\"759\":1,\"807\":2,\"833\":1,\"869\":1}}],[\"cross\",{\"1\":{\"442\":2,\"446\":4,\"566\":1}}],[\"cnonfirm\",{\"1\":{\"942\":1}}],[\"cntainer中的子元素变成了flex\",{\"1\":{\"436\":1}}],[\"cn\",{\"1\":{\"418\":1,\"586\":1}}],[\"cnu视觉联盟\",{\"1\":{\"19\":1}}],[\"cluster的哈希槽为啥是16384个\",{\"1\":{\"872\":1}}],[\"cloud两种模式\",{\"1\":{\"974\":1}}],[\"cloud中\",{\"1\":{\"953\":1}}],[\"cloud最新\",{\"1\":{\"931\":3}}],[\"cloud\",{\"0\":{\"936\":1},\"1\":{\"931\":1,\"936\":1,\"951\":1,\"970\":3,\"972\":3}}],[\"clob\",{\"1\":{\"808\":4}}],[\"cloneable\",{\"1\":{\"644\":1}}],[\"close\",{\"1\":{\"552\":2}}],[\"client\",{\"1\":{\"552\":3,\"952\":1}}],[\"clip\",{\"1\":{\"403\":1,\"462\":1}}],[\"clear\",{\"1\":{\"433\":3}}],[\"clear常见取值\",{\"1\":{\"433\":1}}],[\"clear属性可以指定一个元素是否必须移动\",{\"1\":{\"433\":1}}],[\"clear属性是做什么的呢\",{\"1\":{\"433\":1}}],[\"classpath\",{\"1\":{\"714\":1,\"920\":1,\"926\":1}}],[\"class文件在文件开头有特定的文件标识\",{\"1\":{\"679\":1}}],[\"class<\",{\"1\":{\"588\":1}}],[\"classloader接口的defineclass系列的native接口加载目标java类\",{\"1\":{\"715\":1}}],[\"classloader\",{\"1\":{\"586\":1,\"588\":1,\"715\":1}}],[\"classname<t>\",{\"1\":{\"579\":1}}],[\"classname\",{\"1\":{\"504\":1,\"505\":2,\"506\":1,\"513\":3,\"514\":1,\"516\":3,\"517\":1,\"522\":4,\"523\":3,\"539\":1,\"579\":1}}],[\"class\",{\"1\":{\"503\":1,\"504\":2,\"505\":2,\"506\":2,\"507\":3,\"509\":4,\"513\":2,\"514\":1,\"516\":2,\"517\":1,\"518\":1,\"519\":1,\"520\":1,\"521\":1,\"522\":5,\"523\":4,\"539\":1,\"579\":1,\"586\":6,\"588\":3,\"590\":1,\"644\":1,\"661\":3,\"663\":4,\"664\":2,\"667\":1,\"670\":2,\"671\":2,\"714\":2,\"727\":1,\"824\":1,\"896\":3,\"908\":1,\"919\":2,\"920\":1,\"926\":1,\"936\":1,\"961\":1}}],[\"class来保证选择器的准确性\",{\"1\":{\"469\":1}}],[\"class属性\",{\"1\":{\"414\":1}}],[\"class=\",{\"1\":{\"358\":2,\"371\":2,\"372\":2,\"373\":5,\"374\":2,\"377\":1,\"387\":6,\"416\":1,\"419\":1,\"425\":4,\"431\":34,\"436\":4,\"441\":4,\"442\":6,\"453\":24,\"461\":1,\"463\":3,\"889\":1}}],[\"clamp\",{\"1\":{\"396\":1}}],[\"charsets\",{\"1\":{\"714\":1}}],[\"charset=\",{\"1\":{\"358\":1,\"387\":3,\"416\":1,\"423\":1,\"425\":2,\"431\":3,\"436\":1,\"441\":1,\"442\":1,\"453\":1}}],[\"character\",{\"1\":{\"514\":1,\"751\":3}}],[\"charat\",{\"1\":{\"514\":1}}],[\"char\",{\"1\":{\"514\":1,\"598\":1,\"807\":2,\"852\":2}}],[\"chenxin\",{\"1\":{\"504\":1,\"505\":2,\"506\":1,\"513\":3,\"514\":1,\"516\":3,\"517\":1,\"522\":4,\"523\":3,\"539\":1}}],[\"checkbox\",{\"1\":{\"410\":1}}],[\"checked\",{\"1\":{\"373\":1,\"410\":1}}],[\"chrome等\",{\"1\":{\"464\":1}}],[\"chrome浏览器开发者工具\",{\"0\":{\"352\":1}}],[\"child\",{\"1\":{\"373\":12,\"431\":1}}],[\"cancle\",{\"1\":{\"942\":1}}],[\"cancel三个操作\",{\"1\":{\"942\":1}}],[\"cancel\",{\"1\":{\"942\":1,\"968\":1}}],[\"cannot\",{\"1\":{\"506\":1,\"517\":2,\"518\":1,\"519\":1,\"520\":2}}],[\"cafe\",{\"1\":{\"679\":1}}],[\"call\",{\"1\":{\"753\":2,\"953\":1}}],[\"callerrunspolicy\",{\"1\":{\"664\":3}}],[\"calc\",{\"1\":{\"463\":2}}],[\"cas是一个原子操作\",{\"1\":{\"669\":1}}],[\"cas算法\",{\"1\":{\"669\":1}}],[\"cas算法+版本号实现\",{\"1\":{\"660\":1}}],[\"cas\",{\"1\":{\"590\":1,\"658\":1,\"669\":2}}],[\"cardinality\",{\"1\":{\"567\":1}}],[\"cache等大小\",{\"1\":{\"566\":1}}],[\"cache\",{\"1\":{\"561\":1,\"566\":1}}],[\"cap\",{\"0\":{\"932\":1,\"933\":1},\"1\":{\"933\":1,\"934\":1}}],[\"capacity=\",{\"1\":{\"513\":1,\"516\":1,\"517\":1,\"539\":1}}],[\"capacity\",{\"1\":{\"513\":4,\"516\":4,\"517\":2,\"518\":3,\"519\":3,\"520\":3,\"539\":2,\"644\":3,\"645\":3}}],[\"caption\",{\"1\":{\"408\":1}}],[\"caps\",{\"1\":{\"366\":1}}],[\"capitalize\",{\"1\":{\"356\":1}}],[\"catalinaclassloader\",{\"1\":{\"716\":1}}],[\"catch\",{\"1\":{\"573\":1,\"663\":7,\"666\":2,\"668\":2,\"670\":9,\"671\":19,\"822\":1}}],[\"cat\",{\"0\":{\"323\":1},\"1\":{\"557\":1}}],[\"coordinator\",{\"1\":{\"967\":1,\"968\":1}}],[\"corepoolsize\",{\"1\":{\"664\":2}}],[\"cornsilk\",{\"1\":{\"442\":1,\"453\":1}}],[\"code\",{\"1\":{\"557\":1,\"575\":7}}],[\"connecttimeout\",{\"1\":{\"952\":1}}],[\"confirm\",{\"1\":{\"942\":2,\"968\":1}}],[\"configurationproperties\",{\"0\":{\"919\":1},\"1\":{\"919\":1}}],[\"configuration\",{\"0\":{\"908\":1},\"1\":{\"902\":1,\"908\":1,\"926\":1}}],[\"configuration+\",{\"1\":{\"902\":1}}],[\"configurablebeanfactory\",{\"1\":{\"889\":1}}],[\"config\",{\"1\":{\"831\":2,\"842\":1,\"853\":3,\"854\":1,\"855\":1,\"856\":1,\"952\":1}}],[\"conf配置文件中默认有此下配置\",{\"1\":{\"859\":1}}],[\"concgcthreads\",{\"1\":{\"738\":1}}],[\"concgcthreads=8\",{\"1\":{\"738\":1}}],[\"concurrent\",{\"1\":{\"662\":1}}],[\"concurrenthashmap\",{\"0\":{\"634\":1},\"1\":{\"634\":2}}],[\"concurrency\",{\"1\":{\"565\":1,\"797\":1,\"802\":1}}],[\"conditional按需加载的配置类\",{\"1\":{\"923\":1}}],[\"conditional注解和条件化的配置类来决定是否应该应用某些配置\",{\"1\":{\"923\":1}}],[\"conditionawaitandsignal\",{\"1\":{\"671\":1}}],[\"condition\",{\"1\":{\"671\":14,\"796\":1}}],[\"condtion中的线程等待和唤醒方法之前\",{\"1\":{\"671\":1}}],[\"consistent\",{\"1\":{\"934\":1}}],[\"consistency一致性\",{\"1\":{\"802\":1}}],[\"consistencylevel设置\",{\"1\":{\"565\":1}}],[\"consistency\",{\"1\":{\"565\":3,\"802\":1,\"933\":1}}],[\"consul\",{\"1\":{\"931\":1}}],[\"console\",{\"1\":{\"461\":1}}],[\"constructor\",{\"1\":{\"884\":1}}],[\"constrant\",{\"1\":{\"681\":1}}],[\"const\",{\"1\":{\"461\":1,\"796\":2}}],[\"controlleradvice\",{\"1\":{\"896\":2}}],[\"controller\",{\"0\":{\"905\":1},\"1\":{\"886\":1,\"895\":3,\"902\":1,\"906\":1}}],[\"control\",{\"1\":{\"546\":1,\"565\":1,\"797\":1,\"802\":1,\"884\":2}}],[\"controls\",{\"1\":{\"460\":2}}],[\"controls><\",{\"1\":{\"460\":1}}],[\"continue\",{\"0\":{\"597\":1},\"1\":{\"494\":1,\"597\":2}}],[\"context\",{\"1\":{\"465\":3}}],[\"content类似\",{\"1\":{\"446\":1}}],[\"content\",{\"0\":{\"444\":1,\"446\":1},\"1\":{\"374\":3,\"377\":2,\"383\":1,\"393\":1,\"431\":4,\"433\":1,\"440\":2,\"444\":1,\"446\":1,\"453\":1,\"455\":1,\"557\":2}}],[\"content=\",{\"1\":{\"358\":1,\"387\":3,\"416\":1,\"423\":1,\"425\":2,\"431\":3,\"436\":1,\"441\":1,\"442\":1,\"453\":1}}],[\"contains\",{\"1\":{\"504\":1,\"513\":1,\"516\":1,\"539\":1}}],[\"containskey\",{\"1\":{\"491\":1}}],[\"container的align\",{\"1\":{\"448\":1}}],[\"container设置align\",{\"1\":{\"448\":1}}],[\"container上的css属性\",{\"1\":{\"440\":1}}],[\"container属性\",{\"0\":{\"437\":1}}],[\"container属性的设置来进行控制和布局\",{\"1\":{\"436\":1}}],[\"container\",{\"1\":{\"425\":4,\"436\":5,\"442\":1,\"445\":1,\"449\":1,\"450\":1}}],[\"container>a\",{\"1\":{\"414\":1}}],[\"contain\",{\"1\":{\"400\":1}}],[\"count的值\",{\"1\":{\"737\":1}}],[\"count参数\",{\"1\":{\"727\":1}}],[\"counter\",{\"0\":{\"680\":1}}],[\"countdown\",{\"1\":{\"667\":3}}],[\"countdownlatchtest\",{\"1\":{\"667\":6}}],[\"countdownlatch\",{\"0\":{\"667\":1},\"1\":{\"667\":5}}],[\"count\",{\"1\":{\"457\":3,\"558\":1,\"746\":2,\"796\":1,\"807\":1,\"819\":2}}],[\"commandproperties\",{\"1\":{\"960\":1}}],[\"commandlinerunner\",{\"1\":{\"926\":2}}],[\"commit\",{\"1\":{\"807\":1,\"942\":1,\"984\":1}}],[\"commit和rollback\",{\"1\":{\"802\":1}}],[\"committed\",{\"1\":{\"779\":1,\"899\":3}}],[\"comments\",{\"1\":{\"807\":1}}],[\"comment\",{\"1\":{\"751\":7,\"753\":2,\"807\":4,\"808\":3}}],[\"commonresult<payment>\",{\"1\":{\"951\":1}}],[\"commonclassloader\",{\"1\":{\"716\":1}}],[\"commonpool\",{\"1\":{\"670\":1}}],[\"common\",{\"1\":{\"664\":1}}],[\"commonserviceexecutor\",{\"1\":{\"664\":2}}],[\"come\",{\"1\":{\"670\":4}}],[\"component注解替代\",{\"1\":{\"908\":1}}],[\"componentscan\",{\"1\":{\"902\":2}}],[\"component\",{\"0\":{\"905\":1},\"1\":{\"886\":1,\"902\":1,\"905\":1,\"919\":1,\"920\":1,\"936\":1,\"951\":1}}],[\"component等注解声明类为spring\",{\"1\":{\"884\":1}}],[\"compress\",{\"1\":{\"854\":1}}],[\"compiler\",{\"1\":{\"727\":1}}],[\"compact\",{\"1\":{\"691\":2}}],[\"compare\",{\"1\":{\"878\":1}}],[\"compareto\",{\"1\":{\"528\":1,\"531\":1,\"532\":1}}],[\"comparator\",{\"1\":{\"625\":2}}],[\"comparator的区别\",{\"0\":{\"625\":1},\"1\":{\"528\":1}}],[\"comparable\",{\"0\":{\"625\":1},\"1\":{\"528\":1,\"625\":2}}],[\"comparable<e>>\",{\"1\":{\"528\":1,\"532\":1}}],[\"completableperformancetest\",{\"1\":{\"670\":1}}],[\"completablefuture2\",{\"1\":{\"670\":2}}],[\"completablefuture1\",{\"1\":{\"670\":2}}],[\"completablefuture常用方法\",{\"1\":{\"670\":1}}],[\"completablefuture性能测试\",{\"1\":{\"670\":1}}],[\"completablefuture提供了非常强大的future的扩展功能\",{\"1\":{\"670\":1}}],[\"completablefuture<integer>\",{\"1\":{\"670\":4}}],[\"completablefuture<string>\",{\"1\":{\"670\":1}}],[\"completablefuture<t>\",{\"1\":{\"670\":1}}],[\"completablefuture<void>\",{\"1\":{\"667\":4,\"670\":5}}],[\"completablefuture\",{\"0\":{\"670\":1},\"1\":{\"667\":4,\"670\":20}}],[\"completionstage是什么\",{\"1\":{\"670\":1}}],[\"completionstage<t>\",{\"1\":{\"670\":1}}],[\"completed\",{\"1\":{\"667\":1}}],[\"complement\",{\"1\":{\"491\":3}}],[\"complexity\",{\"1\":{\"484\":1}}],[\"com\",{\"1\":{\"410\":1,\"419\":1,\"504\":1,\"505\":2,\"506\":1,\"513\":3,\"516\":3,\"517\":1,\"522\":4,\"523\":3,\"539\":1,\"586\":1,\"738\":2,\"919\":1}}],[\"cover\",{\"1\":{\"400\":1}}],[\"collate\",{\"1\":{\"751\":3}}],[\"collapse\",{\"1\":{\"387\":2}}],[\"collecting\",{\"1\":{\"693\":1}}],[\"collections\",{\"1\":{\"625\":1}}],[\"collection集合包含set\",{\"1\":{\"616\":1}}],[\"collection<e>\",{\"1\":{\"579\":1}}],[\"collection\",{\"1\":{\"579\":1}}],[\"collector对堆内存从头到尾进行线性的遍历\",{\"1\":{\"689\":1}}],[\"collector从引用根节点开始遍历\",{\"1\":{\"689\":1}}],[\"col\",{\"1\":{\"559\":1}}],[\"column2\",{\"1\":{\"793\":1}}],[\"column1\",{\"1\":{\"793\":1}}],[\"columns\",{\"1\":{\"753\":2,\"807\":1}}],[\"column\",{\"1\":{\"441\":2,\"753\":4,\"755\":1,\"756\":1,\"793\":1,\"807\":2,\"808\":5}}],[\"colspan=\",{\"1\":{\"409\":1}}],[\"color上面\",{\"1\":{\"398\":1}}],[\"color是上面4个属性的简写属性\",{\"1\":{\"386\":1}}],[\"color\",{\"1\":{\"348\":3,\"349\":2,\"358\":2,\"369\":2,\"370\":2,\"371\":2,\"372\":1,\"373\":6,\"374\":2,\"376\":1,\"377\":5,\"380\":1,\"386\":4,\"387\":6,\"390\":1,\"403\":1,\"416\":2,\"425\":4,\"431\":14,\"436\":1,\"441\":4,\"442\":6,\"453\":9,\"456\":1,\"457\":1,\"461\":1,\"462\":1,\"463\":9,\"466\":1,\"469\":6}}],[\"cos\",{\"1\":{\"122\":1}}],[\"css预处理器\",{\"1\":{\"469\":1}}],[\"css预处理器less\",{\"0\":{\"469\":1}}],[\"css编写的痛点\",{\"1\":{\"469\":1}}],[\"css像素\",{\"1\":{\"468\":1}}],[\"css函数通常可以帮助我们更加灵活的来编写样式的值\",{\"1\":{\"463\":1}}],[\"css常见单位详解\",{\"0\":{\"467\":1}}],[\"css常见的函数扩展\",{\"0\":{\"463\":1}}],[\"css常见选择器\",{\"0\":{\"367\":1}}],[\"css属性刚开始并没有成为标准\",{\"1\":{\"464\":1}}],[\"css属性名称\",{\"1\":{\"456\":1}}],[\"css属性的类型\",{\"0\":{\"378\":1}}],[\"css属性的层叠\",{\"0\":{\"377\":1}}],[\"css属性的继承\",{\"0\":{\"376\":1}}],[\"css属性的特性\",{\"0\":{\"375\":1}}],[\"css布局中唯一可靠且跨浏览器兼容的布局工具只有floats和positioning\",{\"1\":{\"435\":1}}],[\"css元素定位\",{\"0\":{\"421\":1}}],[\"css精灵图\",{\"0\":{\"419\":1}}],[\"css中输入缩写后按tab\",{\"1\":{\"413\":1}}],[\"css中有个display属性\",{\"1\":{\"379\":1}}],[\"css代码\",{\"1\":{\"413\":1}}],[\"css的image数据类型描述的是2d图形\",{\"1\":{\"463\":1}}],[\"css的浮动\",{\"0\":{\"428\":1}}],[\"css的背景设置\",{\"0\":{\"397\":1}}],[\"css的盒子模型\",{\"0\":{\"382\":1}}],[\"css的某些属性具有继承性\",{\"1\":{\"376\":1}}],[\"css字体属性\",{\"0\":{\"360\":1}}],[\"css文本属性\",{\"0\":{\"354\":1}}],[\"css样式\",{\"1\":{\"351\":1}}],[\"css样式优先级\",{\"0\":{\"347\":1}}],[\"css\",{\"0\":{\"345\":1,\"348\":1,\"349\":1},\"1\":{\"351\":2,\"353\":2,\"454\":1,\"456\":2,\"457\":1,\"466\":4,\"476\":1},\"2\":{\"474\":1}}],[\"cpu占用很高排查方案\",{\"1\":{\"738\":1}}],[\"cpu\",{\"1\":{\"328\":1,\"521\":2,\"664\":2,\"804\":1}}],[\"cp\",{\"0\":{\"319\":1},\"1\":{\"319\":3}}],[\"c\",{\"1\":{\"96\":1,\"250\":1,\"278\":1,\"299\":1,\"326\":2,\"493\":2,\"514\":8,\"517\":1,\"794\":1,\"933\":1}}],[\"豆瓣\",{\"1\":{\"19\":1}}],[\"凋零\",{\"1\":{\"17\":1,\"213\":1}}],[\"生产者才会接收到来自服务器的响应\",{\"1\":{\"982\":1}}],[\"生产者发送消失败\",{\"1\":{\"982\":1}}],[\"生产者成功发送消息到topic\",{\"1\":{\"982\":1}}],[\"生产者丢失消息的情况\",{\"1\":{\"982\":1}}],[\"生产者产生的消息速率超过消费者消费速率时\",{\"1\":{\"981\":1}}],[\"生产环境如何配置\",{\"1\":{\"831\":1}}],[\"生产环境执行\",{\"1\":{\"807\":1}}],[\"生产环境常用\",{\"1\":{\"557\":1}}],[\"生态中\",{\"1\":{\"972\":1}}],[\"生成id的速度很快\",{\"1\":{\"938\":1}}],[\"生成执行计划\",{\"1\":{\"803\":1}}],[\"生成解析树\",{\"1\":{\"803\":1}}],[\"生成最终的结果集\",{\"1\":{\"747\":1}}],[\"生成虚拟机当前时刻的线程快照\",{\"1\":{\"731\":1}}],[\"生成dump文件\",{\"1\":{\"729\":1}}],[\"生成堆转储快照\",{\"1\":{\"729\":1}}],[\"生成一个新的字符串\",{\"1\":{\"610\":1}}],[\"生成类的对象时自动执行\",{\"1\":{\"603\":1}}],[\"生命周期管理\",{\"1\":{\"884\":1}}],[\"生命周期和线程一致\",{\"1\":{\"682\":1}}],[\"生命力\",{\"1\":{\"93\":1}}],[\"生命\",{\"1\":{\"17\":1}}],[\"生活例子\",{\"1\":{\"666\":1}}],[\"生活状态+情绪状态\",{\"1\":{\"129\":1}}],[\"生活阶段\",{\"1\":{\"112\":1}}],[\"生活习惯的变化而变化的\",{\"1\":{\"14\":1}}],[\"生活习惯等\",{\"1\":{\"14\":1}}],[\"生活\",{\"0\":{\"9\":1},\"1\":{\"23\":1}}],[\"音乐学院\",{\"1\":{\"122\":1}}],[\"音乐\",{\"0\":{\"311\":1},\"1\":{\"17\":1,\"23\":1,\"112\":1,\"309\":1}}],[\"光学\",{\"0\":{\"293\":1}}],[\"光明\",{\"1\":{\"279\":1}}],[\"光吃得少\",{\"1\":{\"274\":1}}],[\"光吃得多\",{\"1\":{\"274\":1}}],[\"光圈和快门速度自动\",{\"1\":{\"277\":1}}],[\"光圈自动\",{\"1\":{\"277\":1}}],[\"光圈可调\",{\"1\":{\"277\":1}}],[\"光圈优先挡位\",{\"1\":{\"277\":1}}],[\"光圈还有一个作用\",{\"1\":{\"274\":1}}],[\"光圈小\",{\"1\":{\"274\":3}}],[\"光圈调小\",{\"1\":{\"274\":2}}],[\"光圈调大\",{\"1\":{\"274\":2}}],[\"光圈大\",{\"1\":{\"274\":4}}],[\"光圈\",{\"0\":{\"274\":1},\"1\":{\"273\":1,\"275\":2}}],[\"光圈f\",{\"1\":{\"273\":1}}],[\"光圈控制\",{\"1\":{\"81\":1}}],[\"光照时间\",{\"1\":{\"121\":1}}],[\"光质不同\",{\"1\":{\"120\":1}}],[\"光位的选择\",{\"1\":{\"259\":1}}],[\"光位选择\",{\"1\":{\"81\":1}}],[\"光位不是决定影调的唯一要素\",{\"1\":{\"76\":1}}],[\"光色较暖\",{\"1\":{\"81\":1}}],[\"光色偏白\",{\"1\":{\"81\":1}}],[\"光色偏暖\",{\"1\":{\"81\":2}}],[\"光色\",{\"1\":{\"81\":1,\"259\":1}}],[\"光的三原色\",{\"0\":{\"88\":1},\"1\":{\"88\":1}}],[\"光的质感\",{\"0\":{\"77\":1}}],[\"光的方向\",{\"0\":{\"76\":1}}],[\"光比\",{\"1\":{\"84\":1}}],[\"光比小\",{\"1\":{\"83\":1}}],[\"光比适中\",{\"1\":{\"76\":1}}],[\"光比较强\",{\"1\":{\"76\":1}}],[\"光源\",{\"1\":{\"95\":1}}],[\"光源叠加固有色\",{\"1\":{\"87\":1}}],[\"光源色\",{\"1\":{\"87\":1}}],[\"光源处在人物一侧的45度位置\",{\"1\":{\"76\":1}}],[\"光源位置在被摄物体的左后方或右后方\",{\"1\":{\"76\":1}}],[\"光源位于被摄主体的左侧或右侧\",{\"1\":{\"76\":1}}],[\"光源与人形成的夹角为锐角\",{\"1\":{\"76\":1}}],[\"光影比例\",{\"1\":{\"278\":1}}],[\"光影丰富空间层次\",{\"0\":{\"194\":1}}],[\"光影制造氛围感\",{\"1\":{\"174\":1}}],[\"光影表现和情绪传达\",{\"1\":{\"126\":1}}],[\"光影效果不同\",{\"1\":{\"120\":1}}],[\"光影感强\",{\"1\":{\"76\":1}}],[\"光影响人物皮肤质感\",{\"1\":{\"75\":1}}],[\"光影响画面整体质感\",{\"1\":{\"75\":1}}],[\"光影的分布一定程度上影响画面影调\",{\"1\":{\"75\":1}}],[\"光影\",{\"1\":{\"49\":1,\"50\":1,\"51\":1,\"121\":1,\"184\":1,\"225\":1,\"254\":1,\"264\":1,\"278\":1}}],[\"光线的选择\",{\"1\":{\"235\":1}}],[\"光线的明暗\",{\"1\":{\"87\":1}}],[\"光线充足\",{\"1\":{\"121\":1}}],[\"光线方向\",{\"1\":{\"121\":1,\"254\":1}}],[\"光线参考\",{\"1\":{\"120\":1}}],[\"光线构建不同的光区\",{\"1\":{\"99\":1}}],[\"光线强度高\",{\"1\":{\"91\":1}}],[\"光线穿透力强\",{\"1\":{\"81\":1}}],[\"光线为顶光\",{\"1\":{\"81\":1}}],[\"光线清透\",{\"1\":{\"81\":1}}],[\"光线朦胧柔和\",{\"1\":{\"81\":1}}],[\"光线柔和\",{\"1\":{\"79\":1}}],[\"光线投射方向与拍摄方向一致\",{\"1\":{\"76\":1}}],[\"光线特点\",{\"1\":{\"76\":5}}],[\"光线\",{\"0\":{\"75\":1},\"1\":{\"19\":1,\"123\":1,\"185\":1}}],[\"光\",{\"1\":{\"17\":1}}],[\"对运维界面友好度和易于入门有较高要求\",{\"1\":{\"974\":1}}],[\"对请求和响应进行gzip压缩\",{\"1\":{\"954\":1}}],[\"对2pc的改进\",{\"1\":{\"942\":1}}],[\"对方考取的学校\",{\"1\":{\"919\":1}}],[\"对方发送正常\",{\"1\":{\"552\":1}}],[\"对方发送\",{\"1\":{\"552\":3}}],[\"对代理对象类的class文件加载进来\",{\"1\":{\"892\":1}}],[\"对所有设置了过期时间的key使用lfu算法进行删除\",{\"1\":{\"832\":1}}],[\"对所有设置了过期时间的key使用lru算法进行删除\",{\"1\":{\"832\":1}}],[\"对所有设置了过期时间的key随机删除\",{\"1\":{\"832\":1}}],[\"对所有key使用lfu算法进行删除\",{\"1\":{\"832\":1}}],[\"对所有key使用lru算法进行删除\",{\"1\":{\"832\":1}}],[\"对所有key随机删除\",{\"1\":{\"832\":1}}],[\"对cpu不友好\",{\"1\":{\"826\":1}}],[\"对索引列进行范围查询\",{\"1\":{\"796\":1}}],[\"对排序查找和范围查找优化\",{\"1\":{\"793\":1}}],[\"对读的记录加一个s锁\",{\"1\":{\"788\":1}}],[\"对读的记录加一个x锁\",{\"1\":{\"788\":1}}],[\"对整张表加锁\",{\"1\":{\"784\":1}}],[\"对整个桶数组进行了分割分段\",{\"1\":{\"634\":1}}],[\"对整个页面进行缩小\",{\"1\":{\"470\":1}}],[\"对同一个字段的多次读取结果都是一致的\",{\"1\":{\"780\":1}}],[\"对tomcat不可见\",{\"1\":{\"716\":1}}],[\"对计算速度进行选用\",{\"1\":{\"670\":1}}],[\"对计算结果进行合并\",{\"1\":{\"670\":1}}],[\"对计算结果进行消费\",{\"1\":{\"670\":1}}],[\"对计算结果进行处理\",{\"1\":{\"670\":1}}],[\"对一个\",{\"1\":{\"659\":1}}],[\"对共享变量的写入和读取应该按照程序的顺序进行\",{\"1\":{\"657\":1}}],[\"对共同拍摄风格认可的前提下\",{\"1\":{\"122\":1}}],[\"对已获得的资源保持不放\",{\"1\":{\"652\":1}}],[\"对象上去\",{\"1\":{\"916\":1}}],[\"对象经历15次minor\",{\"1\":{\"684\":1}}],[\"对象头\",{\"1\":{\"672\":1}}],[\"对象头markword\",{\"1\":{\"672\":1}}],[\"对象在堆内存由\",{\"1\":{\"672\":1}}],[\"对象为\",{\"1\":{\"663\":1}}],[\"对象\",{\"1\":{\"610\":3,\"611\":1,\"714\":1,\"925\":1,\"926\":1}}],[\"对象的内容一样\",{\"1\":{\"606\":1}}],[\"对象操作\",{\"1\":{\"590\":1}}],[\"对形参的修改将影响到实参\",{\"1\":{\"587\":1}}],[\"对聚合操作的内存使用进行硬性限制\",{\"1\":{\"567\":1}}],[\"对频繁使用的聚合字段启用fielddata缓存\",{\"1\":{\"566\":1}}],[\"对输入数组进行排序\",{\"1\":{\"494\":1}}],[\"对给定的数组进行排序\",{\"1\":{\"494\":1}}],[\"对less进行实时处理\",{\"1\":{\"469\":1}}],[\"对齐填充组成\",{\"1\":{\"672\":1}}],[\"对齐\",{\"1\":{\"444\":1}}],[\"对元素的作用如下图\",{\"1\":{\"423\":1}}],[\"对于中小规模的分布式任务调度场景非常适合\",{\"1\":{\"974\":1}}],[\"对于那些通过\",{\"1\":{\"972\":1}}],[\"对于持久实例\",{\"1\":{\"970\":1}}],[\"对于临时实例\",{\"1\":{\"970\":1}}],[\"对于方法参数\",{\"1\":{\"953\":1}}],[\"对于需要依赖外部条件的事务\",{\"1\":{\"879\":1}}],[\"对于节点在1000个以内的redis集群\",{\"1\":{\"872\":1}}],[\"对于读写缓存来说\",{\"1\":{\"845\":1}}],[\"对于频繁的热点key\",{\"1\":{\"837\":1}}],[\"对于添加过的元素不会发生误判\",{\"1\":{\"833\":1}}],[\"对于未分区的表\",{\"1\":{\"796\":1}}],[\"对于哈希索引\",{\"1\":{\"793\":1}}],[\"对于范围查询则无效\",{\"1\":{\"793\":1}}],[\"对于g1垃圾收集器\",{\"1\":{\"738\":1}}],[\"对于老年代每次都有大量对象存活的区域来说\",{\"1\":{\"691\":1}}],[\"对于栈来说不存在垃圾回收问题\",{\"1\":{\"682\":1}}],[\"对于引用数据类型来说\",{\"1\":{\"606\":1}}],[\"对于基本类型来说\",{\"1\":{\"606\":1}}],[\"对于重复的聚合请求可以显著提高性能\",{\"1\":{\"567\":1}}],[\"对于具有明显时间特征的数据\",{\"1\":{\"567\":1}}],[\"对于大规模分布式任务调度\",{\"1\":{\"974\":1}}],[\"对于大量用户肯定是不适合的\",{\"1\":{\"823\":1}}],[\"对于大量数据的聚合\",{\"1\":{\"567\":1}}],[\"对于大型聚合任务\",{\"1\":{\"567\":1}}],[\"对于大型过滤条件\",{\"1\":{\"566\":1}}],[\"对于分桶聚合\",{\"1\":{\"567\":1}}],[\"对于上亿量级的大数据聚合\",{\"1\":{\"567\":1}}],[\"对于日志\",{\"1\":{\"566\":1}}],[\"对于每一个词项\",{\"1\":{\"563\":1}}],[\"对于+或\",{\"1\":{\"463\":1}}],[\"对于行内级非替换元素是无效的\",{\"1\":{\"454\":1}}],[\"对于绝对定位元素来说\",{\"1\":{\"425\":1}}],[\"对于父子元素来说\",{\"1\":{\"387\":1}}],[\"对于一个元素来说\",{\"1\":{\"377\":1}}],[\"对图片增加锐度质感功能\",{\"1\":{\"292\":1}}],[\"对应的组件\",{\"0\":{\"931\":1}}],[\"对应的进程以及其线程的详细信息\",{\"1\":{\"738\":1}}],[\"对应的进程编号\",{\"1\":{\"721\":1}}],[\"对应没遍历完的数据是不会改变其位置\",{\"1\":{\"530\":1}}],[\"对应最暗部\",{\"1\":{\"288\":1}}],[\"对应最亮部\",{\"1\":{\"288\":1}}],[\"对应暗部\",{\"1\":{\"288\":1}}],[\"对应亮部\",{\"1\":{\"288\":1}}],[\"对角线\",{\"1\":{\"279\":1}}],[\"对角线构图法\",{\"0\":{\"221\":1}}],[\"对角线构图\",{\"0\":{\"59\":1}}],[\"对比wrap\",{\"1\":{\"442\":1}}],[\"对比度\",{\"1\":{\"288\":1}}],[\"对比\",{\"0\":{\"653\":1},\"1\":{\"279\":2}}],[\"对比调\",{\"1\":{\"278\":1}}],[\"对比色更容易吸引人的视线\",{\"1\":{\"97\":1}}],[\"对比色所产生的视觉冲击力往往很强烈\",{\"1\":{\"97\":1}}],[\"对比色\",{\"1\":{\"97\":1}}],[\"对称\",{\"1\":{\"279\":1}}],[\"对称法\",{\"1\":{\"278\":1}}],[\"对称构图法\",{\"0\":{\"220\":1}}],[\"对称构图\",{\"0\":{\"57\":1}}],[\"对人脸进行单独补光\",{\"1\":{\"78\":1}}],[\"对人内心变化的观察力\",{\"1\":{\"17\":1}}],[\"对背光面进行补光减少光比\",{\"1\":{\"76\":1}}],[\"对话\",{\"1\":{\"57\":1}}],[\"对眼神\",{\"1\":{\"34\":1}}],[\"对文化的理解和再创作\",{\"0\":{\"29\":1}}],[\"对美的感知力\",{\"1\":{\"17\":1}}],[\"对外界\",{\"1\":{\"17\":1}}],[\"对生活\",{\"1\":{\"17\":1}}],[\"5分钟\",{\"1\":{\"859\":1}}],[\"5分钟和15分钟的平均负载\",{\"1\":{\"329\":1}}],[\"5步也可以使用以下命令\",{\"1\":{\"738\":1}}],[\"5倍数\",{\"1\":{\"623\":1}}],[\"59\",{\"1\":{\"558\":2}}],[\"512\",{\"1\":{\"853\":1}}],[\"51\",{\"1\":{\"522\":1}}],[\"53\",{\"1\":{\"505\":1}}],[\"54厘米=96px\",{\"1\":{\"468\":1}}],[\"5n\",{\"1\":{\"431\":1}}],[\"5px\",{\"1\":{\"390\":2,\"391\":5,\"463\":1,\"469\":1,\"472\":2}}],[\"5秒\",{\"1\":{\"273\":1}}],[\"50px\",{\"1\":{\"387\":1,\"416\":1,\"423\":2,\"454\":1,\"463\":1}}],[\"5000\",{\"1\":{\"952\":1,\"970\":2}}],[\"500px\",{\"1\":{\"425\":2,\"466\":1}}],[\"500\",{\"1\":{\"273\":1,\"275\":1,\"671\":1}}],[\"50\",{\"1\":{\"273\":1,\"455\":2,\"753\":1,\"807\":2,\"808\":1,\"824\":2}}],[\"5个层继以上\",{\"1\":{\"84\":1}}],[\"5\",{\"0\":{\"16\":1,\"21\":1,\"29\":1,\"43\":1,\"52\":1,\"57\":1,\"68\":1,\"74\":1,\"85\":1,\"94\":1,\"99\":1,\"107\":1,\"118\":1,\"121\":1,\"137\":1,\"146\":1,\"151\":1,\"161\":1,\"172\":1,\"175\":1,\"176\":1,\"181\":1,\"191\":1,\"197\":1,\"204\":1,\"213\":1,\"220\":1,\"231\":1,\"256\":1,\"319\":1,\"332\":1,\"334\":1,\"335\":1,\"336\":1,\"337\":1,\"506\":1,\"516\":1,\"548\":1,\"565\":1,\"581\":1,\"583\":1,\"584\":1,\"585\":1,\"586\":1,\"598\":1,\"623\":1,\"632\":1,\"641\":1,\"653\":1,\"683\":1,\"693\":1,\"695\":1,\"696\":1,\"697\":1,\"698\":1,\"699\":1,\"700\":2,\"706\":1,\"716\":1,\"723\":1,\"730\":1,\"747\":1,\"755\":1,\"756\":1,\"773\":1,\"782\":1,\"783\":1,\"788\":1,\"795\":1,\"821\":1,\"830\":1,\"855\":1,\"868\":1,\"888\":1,\"889\":1,\"900\":1,\"908\":1,\"917\":1,\"918\":1,\"919\":1,\"920\":1,\"940\":1,\"985\":1},\"1\":{\"122\":1,\"165\":1,\"257\":1,\"274\":1,\"366\":1,\"447\":1,\"454\":1,\"457\":2,\"463\":1,\"472\":1,\"496\":2,\"497\":2,\"507\":2,\"513\":1,\"526\":2,\"528\":1,\"530\":1,\"599\":1,\"662\":1,\"738\":1,\"818\":1,\"819\":3}}],[\"5左右\",{\"1\":{\"6\":1}}],[\"挑剔自我\",{\"1\":{\"15\":1}}],[\"4之后引入的一个新的垃圾回收器\",{\"1\":{\"708\":1}}],[\"4个方面\",{\"1\":{\"832\":1}}],[\"4个\",{\"1\":{\"610\":1}}],[\"42\",{\"1\":{\"606\":2}}],[\"44444\",{\"1\":{\"820\":2}}],[\"44\",{\"1\":{\"514\":1,\"516\":1,\"523\":1,\"670\":1}}],[\"48\",{\"1\":{\"513\":1,\"516\":1,\"522\":1,\"539\":1}}],[\"4px\",{\"1\":{\"472\":2}}],[\"45\",{\"1\":{\"516\":1,\"522\":1}}],[\"45deg\",{\"1\":{\"454\":1,\"463\":1}}],[\"45度抬头\",{\"1\":{\"169\":1}}],[\"403414\",{\"1\":{\"824\":2}}],[\"403963\",{\"1\":{\"824\":2}}],[\"40\",{\"1\":{\"599\":2,\"824\":2}}],[\"400px\",{\"1\":{\"425\":2,\"457\":2}}],[\"400\",{\"1\":{\"363\":1}}],[\"40px\",{\"1\":{\"348\":1,\"385\":2}}],[\"41位\",{\"1\":{\"938\":1}}],[\"418017\",{\"1\":{\"824\":2}}],[\"414px\",{\"1\":{\"472\":1}}],[\"41\",{\"1\":{\"329\":1,\"472\":2,\"505\":1}}],[\"43\",{\"1\":{\"329\":1}}],[\"4脸\",{\"1\":{\"156\":1}}],[\"4\",{\"0\":{\"15\":1,\"20\":1,\"28\":1,\"42\":1,\"51\":1,\"56\":1,\"63\":1,\"67\":1,\"84\":1,\"93\":1,\"98\":1,\"106\":1,\"117\":1,\"120\":1,\"136\":1,\"145\":1,\"150\":1,\"160\":1,\"164\":1,\"171\":1,\"174\":1,\"180\":1,\"190\":1,\"192\":1,\"196\":1,\"212\":1,\"219\":1,\"226\":1,\"227\":1,\"228\":1,\"229\":1,\"230\":2,\"231\":1,\"232\":1,\"233\":1,\"234\":1,\"235\":1,\"236\":1,\"237\":1,\"238\":1,\"239\":1,\"240\":1,\"241\":1,\"242\":1,\"243\":1,\"244\":1,\"255\":1,\"267\":1,\"318\":1,\"327\":1,\"328\":1,\"329\":1,\"330\":1,\"331\":2,\"332\":1,\"333\":1,\"409\":1,\"505\":1,\"515\":1,\"547\":1,\"564\":1,\"576\":1,\"577\":1,\"578\":1,\"579\":1,\"580\":2,\"581\":1,\"582\":1,\"597\":1,\"622\":1,\"631\":1,\"640\":1,\"652\":1,\"682\":1,\"688\":1,\"689\":1,\"690\":1,\"691\":1,\"692\":2,\"693\":1,\"694\":1,\"699\":1,\"705\":1,\"715\":1,\"722\":1,\"729\":1,\"738\":1,\"746\":1,\"754\":1,\"766\":1,\"772\":1,\"777\":1,\"781\":1,\"787\":1,\"794\":1,\"820\":1,\"825\":1,\"829\":1,\"842\":1,\"854\":1,\"862\":1,\"867\":1,\"887\":1,\"897\":1,\"907\":1,\"913\":1,\"914\":1,\"915\":1,\"916\":1,\"937\":1,\"949\":1,\"954\":1,\"959\":1,\"984\":1},\"1\":{\"48\":1,\"122\":1,\"373\":2,\"385\":1,\"469\":1,\"493\":1,\"497\":1,\"507\":2,\"517\":1,\"518\":1,\"519\":1,\"520\":2,\"522\":4,\"523\":1,\"526\":2,\"528\":1,\"530\":1,\"597\":1,\"599\":1,\"644\":1,\"652\":1,\"653\":1,\"662\":1,\"818\":1,\"819\":3,\"859\":1}}],[\"艺术就是把美好的东西毁灭给人看\",{\"1\":{\"14\":1}}],[\"人才选育用留\",{\"0\":{\"304\":1}}],[\"人文纪实\",{\"1\":{\"274\":1,\"276\":1}}],[\"人文题材\",{\"1\":{\"273\":1}}],[\"人非常多\",{\"1\":{\"233\":1}}],[\"人太多\",{\"1\":{\"227\":1}}],[\"人景结合\",{\"1\":{\"225\":1}}],[\"人类本身对死亡\",{\"1\":{\"213\":1}}],[\"人在这种状态下会做什么事情\",{\"1\":{\"189\":1}}],[\"人是主体\",{\"1\":{\"184\":1}}],[\"人中短\",{\"1\":{\"168\":1}}],[\"人中沟\",{\"1\":{\"166\":1}}],[\"人脸的凹面\",{\"1\":{\"166\":1}}],[\"人脸的凹凸面\",{\"0\":{\"166\":1}}],[\"人脸的凸面\",{\"1\":{\"166\":1}}],[\"人与自然的关系\",{\"1\":{\"209\":1}}],[\"人与道具的互动所传递的情绪及心理感受\",{\"1\":{\"147\":1}}],[\"人与空间的关系\",{\"1\":{\"37\":1}}],[\"人体结构\",{\"1\":{\"133\":1}}],[\"人像\",{\"1\":{\"274\":1}}],[\"人像美姿\",{\"0\":{\"130\":1}}],[\"人像摄影少用\",{\"1\":{\"76\":1}}],[\"人像摄影\",{\"0\":{\"10\":1},\"1\":{\"9\":1},\"2\":{\"268\":1,\"269\":1}}],[\"人射角度低\",{\"1\":{\"81\":1}}],[\"人造光\",{\"1\":{\"78\":1}}],[\"人工直射光\",{\"1\":{\"78\":1}}],[\"人和背景都处在运动之中\",{\"1\":{\"70\":1}}],[\"人或者背景或陪体\",{\"1\":{\"70\":1}}],[\"人虚景实\",{\"0\":{\"69\":1}}],[\"人影\",{\"1\":{\"68\":1}}],[\"人为制造可以投射影子的平面\",{\"1\":{\"68\":1}}],[\"人内心的迷茫\",{\"1\":{\"66\":1}}],[\"人\",{\"1\":{\"49\":1}}],[\"人的颓败\",{\"1\":{\"212\":1}}],[\"人的五官四肢形体配合完成一件事情或一个动作\",{\"1\":{\"181\":1}}],[\"人的摆姿服务表达主题\",{\"1\":{\"147\":1}}],[\"人的面部表情不再重要\",{\"1\":{\"147\":1}}],[\"人的面部容貌及表情被忽视\",{\"1\":{\"34\":1}}],[\"人的视线具有方向性引导性\",{\"1\":{\"64\":1}}],[\"人的动作\",{\"1\":{\"40\":1}}],[\"人的情绪状态\",{\"1\":{\"37\":1,\"184\":1}}],[\"人只是很小的信息\",{\"1\":{\"37\":1}}],[\"人物脸部亮\",{\"1\":{\"262\":1}}],[\"人物肤色\",{\"1\":{\"254\":1}}],[\"人物多做一些夸张的姿势\",{\"1\":{\"244\":1}}],[\"人物尽量不要和桥重叠\",{\"1\":{\"242\":1}}],[\"人物尽量靠近光源位置\",{\"1\":{\"79\":1}}],[\"人物坐到桥洞的最里面\",{\"1\":{\"240\":1}}],[\"人物坐在花下进行拍摄\",{\"1\":{\"233\":1}}],[\"人物需要进入花丛中央\",{\"1\":{\"239\":1}}],[\"人物和树干不要重叠\",{\"1\":{\"238\":1}}],[\"人物和观众之间的距离\",{\"1\":{\"191\":1}}],[\"人物迎合光线\",{\"1\":{\"236\":2}}],[\"人物才能凸显亮\",{\"1\":{\"236\":1}}],[\"人物站位靠近花束\",{\"1\":{\"234\":1}}],[\"人物站在中间的位置\",{\"1\":{\"233\":1}}],[\"人物站在高处\",{\"1\":{\"232\":1}}],[\"人物站在拱桥的最高点\",{\"1\":{\"230\":1}}],[\"人物镜头\",{\"1\":{\"191\":1}}],[\"人物\",{\"1\":{\"190\":1,\"278\":1}}],[\"人物表情及面部不是重点\",{\"1\":{\"162\":1}}],[\"人物正面\",{\"0\":{\"156\":1}}],[\"人物做好以上准备后\",{\"1\":{\"152\":1}}],[\"人物放松\",{\"1\":{\"149\":1}}],[\"人物在框定的画面中行动\",{\"1\":{\"148\":1}}],[\"人物的光影\",{\"1\":{\"256\":1}}],[\"人物的瑕疵\",{\"1\":{\"256\":1}}],[\"人物的面部一定要去迎合光源方向\",{\"1\":{\"228\":1}}],[\"人物的面部\",{\"1\":{\"154\":1}}],[\"人物的面部表情\",{\"1\":{\"134\":1}}],[\"人物的妆容影响到整体情绪状态\",{\"1\":{\"152\":1}}],[\"人物的摆姿不同\",{\"1\":{\"147\":1}}],[\"人物的摆姿和情绪不同\",{\"1\":{\"140\":1}}],[\"人物的渺小\",{\"1\":{\"34\":1}}],[\"人物看向天空\",{\"1\":{\"127\":1}}],[\"人物肢体语言等为主题表达服务\",{\"1\":{\"127\":1}}],[\"人物状态及性格\",{\"1\":{\"209\":1}}],[\"人物状态\",{\"1\":{\"93\":1}}],[\"人物受光面小\",{\"1\":{\"76\":1}}],[\"人物面部光影修饰\",{\"1\":{\"254\":1}}],[\"人物面部迎合光线\",{\"1\":{\"239\":1}}],[\"人物面部补光\",{\"1\":{\"83\":1}}],[\"人物面部立体感强\",{\"1\":{\"76\":1}}],[\"人物面部几乎占满画面\",{\"1\":{\"43\":1}}],[\"人物五官被弱化\",{\"1\":{\"69\":1}}],[\"人物情绪\",{\"1\":{\"276\":1}}],[\"人物情绪被失衡感放大\",{\"1\":{\"65\":1}}],[\"人物情绪表达是否适合俯仰镜头\",{\"1\":{\"46\":1}}],[\"人物处在整个环境和设定的情绪中\",{\"1\":{\"149\":1}}],[\"人物处在照片的三分之一或边缘处\",{\"1\":{\"65\":1}}],[\"人物处在上下或左右的三分线处\",{\"1\":{\"54\":1}}],[\"人物与环境更具有互动性\",{\"1\":{\"64\":1}}],[\"人物与环境的交流感加强\",{\"1\":{\"34\":1}}],[\"人物全景\",{\"1\":{\"37\":2,\"44\":1}}],[\"人物性格等表达使用\",{\"1\":{\"34\":1}}],[\"人物环境关系\",{\"1\":{\"19\":1}}],[\"人物关系\",{\"1\":{\"19\":1}}],[\"人物动作分镜拆解\",{\"1\":{\"191\":1}}],[\"人物动作\",{\"1\":{\"14\":1}}],[\"道具色\",{\"1\":{\"254\":1,\"259\":1,\"260\":1}}],[\"道具特写\",{\"1\":{\"191\":1}}],[\"道具互动\",{\"1\":{\"157\":1}}],[\"道具的隐喻与象征\",{\"0\":{\"201\":1}}],[\"道具的结合表达\",{\"1\":{\"189\":1}}],[\"道具的使用及画面呈现出来的整体氛围及观众心理距离\",{\"1\":{\"184\":1}}],[\"道具的交流\",{\"1\":{\"153\":1}}],[\"道具的选择\",{\"1\":{\"95\":1}}],[\"道具之间具有相关性而非堆砌\",{\"1\":{\"148\":1}}],[\"道具并非只是让模特有事可做\",{\"1\":{\"126\":1}}],[\"道具具有一定的信息指向性\",{\"1\":{\"126\":1}}],[\"道具本身具有情绪色彩\",{\"1\":{\"126\":1}}],[\"道具选用\",{\"0\":{\"126\":1},\"1\":{\"154\":1}}],[\"道具及其他费用aa\",{\"1\":{\"122\":1}}],[\"道具意向\",{\"1\":{\"93\":1}}],[\"道具遮挡\",{\"1\":{\"51\":1,\"161\":1}}],[\"道具使用1\",{\"1\":{\"148\":1}}],[\"道具使用符合行为习惯\",{\"1\":{\"126\":1}}],[\"道具使用\",{\"1\":{\"20\":1,\"120\":1}}],[\"道具\",{\"0\":{\"119\":1},\"1\":{\"14\":1,\"28\":1,\"53\":1,\"82\":1,\"87\":1,\"95\":1,\"120\":1,\"123\":1,\"127\":3,\"136\":1,\"185\":1}}],[\"情感的表达是主体\",{\"1\":{\"49\":1}}],[\"情感的相通\",{\"1\":{\"13\":1}}],[\"情感表达\",{\"1\":{\"34\":2}}],[\"情感更含蓄\",{\"1\":{\"34\":1}}],[\"情绪张力\",{\"1\":{\"162\":1,\"163\":1}}],[\"情绪的表达\",{\"0\":{\"185\":1}}],[\"情绪的塑造中\",{\"1\":{\"153\":1}}],[\"情绪的统一\",{\"1\":{\"93\":1}}],[\"情绪私房\",{\"1\":{\"114\":1}}],[\"情绪片为主基调的照片\",{\"1\":{\"92\":1}}],[\"情绪成为照片的重点\",{\"1\":{\"92\":1}}],[\"情绪等清透\",{\"1\":{\"85\":1}}],[\"情绪人像\",{\"1\":{\"49\":1}}],[\"情绪和内心状态\",{\"1\":{\"43\":1}}],[\"情绪上俯视\",{\"1\":{\"34\":1}}],[\"情绪\",{\"1\":{\"34\":1,\"49\":1,\"114\":1,\"127\":1,\"184\":1,\"188\":1,\"225\":1}}],[\"情绪传递\",{\"1\":{\"19\":1}}],[\"情绪表达式手法\",{\"1\":{\"120\":1}}],[\"情绪表达\",{\"1\":{\"18\":1,\"19\":1}}],[\"情绪内核+表现形式\",{\"1\":{\"15\":1}}],[\"情绪内核决定了画面构成元素\",{\"1\":{\"14\":1}}],[\"情绪状态\",{\"1\":{\"14\":1,\"112\":1}}],[\"慵懒的\",{\"1\":{\"143\":1}}],[\"慵懒\",{\"1\":{\"14\":1,\"125\":1,\"143\":1,\"189\":1}}],[\"积累\",{\"1\":{\"14\":2}}],[\"心跳包通常包含服务实例的基本信息和当前状态\",{\"1\":{\"970\":1}}],[\"心里对比\",{\"1\":{\"279\":1}}],[\"心里感受不同\",{\"1\":{\"92\":1}}],[\"心事\",{\"1\":{\"143\":1}}],[\"心理感受\",{\"1\":{\"191\":1}}],[\"心理活动\",{\"1\":{\"191\":1}}],[\"心理状态\",{\"1\":{\"134\":1}}],[\"心理\",{\"1\":{\"40\":1}}],[\"心态\",{\"1\":{\"14\":2}}],[\"心灵震撼一击\",{\"1\":{\"13\":1}}],[\"阅历\",{\"1\":{\"14\":2}}],[\"审美决定上限\",{\"1\":{\"264\":1}}],[\"审美提高\",{\"0\":{\"264\":1}}],[\"审美积累\",{\"1\":{\"112\":1}}],[\"审美网站推荐\",{\"1\":{\"19\":1}}],[\"审美必须要有挑剔和包容的目光\",{\"1\":{\"15\":1}}],[\"审美不是简单的固定结果\",{\"1\":{\"14\":1}}],[\"审美具有主观性\",{\"1\":{\"14\":1}}],[\"审美的重要性和特点\",{\"0\":{\"14\":1}}],[\"审美体系构建\",{\"0\":{\"11\":1}}],[\"3pc会分为3个阶段\",{\"1\":{\"942\":1}}],[\"3pc\",{\"0\":{\"942\":1},\"1\":{\"942\":1}}],[\"3大编码格式\",{\"1\":{\"852\":1}}],[\"3的锁时间检查一次\",{\"1\":{\"842\":1}}],[\"3的位置\",{\"1\":{\"234\":1}}],[\"39\",{\"1\":{\"824\":6}}],[\"3951b3\",{\"1\":{\"431\":1}}],[\"3nf要求数据中不存在非主键字段之间的依赖\",{\"1\":{\"744\":1}}],[\"31695\",{\"1\":{\"738\":3}}],[\"3秒钟后t2线程再执行wait方法\",{\"1\":{\"671\":1}}],[\"3l\",{\"1\":{\"671\":4}}],[\"362639\",{\"1\":{\"824\":2}}],[\"362498820763181265l\",{\"1\":{\"644\":1}}],[\"36px\",{\"1\":{\"431\":3}}],[\"3获取class的四种方式\",{\"0\":{\"586\":1}}],[\"331143\",{\"1\":{\"796\":2}}],[\"33\",{\"1\":{\"457\":1}}],[\"33333\",{\"1\":{\"820\":1}}],[\"333\",{\"1\":{\"431\":1,\"670\":2}}],[\"3s\",{\"1\":{\"457\":2}}],[\"37\",{\"1\":{\"472\":3}}],[\"375px\",{\"1\":{\"472\":1}}],[\"370px\",{\"1\":{\"431\":1}}],[\"37天3小时32分\",{\"1\":{\"329\":1}}],[\"32\",{\"1\":{\"632\":1}}],[\"32px\",{\"1\":{\"472\":2}}],[\"322px\",{\"1\":{\"431\":1}}],[\"320px\",{\"1\":{\"472\":1}}],[\"320\",{\"1\":{\"275\":1}}],[\"3<span>2<\",{\"1\":{\"423\":1}}],[\"3个挡位\",{\"1\":{\"274\":1}}],[\"3个选择\",{\"1\":{\"122\":1}}],[\"3选项\",{\"1\":{\"257\":1}}],[\"30s\",{\"1\":{\"842\":2}}],[\"30\",{\"1\":{\"505\":2,\"506\":1,\"644\":1,\"664\":2,\"823\":1,\"842\":1}}],[\"3000\",{\"1\":{\"960\":1}}],[\"300\",{\"1\":{\"363\":1,\"859\":1}}],[\"300px\",{\"1\":{\"358\":1,\"387\":6,\"457\":2,\"463\":1}}],[\"30px\",{\"1\":{\"348\":1,\"359\":1,\"366\":1,\"372\":1,\"385\":3,\"387\":1,\"401\":1,\"424\":2}}],[\"30度左右\",{\"1\":{\"171\":1}}],[\"30度角度拍摄\",{\"1\":{\"33\":1}}],[\"30分钟\",{\"1\":{\"81\":1}}],[\"3小时\",{\"1\":{\"76\":1,\"81\":1}}],[\"350px\",{\"1\":{\"453\":1}}],[\"35\",{\"1\":{\"48\":1,\"523\":1,\"738\":1}}],[\"3\",{\"0\":{\"14\":1,\"19\":1,\"27\":1,\"35\":1,\"41\":1,\"47\":1,\"50\":1,\"55\":1,\"66\":1,\"80\":1,\"83\":1,\"89\":1,\"92\":1,\"97\":1,\"105\":1,\"113\":1,\"116\":1,\"135\":1,\"138\":1,\"144\":1,\"149\":1,\"158\":1,\"159\":1,\"167\":1,\"170\":1,\"179\":1,\"186\":1,\"189\":1,\"195\":1,\"208\":1,\"211\":1,\"218\":1,\"225\":1,\"229\":1,\"251\":1,\"252\":1,\"253\":1,\"254\":1,\"266\":1,\"317\":1,\"324\":1,\"325\":1,\"326\":1,\"330\":1,\"337\":1,\"408\":1,\"483\":1,\"484\":1,\"485\":1,\"486\":2,\"491\":1,\"495\":1,\"496\":1,\"497\":1,\"504\":1,\"514\":1,\"528\":1,\"532\":1,\"546\":1,\"559\":1,\"563\":1,\"574\":1,\"575\":1,\"579\":1,\"596\":1,\"618\":1,\"630\":1,\"639\":1,\"651\":1,\"681\":1,\"685\":1,\"686\":1,\"687\":1,\"691\":1,\"698\":1,\"704\":1,\"714\":1,\"721\":1,\"728\":1,\"737\":1,\"745\":1,\"753\":1,\"763\":1,\"771\":1,\"774\":1,\"780\":1,\"786\":1,\"793\":1,\"806\":1,\"807\":1,\"816\":1,\"819\":1,\"828\":1,\"837\":1,\"841\":1,\"846\":1,\"849\":1,\"853\":1,\"861\":1,\"866\":1,\"879\":1,\"886\":1,\"893\":1,\"896\":1,\"906\":1,\"909\":1,\"910\":1,\"911\":1,\"912\":2,\"913\":1,\"920\":1,\"935\":1,\"948\":1,\"953\":1,\"958\":1,\"968\":1,\"972\":1,\"983\":1},\"1\":{\"48\":2,\"122\":1,\"156\":1,\"165\":1,\"373\":2,\"385\":1,\"447\":1,\"496\":4,\"506\":1,\"507\":2,\"514\":1,\"516\":1,\"517\":1,\"518\":1,\"519\":1,\"522\":4,\"523\":1,\"526\":2,\"528\":1,\"530\":1,\"551\":2,\"557\":1,\"581\":1,\"597\":1,\"599\":1,\"603\":1,\"610\":1,\"633\":1,\"652\":1,\"653\":1,\"662\":1,\"666\":2,\"667\":1,\"670\":1,\"671\":4,\"679\":1,\"682\":1,\"683\":1,\"738\":2,\"818\":1,\"819\":5,\"821\":1,\"822\":1,\"823\":2,\"842\":1,\"853\":1,\"936\":1,\"982\":1}}],[\"好友推荐\",{\"1\":{\"819\":2}}],[\"好的摄影师一定是极度敏感的人\",{\"1\":{\"17\":1}}],[\"好的作品是技术+审美的综合呈现\",{\"1\":{\"13\":1}}],[\"好的标准\",{\"1\":{\"12\":1}}],[\"好看的照片不等于好照片\",{\"1\":{\"13\":1}}],[\"粗颗粒\",{\"1\":{\"12\":1}}],[\"晃动\",{\"1\":{\"12\":1}}],[\"模式的底层原理\",{\"1\":{\"968\":1}}],[\"模式下解决分布式事务的基本原理\",{\"1\":{\"968\":1}}],[\"模板方法模式\",{\"1\":{\"900\":1}}],[\"模拟后台有用户点击首页\",{\"1\":{\"822\":1}}],[\"模拟查询接口3需要1秒钟\",{\"1\":{\"670\":1}}],[\"模拟查询接口2需要1秒钟\",{\"1\":{\"670\":1}}],[\"模拟查询接口1需要1秒钟\",{\"1\":{\"670\":1}}],[\"模拟6个车抢三个车位\",{\"1\":{\"666\":1}}],[\"模仿京东布局\",{\"1\":{\"431\":2}}],[\"模仿不是一成不变的抄袭\",{\"1\":{\"123\":1}}],[\"模特在固定范围内重复同一活动\",{\"1\":{\"149\":1}}],[\"模特并不刻意迎合摄影师\",{\"1\":{\"149\":1}}],[\"模特按照人设来\",{\"1\":{\"134\":1}}],[\"模特适合哪种风格\",{\"1\":{\"123\":1}}],[\"模特协同摄影师完成以摄影师为主导的创作\",{\"1\":{\"122\":1}}],[\"模特可对照片进行社交平台宣传\",{\"1\":{\"122\":1}}],[\"模特可以有想法沟通\",{\"1\":{\"122\":1}}],[\"模特收到返图后\",{\"1\":{\"122\":1}}],[\"模特自备妆造\",{\"1\":{\"122\":1}}],[\"模特对拍摄内容有想法可随时构图\",{\"1\":{\"122\":1}}],[\"模特选择\",{\"0\":{\"122\":1,\"123\":1}}],[\"模特\",{\"0\":{\"115\":1},\"1\":{\"120\":1,\"190\":1}}],[\"模特的位置\",{\"1\":{\"51\":1}}],[\"模特眼神不到位时视线可以看向其他方向\",{\"1\":{\"34\":1}}],[\"模特好看\",{\"1\":{\"12\":1}}],[\"模糊的半径\",{\"1\":{\"463\":1}}],[\"模糊半径\",{\"1\":{\"390\":1}}],[\"模糊\",{\"1\":{\"6\":1}}],[\"评判照片好坏的标准\",{\"0\":{\"12\":1}}],[\"一秒钟n个\",{\"1\":{\"958\":1}}],[\"一旦配置刷新\",{\"1\":{\"972\":1}}],[\"一旦找到了视图对象\",{\"1\":{\"895\":1}}],[\"一旦找到了合适的处理器\",{\"1\":{\"895\":1}}],[\"一旦新的主节点被选出\",{\"1\":{\"871\":1}}],[\"一旦发现实例出现故障\",{\"1\":{\"871\":1}}],[\"一旦某个描述符就绪\",{\"1\":{\"866\":1}}],[\"一旦定义\",{\"1\":{\"637\":1}}],[\"一次获取多个字段值\",{\"1\":{\"820\":1}}],[\"一次获取一个字段的值\",{\"1\":{\"820\":1}}],[\"一次设置多个字段值\",{\"1\":{\"820\":1}}],[\"一次设置一个字段值\",{\"1\":{\"820\":1}}],[\"一次查询就可以找到\",{\"1\":{\"796\":1}}],[\"一次gc时所需要的时间就越长\",{\"1\":{\"694\":1}}],[\"一次握手\",{\"1\":{\"552\":1}}],[\"一定要先await后signal\",{\"1\":{\"671\":1}}],[\"一池多线程\",{\"1\":{\"664\":1}}],[\"一池一线程\",{\"1\":{\"664\":1}}],[\"一把锁只能被一个线程获得\",{\"1\":{\"660\":1}}],[\"一把锁可以被多个线程同时获得\",{\"1\":{\"660\":1}}],[\"一句话\",{\"1\":{\"659\":1,\"672\":1,\"864\":1}}],[\"一套代码对各种类型的套用\",{\"1\":{\"578\":1}}],[\"一致性保障\",{\"1\":{\"968\":1}}],[\"一致性保证\",{\"1\":{\"561\":1}}],[\"一致性非锁定读\",{\"1\":{\"788\":1}}],[\"一致性指整个分析期间整个执行系统看起来像被冻结在某个时间点上\",{\"1\":{\"710\":1}}],[\"一致性\",{\"1\":{\"565\":1,\"767\":1,\"802\":1,\"933\":1}}],[\"一致的\",{\"1\":{\"521\":1}}],[\"一对多\",{\"1\":{\"550\":1}}],[\"一遍扫描\",{\"0\":{\"497\":1}}],[\"一幅图片\",{\"1\":{\"468\":1}}],[\"一海报帧的url\",{\"1\":{\"460\":1}}],[\"一条数据直接存储一个月的签到记录\",{\"1\":{\"823\":1}}],[\"一条sql的执行过程\",{\"0\":{\"803\":1}}],[\"一条竖线\",{\"1\":{\"420\":1}}],[\"一条腿压在另外一条腿上\",{\"1\":{\"159\":1}}],[\"一只小手\",{\"1\":{\"420\":1}}],[\"一大部门的工作是写html\",{\"1\":{\"413\":1}}],[\"一系列背景相关属性的缩写属性\",{\"1\":{\"403\":1}}],[\"一看行业趋势\",{\"1\":{\"299\":1}}],[\"一株小杏花\",{\"0\":{\"234\":1}}],[\"一张表可以创建多个\",{\"1\":{\"793\":1}}],[\"一张表只能有一个\",{\"1\":{\"793\":1}}],[\"一张好照片应该具有的元素\",{\"1\":{\"225\":1}}],[\"一张照片最直接的感受\",{\"1\":{\"19\":1}}],[\"一个完整的调用链路称为一个trace\",{\"1\":{\"977\":1}}],[\"一个完整的故事\",{\"1\":{\"188\":1}}],[\"一个请求方法只可以有一个\",{\"1\":{\"916\":1}}],[\"一个服务端进程可以同时处理多个套接字描述符\",{\"1\":{\"864\":1}}],[\"一个英文字母一个字节\",{\"1\":{\"853\":1}}],[\"一个靠谱的分布锁锁需要具备的条件和刚需\",{\"0\":{\"839\":1}}],[\"一个元素如果判断结果为存在的时候元素不一定存在\",{\"1\":{\"833\":1}}],[\"一个月最多31天\",{\"1\":{\"823\":1}}],[\"一个双端链表的结构\",{\"1\":{\"818\":1}}],[\"一个事务只能读取另一个事务已经提交的数据\",{\"1\":{\"899\":1}}],[\"一个事务读取了几行数据\",{\"1\":{\"772\":1}}],[\"一个事务读取到了另外一个数据修改还未提交的数据\",{\"1\":{\"769\":1}}],[\"一个事务内多次读取同一数据\",{\"1\":{\"771\":1}}],[\"一个事物被提交之后\",{\"1\":{\"767\":1}}],[\"一个用户的事物不被其他事物所干扰\",{\"1\":{\"767\":1}}],[\"一个web容器可能要部署两个或者多个应用程序\",{\"1\":{\"716\":1}}],[\"一个jvm实例只存在一个堆内存\",{\"1\":{\"683\":1}}],[\"一个阶段的执行可能是被单个阶段的完成触发\",{\"1\":{\"670\":1}}],[\"一个阶段完成后可能会触发另外一个阶段\",{\"1\":{\"670\":1}}],[\"一个是用于多个共享资源的互斥使用\",{\"1\":{\"666\":1}}],[\"一个node节点来实现锁的分配\",{\"1\":{\"665\":1}}],[\"一个monitorenter指令包含两个monitorexit指令\",{\"1\":{\"661\":1}}],[\"一个线程因请求资源而阻塞时\",{\"1\":{\"652\":1}}],[\"一个进程包含多个线程\",{\"1\":{\"649\":1}}],[\"一个类只能继承一个类\",{\"1\":{\"605\":1}}],[\"一个类是可以有多个构造函数的\",{\"1\":{\"603\":1}}],[\"一个更加完整\",{\"1\":{\"521\":1}}],[\"一个指针从当前元素的下一个开始\",{\"1\":{\"494\":1}}],[\"一个指针从第一个数的右边开始移动\",{\"1\":{\"494\":1}}],[\"一个算法有一个或多个输出\",{\"1\":{\"482\":1}}],[\"一个算法有0个或者多个输入\",{\"1\":{\"482\":1}}],[\"一个0\",{\"1\":{\"470\":3}}],[\"一个正整数\",{\"1\":{\"470\":2}}],[\"一个在pc端的网页在移动端会如何显示呢\",{\"1\":{\"470\":1}}],[\"一个逻辑像素长度对应两个物理像素\",{\"1\":{\"468\":1}}],[\"一个div没有设置高度的时候\",{\"1\":{\"458\":1}}],[\"一个dt后面一般紧跟1个或者多个dd\",{\"1\":{\"406\":1}}],[\"一个值\",{\"1\":{\"454\":2}}],[\"一个值时\",{\"1\":{\"454\":2}}],[\"一个有效的宽度值\",{\"1\":{\"452\":1}}],[\"一个有效的宽度\",{\"1\":{\"452\":1}}],[\"一个无单位数\",{\"1\":{\"452\":2}}],[\"一个减淡图层\",{\"1\":{\"257\":1}}],[\"一个加深\",{\"1\":{\"257\":1}}],[\"一个黑白观察层\",{\"1\":{\"257\":1}}],[\"一个小故事\",{\"1\":{\"188\":1}}],[\"一个人\",{\"1\":{\"127\":1}}],[\"一个人的审美是会随着时间\",{\"1\":{\"14\":1}}],[\"一部电影的记忆点\",{\"0\":{\"188\":1}}],[\"一前一后\",{\"1\":{\"158\":1}}],[\"一高一低\",{\"1\":{\"158\":1,\"159\":1}}],[\"一般会采用这种方式\",{\"1\":{\"984\":1}}],[\"一般会选择集群状态最新的节点\",{\"1\":{\"564\":1}}],[\"一般用来声明配置类\",{\"1\":{\"908\":1}}],[\"一般用在栈\",{\"1\":{\"818\":1}}],[\"一般推荐redis设置内存为最大物理内存的四分之三\",{\"1\":{\"831\":1}}],[\"一般是3\",{\"1\":{\"982\":1}}],[\"一般是读就绪或写就绪\",{\"1\":{\"866\":1}}],[\"一般是在对象的header中记录为可达对象\",{\"1\":{\"689\":1}}],[\"一般是父元素\",{\"1\":{\"430\":1}}],[\"一般默认即可\",{\"1\":{\"664\":1}}],[\"一般开发中不用调用这个方法\",{\"1\":{\"663\":1}}],[\"一般开发中用两个冒号\",{\"1\":{\"374\":1}}],[\"一般都是和group\",{\"1\":{\"746\":1}}],[\"一般都是3的倍数\",{\"1\":{\"256\":1}}],[\"一般都用复杂度的渐近性来表示\",{\"1\":{\"485\":1}}],[\"一般来说\",{\"1\":{\"484\":1,\"694\":1,\"708\":1}}],[\"一般叫做清除浮动\",{\"1\":{\"432\":1}}],[\"一般只能包含行内级元素\",{\"1\":{\"379\":1}}],[\"一般\",{\"0\":{\"364\":1},\"1\":{\"606\":1}}],[\"一般在没有使用到索引的时候会出现\",{\"1\":{\"796\":1}}],[\"一般在最大光圈缩小2\",{\"1\":{\"274\":1}}],[\"一般在正午时分\",{\"1\":{\"78\":1}}],[\"一般使用短焦段镜头或中焦镜头\",{\"1\":{\"207\":1}}],[\"一般为平躺\",{\"1\":{\"159\":1}}],[\"一般表现为背景色\",{\"1\":{\"95\":1}}],[\"一种宏观意向的简化和省略\",{\"1\":{\"61\":1}}],[\"一副作品中\",{\"1\":{\"50\":1}}],[\"一组不同景别镜头的组合相当于对这个人物或场景仔细\",{\"1\":{\"45\":1}}],[\"一组作品中\",{\"1\":{\"35\":1}}],[\"一组好照片的配方\",{\"1\":{\"19\":1}}],[\"一切可以靠的地方\",{\"1\":{\"160\":1}}],[\"一切可以躺的地方\",{\"1\":{\"159\":1}}],[\"一切可以坐的地方\",{\"1\":{\"158\":1}}],[\"一切艺术和生活都可以是灵感来源\",{\"0\":{\"23\":1}}],[\"一切表现手法都是服务于想传递的情绪及状态\",{\"1\":{\"14\":1}}],[\"一\",{\"0\":{\"11\":1,\"543\":1,\"556\":1,\"742\":1},\"1\":{\"454\":1,\"455\":1,\"456\":1}}],[\"涂抹皮肤有雀斑的地方\",{\"1\":{\"6\":1}}],[\"高性能\",{\"1\":{\"938\":1}}],[\"高可用性和强大的容错机制\",{\"1\":{\"974\":1}}],[\"高可用\",{\"1\":{\"839\":1}}],[\"高效且易于维护\",{\"1\":{\"953\":1}}],[\"高效地插入和查询\",{\"1\":{\"833\":2}}],[\"高效运行\",{\"1\":{\"566\":1}}],[\"高并发场景下\",{\"1\":{\"669\":1}}],[\"高\",{\"1\":{\"276\":1,\"278\":1}}],[\"高15度\",{\"1\":{\"276\":1}}],[\"高度可用\",{\"1\":{\"435\":1}}],[\"高度塌陷\",{\"1\":{\"432\":1}}],[\"高度设置\",{\"1\":{\"384\":1}}],[\"高度\",{\"1\":{\"276\":1,\"349\":1,\"435\":1}}],[\"高度越高\",{\"1\":{\"34\":1}}],[\"高频\",{\"1\":{\"256\":1}}],[\"高低频修图\",{\"0\":{\"256\":1}}],[\"高低频\",{\"1\":{\"254\":2}}],[\"高低越高或越低\",{\"1\":{\"205\":1}}],[\"高光比白色色阶范围更大\",{\"1\":{\"288\":1}}],[\"高光\",{\"1\":{\"254\":1,\"288\":1}}],[\"高光提亮下庭\",{\"1\":{\"168\":1}}],[\"高机位拍摄\",{\"1\":{\"234\":1}}],[\"高机位\",{\"1\":{\"224\":1,\"276\":1,\"279\":1}}],[\"高机位俯拍人物时\",{\"1\":{\"207\":1}}],[\"高机位俯拍\",{\"1\":{\"159\":1}}],[\"高冷\",{\"1\":{\"123\":1}}],[\"高饱和度\",{\"1\":{\"92\":1}}],[\"高反差\",{\"1\":{\"84\":2}}],[\"高反差保留\",{\"1\":{\"6\":1}}],[\"高调\",{\"1\":{\"84\":2,\"278\":1}}],[\"高级功能利用\",{\"1\":{\"566\":1}}],[\"高级元素的使用\",{\"0\":{\"405\":1}}],[\"高级技法\",{\"1\":{\"278\":1}}],[\"高级\",{\"1\":{\"125\":1}}],[\"高级构图法\",{\"0\":{\"63\":1},\"1\":{\"120\":1}}],[\"高级感建立的第一步不是模仿风格\",{\"1\":{\"30\":1}}],[\"高颧骨模特尽量少拍正侧脸\",{\"1\":{\"34\":1}}],[\"高斯模糊\",{\"1\":{\"6\":1,\"463\":1}}],[\"将enable\",{\"1\":{\"984\":1}}],[\"将它们存储在一个集中的存储系统中\",{\"1\":{\"977\":1}}],[\"将本地事务与全局事务关联\",{\"1\":{\"968\":1}}],[\"将其对接到数据库\",{\"1\":{\"968\":1}}],[\"将其扩容到与\",{\"1\":{\"645\":1}}],[\"将事务的提交过程分为资源准备和资源提交提交两个阶段\",{\"1\":{\"942\":1}}],[\"将自己放到一级缓存里面\",{\"1\":{\"925\":1}}],[\"将自动装配的类放在spring\",{\"1\":{\"923\":1}}],[\"将函数的返回值直接填入http响应体中\",{\"1\":{\"906\":1}}],[\"将一个类声明bean的注解有哪些\",{\"0\":{\"886\":1}}],[\"将一块大的内存区域分割成多个小块\",{\"1\":{\"694\":1}}],[\"将对象之间的相互依赖关系交给ioc容器来管理\",{\"1\":{\"884\":1}}],[\"将大key拆分为多个小key\",{\"1\":{\"875\":1}}],[\"将大任务拆分为多个小任务\",{\"1\":{\"567\":1}}],[\"将流量引导到新的主节点\",{\"1\":{\"871\":1}}],[\"将客户端流量引导到备用实例上\",{\"1\":{\"871\":1}}],[\"将连接信息和事件放在队列中\",{\"1\":{\"866\":1}}],[\"将旧值写入了缓存\",{\"1\":{\"848\":1}}],[\"将元素转化为一个长二进制串\",{\"1\":{\"822\":1}}],[\"将所有元素添加到key中\",{\"1\":{\"822\":1}}],[\"将类\",{\"1\":{\"712\":1}}],[\"将堆空间分为若干个区域\",{\"1\":{\"708\":1}}],[\"将堆内存分为两个区域\",{\"1\":{\"690\":1}}],[\"将存活的对象复制到另一个区域\",{\"1\":{\"690\":1}}],[\"将class文件\",{\"1\":{\"679\":1}}],[\"将count值减1\",{\"1\":{\"667\":1}}],[\"将notify放在wait方法前面\",{\"1\":{\"671\":1}}],[\"将中断标志置为false了\",{\"1\":{\"671\":1}}],[\"将当前线程的中断状态设为false\",{\"1\":{\"671\":1}}],[\"将当前元素的值赋值给后一个元素\",{\"1\":{\"513\":1,\"516\":1,\"539\":1}}],[\"将当前元素和索引存入hashmap中\",{\"1\":{\"491\":1}}],[\"将指定的字符串对象的引用保存在字符串常量池中\",{\"1\":{\"611\":1}}],[\"将字符串对象\",{\"1\":{\"609\":1}}],[\"将包装类型转换为基本数据类型\",{\"1\":{\"599\":1}}],[\"将在序列化过程中所生成的二进制字节流转换成数据结构或者对象的过程\",{\"1\":{\"584\":1}}],[\"将数据结构或对象转换成二进制字节流的过程\",{\"1\":{\"584\":1}}],[\"将数据在物理机层面做更好的分布\",{\"1\":{\"566\":1}}],[\"将数组排序\",{\"1\":{\"494\":1}}],[\"将冷数据归档或压缩存储\",{\"1\":{\"566\":1}}],[\"将近期访问频繁的热数据和访问较少的冷数据分开存放\",{\"1\":{\"566\":1}}],[\"将多个较小的段合并成一个更大的段\",{\"1\":{\"561\":1}}],[\"将多个行内级元素中间的空格\",{\"1\":{\"430\":1}}],[\"将弃用\",{\"1\":{\"551\":1}}],[\"将i和最小的值交换位置\",{\"1\":{\"527\":1}}],[\"将\",{\"1\":{\"522\":1,\"523\":1}}],[\"将q中的所有元素放入q2\",{\"1\":{\"522\":1}}],[\"将这个元素删除后\",{\"1\":{\"522\":1}}],[\"将这三个数添加到结果集中\",{\"1\":{\"494\":1}}],[\"将使用\",{\"1\":{\"520\":1}}],[\"将右指针向左移动一位\",{\"1\":{\"494\":1}}],[\"将右侧参数\",{\"1\":{\"256\":1}}],[\"将左指针向右移动一位\",{\"1\":{\"494\":1}}],[\"将原来要设置的尺寸\",{\"1\":{\"472\":1}}],[\"将无法缩放当前页面\",{\"1\":{\"470\":1}}],[\"将less的js代码下载到本地引入\",{\"1\":{\"469\":1}}],[\"将被标记为primary\",{\"1\":{\"796\":1}}],[\"将被忽略\",{\"1\":{\"465\":1}}],[\"将被摄人物放在三分线四个交汇点中的任意一个\",{\"1\":{\"219\":1}}],[\"将模糊或颜色偏移等图形效果应用于元素\",{\"1\":{\"463\":1}}],[\"将父级元素的font\",{\"1\":{\"430\":1}}],[\"将各种小图片合并放在一张图片上\",{\"1\":{\"419\":1}}],[\"将重复的逻辑放到一个单独的class中\",{\"1\":{\"404\":1}}],[\"将a的值设置为0\",{\"1\":{\"380\":1}}],[\"将段落的第一行缩进2em\",{\"1\":{\"357\":1}}],[\"将肩膀暗部提亮\",{\"1\":{\"262\":1}}],[\"将高频和低频加入一个分组\",{\"1\":{\"256\":1}}],[\"将前景色改为白色\",{\"1\":{\"255\":1}}],[\"将新建的创建新组\",{\"1\":{\"255\":1}}],[\"将任务放在高亮区域挡住太阳\",{\"1\":{\"237\":1}}],[\"将画面重点利用框架\",{\"1\":{\"223\":1}}],[\"将头部上下分为三等分\",{\"1\":{\"165\":1}}],[\"将花放在衣服里\",{\"1\":{\"127\":1}}],[\"将半径数值改为9左右\",{\"1\":{\"6\":1}}],[\"将图层模式改为亮光\",{\"1\":{\"6\":1}}],[\"滤镜\",{\"1\":{\"6\":1}}],[\"+|\",{\"1\":{\"728\":1}}],[\"+xss128k\",{\"1\":{\"720\":1}}],[\"+printgcdetails\",{\"1\":{\"724\":2}}],[\"+printvmoptions\",{\"1\":{\"719\":2}}],[\"+printflagsfinal\",{\"1\":{\"719\":2}}],[\"+printflagsinitial\",{\"1\":{\"719\":2}}],[\"+printcommandlineflags\",{\"1\":{\"700\":1,\"719\":2}}],[\"+useg1gc\",{\"1\":{\"708\":1,\"723\":1,\"738\":2}}],[\"+useparallelgc\",{\"1\":{\"704\":1}}],[\"+useparnewgc\",{\"1\":{\"703\":1}}],[\"+useserialgc\",{\"1\":{\"702\":1,\"723\":2}}],[\"+v\",{\"1\":{\"670\":2}}],[\"+weakreference\",{\"1\":{\"663\":2}}],[\"+softreference\",{\"1\":{\"663\":4}}],[\"+自旋锁保证\",{\"1\":{\"658\":1}}],[\"+链表+红黑树的数据结构来实现\",{\"1\":{\"634\":1}}],[\"+myobject\",{\"1\":{\"663\":4}}],[\"+message\",{\"1\":{\"588\":1}}],[\"+margin\",{\"1\":{\"425\":1}}],[\"+1\",{\"1\":{\"513\":1,\"516\":1,\"517\":6,\"539\":1,\"664\":1,\"668\":1}}],[\"++a\",{\"1\":{\"595\":1}}],[\"++i\",{\"0\":{\"595\":1}}],[\"++\",{\"1\":{\"504\":1,\"506\":1,\"513\":2,\"516\":2,\"517\":1,\"518\":4,\"519\":2,\"520\":6,\"522\":2,\"539\":2}}],[\"+arr\",{\"1\":{\"490\":1}}],[\"+动态html的font\",{\"0\":{\"472\":1}}],[\"+time2\",{\"1\":{\"505\":1}}],[\"+t\",{\"1\":{\"278\":1}}],[\"+鼠标右键+鼠标左右滑动\",{\"1\":{\"251\":1}}],[\"+g\",{\"1\":{\"249\":1}}],[\"+白色\",{\"0\":{\"103\":1}}],[\"+\",{\"0\":{\"98\":1,\"104\":1,\"106\":1},\"1\":{\"88\":2,\"97\":2,\"127\":2,\"262\":1,\"371\":2,\"373\":2,\"393\":2,\"414\":1,\"423\":1,\"425\":5,\"489\":2,\"493\":2,\"494\":4,\"497\":2,\"504\":1,\"505\":1,\"506\":1,\"507\":1,\"513\":1,\"516\":1,\"517\":2,\"518\":7,\"519\":11,\"520\":4,\"539\":1,\"558\":4,\"562\":1,\"564\":1,\"579\":1,\"587\":4,\"588\":2,\"610\":3,\"611\":3,\"623\":1,\"645\":2,\"663\":2,\"666\":2,\"667\":4,\"668\":2,\"670\":18,\"671\":32,\"728\":1,\"785\":1,\"796\":40,\"801\":1,\"815\":1,\"822\":6,\"867\":1,\"896\":1,\"902\":1,\"906\":1,\"931\":1}}],[\"+f970\",{\"1\":{\"85\":1}}],[\"+i\",{\"1\":{\"6\":1}}],[\"+j\",{\"1\":{\"6\":1}}],[\"2pc\",{\"0\":{\"942\":1},\"1\":{\"942\":1,\"968\":1}}],[\"2px\",{\"1\":{\"374\":1}}],[\"2k\",{\"1\":{\"872\":1}}],[\"2的14次方\",{\"1\":{\"872\":1}}],[\"2是redis给出的默认值\",{\"1\":{\"854\":1}}],[\"23\",{\"0\":{\"672\":1},\"1\":{\"558\":1}}],[\"230px\",{\"1\":{\"431\":1}}],[\"24100\",{\"1\":{\"557\":1}}],[\"2436\",{\"1\":{\"468\":1}}],[\"2msl\",{\"1\":{\"552\":1}}],[\"28\",{\"1\":{\"522\":1}}],[\"2元素中间插入666\",{\"1\":{\"521\":1}}],[\"2>\",{\"1\":{\"507\":1}}],[\"21\",{\"0\":{\"670\":1},\"1\":{\"504\":1}}],[\"27\",{\"1\":{\"504\":1,\"523\":2}}],[\"2s\",{\"1\":{\"456\":1,\"457\":1}}],[\"2=2\",{\"1\":{\"453\":1}}],[\"2个维度\",{\"1\":{\"832\":1}}],[\"2个或者3个值\",{\"1\":{\"452\":1}}],[\"2个即可\",{\"1\":{\"148\":1}}],[\"222\",{\"1\":{\"596\":2,\"670\":2}}],[\"2222222222222\",{\"1\":{\"671\":1}}],[\"2222\",{\"1\":{\"436\":1}}],[\"22\",{\"0\":{\"671\":1},\"1\":{\"517\":1,\"522\":4,\"670\":1,\"818\":2}}],[\"22左右\",{\"1\":{\"273\":1}}],[\"290px\",{\"1\":{\"431\":1}}],[\"26px\",{\"1\":{\"419\":1}}],[\"256\",{\"1\":{\"822\":4}}],[\"255\",{\"1\":{\"751\":1,\"753\":1,\"807\":2,\"808\":1}}],[\"25\",{\"1\":{\"416\":1,\"523\":1}}],[\"250\",{\"1\":{\"275\":1}}],[\"2<<3\",{\"1\":{\"596\":1}}],[\"2<span>3<\",{\"1\":{\"423\":1}}],[\"2<\",{\"1\":{\"409\":1}}],[\"2nf要求表必须有主键\",{\"1\":{\"744\":1}}],[\"2n+1\",{\"1\":{\"373\":2}}],[\"2n\",{\"1\":{\"373\":2,\"664\":2}}],[\"2em代表200\",{\"1\":{\"361\":1}}],[\"2em\",{\"1\":{\"357\":1}}],[\"203\",{\"1\":{\"557\":1}}],[\"2020年初武汉爆发了新型冠状病毒\",{\"1\":{\"919\":1}}],[\"2024\",{\"1\":{\"558\":1}}],[\"20240414164202806\",{\"1\":{\"964\":1}}],[\"20240414164111402\",{\"1\":{\"964\":1}}],[\"20240421141844033\",{\"1\":{\"803\":1}}],[\"20240318160307799\",{\"1\":{\"925\":1}}],[\"20240306215048127\",{\"1\":{\"639\":1}}],[\"20240306213702402\",{\"1\":{\"638\":1}}],[\"20240118203345937\",{\"1\":{\"728\":1}}],[\"20240118202937978\",{\"1\":{\"728\":1}}],[\"20240118171400373\",{\"1\":{\"727\":1}}],[\"20240115204007004\",{\"1\":{\"712\":1}}],[\"20240112164121973\",{\"1\":{\"707\":1}}],[\"20240112144506125\",{\"1\":{\"694\":1}}],[\"20240112143335429\",{\"1\":{\"691\":1}}],[\"20240112142621269\",{\"1\":{\"690\":1}}],[\"20240112141723002\",{\"1\":{\"689\":1}}],[\"20240110211339202\",{\"1\":{\"701\":1}}],[\"20240110204942188\",{\"1\":{\"683\":1}}],[\"20240110203713386\",{\"1\":{\"677\":1}}],[\"20240108103957084\",{\"1\":{\"672\":1}}],[\"20240108103708262\",{\"1\":{\"672\":1}}],[\"20240103201122547\",{\"1\":{\"670\":1}}],[\"20240103200926330\",{\"1\":{\"670\":1}}],[\"20240103094946571\",{\"1\":{\"670\":1}}],[\"20240129101219200\",{\"1\":{\"743\":1}}],[\"20240120100855312\",{\"1\":{\"728\":1}}],[\"20240120162145438\",{\"1\":{\"723\":1}}],[\"20240120154037590\",{\"1\":{\"719\":1}}],[\"20240120153435513\",{\"1\":{\"719\":1}}],[\"20240120153240638\",{\"1\":{\"719\":1}}],[\"20240123142630027\",{\"1\":{\"552\":1}}],[\"20240123141214004\",{\"1\":{\"552\":1}}],[\"20240123222312676\",{\"1\":{\"244\":1}}],[\"20240124114431504\",{\"1\":{\"329\":1}}],[\"20240127002555633\",{\"1\":{\"257\":1}}],[\"20240127002330637\",{\"1\":{\"257\":1}}],[\"20240127002202316\",{\"1\":{\"257\":1}}],[\"20240127000907200\",{\"1\":{\"256\":1}}],[\"20240127000736954\",{\"1\":{\"256\":1}}],[\"20240126235805808\",{\"1\":{\"256\":1}}],[\"20240126235633614\",{\"1\":{\"256\":1}}],[\"20240126232308921\",{\"1\":{\"255\":1}}],[\"20240126231538052\",{\"1\":{\"255\":1}}],[\"20240122223725529\",{\"1\":{\"243\":1}}],[\"20240122223304435\",{\"1\":{\"243\":1}}],[\"20240122223217022\",{\"1\":{\"243\":1}}],[\"20240122222550086\",{\"1\":{\"242\":1}}],[\"20240122222340253\",{\"1\":{\"242\":1}}],[\"20240122220113810\",{\"1\":{\"240\":1}}],[\"20240122212239608\",{\"1\":{\"239\":1}}],[\"20240122211448873\",{\"1\":{\"238\":1}}],[\"20240122231000521\",{\"1\":{\"224\":1}}],[\"20240121221317502\",{\"1\":{\"237\":1}}],[\"20240121220111819\",{\"1\":{\"236\":1}}],[\"20240121213951581\",{\"1\":{\"235\":1}}],[\"20240121184038932\",{\"1\":{\"234\":1}}],[\"20240121183823672\",{\"1\":{\"234\":1}}],[\"20240121183624479\",{\"1\":{\"234\":1}}],[\"20240121183207875\",{\"1\":{\"233\":1}}],[\"20240121183138589\",{\"1\":{\"233\":1}}],[\"20240121182939176\",{\"1\":{\"233\":1}}],[\"20240121182806965\",{\"1\":{\"233\":1}}],[\"20240121182704109\",{\"1\":{\"233\":1}}],[\"20240121182454991\",{\"1\":{\"233\":1}}],[\"20240121182411838\",{\"1\":{\"233\":1}}],[\"20240121182152017\",{\"1\":{\"233\":1}}],[\"20240121181343510\",{\"1\":{\"231\":1}}],[\"20240121180940274\",{\"1\":{\"231\":1}}],[\"20240121175801385\",{\"1\":{\"232\":1}}],[\"20240121175546578\",{\"1\":{\"232\":1}}],[\"20240121174544118\",{\"1\":{\"231\":1}}],[\"20240121174120928\",{\"1\":{\"230\":1}}],[\"20240121173408511\",{\"1\":{\"229\":1}}],[\"20240121172219306\",{\"1\":{\"227\":1}}],[\"20240121172121362\",{\"1\":{\"227\":1}}],[\"20240121122139772\",{\"1\":{\"222\":1}}],[\"20240121121917289\",{\"1\":{\"221\":1}}],[\"20240121121444850\",{\"1\":{\"220\":1}}],[\"20240121121230950\",{\"1\":{\"219\":1}}],[\"20240121121338246\",{\"1\":{\"219\":1}}],[\"20240121120952622\",{\"1\":{\"218\":1}}],[\"20240121120901733\",{\"1\":{\"217\":1}}],[\"20240121120507375\",{\"1\":{\"216\":1}}],[\"202402\",{\"1\":{\"823\":8}}],[\"20240211155213874\",{\"1\":{\"837\":1}}],[\"20240211155417244\",{\"1\":{\"837\":1}}],[\"20240211153048779\",{\"1\":{\"833\":1}}],[\"20240211152637599\",{\"1\":{\"833\":1}}],[\"20240211111205798\",{\"1\":{\"823\":1}}],[\"20240211110630802\",{\"1\":{\"823\":1}}],[\"20240211\",{\"1\":{\"821\":3}}],[\"20240217101135969\",{\"1\":{\"211\":1}}],[\"20240217100839775\",{\"1\":{\"210\":1}}],[\"20240217100310032\",{\"1\":{\"208\":1}}],[\"20240217095849891\",{\"1\":{\"207\":1}}],[\"20240217095627321\",{\"1\":{\"206\":1}}],[\"20240217095117796\",{\"1\":{\"202\":1}}],[\"20240217094845167\",{\"1\":{\"201\":1}}],[\"20240217094540046\",{\"1\":{\"201\":1}}],[\"20240217094219030\",{\"1\":{\"200\":1}}],[\"20240217094024669\",{\"1\":{\"199\":1}}],[\"20240217093659902\",{\"1\":{\"198\":1}}],[\"20240217092833658\",{\"1\":{\"197\":1}}],[\"20240217092712812\",{\"1\":{\"196\":1}}],[\"20240217092545771\",{\"1\":{\"195\":1}}],[\"20240217092246444\",{\"1\":{\"194\":1}}],[\"20240217092130591\",{\"1\":{\"193\":1}}],[\"20240217082256628\",{\"1\":{\"191\":1}}],[\"20240217082101191\",{\"1\":{\"191\":1}}],[\"20240217081801737\",{\"1\":{\"191\":1}}],[\"20240217081655295\",{\"1\":{\"191\":1}}],[\"20240217081440052\",{\"1\":{\"191\":1}}],[\"20240217081143880\",{\"1\":{\"191\":1}}],[\"20240217075220642\",{\"1\":{\"187\":1}}],[\"20240217075150065\",{\"1\":{\"187\":1}}],[\"20240217075114574\",{\"1\":{\"187\":1}}],[\"20240214185601016\",{\"1\":{\"172\":1}}],[\"20240214180417790\",{\"1\":{\"170\":1}}],[\"20240214175644048\",{\"1\":{\"170\":1}}],[\"20240214170801672\",{\"1\":{\"166\":1}}],[\"20240214165907526\",{\"1\":{\"165\":1}}],[\"20240214163555229\",{\"1\":{\"163\":1}}],[\"20240214163046176\",{\"1\":{\"162\":1}}],[\"20240214162526807\",{\"1\":{\"161\":1}}],[\"20240214161903894\",{\"1\":{\"160\":1}}],[\"20240214160923783\",{\"1\":{\"159\":1}}],[\"20240214160533381\",{\"1\":{\"159\":1}}],[\"20240214164711162\",{\"1\":{\"153\":1}}],[\"20240214155538678\",{\"1\":{\"158\":1}}],[\"20240214155231445\",{\"1\":{\"158\":1}}],[\"20240214154342651\",{\"1\":{\"157\":1}}],[\"20240214154315309\",{\"1\":{\"157\":1}}],[\"20240214153846189\",{\"1\":{\"156\":1}}],[\"20240214153702708\",{\"1\":{\"156\":1}}],[\"20240213102806318\",{\"1\":{\"869\":1}}],[\"20240213172852972\",{\"1\":{\"149\":1}}],[\"20240213165759203\",{\"1\":{\"149\":1}}],[\"20240213164414467\",{\"1\":{\"147\":1}}],[\"20240213163536169\",{\"1\":{\"146\":1}}],[\"20240213162806756\",{\"1\":{\"145\":1}}],[\"20240213162208101\",{\"1\":{\"144\":1}}],[\"20240213161911412\",{\"1\":{\"143\":1}}],[\"20240213161530453\",{\"1\":{\"142\":1}}],[\"20240212155644485\",{\"1\":{\"854\":1}}],[\"20240212153920900\",{\"1\":{\"853\":1}}],[\"20240212150342380\",{\"1\":{\"852\":1}}],[\"20240212150230483\",{\"1\":{\"852\":1}}],[\"20240212145935967\",{\"1\":{\"852\":1}}],[\"20240212182702915\",{\"1\":{\"127\":1}}],[\"20240212181532114\",{\"1\":{\"127\":1}}],[\"20240212175246128\",{\"1\":{\"126\":1}}],[\"20240210093614864\",{\"1\":{\"109\":1}}],[\"20240210092459958\",{\"1\":{\"108\":1}}],[\"20240210092402708\",{\"1\":{\"107\":1}}],[\"20240210092332268\",{\"1\":{\"106\":1}}],[\"20240210092255370\",{\"1\":{\"105\":1}}],[\"20240210092229900\",{\"1\":{\"104\":1}}],[\"20240210092146415\",{\"1\":{\"103\":1}}],[\"20240210091115372\",{\"1\":{\"98\":1}}],[\"20240210090602996\",{\"1\":{\"97\":1}}],[\"20240210090426213\",{\"1\":{\"97\":1}}],[\"20240210090404696\",{\"1\":{\"97\":1}}],[\"20240210090035931\",{\"1\":{\"97\":1}}],[\"20240210085656036\",{\"1\":{\"96\":1}}],[\"20240210085425013\",{\"1\":{\"96\":1}}],[\"20240210085322409\",{\"1\":{\"96\":1}}],[\"20240210085123486\",{\"1\":{\"96\":1}}],[\"20240210084856221\",{\"1\":{\"95\":1}}],[\"20240216152544297\",{\"1\":{\"6\":1}}],[\"20240209175645434\",{\"1\":{\"92\":1}}],[\"20240209175601688\",{\"1\":{\"92\":1}}],[\"20240209172205760\",{\"1\":{\"92\":1}}],[\"20240209171308502\",{\"1\":{\"90\":1}}],[\"20240207220433925\",{\"1\":{\"84\":1}}],[\"20240207215826374\",{\"1\":{\"84\":1}}],[\"20240207215315452\",{\"1\":{\"84\":1}}],[\"20240207214150713\",{\"1\":{\"83\":1}}],[\"20240207213523094\",{\"1\":{\"82\":1}}],[\"20240207213046495\",{\"1\":{\"81\":1}}],[\"20240207212752981\",{\"1\":{\"81\":1}}],[\"20240207212352826\",{\"1\":{\"81\":1}}],[\"20240207211957356\",{\"1\":{\"81\":1}}],[\"20240207211513449\",{\"1\":{\"81\":1}}],[\"20240207202640451\",{\"1\":{\"81\":1}}],[\"20240207202416363\",{\"1\":{\"81\":1}}],[\"20240207202241012\",{\"1\":{\"81\":1}}],[\"20240207000032557\",{\"1\":{\"79\":1}}],[\"20240206231757506\",{\"1\":{\"76\":1}}],[\"20240206233317901\",{\"1\":{\"76\":1}}],[\"20240206232521857\",{\"1\":{\"76\":1}}],[\"20240206232244109\",{\"1\":{\"76\":1}}],[\"20240206230228677\",{\"1\":{\"76\":1}}],[\"20240206225536129\",{\"1\":{\"76\":1}}],[\"20240205003244703\",{\"1\":{\"73\":1}}],[\"20240205003158170\",{\"1\":{\"72\":1}}],[\"20240205003132235\",{\"1\":{\"71\":1}}],[\"20240205002950869\",{\"1\":{\"70\":1}}],[\"20240205002838636\",{\"1\":{\"70\":1}}],[\"20240205002519807\",{\"1\":{\"69\":1}}],[\"20240205002031243\",{\"1\":{\"68\":1}}],[\"20240205001754356\",{\"1\":{\"67\":1}}],[\"20240205001658495\",{\"1\":{\"67\":1}}],[\"20240205001618707\",{\"1\":{\"66\":1}}],[\"20240205001259131\",{\"1\":{\"65\":1}}],[\"20240205001001228\",{\"1\":{\"64\":1}}],[\"20240205000903074\",{\"1\":{\"62\":1}}],[\"20240205000750201\",{\"1\":{\"61\":1}}],[\"20240205000601447\",{\"1\":{\"60\":1}}],[\"20240205000035410\",{\"1\":{\"59\":1}}],[\"20240204235947813\",{\"1\":{\"58\":1}}],[\"20240204235844410\",{\"1\":{\"57\":1}}],[\"20240204235751265\",{\"1\":{\"56\":1}}],[\"20240204235337999\",{\"1\":{\"55\":1}}],[\"20240204235223283\",{\"1\":{\"54\":1}}],[\"20240204235115358\",{\"1\":{\"54\":1}}],[\"20240204234830585\",{\"1\":{\"53\":1}}],[\"20240204234601698\",{\"1\":{\"51\":1}}],[\"20240203000437864\",{\"1\":{\"45\":1}}],[\"20240202235041938\",{\"1\":{\"43\":1}}],[\"20240202235027477\",{\"1\":{\"42\":1}}],[\"20240202234439918\",{\"1\":{\"41\":1}}],[\"20240202233832610\",{\"1\":{\"39\":1}}],[\"20240202233545081\",{\"1\":{\"37\":1}}],[\"20240202233008242\",{\"1\":{\"37\":1}}],[\"20240202232043005\",{\"1\":{\"35\":1}}],[\"20240202230638767\",{\"1\":{\"34\":1}}],[\"20240202230511394\",{\"1\":{\"34\":1}}],[\"20240202230339586\",{\"1\":{\"34\":1}}],[\"20240202230157749\",{\"1\":{\"34\":1}}],[\"20240202230941968\",{\"1\":{\"34\":1}}],[\"20240202225255385\",{\"1\":{\"34\":1}}],[\"20240202225103381\",{\"1\":{\"34\":1}}],[\"20240202224900197\",{\"1\":{\"34\":1}}],[\"20240202224605422\",{\"1\":{\"34\":1}}],[\"20240202224137163\",{\"1\":{\"34\":1}}],[\"20240202223635298\",{\"1\":{\"34\":1}}],[\"20240202223145818\",{\"1\":{\"33\":1}}],[\"20240202223132078\",{\"1\":{\"33\":1}}],[\"20240202222824252\",{\"1\":{\"33\":1}}],[\"20240202222811608\",{\"1\":{\"33\":1}}],[\"20240201232810539\",{\"1\":{\"18\":1}}],[\"2023\",{\"1\":{\"504\":1,\"505\":2,\"506\":1,\"513\":3,\"514\":1,\"516\":3,\"517\":1,\"522\":4,\"523\":3,\"539\":1,\"558\":1}}],[\"20231220092323293\",{\"1\":{\"663\":1}}],[\"20231223173053744\",{\"1\":{\"659\":1}}],[\"20231121195948004\",{\"1\":{\"521\":1}}],[\"20231120201703977\",{\"1\":{\"517\":1}}],[\"20231120201529092\",{\"1\":{\"517\":1}}],[\"20231120171333665\",{\"1\":{\"516\":1}}],[\"20231120142710663\",{\"1\":{\"513\":1}}],[\"20231127203803696\",{\"1\":{\"503\":1}}],[\"20231128212140857\",{\"1\":{\"503\":1}}],[\"20231024100100343\",{\"1\":{\"453\":1}}],[\"20231023172442255\",{\"1\":{\"441\":1}}],[\"20231023153313293\",{\"1\":{\"439\":1}}],[\"20px\",{\"1\":{\"385\":4,\"387\":3,\"423\":1}}],[\"20000\",{\"1\":{\"558\":1}}],[\"2000左右\",{\"1\":{\"273\":1}}],[\"200px\",{\"1\":{\"358\":2,\"441\":2,\"442\":2,\"456\":1,\"457\":2}}],[\"200\",{\"1\":{\"275\":1,\"363\":1}}],[\"20\",{\"0\":{\"669\":1},\"1\":{\"273\":1,\"504\":1,\"513\":2,\"514\":2,\"516\":2,\"517\":2,\"539\":1,\"587\":3,\"623\":2,\"664\":3,\"670\":1,\"751\":1}}],[\"2组\",{\"1\":{\"265\":1}}],[\"2小时\",{\"1\":{\"76\":1,\"81\":1}}],[\"2\",{\"0\":{\"6\":1,\"13\":1,\"18\":1,\"26\":1,\"34\":1,\"36\":1,\"37\":1,\"38\":2,\"40\":1,\"49\":1,\"54\":1,\"65\":1,\"77\":1,\"79\":1,\"82\":1,\"88\":1,\"91\":1,\"96\":1,\"104\":1,\"112\":1,\"115\":1,\"132\":1,\"134\":1,\"143\":1,\"148\":1,\"155\":1,\"156\":1,\"157\":2,\"166\":1,\"169\":1,\"178\":1,\"185\":1,\"188\":1,\"194\":1,\"207\":1,\"209\":1,\"217\":1,\"224\":1,\"228\":1,\"248\":1,\"249\":1,\"250\":2,\"251\":1,\"254\":1,\"260\":1,\"265\":1,\"316\":1,\"321\":1,\"322\":1,\"323\":2,\"324\":1,\"329\":1,\"336\":1,\"407\":1,\"414\":1,\"481\":1,\"482\":1,\"485\":1,\"488\":1,\"489\":1,\"490\":2,\"491\":1,\"492\":2,\"493\":2,\"494\":3,\"495\":1,\"496\":1,\"497\":2,\"503\":1,\"513\":1,\"527\":1,\"529\":1,\"530\":1,\"531\":2,\"532\":1,\"545\":1,\"558\":1,\"562\":1,\"573\":1,\"578\":1,\"585\":1,\"595\":1,\"617\":1,\"626\":1,\"629\":1,\"638\":1,\"650\":1,\"678\":1,\"679\":1,\"680\":2,\"681\":1,\"682\":1,\"683\":1,\"684\":1,\"687\":1,\"690\":1,\"697\":1,\"703\":1,\"713\":1,\"720\":1,\"727\":1,\"736\":1,\"744\":1,\"750\":1,\"751\":1,\"752\":2,\"753\":1,\"754\":1,\"755\":1,\"756\":1,\"757\":1,\"758\":1,\"759\":1,\"760\":1,\"761\":2,\"762\":2,\"763\":1,\"765\":1,\"766\":1,\"768\":1,\"770\":1,\"776\":1,\"779\":1,\"783\":1,\"785\":1,\"790\":1,\"792\":1,\"796\":1,\"797\":1,\"798\":1,\"799\":1,\"800\":1,\"802\":1,\"803\":1,\"804\":1,\"808\":1,\"815\":1,\"818\":1,\"827\":1,\"832\":1,\"836\":1,\"840\":1,\"845\":1,\"848\":1,\"852\":1,\"860\":1,\"865\":1,\"872\":1,\"875\":1,\"878\":1,\"885\":1,\"891\":1,\"895\":1,\"899\":1,\"903\":1,\"904\":1,\"905\":2,\"906\":1,\"907\":1,\"908\":1,\"911\":1,\"916\":1,\"919\":1,\"923\":1,\"932\":1,\"934\":1,\"939\":1,\"947\":1,\"952\":1,\"957\":1,\"961\":1,\"964\":1,\"967\":1,\"971\":1,\"975\":1,\"982\":1},\"1\":{\"48\":2,\"121\":1,\"122\":1,\"256\":1,\"274\":1,\"276\":1,\"279\":1,\"373\":1,\"385\":1,\"396\":1,\"398\":1,\"409\":1,\"410\":1,\"417\":1,\"453\":1,\"454\":2,\"457\":4,\"472\":1,\"489\":2,\"493\":2,\"494\":1,\"496\":4,\"497\":3,\"506\":1,\"507\":2,\"513\":3,\"514\":1,\"516\":4,\"517\":4,\"518\":4,\"519\":4,\"520\":8,\"521\":1,\"522\":4,\"523\":2,\"526\":2,\"528\":1,\"530\":1,\"551\":1,\"552\":1,\"557\":1,\"564\":1,\"581\":1,\"596\":2,\"597\":1,\"599\":1,\"603\":1,\"605\":1,\"633\":1,\"645\":1,\"652\":1,\"653\":1,\"662\":2,\"667\":1,\"670\":2,\"671\":1,\"679\":1,\"682\":1,\"683\":2,\"738\":2,\"796\":1,\"818\":1,\"819\":4,\"821\":1,\"823\":1,\"854\":2}}],[\"1分钟\",{\"1\":{\"859\":1}}],[\"1l\",{\"1\":{\"670\":1}}],[\"19\",{\"0\":{\"668\":1}}],[\"192\",{\"1\":{\"557\":1}}],[\"192px\",{\"1\":{\"419\":1}}],[\"1代表版本号\",{\"1\":{\"658\":1}}],[\"1转换二进制=11111\",{\"1\":{\"632\":1}}],[\"1转换2进制=1111\",{\"1\":{\"632\":1}}],[\"1转换2进制=111\",{\"1\":{\"632\":1}}],[\"1转换为2进展后对应的都是1\",{\"1\":{\"632\":1}}],[\"1>=0\",{\"1\":{\"531\":1}}],[\"1rem\",{\"1\":{\"472\":4}}],[\"1英寸=2\",{\"1\":{\"468\":1}}],[\"1vw刚好是1\",{\"1\":{\"473\":1}}],[\"1vw不是刚好等于屏幕的1\",{\"1\":{\"473\":1}}],[\"1vw\",{\"1\":{\"467\":1}}],[\"1select\",{\"1\":{\"798\":1}}],[\"1s\",{\"1\":{\"456\":3,\"457\":1}}],[\"1<\",{\"1\":{\"409\":2}}],[\"1px\",{\"1\":{\"386\":1}}],[\"1em代表100\",{\"1\":{\"361\":1}}],[\"1个topic只对应一个分区\",{\"1\":{\"983\":1}}],[\"1个\",{\"1\":{\"329\":1}}],[\"1704730368109\",{\"1\":{\"290\":1}}],[\"1704725537386\",{\"1\":{\"287\":1}}],[\"1704642405525\",{\"1\":{\"285\":1}}],[\"1704642490857\",{\"1\":{\"284\":1}}],[\"1704642022639\",{\"1\":{\"283\":1}}],[\"1704643255194\",{\"1\":{\"283\":1}}],[\"1704641894108\",{\"1\":{\"282\":1}}],[\"1702048529822\",{\"1\":{\"279\":1}}],[\"1702048228755\",{\"1\":{\"279\":1}}],[\"1702047666610\",{\"1\":{\"279\":1}}],[\"1702046861572\",{\"1\":{\"279\":1}}],[\"1701965745913\",{\"1\":{\"279\":1}}],[\"1701965702752\",{\"1\":{\"279\":1}}],[\"1701964889197\",{\"1\":{\"279\":1}}],[\"1701964825336\",{\"1\":{\"279\":1}}],[\"1701964798537\",{\"1\":{\"279\":1}}],[\"1701964737981\",{\"1\":{\"279\":1}}],[\"1701964679900\",{\"1\":{\"279\":1}}],[\"1701526027055\",{\"1\":{\"279\":1}}],[\"1701526010300\",{\"1\":{\"279\":1}}],[\"1701524706709\",{\"1\":{\"279\":1}}],[\"17\",{\"0\":{\"243\":1,\"610\":1,\"666\":1},\"1\":{\"423\":1,\"523\":1,\"632\":1}}],[\"14px\",{\"1\":{\"431\":1}}],[\"14\",{\"0\":{\"240\":1,\"607\":1,\"663\":1,\"804\":1,\"873\":1,\"973\":1},\"1\":{\"472\":1,\"505\":2,\"513\":3,\"516\":1,\"539\":1}}],[\"13px\",{\"1\":{\"419\":1}}],[\"13\",{\"0\":{\"129\":1,\"606\":1,\"662\":1,\"803\":1,\"870\":1,\"969\":1},\"1\":{\"522\":3}}],[\"12位\",{\"1\":{\"938\":1}}],[\"12kb\",{\"1\":{\"822\":1}}],[\"127\",{\"1\":{\"599\":1}}],[\"12px\",{\"1\":{\"423\":1,\"431\":1,\"469\":1}}],[\"123456\",{\"1\":{\"915\":1}}],[\"1234\",{\"1\":{\"720\":1}}],[\"123\",{\"1\":{\"374\":1,\"557\":1,\"670\":1}}],[\"125\",{\"1\":{\"273\":1}}],[\"128k\",{\"1\":{\"720\":1}}],[\"128\",{\"1\":{\"256\":1,\"599\":1}}],[\"12\",{\"0\":{\"128\":1,\"238\":1,\"239\":1,\"605\":1,\"661\":1,\"802\":1,\"863\":1,\"965\":1}}],[\"180px\",{\"1\":{\"431\":1}}],[\"180deg\",{\"1\":{\"416\":1}}],[\"180度之间的两种颜色\",{\"1\":{\"97\":1}}],[\"18年毕业于湘南学院\",{\"1\":{\"308\":1}}],[\"18\",{\"0\":{\"244\":1,\"611\":1,\"667\":1},\"1\":{\"461\":1}}],[\"18w\",{\"1\":{\"85\":1}}],[\"15000\",{\"1\":{\"970\":2}}],[\"150px\",{\"1\":{\"462\":1,\"469\":1}}],[\"15分钟\",{\"1\":{\"859\":1}}],[\"154\",{\"1\":{\"557\":2}}],[\"15px\",{\"1\":{\"391\":2}}],[\"15\",{\"0\":{\"241\":1,\"539\":1,\"608\":1,\"664\":1,\"876\":1,\"976\":1},\"1\":{\"78\":1,\"81\":1,\"273\":2,\"489\":1,\"506\":1,\"514\":1,\"821\":1,\"823\":2}}],[\"116\",{\"1\":{\"824\":7}}],[\"1111\",{\"1\":{\"738\":2}}],[\"1111111111111\",{\"1\":{\"671\":1}}],[\"11111\",{\"1\":{\"328\":1}}],[\"11121\",{\"1\":{\"731\":1}}],[\"11101\",{\"1\":{\"729\":1}}],[\"111\",{\"1\":{\"436\":1,\"670\":2}}],[\"1190px\",{\"1\":{\"431\":2}}],[\"11\",{\"0\":{\"127\":1,\"203\":1,\"237\":1,\"522\":1,\"523\":1,\"604\":1,\"660\":1,\"734\":1,\"735\":1,\"736\":1,\"737\":1,\"738\":1,\"800\":1,\"858\":1,\"927\":1,\"962\":1},\"1\":{\"78\":1,\"81\":1,\"122\":1,\"274\":1,\"329\":1,\"489\":1,\"504\":1,\"505\":2,\"506\":1,\"513\":4,\"514\":1,\"516\":4,\"517\":1,\"522\":4,\"523\":3,\"539\":2,\"670\":2,\"818\":1}}],[\"163\",{\"1\":{\"919\":1}}],[\"16384个槽位完全够用\",{\"1\":{\"872\":1}}],[\"16384\",{\"1\":{\"822\":1,\"872\":1}}],[\"168\",{\"1\":{\"557\":1}}],[\"16的构图\",{\"1\":{\"48\":1}}],[\"16\",{\"0\":{\"242\":1,\"609\":1,\"665\":1},\"1\":{\"48\":1,\"273\":1,\"506\":1,\"516\":2,\"520\":1,\"632\":1,\"796\":1}}],[\"10位\",{\"1\":{\"938\":1}}],[\"10s\",{\"1\":{\"842\":1}}],[\"10l\",{\"1\":{\"840\":1}}],[\"104857600\",{\"1\":{\"831\":1}}],[\"1024\",{\"1\":{\"663\":4,\"670\":2,\"868\":1,\"872\":2}}],[\"10vw\",{\"1\":{\"467\":1}}],[\"10deg\",{\"1\":{\"454\":1}}],[\"10px\",{\"1\":{\"385\":5,\"387\":1,\"388\":1,\"390\":4,\"391\":2,\"431\":5,\"463\":1,\"469\":2}}],[\"105px\",{\"1\":{\"374\":1}}],[\"10秒\",{\"1\":{\"273\":2}}],[\"100代表初始值\",{\"1\":{\"658\":1}}],[\"100的viewport的大小\",{\"1\":{\"473\":1}}],[\"100吗\",{\"1\":{\"473\":1}}],[\"100px\",{\"1\":{\"387\":8,\"400\":3,\"401\":2,\"416\":2,\"425\":1,\"451\":1,\"454\":4,\"456\":3,\"463\":3,\"469\":1}}],[\"100|\",{\"1\":{\"363\":1}}],[\"1000毫秒\",{\"1\":{\"727\":1}}],[\"10001\",{\"1\":{\"632\":1}}],[\"1000px\",{\"1\":{\"431\":1}}],[\"100000\",{\"1\":{\"505\":1}}],[\"1000000000\",{\"1\":{\"505\":1}}],[\"10000\",{\"1\":{\"377\":1,\"859\":1,\"952\":1}}],[\"1000\",{\"1\":{\"273\":2,\"377\":1,\"559\":1,\"670\":3,\"727\":1,\"833\":1,\"842\":1}}],[\"100\",{\"1\":{\"273\":1,\"275\":1,\"377\":1,\"400\":2,\"457\":2,\"463\":1,\"472\":1,\"513\":1,\"516\":1,\"539\":1,\"658\":1,\"664\":1,\"738\":1,\"796\":2}}],[\"10\",{\"0\":{\"62\":1,\"73\":1,\"126\":1,\"202\":1,\"236\":1,\"521\":1,\"603\":1,\"658\":1,\"659\":1,\"725\":1,\"726\":1,\"727\":1,\"728\":1,\"729\":1,\"730\":1,\"731\":1,\"732\":1,\"733\":1,\"799\":1,\"850\":1,\"926\":1,\"955\":1},\"1\":{\"45\":1,\"122\":1,\"328\":1,\"377\":1,\"414\":1,\"473\":1,\"506\":1,\"513\":2,\"516\":3,\"517\":2,\"518\":2,\"519\":2,\"520\":1,\"522\":1,\"539\":2,\"587\":3,\"664\":1,\"670\":5,\"727\":1,\"754\":1,\"817\":1,\"824\":1,\"859\":1,\"985\":2}}],[\"1\",{\"0\":{\"5\":1,\"12\":1,\"17\":1,\"25\":1,\"32\":1,\"33\":1,\"37\":1,\"39\":1,\"48\":1,\"53\":1,\"64\":1,\"76\":1,\"78\":1,\"81\":1,\"87\":1,\"90\":1,\"95\":1,\"103\":1,\"111\":1,\"114\":1,\"131\":1,\"133\":1,\"139\":1,\"140\":2,\"141\":3,\"142\":1,\"148\":1,\"149\":1,\"150\":1,\"151\":1,\"152\":1,\"153\":1,\"154\":1,\"156\":1,\"165\":1,\"168\":1,\"177\":1,\"184\":1,\"187\":1,\"193\":1,\"205\":1,\"206\":1,\"210\":1,\"215\":1,\"216\":2,\"217\":1,\"218\":1,\"219\":1,\"220\":1,\"221\":1,\"222\":1,\"223\":1,\"227\":1,\"247\":1,\"249\":1,\"253\":1,\"259\":1,\"262\":1,\"264\":1,\"314\":1,\"315\":2,\"316\":1,\"317\":1,\"318\":1,\"319\":1,\"320\":1,\"322\":1,\"326\":1,\"328\":1,\"335\":1,\"406\":1,\"413\":1,\"479\":2,\"480\":3,\"481\":2,\"482\":1,\"483\":1,\"484\":2,\"485\":1,\"486\":1,\"488\":1,\"489\":2,\"490\":1,\"491\":1,\"493\":1,\"496\":1,\"502\":1,\"512\":1,\"525\":1,\"526\":2,\"527\":1,\"528\":1,\"530\":1,\"539\":1,\"544\":1,\"557\":1,\"561\":1,\"572\":1,\"575\":1,\"577\":1,\"584\":1,\"594\":1,\"616\":1,\"625\":1,\"628\":1,\"637\":1,\"649\":1,\"659\":1,\"677\":1,\"679\":1,\"686\":1,\"689\":1,\"696\":1,\"702\":1,\"712\":1,\"719\":1,\"726\":1,\"735\":1,\"743\":2,\"744\":1,\"745\":1,\"746\":1,\"747\":1,\"748\":1,\"750\":1,\"751\":2,\"752\":1,\"753\":1,\"754\":1,\"755\":1,\"756\":1,\"757\":1,\"758\":1,\"759\":1,\"760\":1,\"762\":1,\"764\":1,\"767\":1,\"769\":1,\"775\":1,\"778\":1,\"784\":1,\"791\":1,\"806\":1,\"807\":2,\"808\":1,\"814\":1,\"817\":1,\"826\":1,\"831\":1,\"835\":1,\"839\":1,\"844\":1,\"847\":1,\"851\":1,\"859\":1,\"864\":1,\"871\":1,\"874\":1,\"877\":1,\"883\":1,\"884\":1,\"892\":1,\"894\":1,\"898\":1,\"902\":1,\"904\":1,\"910\":1,\"915\":1,\"918\":1,\"922\":1,\"931\":1,\"933\":1,\"936\":1,\"938\":1,\"942\":1,\"944\":1,\"946\":1,\"951\":1,\"956\":1,\"960\":1,\"963\":1,\"966\":1,\"970\":1,\"974\":1,\"977\":1,\"981\":1},\"1\":{\"48\":3,\"121\":1,\"122\":1,\"191\":2,\"273\":11,\"275\":2,\"276\":1,\"279\":1,\"366\":1,\"373\":2,\"377\":1,\"385\":1,\"398\":1,\"425\":1,\"433\":1,\"454\":2,\"457\":2,\"472\":1,\"489\":2,\"493\":7,\"494\":5,\"496\":8,\"497\":8,\"503\":1,\"504\":3,\"505\":2,\"506\":1,\"507\":5,\"513\":15,\"514\":2,\"516\":15,\"517\":3,\"518\":4,\"519\":8,\"520\":11,\"521\":2,\"522\":18,\"523\":7,\"526\":2,\"528\":1,\"530\":1,\"531\":2,\"532\":3,\"539\":10,\"552\":1,\"557\":3,\"558\":1,\"564\":1,\"572\":1,\"575\":1,\"581\":1,\"582\":2,\"596\":1,\"599\":1,\"605\":1,\"621\":2,\"622\":2,\"623\":3,\"628\":1,\"631\":2,\"632\":1,\"633\":1,\"634\":4,\"637\":2,\"640\":1,\"644\":2,\"652\":1,\"653\":1,\"658\":1,\"661\":2,\"662\":2,\"663\":5,\"667\":2,\"669\":4,\"670\":4,\"671\":2,\"679\":1,\"682\":1,\"683\":5,\"738\":1,\"746\":1,\"753\":2,\"794\":1,\"795\":2,\"796\":1,\"807\":2,\"817\":1,\"818\":1,\"819\":3,\"820\":3,\"821\":2,\"822\":1,\"823\":11,\"853\":1,\"859\":1,\"936\":1}}],[\"觉得学的知识还是要记录一下\",{\"1\":{\"2\":1}}],[\"我相信一切都会过去\",{\"1\":{\"919\":1}}],[\"我可以等\",{\"1\":{\"865\":1}}],[\"我同时关注了人民日报和王者荣耀\",{\"1\":{\"818\":1}}],[\"我听到铃声\",{\"1\":{\"552\":1}}],[\"我叫陈鑫\",{\"1\":{\"308\":1}}],[\"我们发送的消息会被发送到leader副本\",{\"1\":{\"982\":1}}],[\"我们往桶中以任意速率流入水\",{\"1\":{\"948\":1}}],[\"我们处理请求的过程可以比喻为漏桶漏水\",{\"1\":{\"948\":1}}],[\"我们存储的实际数据的大小可能还没有指针占用的内存大\",{\"1\":{\"853\":1}}],[\"我们自己写的也不ok\",{\"1\":{\"840\":1}}],[\"我们就称之为覆盖索引\",{\"1\":{\"793\":1}}],[\"我们就必须先把现在队列中的\",{\"1\":{\"522\":1}}],[\"我们同样可以添加自己的操作\",{\"1\":{\"588\":1}}],[\"我们用\",{\"1\":{\"522\":1}}],[\"我们不希望对于栈来说\",{\"1\":{\"521\":1}}],[\"我们不再使用front和tail之间的关系来判断队列是否为满\",{\"1\":{\"518\":1}}],[\"我们不再使用front和tail之间的关系来判断队列是否为空\",{\"1\":{\"518\":1}}],[\"我们先来看看\",{\"1\":{\"521\":1}}],[\"我们依次从队首和队尾轮流删除元素\",{\"1\":{\"520\":1}}],[\"我们需要计算一下真正队尾元素的索引\",{\"1\":{\"520\":1}}],[\"我们也有一个\",{\"1\":{\"520\":1}}],[\"我们首先需要确定添加新元素的索引位置\",{\"1\":{\"520\":1}}],[\"我们的\",{\"1\":{\"520\":2}}],[\"我们的循环遍历打印队列的逻辑也有相应的更改\",{\"1\":{\"518\":1}}],[\"我们只需要考虑两个问题\",{\"1\":{\"472\":1}}],[\"我们按照980px显示内容\",{\"1\":{\"470\":1}}],[\"我们相对于980px布局的这个视口\",{\"1\":{\"470\":1}}],[\"我们是不需要对视口进行区分\",{\"1\":{\"470\":1}}],[\"我们希望将一些公共的css代码独立抽取到一个新的地方\",{\"1\":{\"469\":1}}],[\"我们可以把发请求的动作比作成注水到桶中\",{\"1\":{\"948\":1}}],[\"我们可以添加自己的操作\",{\"1\":{\"588\":1}}],[\"我们可以使用另外一个队列\",{\"1\":{\"522\":1}}],[\"我们可以对layout\",{\"1\":{\"470\":1}}],[\"我们可以看到的区域就是视口\",{\"1\":{\"470\":1}}],[\"我们可以观察现场环境看看有没有阳光通过树林\",{\"1\":{\"231\":1}}],[\"我们可以通过人的肢体动作\",{\"1\":{\"209\":1}}],[\"我们在一些特色建筑内部拍摄的时候\",{\"1\":{\"228\":1}}],[\"我们在拍摄全身的时候无论是站姿还是坐姿我们都要将脚向画面的边缘延伸一点才能拍出大长腿\",{\"1\":{\"224\":1}}],[\"我们到底该拍什么\",{\"0\":{\"225\":1}}],[\"我\",{\"0\":{\"1\":1}}],[\"™\",{\"1\":{\"0\":1}}]],\"serializationVersion\":2}}")).map(([e,t])=>[e,zt(t,{fields:["h","t","c"],storeFields:["h","t","c"]})]));self.onmessage=({data:{type:e="all",query:t,locale:s,options:n}})=>{e==="suggest"?self.postMessage(st(t,v[s],n)):e==="search"?self.postMessage(et(t,v[s],n)):self.postMessage({suggestions:st(t,v[s],n),results:et(t,v[s],n)})};
//# sourceMappingURL=index.js.map
